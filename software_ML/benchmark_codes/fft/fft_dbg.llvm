; ModuleID = 'fft.c'
source_filename = "fft.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.sin_64 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000], align 16
@__const.main.sin_512 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFA91F70E0000000, float 0xBF992146A0000000, float 0xBFB2D527E0000000, float 0xBF89221000000000, float 0xBFAF657760000000, float 0xBFA2D85E00000000, float 0xBFB5F6CAC0000000, float 0xBFB917A460000000, float 0xBFA91F70E0000000, float 0xBFC2C80C80000000, float 0xBF992146A0000000, float 0xBFBF5653C0000000, float 0xBFB2D527E0000000, float 0xBFC5E21540000000, float 0xBFC2C80C80000000, float 0xBFB2D527E0000000, float 0xBFCC0B8060000000, float 0xBFA2D85E00000000, float 0xBFC76DDAC0000000, float 0xBFBC378240000000, float 0xBFD04FB980000000, float 0xBFC8F8B580000000, float 0xBFB917A460000000, float 0xBFD2940780000000, float 0xBFA91F70E0000000, float 0xBFCF19F800000000, float 0xBFC2C80C80000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFBF5653C0000000, float 0xBFD7088500000000, float 0xBFAF657760000000, float 0xBFD3541100000000, float 0xBFC76DDAC0000000, float 0xBFDAA6CA00000000, float 0xBFD2940780000000, float 0xBFC2C80C80000000, float 0xBFDB5D0FA0000000, float 0xBFB2D527E0000000, float 0xBFD7088500000000, float 0xBFCC0B8060000000, float 0xBFDF8BA400000000, float 0xBFD58F9B20000000, float 0xBFC5E21540000000, float 0xBFDF8BA400000000, float 0xBFB5F6CAC0000000, float 0xBFDAA6CA00000000, float 0xBFD04FB980000000, float 0xBFE21A7A00000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFDB5D0FA0000000, float 0xBFCC0B8060000000, float 0xBFE3AFFB00000000, float 0xBFBC378240000000, float 0xBFE0C97100000000, float 0xBFD4D1E100000000, float 0xBFE65918A0000000, float 0xBFDE2B5E60000000, float 0xBFCF19F800000000, float 0xBFE57D6940000000, float 0xBFBF5653C0000000, float 0xBFE26D04E0000000, float 0xBFD7088500000000, float 0xBFE83B0E60000000, float 0xBFE0738820000000, float 0xBFD111D360000000, float 0xBFE72D0800000000, float 0xBFC139F340000000, float 0xBFE3FED840000000, float 0xBFD9372A40000000, float 0xBFE9EF4380000000, float 0xBFE1C73AC0000000, float 0xBFD2940780000000, float 0xBFE8BC7F80000000, float 0xBFC2C80C80000000, float 0xBFE57D6940000000, float 0xBFDB5D0FA0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0xBFD4135DA0000000, float 0xBFEA29A800000000, float 0xBFC4557580000000, float 0xBFE6E744C0000000, float 0xBFDD7978A0000000, float 0xBFECC1F000000000, float 0xBFE44CF280000000, float 0xBFD58F9B20000000, float 0xBFEB728420000000, float 0xBFC5E21540000000, float 0xBFE83B0E60000000, float 0xBFDF8BA400000000, float 0xBFEDDB1420000000, float 0xBFE57D6940000000, float 0xBFD7088500000000, float 0xBFEC954A80000000, float 0xBFC76DDAC0000000, float 0xBFE9777F20000000, float 0xBFE0C97100000000, float 0xBFEEBBD9C0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFE7B5DEE0000000, float 0xBFD9EF7800000000, float 0xBFEE628880000000, float 0xBFCA829D00000000, float 0xBFEBA5AAC0000000, float 0xBFE2BEDB80000000, float 0xBFEFCE1600000000, float 0xBFE8BC7F80000000, float 0xBFDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0xBFCC0B8060000000, float 0xBFEC954A80000000, float 0xBFE3AFFB00000000, float 0xBFEFFD88C0000000, float 0xBFE9B3E140000000, float 0xBFDCC66D40000000, float 0xBFEF8765C0000000, float 0xBFCD934F00000000, float 0xBFED6961C0000000, float 0xBFE49A45A0000000, float 0xBFEFF09520000000, float 0xBFEA9B6700000000, float 0xBFDE2B5E60000000, float 0xBFEFD88E40000000, float 0xBFCF19F800000000, float 0xBFEE2120E0000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFDF8BA400000000, float 0xBFEFFD88C0000000, float 0xBFD04FB980000000, float 0xBFEEBBD9C0000000, float 0xBFE65918A0000000, float 0xBFEF225320000000, float 0xBFEC38B260000000, float 0xBFE0738820000000, float 0xBFEFF620E0000000, float 0xBFD111D360000000, float 0xBFEF38F360000000, float 0xBFE72D0800000000, float 0xBFEE628880000000, float 0xBFECED7A60000000, float 0xBFE11EB420000000, float 0xBFEFC26560000000, float 0xBFD1D34580000000, float 0xBFEF97F840000000, float 0xBFE7F8EC00000000, float 0xBFED6961C0000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0xBFEE2120E0000000, float 0xBFE26D04E0000000, float 0xBFEED740C0000000, float 0xBFD3541100000000, float 0xBFEFFA7220000000, float 0xBFE9777F20000000, float 0xBFEAD2BD40000000, float 0xBFEE9F40A0000000, float 0xBFE30FF760000000, float 0xBFEE2120E0000000, float 0xBFD4135DA0000000, float 0xBFEFFD88C0000000, float 0xBFEA29A800000000, float 0xBFE93A2160000000, float 0xBFEF0A7E80000000, float 0xBFE3AFFB00000000, float 0xBFED413560000000, float 0xBFD4D1E100000000, float 0xBFEFE1CBC0000000, float 0xBFEAD2BD40000000, float 0xBFE771E6C0000000, float 0xBFEF629740000000, float 0xBFE44CF280000000, float 0xBFEC38B260000000, float 0xBFD58F9B20000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFE4E6CB20000000, float 0xBFEB090B40000000, float 0xBFD64C7F40000000, float 0xBFEF4E5F80000000, float 0xBFEC08C400000000, float 0xBFE36058A0000000, float 0xBFEFD88E40000000, float 0xBFE57D6940000000, float 0xBFE9B3E140000000, float 0xBFD7088500000000, float 0xBFEED740C0000000, float 0xBFEC954A80000000, float 0xBFE11EB420000000, float 0xBFEFF620E0000000, float 0xBFE610B840000000, float 0xBFE83B0E60000000, float 0xBFD7C3A860000000, float 0xBFEE4269A0000000, float 0xBFED17E780000000, float 0xBFDD7978A0000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEFF620E0000000, float 0xBFE72D0800000000, float 0xBFE4E6CB20000000, float 0xBFD9372A40000000, float 0xBFECC1F000000000, float 0xBFEDFEAE60000000, float 0xBFD3541100000000, float 0xBFEFD88E40000000, float 0xBFE7B5DEE0000000, float 0xBFE30FF760000000, float 0xBFD9EF7800000000, float 0xBFEBD7C0C0000000, float 0xBFEE628880000000, float 0xBFCC0B8060000000, float 0xBFEFA75680000000, float 0xBFE83B0E60000000, float 0xBFE11EB420000000, float 0xBFDAA6CA00000000, float 0xBFEAD2BD40000000, float 0xBFEEBBD9C0000000, float 0xBFC139F340000000, float 0xBFEF629740000000, float 0xBFE8BC7F80000000, float 0xBFDE2B5E60000000, float 0xBFDB5D0FA0000000, float 0xBFE9B3E140000000, float 0xBFEF0A7E80000000, float 0xBFA91F70E0000000, float 0xBFEF0A7E80000000, float 0xBFE93A2160000000, float 0xBFD9EF7800000000, float 0xBFDC1248E0000000, float 0xBFE87C3F80000000, float 0xBFEF4E5F80000000, float 0x3FA2D85E00000000, float 0xBFEE9F40A0000000, float 0xBFE9B3E140000000, float 0xBFD58F9B20000000, float 0xBFDCC66D40000000, float 0xBFE72D0800000000, float 0xBFEF8765C0000000, float 0x3FBF5653C0000000, float 0xBFEE2120E0000000, float 0xBFEA29A800000000, float 0xBFD111D360000000, float 0xBFDD7978A0000000, float 0xBFE5C77BC0000000, float 0xBFEFB57A40000000, float 0x3FCA829D00000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFECED7A60000000, float 0xBFEB090B40000000, float 0xBFBF5653C0000000, float 0xBFDEDC1A40000000, float 0xBFE2BEDB80000000, float 0xBFEFF09520000000, float 0x3FD7C3A860000000, float 0xBFEC38B260000000, float 0xBFEB728420000000, float 0xBFA91F70E0000000, float 0xBFDF8BA400000000, float 0xBFE11EB420000000, float 0xBFEFFD88C0000000, float 0x3FDCC66D40000000, float 0xBFEB728420000000, float 0xBFEBD7C0C0000000, float 0x3F992146A0000000, float 0xBFE01CFBC0000000, float 0xBFDEDC1A40000000, float 0xBFEFFF62C0000000, float 0x3FE0C97100000000, float 0xBFEA9B6700000000, float 0xBFEC38B260000000, float 0x3FB917A460000000, float 0xBFE0738820000000, float 0xBFDB5D0FA0000000, float 0xBFEFF620E0000000, float 0x3FE30FF760000000, float 0xBFE9B3E140000000, float 0xBFEC954A80000000, float 0x3FC5E21540000000, float 0xBFE0C97100000000, float 0xBFD7C3A860000000, float 0xBFEFE1CBC0000000, float 0x3FE5328300000000, float 0xBFE8BC7F80000000, float 0xBFECED7A60000000, float 0x3FCF19F800000000, float 0xBFE11EB420000000, float 0xBFD4135DA0000000, float 0xBFEFC26560000000, float 0x3FE72D0800000000, float 0xBFE7B5DEE0000000, float 0xBFED413560000000, float 0x3FD4135DA0000000, float 0xBFE1734D60000000, float 0xBFD04FB980000000, float 0xBFEF97F840000000, float 0x3FE8FBCC20000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE57D6940000000, float 0xBFEDDB1420000000, float 0x3FDCC66D40000000, float 0xBFE21A7A00000000, float 0xBFC139F340000000, float 0xBFEF225320000000, float 0x3FEC08C400000000, float 0xBFE44CF280000000, float 0xBFEE2120E0000000, float 0x3FE0738820000000, float 0xBFE26D04E0000000, float 0xBFB2D527E0000000, float 0xBFEED740C0000000, float 0x3FED413560000000, float 0xBFE30FF760000000, float 0xBFEE628880000000, float 0x3FE26D04E0000000, float 0xBFE2BEDB80000000, float 0xBF89221000000000, float 0xBFEE817BA0000000, float 0x3FEE4269A0000000, float 0xBFE1C73AC0000000, float 0xBFEE9F40A0000000, float 0x3FE44CF280000000, float 0xBFE30FF760000000, float 0x3FA91F70E0000000, float 0xBFEE2120E0000000, float 0x3FEF0A7E80000000, float 0xBFE0738820000000, float 0xBFEED740C0000000, float 0x3FE610B840000000, float 0xBFE36058A0000000, float 0x3FBC378240000000, float 0xBFEDB65240000000, float 0x3FEF97F840000000, float 0xBFDE2B5E60000000, float 0xBFEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0xBFE3AFFB00000000, float 0x3FC5E21540000000, float 0xBFED413560000000, float 0x3FEFE9CCC0000000, float 0xBFDB5D0FA0000000, float 0xBFEF38F360000000, float 0x3FE93A2160000000, float 0xBFE3FED840000000, float 0x3FCD934F00000000, float 0xBFECC1F000000000, float 0x3FEFFF62C0000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFD58F9B20000000, float 0xBFEF8765C0000000, float 0x3FEBD7C0C0000000, float 0xBFE49A45A0000000, float 0x3FD64C7F40000000, float 0xBFEBA5AAC0000000, float 0x3FEF7598A0000000, float 0xBFD2940780000000, float 0xBFEFA75680000000, float 0x3FECED7A60000000, float 0xBFE4E6CB20000000, float 0x3FD9EF7800000000, float 0xBFEB090B40000000, float 0x3FEED740C0000000, float 0xBFCF19F800000000, float 0xBFEFC26560000000, float 0x3FEDDB1420000000, float 0xBFE5328300000000, float 0x3FDD7978A0000000, float 0xBFEA630880000000, float 0x3FEDFEAE60000000, float 0xBFC8F8B580000000, float 0xBFEFD88E40000000, float 0x3FEE9F40A0000000, float 0xBFE57D6940000000, float 0x3FE0738820000000, float 0xBFE9B3E140000000, float 0x3FECED7A60000000, float 0xBFC2C80C80000000, float 0xBFEFE9CCC0000000, float 0x3FEF38F360000000, float 0xBFE5C77BC0000000, float 0x3FE21A7A00000000, float 0xBFE8FBCC20000000, float 0x3FEBA5AAC0000000, float 0xBFB917A460000000, float 0xBFEFF620E0000000, float 0x3FEFA75680000000, float 0xBFE610B840000000, float 0x3FE3AFFB00000000, float 0xBFE83B0E60000000, float 0x3FEA29A800000000, float 0xBFA91F70E0000000, float 0xBFEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0xBFE65918A0000000, float 0x3FE5328300000000, float 0xBFE771E6C0000000, float 0x3FE87C3F80000000], align 16
@__const.main.cos_64 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000], align 16
@__const.main.cos_512 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEFF620E0000000, float 0x3FEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0x3FEFFF62C0000000, float 0x3FEFF09520000000, float 0x3FEFFA7220000000, float 0x3FEFE1CBC0000000, float 0x3FEFD88E40000000, float 0x3FEFF620E0000000, float 0x3FEFA75680000000, float 0x3FEFFD88C0000000, float 0x3FEFC26560000000, float 0x3FEFE9CCC0000000, float 0x3FEF8765C0000000, float 0x3FEFA75680000000, float 0x3FEFE9CCC0000000, float 0x3FEF38F360000000, float 0x3FEFFA7220000000, float 0x3FEF7598A0000000, float 0x3FEFCE1600000000, float 0x3FEEF177A0000000, float 0x3FEF629740000000, float 0x3FEFD88E40000000, float 0x3FEE9F40A0000000, float 0x3FEFF620E0000000, float 0x3FEF0A7E80000000, float 0x3FEFA75680000000, float 0x3FEE2120E0000000, float 0x3FEF0A7E80000000, float 0x3FEFC26560000000, float 0x3FEDDB1420000000, float 0x3FEFF09520000000, float 0x3FEE817BA0000000, float 0x3FEF7598A0000000, float 0x3FED17E780000000, float 0x3FEE9F40A0000000, float 0x3FEFA75680000000, float 0x3FECED7A60000000, float 0x3FEFE9CCC0000000, float 0x3FEDDB1420000000, float 0x3FEF38F360000000, float 0x3FEBD7C0C0000000, float 0x3FEE2120E0000000, float 0x3FEF8765C0000000, float 0x3FEBD7C0C0000000, float 0x3FEFE1CBC0000000, float 0x3FED17E780000000, float 0x3FEEF177A0000000, float 0x3FEA630880000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FECED7A60000000, float 0x3FEF38F360000000, float 0x3FE93A2160000000, float 0x3FEFCE1600000000, float 0x3FEB3E4CE0000000, float 0x3FEE4269A0000000, float 0x3FE6E744C0000000, float 0x3FEC38B260000000, float 0x3FEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0x3FEFC26560000000, float 0x3FEA29A800000000, float 0x3FEDDB1420000000, float 0x3FE4E6CB20000000, float 0x3FEB728420000000, float 0x3FEED740C0000000, float 0x3FE610B840000000, float 0x3FEFB57A40000000, float 0x3FE8FBCC20000000, float 0x3FED6961C0000000, float 0x3FE2BEDB80000000, float 0x3FEA9B6700000000, float 0x3FEE9F40A0000000, float 0x3FE44CF280000000, float 0x3FEFA75680000000, float 0x3FE7B5DEE0000000, float 0x3FECED7A60000000, float 0x3FE0738820000000, float 0x3FE9B3E140000000, float 0x3FEE628880000000, float 0x3FE26D04E0000000, float 0x3FEF97F840000000, float 0x3FE65918A0000000, float 0x3FEC678C00000000, float 0x3FDC1248E0000000, float 0x3FE8BC7F80000000, float 0x3FEE2120E0000000, float 0x3FE0738820000000, float 0x3FEF8765C0000000, float 0x3FE4E6CB20000000, float 0x3FEBD7C0C0000000, float 0x3FD7088500000000, float 0x3FE7B5DEE0000000, float 0x3FEDDB1420000000, float 0x3FDCC66D40000000, float 0x3FEF7598A0000000, float 0x3FE36058A0000000, float 0x3FEB3E4CE0000000, float 0x3FD1D34580000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FE57D6940000000, float 0x3FED413560000000, float 0x3FD4135DA0000000, float 0x3FEF4E5F80000000, float 0x3FE01CFBC0000000, float 0x3FE9EF4380000000, float 0x3FBC378240000000, float 0x3FE44CF280000000, float 0x3FECED7A60000000, float 0x3FCF19F800000000, float 0x3FEF38F360000000, float 0x3FDCC66D40000000, float 0x3FE93A2160000000, float 0x3F992146A0000000, float 0x3FE30FF760000000, float 0x3FEC954A80000000, float 0x3FC5E21540000000, float 0x3FEF225320000000, float 0x3FD9372A40000000, float 0x3FE87C3F80000000, float 0xBFAF657760000000, float 0x3FE1C73AC0000000, float 0x3FEC38B260000000, float 0x3FB917A460000000, float 0x3FEF0A7E80000000, float 0x3FD58F9B20000000, float 0x3FE7B5DEE0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0x3FEBD7C0C0000000, float 0x3F992146A0000000, float 0x3FEEF177A0000000, float 0x3FD1D34580000000, float 0x3FE6E744C0000000, float 0xBFCD934F00000000, float 0x3FDE2B5E60000000, float 0x3FEB728420000000, float 0xBFA91F70E0000000, float 0x3FEED740C0000000, float 0x3FCC0B8060000000, float 0x3FE610B840000000, float 0xBFD4135DA0000000, float 0x3FDB5D0FA0000000, float 0x3FEB090B40000000, float 0xBFBF5653C0000000, float 0x3FEEBBD9C0000000, float 0x3FC4557580000000, float 0x3FE5328300000000, float 0xBFD9372A40000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FD58F9B20000000, float 0x3FEA29A800000000, float 0xBFD111D360000000, float 0x3FEE817BA0000000, float 0x3FA2D85E00000000, float 0x3FE36058A0000000, float 0xBFE1734D60000000, float 0x3FD2940780000000, float 0x3FE9B3E140000000, float 0xBFD58F9B20000000, float 0x3FEE628880000000, float 0xBF992146A0000000, float 0x3FE26D04E0000000, float 0xBFE3AFFB00000000, float 0x3FCF19F800000000, float 0x3FE93A2160000000, float 0xBFD9EF7800000000, float 0x3FEE4269A0000000, float 0xBFB5F6CAC0000000, float 0x3FE1734D60000000, float 0xBFE5C77BC0000000, float 0x3FC8F8B580000000, float 0x3FE8BC7F80000000, float 0xBFDE2B5E60000000, float 0x3FEE2120E0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0xBFE7B5DEE0000000, float 0x3FC2C80C80000000, float 0x3FE83B0E60000000, float 0xBFE11EB420000000, float 0x3FEDFEAE60000000, float 0xBFCA829D00000000, float 0x3FDEDC1A40000000, float 0xBFE9777F20000000, float 0x3FB917A460000000, float 0x3FE7B5DEE0000000, float 0xBFE30FF760000000, float 0x3FEDDB1420000000, float 0xBFD111D360000000, float 0x3FDCC66D40000000, float 0xBFEB090B40000000, float 0x3FA91F70E0000000, float 0x3FE72D0800000000, float 0xBFE4E6CB20000000, float 0x3FEDB65240000000, float 0xBFD4D1E100000000, float 0x3FDAA6CA00000000, float 0xBFEC678C00000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFA91F70E0000000, float 0x3FE610B840000000, float 0xBFE83B0E60000000, float 0x3FED6961C0000000, float 0xBFDC1248E0000000, float 0x3FD64C7F40000000, float 0xBFEE817BA0000000, float 0xBFB917A460000000, float 0x3FE57D6940000000, float 0xBFE9B3E140000000, float 0x3FED413560000000, float 0xBFDF8BA400000000, float 0x3FD4135DA0000000, float 0xBFEF38F360000000, float 0xBFC2C80C80000000, float 0x3FE4E6CB20000000, float 0xBFEB090B40000000, float 0x3FED17E780000000, float 0xBFE1734D60000000, float 0x3FD1D34580000000, float 0xBFEFB57A40000000, float 0xBFC8F8B580000000, float 0x3FE44CF280000000, float 0xBFEC38B260000000, float 0x3FECED7A60000000, float 0xBFE30FF760000000, float 0x3FCF19F800000000, float 0xBFEFF620E0000000, float 0xBFCF19F800000000, float 0x3FE3AFFB00000000, float 0xBFED413560000000, float 0x3FECC1F000000000, float 0xBFE49A45A0000000, float 0x3FCA829D00000000, float 0xBFEFFA7220000000, float 0xBFD2940780000000, float 0x3FE30FF760000000, float 0xBFEE2120E0000000, float 0x3FEC954A80000000, float 0xBFE610B840000000, float 0x3FC5E21540000000, float 0xBFEFC26560000000, float 0xBFD58F9B20000000, float 0x3FE26D04E0000000, float 0xBFEED740C0000000, float 0x3FEC678C00000000, float 0xBFE771E6C0000000, float 0x3FC139F340000000, float 0xBFEF4E5F80000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFDB5D0FA0000000, float 0x3FE11EB420000000, float 0xBFEFC26560000000, float 0x3FEC08C400000000, float 0xBFE9EF4380000000, float 0x3FAF657760000000, float 0xBFEDB65240000000, float 0xBFDE2B5E60000000, float 0x3FE0738820000000, float 0xBFEFF620E0000000, float 0x3FEBD7C0C0000000, float 0xBFEB090B40000000, float 0x3F992146A0000000, float 0xBFEC954A80000000, float 0xBFE0738820000000, float 0x3FDF8BA400000000, float 0xBFEFFD88C0000000, float 0x3FEBA5AAC0000000, float 0xBFEC08C400000000, float 0xBF89221000000000, float 0xBFEB3E4CE0000000, float 0xBFE1C73AC0000000, float 0x3FDE2B5E60000000, float 0xBFEFD88E40000000, float 0x3FEB728420000000, float 0xBFECED7A60000000, float 0xBFA91F70E0000000, float 0xBFE9B3E140000000, float 0xBFE30FF760000000, float 0x3FDCC66D40000000, float 0xBFEF8765C0000000, float 0x3FEB3E4CE0000000, float 0xBFEDB65240000000, float 0xBFB5F6CAC0000000, float 0xBFE7F8EC00000000, float 0xBFE44CF280000000, float 0x3FDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0x3FEB090B40000000, float 0xBFEE628880000000, float 0xBFBF5653C0000000, float 0xBFE610B840000000, float 0xBFE57D6940000000, float 0x3FD9EF7800000000, float 0xBFEE628880000000, float 0x3FEAD2BD40000000, float 0xBFEEF177A0000000, float 0xBFC4557580000000, float 0xBFE3FED840000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE7B5DEE0000000, float 0x3FD7088500000000, float 0xBFEC954A80000000, float 0x3FEA630880000000, float 0xBFEFB57A40000000, float 0xBFCD934F00000000, float 0xBFDEDC1A40000000, float 0xBFE8BC7F80000000, float 0x3FD58F9B20000000, float 0xBFEB728420000000, float 0x3FEA29A800000000, float 0xBFEFE9CCC0000000, float 0xBFD111D360000000, float 0xBFD9EF7800000000, float 0xBFE9B3E140000000, float 0x3FD4135DA0000000, float 0xBFEA29A800000000, float 0x3FE9EF4380000000, float 0xBFEFFF62C0000000, float 0xBFD3541100000000, float 0xBFD4D1E100000000, float 0xBFEA9B6700000000, float 0x3FD2940780000000, float 0xBFE8BC7F80000000, float 0x3FE9B3E140000000, float 0xBFEFF620E0000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFEB728420000000, float 0x3FD111D360000000, float 0xBFE72D0800000000, float 0x3FE9777F20000000, float 0xBFEFCE1600000000, float 0xBFD7C3A860000000, float 0xBFC4557580000000, float 0xBFEC38B260000000, float 0x3FCF19F800000000, float 0xBFE57D6940000000, float 0x3FE93A2160000000, float 0xBFEF8765C0000000, float 0xBFD9EF7800000000, float 0xBFB2D527E0000000, float 0xBFECED7A60000000, float 0x3FCC0B8060000000, float 0xBFE3AFFB00000000, float 0x3FE8FBCC20000000, float 0xBFEF225320000000, float 0xBFDC1248E0000000, float 0x3F89221000000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFEE2120E0000000, float 0x3FC5E21540000000, float 0xBFDF8BA400000000, float 0x3FE87C3F80000000, float 0xBFEDFEAE60000000, float 0xBFE01CFBC0000000, float 0x3FC76DDAC0000000, float 0xBFEE9F40A0000000, float 0x3FC2C80C80000000, float 0xBFDB5D0FA0000000, float 0x3FE83B0E60000000, float 0xBFED413560000000, float 0xBFE11EB420000000, float 0x3FD111D360000000, float 0xBFEF0A7E80000000, float 0x3FBF5653C0000000, float 0xBFD7088500000000, float 0x3FE7F8EC00000000, float 0xBFEC678C00000000, float 0xBFE21A7A00000000, float 0x3FD64C7F40000000, float 0xBFEF629740000000, float 0x3FB917A460000000, float 0xBFD2940780000000, float 0x3FE7B5DEE0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0x3FDB5D0FA0000000, float 0xBFEFA75680000000, float 0x3FB2D527E0000000, float 0xBFCC0B8060000000, float 0x3FE771E6C0000000, float 0xBFEA630880000000, float 0xBFE3FED840000000, float 0x3FE01CFBC0000000, float 0xBFEFD88E40000000, float 0x3FA91F70E0000000, float 0xBFC2C80C80000000, float 0x3FE72D0800000000, float 0xBFE93A2160000000, float 0xBFE4E6CB20000000, float 0x3FE26D04E0000000, float 0xBFEFF620E0000000, float 0x3F992146A0000000, float 0xBFB2D527E0000000, float 0x3FE6E744C0000000, float 0xBFE7F8EC00000000, float 0xBFE5C77BC0000000, float 0x3FE49A45A0000000], align 16
@__const.main.reversed = private unnamed_addr constant [8 x i32] [i32 0, i32 4, i32 2, i32 6, i32 1, i32 5, i32 3, i32 7], align 16
@.str = private unnamed_addr constant [16 x i8] c"x = %i y = %i \0A\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step1(i32* nocapture readonly %work_x, i32* nocapture readonly %work_y, i32* nocapture %DATA_x, i32* nocapture %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture readnone %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readonly %sin_512, float* nocapture readonly %cos_512) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !15, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !16, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !17, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !18, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !19, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !20, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* undef, metadata !21, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* undef, metadata !22, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata float* undef, metadata !23, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata float* undef, metadata !24, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !25, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !26, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32 64, metadata !32, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.label(metadata !95), !dbg !100
  call void @llvm.dbg.value(metadata i32 0, metadata !27, metadata !DIExpression()), !dbg !99
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4, !dbg !101
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4, !dbg !101
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1, !dbg !102
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1, !dbg !102
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5, !dbg !102
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5, !dbg !102
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2, !dbg !103
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2, !dbg !103
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6, !dbg !103
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6, !dbg !103
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3, !dbg !104
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3, !dbg !104
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7, !dbg !104
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7, !dbg !104
  br label %for.cond1.preheader, !dbg !105

for.cond1.preheader:                              ; preds = %for.inc332, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc332 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !27, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !99
  br label %for.body3, !dbg !106

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !30, metadata !DIExpression()), !dbg !99
  %0 = shl i64 %indvars.iv, 6, !dbg !108
  %1 = add nuw nsw i64 %0, %indvar, !dbg !111
  %arrayidx = getelementptr inbounds i32, i32* %work_x, i64 %1, !dbg !112
  %2 = load i32, i32* %arrayidx, align 4, !dbg !112, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !117
  store i32 %2, i32* %arrayidx5, align 4, !dbg !118, !tbaa !113
  %arrayidx9 = getelementptr inbounds i32, i32* %work_y, i64 %1, !dbg !119
  %3 = load i32, i32* %arrayidx9, align 4, !dbg !119, !tbaa !113
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !120
  store i32 %3, i32* %arrayidx11, align 4, !dbg !121, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !122
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !30, metadata !DIExpression()), !dbg !99
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !123
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !106, !llvm.loop !124

for.end:                                          ; preds = %for.body3
  call void @llvm.dbg.value(metadata i32 1, metadata !33, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i32 -1, metadata !40, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i32 0, metadata !38, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i32 -1, metadata !41, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i32 -1, metadata !39, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i32 -1, metadata !42, metadata !DIExpression()), !dbg !126
  %4 = load i32, i32* %data_x, align 4, !dbg !127, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %4, metadata !45, metadata !DIExpression()), !dbg !101
  %5 = load i32, i32* %data_y, align 4, !dbg !127, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %5, metadata !47, metadata !DIExpression()), !dbg !101
  %6 = load i32, i32* %arrayidx14, align 4, !dbg !127, !tbaa !113
  %add15 = add nsw i32 %6, %4, !dbg !127
  store i32 %add15, i32* %data_x, align 4, !dbg !127, !tbaa !113
  %7 = load i32, i32* %arrayidx17, align 4, !dbg !127, !tbaa !113
  %add18 = add nsw i32 %7, %5, !dbg !127
  store i32 %add18, i32* %data_y, align 4, !dbg !127, !tbaa !113
  %8 = load i32, i32* %arrayidx14, align 4, !dbg !127, !tbaa !113
  %sub = sub nsw i32 %4, %8, !dbg !127
  store i32 %sub, i32* %arrayidx14, align 4, !dbg !127, !tbaa !113
  %9 = load i32, i32* %arrayidx17, align 4, !dbg !127, !tbaa !113
  %sub23 = sub nsw i32 %5, %9, !dbg !127
  store i32 %sub23, i32* %arrayidx17, align 4, !dbg !127, !tbaa !113
  %10 = load i32, i32* %arrayidx26, align 4, !dbg !128, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %10, metadata !48, metadata !DIExpression()), !dbg !102
  %11 = load i32, i32* %arrayidx28, align 4, !dbg !128, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %11, metadata !50, metadata !DIExpression()), !dbg !102
  %12 = load i32, i32* %arrayidx29, align 4, !dbg !128, !tbaa !113
  %add30 = add nsw i32 %12, %10, !dbg !128
  store i32 %add30, i32* %arrayidx26, align 4, !dbg !128, !tbaa !113
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !128, !tbaa !113
  %add33 = add nsw i32 %13, %11, !dbg !128
  store i32 %add33, i32* %arrayidx28, align 4, !dbg !128, !tbaa !113
  %14 = load i32, i32* %arrayidx29, align 4, !dbg !128, !tbaa !113
  %sub36 = sub nsw i32 %10, %14, !dbg !128
  store i32 %sub36, i32* %arrayidx29, align 4, !dbg !128, !tbaa !113
  %15 = load i32, i32* %arrayidx32, align 4, !dbg !128, !tbaa !113
  %sub39 = sub nsw i32 %11, %15, !dbg !128
  store i32 %sub39, i32* %arrayidx32, align 4, !dbg !128, !tbaa !113
  %16 = load i32, i32* %arrayidx42, align 4, !dbg !129, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %16, metadata !51, metadata !DIExpression()), !dbg !103
  %17 = load i32, i32* %arrayidx44, align 4, !dbg !129, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %17, metadata !53, metadata !DIExpression()), !dbg !103
  %18 = load i32, i32* %arrayidx45, align 4, !dbg !129, !tbaa !113
  %add46 = add nsw i32 %18, %16, !dbg !129
  store i32 %add46, i32* %arrayidx42, align 4, !dbg !129, !tbaa !113
  %19 = load i32, i32* %arrayidx48, align 4, !dbg !129, !tbaa !113
  %add49 = add nsw i32 %19, %17, !dbg !129
  store i32 %add49, i32* %arrayidx44, align 4, !dbg !129, !tbaa !113
  %20 = load i32, i32* %arrayidx45, align 4, !dbg !129, !tbaa !113
  %sub52 = sub nsw i32 %16, %20, !dbg !129
  store i32 %sub52, i32* %arrayidx45, align 4, !dbg !129, !tbaa !113
  %21 = load i32, i32* %arrayidx48, align 4, !dbg !129, !tbaa !113
  %sub55 = sub nsw i32 %17, %21, !dbg !129
  store i32 %sub55, i32* %arrayidx48, align 4, !dbg !129, !tbaa !113
  %22 = load i32, i32* %arrayidx58, align 4, !dbg !130, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %22, metadata !54, metadata !DIExpression()), !dbg !104
  %23 = load i32, i32* %arrayidx60, align 4, !dbg !130, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %23, metadata !56, metadata !DIExpression()), !dbg !104
  %24 = load i32, i32* %arrayidx61, align 4, !dbg !130, !tbaa !113
  %add62 = add nsw i32 %24, %22, !dbg !130
  store i32 %add62, i32* %arrayidx58, align 4, !dbg !130, !tbaa !113
  %25 = load i32, i32* %arrayidx64, align 4, !dbg !130, !tbaa !113
  %add65 = add nsw i32 %25, %23, !dbg !130
  store i32 %add65, i32* %arrayidx60, align 4, !dbg !130, !tbaa !113
  %26 = load i32, i32* %arrayidx61, align 4, !dbg !130, !tbaa !113
  %sub68 = sub nsw i32 %22, %26, !dbg !130
  store i32 %sub68, i32* %arrayidx61, align 4, !dbg !130, !tbaa !113
  %27 = load i32, i32* %arrayidx64, align 4, !dbg !130, !tbaa !113
  %sub71 = sub nsw i32 %23, %27, !dbg !130
  store i32 %sub71, i32* %arrayidx64, align 4, !dbg !130, !tbaa !113
  %28 = load i32, i32* %arrayidx29, align 4, !dbg !131, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %28, metadata !43, metadata !DIExpression()), !dbg !126
  %29 = load i32, i32* %arrayidx32, align 4, !dbg !131, !tbaa !113
  %sub78 = add nsw i32 %29, %28, !dbg !131
  %conv = sitofp i32 %sub78 to float, !dbg !131
  %mul79 = fmul float %conv, 0x3FE6A09E60000000, !dbg !131
  %conv80 = fptosi float %mul79 to i32, !dbg !131
  store i32 %conv80, i32* %arrayidx29, align 4, !dbg !131, !tbaa !113
  %30 = load i32, i32* %arrayidx32, align 4, !dbg !131, !tbaa !113
  %add85 = sub i32 %30, %28, !dbg !131
  %conv86 = sitofp i32 %add85 to float, !dbg !131
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000, !dbg !131
  %conv88 = fptosi float %mul87 to i32, !dbg !131
  store i32 %conv88, i32* %arrayidx32, align 4, !dbg !131, !tbaa !113
  %31 = load i32, i32* %arrayidx45, align 4, !dbg !131, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %31, metadata !43, metadata !DIExpression()), !dbg !126
  %32 = load i32, i32* %arrayidx48, align 4, !dbg !131, !tbaa !113
  store i32 %32, i32* %arrayidx45, align 4, !dbg !131, !tbaa !113
  %mul97 = sub nsw i32 0, %31, !dbg !131
  store i32 %mul97, i32* %arrayidx48, align 4, !dbg !131, !tbaa !113
  %33 = load i32, i32* %arrayidx61, align 4, !dbg !131, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %33, metadata !43, metadata !DIExpression()), !dbg !126
  %34 = load i32, i32* %arrayidx64, align 4, !dbg !131, !tbaa !113
  %sub107 = sub i32 %34, %33, !dbg !131
  %conv108 = sitofp i32 %sub107 to float, !dbg !131
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000, !dbg !131
  %conv110 = fptosi float %mul109 to i32, !dbg !131
  store i32 %conv110, i32* %arrayidx61, align 4, !dbg !131, !tbaa !113
  %35 = load i32, i32* %arrayidx64, align 4, !dbg !131, !tbaa !113
  %36 = add i32 %33, %35, !dbg !131
  %add115 = sub i32 0, %36, !dbg !131
  %conv116 = sitofp i32 %add115 to float, !dbg !131
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000, !dbg !131
  %conv118 = fptosi float %mul117 to i32, !dbg !131
  store i32 %conv118, i32* %arrayidx64, align 4, !dbg !131, !tbaa !113
  call void @llvm.dbg.value(metadata i32 0, metadata !57, metadata !DIExpression()), !dbg !132
  call void @llvm.dbg.value(metadata i32 -1, metadata !59, metadata !DIExpression()), !dbg !132
  %37 = load i32, i32* %data_x, align 4, !dbg !133, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %37, metadata !61, metadata !DIExpression()), !dbg !134
  %38 = load i32, i32* %data_y, align 4, !dbg !133, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %38, metadata !63, metadata !DIExpression()), !dbg !134
  %39 = load i32, i32* %arrayidx42, align 4, !dbg !133, !tbaa !113
  %add125 = add nsw i32 %39, %37, !dbg !133
  store i32 %add125, i32* %data_x, align 4, !dbg !133, !tbaa !113
  %40 = load i32, i32* %arrayidx44, align 4, !dbg !133, !tbaa !113
  %add128 = add nsw i32 %40, %38, !dbg !133
  store i32 %add128, i32* %data_y, align 4, !dbg !133, !tbaa !113
  %41 = load i32, i32* %arrayidx42, align 4, !dbg !133, !tbaa !113
  %sub131 = sub nsw i32 %37, %41, !dbg !133
  store i32 %sub131, i32* %arrayidx42, align 4, !dbg !133, !tbaa !113
  %42 = load i32, i32* %arrayidx44, align 4, !dbg !133, !tbaa !113
  %sub134 = sub nsw i32 %38, %42, !dbg !133
  store i32 %sub134, i32* %arrayidx44, align 4, !dbg !133, !tbaa !113
  %43 = load i32, i32* %arrayidx26, align 4, !dbg !135, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %43, metadata !64, metadata !DIExpression()), !dbg !136
  %44 = load i32, i32* %arrayidx28, align 4, !dbg !135, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %44, metadata !66, metadata !DIExpression()), !dbg !136
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !135, !tbaa !113
  %add141 = add nsw i32 %45, %43, !dbg !135
  store i32 %add141, i32* %arrayidx26, align 4, !dbg !135, !tbaa !113
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !135, !tbaa !113
  %add144 = add nsw i32 %46, %44, !dbg !135
  store i32 %add144, i32* %arrayidx28, align 4, !dbg !135, !tbaa !113
  %47 = load i32, i32* %arrayidx58, align 4, !dbg !135, !tbaa !113
  %sub147 = sub nsw i32 %43, %47, !dbg !135
  store i32 %sub147, i32* %arrayidx58, align 4, !dbg !135, !tbaa !113
  %48 = load i32, i32* %arrayidx60, align 4, !dbg !135, !tbaa !113
  %sub150 = sub nsw i32 %44, %48, !dbg !135
  store i32 %sub150, i32* %arrayidx60, align 4, !dbg !135, !tbaa !113
  %49 = load i32, i32* %arrayidx58, align 4, !dbg !137, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %49, metadata !60, metadata !DIExpression()), !dbg !132
  store i32 %sub150, i32* %arrayidx58, align 4, !dbg !137, !tbaa !113
  %mul159 = sub nsw i32 0, %49, !dbg !137
  store i32 %mul159, i32* %arrayidx60, align 4, !dbg !137, !tbaa !113
  %50 = load i32, i32* %data_x, align 4, !dbg !138, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %50, metadata !67, metadata !DIExpression()), !dbg !139
  %51 = load i32, i32* %data_y, align 4, !dbg !138, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %51, metadata !69, metadata !DIExpression()), !dbg !139
  %52 = load i32, i32* %arrayidx26, align 4, !dbg !138, !tbaa !113
  %add169 = add nsw i32 %52, %50, !dbg !138
  store i32 %add169, i32* %data_x, align 4, !dbg !138, !tbaa !113
  %53 = load i32, i32* %arrayidx28, align 4, !dbg !138, !tbaa !113
  %add172 = add nsw i32 %53, %51, !dbg !138
  store i32 %add172, i32* %data_y, align 4, !dbg !138, !tbaa !113
  %54 = load i32, i32* %arrayidx26, align 4, !dbg !138, !tbaa !113
  %sub175 = sub nsw i32 %50, %54, !dbg !138
  store i32 %sub175, i32* %arrayidx26, align 4, !dbg !138, !tbaa !113
  %55 = load i32, i32* %arrayidx28, align 4, !dbg !138, !tbaa !113
  %sub178 = sub nsw i32 %51, %55, !dbg !138
  store i32 %sub178, i32* %arrayidx28, align 4, !dbg !138, !tbaa !113
  %56 = load i32, i32* %arrayidx42, align 4, !dbg !140, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %56, metadata !70, metadata !DIExpression()), !dbg !141
  %57 = load i32, i32* %arrayidx44, align 4, !dbg !140, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %57, metadata !72, metadata !DIExpression()), !dbg !141
  %58 = load i32, i32* %arrayidx58, align 4, !dbg !140, !tbaa !113
  %add185 = add nsw i32 %58, %56, !dbg !140
  store i32 %add185, i32* %arrayidx42, align 4, !dbg !140, !tbaa !113
  %59 = load i32, i32* %arrayidx60, align 4, !dbg !140, !tbaa !113
  %add188 = add nsw i32 %59, %57, !dbg !140
  store i32 %add188, i32* %arrayidx44, align 4, !dbg !140, !tbaa !113
  %60 = load i32, i32* %arrayidx58, align 4, !dbg !140, !tbaa !113
  %sub191 = sub nsw i32 %56, %60, !dbg !140
  store i32 %sub191, i32* %arrayidx58, align 4, !dbg !140, !tbaa !113
  %61 = load i32, i32* %arrayidx60, align 4, !dbg !140, !tbaa !113
  %sub194 = sub nsw i32 %57, %61, !dbg !140
  store i32 %sub194, i32* %arrayidx60, align 4, !dbg !140, !tbaa !113
  call void @llvm.dbg.value(metadata i32 0, metadata !73, metadata !DIExpression()), !dbg !142
  call void @llvm.dbg.value(metadata i32 -1, metadata !75, metadata !DIExpression()), !dbg !142
  %62 = load i32, i32* %arrayidx14, align 4, !dbg !143, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %62, metadata !77, metadata !DIExpression()), !dbg !144
  %63 = load i32, i32* %arrayidx17, align 4, !dbg !143, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %63, metadata !79, metadata !DIExpression()), !dbg !144
  %64 = load i32, i32* %arrayidx45, align 4, !dbg !143, !tbaa !113
  %add204 = add nsw i32 %64, %62, !dbg !143
  store i32 %add204, i32* %arrayidx14, align 4, !dbg !143, !tbaa !113
  %65 = load i32, i32* %arrayidx48, align 4, !dbg !143, !tbaa !113
  %add207 = add nsw i32 %65, %63, !dbg !143
  store i32 %add207, i32* %arrayidx17, align 4, !dbg !143, !tbaa !113
  %66 = load i32, i32* %arrayidx45, align 4, !dbg !143, !tbaa !113
  %sub210 = sub nsw i32 %62, %66, !dbg !143
  store i32 %sub210, i32* %arrayidx45, align 4, !dbg !143, !tbaa !113
  %67 = load i32, i32* %arrayidx48, align 4, !dbg !143, !tbaa !113
  %sub213 = sub nsw i32 %63, %67, !dbg !143
  store i32 %sub213, i32* %arrayidx48, align 4, !dbg !143, !tbaa !113
  %68 = load i32, i32* %arrayidx29, align 4, !dbg !145, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %68, metadata !80, metadata !DIExpression()), !dbg !146
  %69 = load i32, i32* %arrayidx32, align 4, !dbg !145, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %69, metadata !82, metadata !DIExpression()), !dbg !146
  %70 = load i32, i32* %arrayidx61, align 4, !dbg !145, !tbaa !113
  %add220 = add nsw i32 %70, %68, !dbg !145
  store i32 %add220, i32* %arrayidx29, align 4, !dbg !145, !tbaa !113
  %71 = load i32, i32* %arrayidx64, align 4, !dbg !145, !tbaa !113
  %add223 = add nsw i32 %71, %69, !dbg !145
  store i32 %add223, i32* %arrayidx32, align 4, !dbg !145, !tbaa !113
  %72 = load i32, i32* %arrayidx61, align 4, !dbg !145, !tbaa !113
  %sub226 = sub nsw i32 %68, %72, !dbg !145
  store i32 %sub226, i32* %arrayidx61, align 4, !dbg !145, !tbaa !113
  %73 = load i32, i32* %arrayidx64, align 4, !dbg !145, !tbaa !113
  %sub229 = sub nsw i32 %69, %73, !dbg !145
  store i32 %sub229, i32* %arrayidx64, align 4, !dbg !145, !tbaa !113
  %74 = load i32, i32* %arrayidx61, align 4, !dbg !147, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %74, metadata !76, metadata !DIExpression()), !dbg !142
  store i32 %sub229, i32* %arrayidx61, align 4, !dbg !147, !tbaa !113
  %mul238 = sub nsw i32 0, %74, !dbg !147
  store i32 %mul238, i32* %arrayidx64, align 4, !dbg !147, !tbaa !113
  %75 = load i32, i32* %arrayidx14, align 4, !dbg !148, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %75, metadata !83, metadata !DIExpression()), !dbg !149
  %76 = load i32, i32* %arrayidx17, align 4, !dbg !148, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %76, metadata !85, metadata !DIExpression()), !dbg !149
  %77 = load i32, i32* %arrayidx29, align 4, !dbg !148, !tbaa !113
  %add248 = add nsw i32 %77, %75, !dbg !148
  store i32 %add248, i32* %arrayidx14, align 4, !dbg !148, !tbaa !113
  %78 = load i32, i32* %arrayidx32, align 4, !dbg !148, !tbaa !113
  %add251 = add nsw i32 %78, %76, !dbg !148
  store i32 %add251, i32* %arrayidx17, align 4, !dbg !148, !tbaa !113
  %79 = load i32, i32* %arrayidx29, align 4, !dbg !148, !tbaa !113
  %sub254 = sub nsw i32 %75, %79, !dbg !148
  store i32 %sub254, i32* %arrayidx29, align 4, !dbg !148, !tbaa !113
  %80 = load i32, i32* %arrayidx32, align 4, !dbg !148, !tbaa !113
  %sub257 = sub nsw i32 %76, %80, !dbg !148
  store i32 %sub257, i32* %arrayidx32, align 4, !dbg !148, !tbaa !113
  %81 = load i32, i32* %arrayidx45, align 4, !dbg !150, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %81, metadata !86, metadata !DIExpression()), !dbg !151
  %82 = load i32, i32* %arrayidx48, align 4, !dbg !150, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %82, metadata !88, metadata !DIExpression()), !dbg !151
  %83 = load i32, i32* %arrayidx61, align 4, !dbg !150, !tbaa !113
  %add264 = add nsw i32 %83, %81, !dbg !150
  store i32 %add264, i32* %arrayidx45, align 4, !dbg !150, !tbaa !113
  %84 = load i32, i32* %arrayidx64, align 4, !dbg !150, !tbaa !113
  %add267 = add nsw i32 %84, %82, !dbg !150
  store i32 %add267, i32* %arrayidx48, align 4, !dbg !150, !tbaa !113
  %85 = load i32, i32* %arrayidx61, align 4, !dbg !150, !tbaa !113
  %sub270 = sub nsw i32 %81, %85, !dbg !150
  store i32 %sub270, i32* %arrayidx61, align 4, !dbg !150, !tbaa !113
  %86 = load i32, i32* %arrayidx64, align 4, !dbg !150, !tbaa !113
  %sub273 = sub nsw i32 %82, %86, !dbg !150
  store i32 %sub273, i32* %arrayidx64, align 4, !dbg !150, !tbaa !113
  call void @llvm.dbg.label(metadata !97), !dbg !152
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !99
  %87 = mul nuw nsw i64 %indvar, 7, !dbg !153
  %88 = add nsw i64 %87, -1, !dbg !153
  br label %for.body278, !dbg !154

for.cond313.preheader:                            ; preds = %for.body278
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !99
  %89 = shl i64 %indvar, 3, !dbg !155
  br label %for.body316, !dbg !159

for.body278:                                      ; preds = %for.body278, %for.end
  %indvars.iv612 = phi i64 [ 1, %for.end ], [ %indvars.iv.next613, %for.body278 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv612, metadata !31, metadata !DIExpression()), !dbg !99
  %90 = add nsw i64 %88, %indvars.iv612, !dbg !160
  %arrayidx284 = getelementptr inbounds float, float* %cos_512, i64 %90, !dbg !161
  %91 = load float, float* %arrayidx284, align 4, !dbg !161, !tbaa !162
  %conv285 = fptosi float %91 to i32, !dbg !161
  call void @llvm.dbg.value(metadata i32 %conv285, metadata !89, metadata !DIExpression()), !dbg !153
  %arrayidx290 = getelementptr inbounds float, float* %sin_512, i64 %90, !dbg !164
  %92 = load float, float* %arrayidx290, align 4, !dbg !164, !tbaa !162
  %conv291 = fptosi float %92 to i32, !dbg !164
  call void @llvm.dbg.value(metadata i32 %conv291, metadata !93, metadata !DIExpression()), !dbg !153
  %arrayidx293 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv612, !dbg !165
  %93 = load i32, i32* %arrayidx293, align 4, !dbg !165, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %93, metadata !94, metadata !DIExpression()), !dbg !153
  %mul296 = mul nsw i32 %93, %conv285, !dbg !166
  %arrayidx298 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv612, !dbg !166
  %94 = load i32, i32* %arrayidx298, align 4, !dbg !166, !tbaa !113
  %mul299 = mul nsw i32 %94, %conv291, !dbg !166
  %sub300 = sub nsw i32 %mul296, %mul299, !dbg !166
  store i32 %sub300, i32* %arrayidx293, align 4, !dbg !167, !tbaa !113
  %mul303 = mul nsw i32 %93, %conv291, !dbg !168
  %95 = load i32, i32* %arrayidx298, align 4, !dbg !168, !tbaa !113
  %mul306 = mul nsw i32 %95, %conv285, !dbg !168
  %add307 = add nsw i32 %mul306, %mul303, !dbg !168
  store i32 %add307, i32* %arrayidx298, align 4, !dbg !169, !tbaa !113
  %indvars.iv.next613 = add nuw nsw i64 %indvars.iv612, 1, !dbg !170
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next613, metadata !31, metadata !DIExpression()), !dbg !99
  %exitcond615 = icmp eq i64 %indvars.iv.next613, 8, !dbg !171
  br i1 %exitcond615, label %for.cond313.preheader, label %for.body278, !dbg !154, !llvm.loop !172

for.body316:                                      ; preds = %for.body316, %for.cond313.preheader
  %indvars.iv616 = phi i64 [ 0, %for.cond313.preheader ], [ %indvars.iv.next617, %for.body316 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv616, metadata !30, metadata !DIExpression()), !dbg !99
  %arrayidx318 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv616, !dbg !174
  %96 = load i32, i32* %arrayidx318, align 4, !dbg !174, !tbaa !113
  %97 = add nuw nsw i64 %indvars.iv616, %89, !dbg !175
  %arrayidx322 = getelementptr inbounds i32, i32* %DATA_x, i64 %97, !dbg !176
  store i32 %96, i32* %arrayidx322, align 4, !dbg !177, !tbaa !113
  %arrayidx324 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv616, !dbg !178
  %98 = load i32, i32* %arrayidx324, align 4, !dbg !178, !tbaa !113
  %arrayidx328 = getelementptr inbounds i32, i32* %DATA_y, i64 %97, !dbg !179
  store i32 %98, i32* %arrayidx328, align 4, !dbg !180, !tbaa !113
  %indvars.iv.next617 = add nuw nsw i64 %indvars.iv616, 1, !dbg !181
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next617, metadata !30, metadata !DIExpression()), !dbg !99
  %exitcond619 = icmp eq i64 %indvars.iv.next617, 8, !dbg !182
  br i1 %exitcond619, label %for.inc332, label %for.body316, !dbg !159, !llvm.loop !183

for.inc332:                                       ; preds = %for.body316
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !185
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !27, metadata !DIExpression()), !dbg !99
  %exitcond625 = icmp eq i64 %indvar.next, 64, !dbg !186
  br i1 %exitcond625, label %for.end334, label %for.cond1.preheader, !dbg !105, !llvm.loop !187

for.end334:                                       ; preds = %for.inc332
  ret void, !dbg !189
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step2(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readonly %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !190 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !192, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* undef, metadata !193, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !194, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* undef, metadata !195, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !196, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* undef, metadata !197, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* %smem, metadata !198, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !199, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata float* undef, metadata !200, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata float* undef, metadata !201, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata float* undef, metadata !202, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata float* undef, metadata !203, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32 64, metadata !209, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.label(metadata !210), !dbg !216
  call void @llvm.dbg.value(metadata i32 0, metadata !204, metadata !DIExpression()), !dbg !215
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1, !dbg !217
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2, !dbg !217
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3, !dbg !217
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4, !dbg !217
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5, !dbg !217
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6, !dbg !217
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7, !dbg !217
  br label %for.cond1.preheader, !dbg !219

for.cond1.preheader:                              ; preds = %for.end, %entry
  %indvars.iv126 = phi i64 [ 0, %entry ], [ %indvars.iv.next127, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !204, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32 0, metadata !207, metadata !DIExpression()), !dbg !215
  %0 = shl i64 %indvars.iv126, 3, !dbg !220
  br label %for.body3, !dbg !224

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !207, metadata !DIExpression()), !dbg !215
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !225
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1, !dbg !226
  %2 = load i32, i32* %arrayidx, align 4, !dbg !226, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !227
  store i32 %2, i32* %arrayidx5, align 4, !dbg !228, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !229
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !207, metadata !DIExpression()), !dbg !215
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !230
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !224, !llvm.loop !231

for.end:                                          ; preds = %for.body3
  %3 = and i64 %indvars.iv126, 2147483640, !dbg !233
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !205, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shr, DW_OP_stack_value)), !dbg !215
  %and = and i64 %indvars.iv126, 7, !dbg !234
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !206, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !215
  %4 = load i32, i32* %reversed, align 4, !dbg !233, !tbaa !113
  %idxprom7 = sext i32 %4 to i64, !dbg !233
  %arrayidx8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7, !dbg !233
  %5 = load i32, i32* %arrayidx8, align 4, !dbg !233, !tbaa !113
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv126, !dbg !233
  store i32 %5, i32* %arrayidx13, align 4, !dbg !233, !tbaa !113
  %6 = load i32, i32* %arrayidx14, align 4, !dbg !233, !tbaa !113
  %idxprom15 = sext i32 %6 to i64, !dbg !233
  %arrayidx16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15, !dbg !233
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !233, !tbaa !113
  %8 = add nuw nsw i64 %indvars.iv126, 66, !dbg !233
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %8, !dbg !233
  store i32 %7, i32* %arrayidx21, align 4, !dbg !233, !tbaa !113
  %9 = load i32, i32* %arrayidx22, align 4, !dbg !233, !tbaa !113
  %idxprom23 = sext i32 %9 to i64, !dbg !233
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23, !dbg !233
  %10 = load i32, i32* %arrayidx24, align 4, !dbg !233, !tbaa !113
  %11 = add nuw nsw i64 %indvars.iv126, 132, !dbg !233
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %11, !dbg !233
  store i32 %10, i32* %arrayidx29, align 4, !dbg !233, !tbaa !113
  %12 = load i32, i32* %arrayidx30, align 4, !dbg !233, !tbaa !113
  %idxprom31 = sext i32 %12 to i64, !dbg !233
  %arrayidx32 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31, !dbg !233
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !233, !tbaa !113
  %14 = add nuw nsw i64 %indvars.iv126, 198, !dbg !233
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !233
  store i32 %13, i32* %arrayidx37, align 4, !dbg !233, !tbaa !113
  %15 = load i32, i32* %arrayidx38, align 4, !dbg !233, !tbaa !113
  %idxprom39 = sext i32 %15 to i64, !dbg !233
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39, !dbg !233
  %16 = load i32, i32* %arrayidx40, align 4, !dbg !233, !tbaa !113
  %add42 = add nuw nsw i64 %3, 264, !dbg !233
  %add43 = or i64 %add42, %and, !dbg !233
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %add43, !dbg !233
  store i32 %16, i32* %arrayidx45, align 4, !dbg !233, !tbaa !113
  %17 = load i32, i32* %arrayidx46, align 4, !dbg !233, !tbaa !113
  %idxprom47 = sext i32 %17 to i64, !dbg !233
  %arrayidx48 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47, !dbg !233
  %18 = load i32, i32* %arrayidx48, align 4, !dbg !233, !tbaa !113
  %19 = add nuw nsw i64 %indvars.iv126, 330, !dbg !233
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %19, !dbg !233
  store i32 %18, i32* %arrayidx53, align 4, !dbg !233, !tbaa !113
  %20 = load i32, i32* %arrayidx54, align 4, !dbg !233, !tbaa !113
  %idxprom55 = sext i32 %20 to i64, !dbg !233
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55, !dbg !233
  %21 = load i32, i32* %arrayidx56, align 4, !dbg !233, !tbaa !113
  %22 = add nuw nsw i64 %indvars.iv126, 396, !dbg !233
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %22, !dbg !233
  store i32 %21, i32* %arrayidx61, align 4, !dbg !233, !tbaa !113
  %23 = load i32, i32* %arrayidx62, align 4, !dbg !233, !tbaa !113
  %idxprom63 = sext i32 %23 to i64, !dbg !233
  %arrayidx64 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63, !dbg !233
  %24 = load i32, i32* %arrayidx64, align 4, !dbg !233, !tbaa !113
  %25 = add nuw nsw i64 %indvars.iv126, 462, !dbg !233
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %25, !dbg !233
  store i32 %24, i32* %arrayidx69, align 4, !dbg !233, !tbaa !113
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1, !dbg !235
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next127, metadata !204, metadata !DIExpression()), !dbg !215
  %exitcond135 = icmp eq i64 %indvars.iv.next127, 64, !dbg !236
  br i1 %exitcond135, label %for.end72, label %for.cond1.preheader, !dbg !219, !llvm.loop !237

for.end72:                                        ; preds = %for.end
  ret void, !dbg !239
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step3(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !240 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !242, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* undef, metadata !243, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !244, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* undef, metadata !245, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !246, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* undef, metadata !247, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* %smem, metadata !248, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* undef, metadata !249, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata float* undef, metadata !250, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata float* undef, metadata !251, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata float* undef, metadata !252, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata float* undef, metadata !253, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32 64, metadata !259, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.label(metadata !260), !dbg !267
  call void @llvm.dbg.value(metadata i32 0, metadata !254, metadata !DIExpression()), !dbg !266
  %arrayidx17 = getelementptr inbounds i32, i32* %data_x, i64 1, !dbg !268
  %arrayidx23 = getelementptr inbounds i32, i32* %data_x, i64 2, !dbg !268
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 3, !dbg !268
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 4, !dbg !268
  %arrayidx41 = getelementptr inbounds i32, i32* %data_x, i64 5, !dbg !268
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 6, !dbg !268
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 7, !dbg !268
  br label %for.cond1.preheader, !dbg !270

for.cond1.preheader:                              ; preds = %for.inc66, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc66 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !254, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32 0, metadata !257, metadata !DIExpression()), !dbg !266
  %0 = shl i64 %indvar, 3, !dbg !271
  br label %for.body3, !dbg !275

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !257, metadata !DIExpression()), !dbg !266
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !276
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1, !dbg !277
  %2 = load i32, i32* %arrayidx, align 4, !dbg !277, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !278
  store i32 %2, i32* %arrayidx5, align 4, !dbg !279, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !280
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !257, metadata !DIExpression()), !dbg !266
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !281
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !275, !llvm.loop !282

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvar to i32, !dbg !284
  %4 = lshr i32 %3, 3, !dbg !284
  call void @llvm.dbg.value(metadata i32 %4, metadata !255, metadata !DIExpression()), !dbg !266
  %5 = trunc i64 %indvar to i32, !dbg !285
  %and = and i32 %5, 7, !dbg !285
  call void @llvm.dbg.value(metadata i32 %and, metadata !256, metadata !DIExpression()), !dbg !266
  %mul6 = mul nuw nsw i32 %and, 66, !dbg !286
  %add8 = add nuw nsw i32 %mul6, %4, !dbg !286
  %idxprom9 = zext i32 %add8 to i64, !dbg !286
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9, !dbg !286
  %6 = load i32, i32* %arrayidx10, align 4, !dbg !286, !tbaa !113
  store i32 %6, i32* %data_x, align 4, !dbg !286, !tbaa !113
  %add13 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add14 = add nuw nsw i32 %add13, 8, !dbg !286
  %idxprom15 = zext i32 %add14 to i64, !dbg !286
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15, !dbg !286
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !286, !tbaa !113
  store i32 %7, i32* %arrayidx17, align 4, !dbg !286, !tbaa !113
  %add19 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add20 = add nuw nsw i32 %add19, 16, !dbg !286
  %idxprom21 = zext i32 %add20 to i64, !dbg !286
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21, !dbg !286
  %8 = load i32, i32* %arrayidx22, align 4, !dbg !286, !tbaa !113
  store i32 %8, i32* %arrayidx23, align 4, !dbg !286, !tbaa !113
  %add25 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add26 = add nuw nsw i32 %add25, 24, !dbg !286
  %idxprom27 = zext i32 %add26 to i64, !dbg !286
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27, !dbg !286
  %9 = load i32, i32* %arrayidx28, align 4, !dbg !286, !tbaa !113
  store i32 %9, i32* %arrayidx29, align 4, !dbg !286, !tbaa !113
  %add31 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add32 = add nuw nsw i32 %add31, 32, !dbg !286
  %idxprom33 = zext i32 %add32 to i64, !dbg !286
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33, !dbg !286
  %10 = load i32, i32* %arrayidx34, align 4, !dbg !286, !tbaa !113
  store i32 %10, i32* %arrayidx35, align 4, !dbg !286, !tbaa !113
  %add37 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add38 = add nuw nsw i32 %add37, 40, !dbg !286
  %idxprom39 = zext i32 %add38 to i64, !dbg !286
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39, !dbg !286
  %11 = load i32, i32* %arrayidx40, align 4, !dbg !286, !tbaa !113
  store i32 %11, i32* %arrayidx41, align 4, !dbg !286, !tbaa !113
  %add43 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add44 = add nuw nsw i32 %add43, 48, !dbg !286
  %idxprom45 = zext i32 %add44 to i64, !dbg !286
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45, !dbg !286
  %12 = load i32, i32* %arrayidx46, align 4, !dbg !286, !tbaa !113
  store i32 %12, i32* %arrayidx47, align 4, !dbg !286, !tbaa !113
  %add49 = add nuw nsw i32 %mul6, %4, !dbg !286
  %add50 = add nuw nsw i32 %add49, 56, !dbg !286
  %idxprom51 = zext i32 %add50 to i64, !dbg !286
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51, !dbg !286
  %13 = load i32, i32* %arrayidx52, align 4, !dbg !286, !tbaa !113
  store i32 %13, i32* %arrayidx53, align 4, !dbg !286, !tbaa !113
  call void @llvm.dbg.label(metadata !265), !dbg !287
  call void @llvm.dbg.value(metadata i32 0, metadata !257, metadata !DIExpression()), !dbg !266
  %14 = shl i64 %indvar, 3, !dbg !288
  br label %for.body56, !dbg !292

for.body56:                                       ; preds = %for.body56, %for.end
  %indvars.iv123 = phi i64 [ 0, %for.end ], [ %indvars.iv.next124, %for.body56 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv123, metadata !257, metadata !DIExpression()), !dbg !266
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv123, !dbg !293
  %15 = load i32, i32* %arrayidx58, align 4, !dbg !293, !tbaa !113
  %16 = add nuw nsw i64 %indvars.iv123, %14, !dbg !294
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_x, i64 %16, !dbg !295
  store i32 %15, i32* %arrayidx62, align 4, !dbg !296, !tbaa !113
  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1, !dbg !297
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next124, metadata !257, metadata !DIExpression()), !dbg !266
  %exitcond126 = icmp eq i64 %indvars.iv.next124, 8, !dbg !298
  br i1 %exitcond126, label %for.inc66, label %for.body56, !dbg !292, !llvm.loop !299

for.inc66:                                        ; preds = %for.body56
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !301
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !254, metadata !DIExpression()), !dbg !266
  %exitcond130 = icmp eq i64 %indvar.next, 64, !dbg !302
  br i1 %exitcond130, label %for.end68, label %for.cond1.preheader, !dbg !270, !llvm.loop !303

for.end68:                                        ; preds = %for.inc66
  ret void, !dbg !305
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step4(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture readonly %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !306 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !308, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* undef, metadata !309, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* undef, metadata !310, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !311, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* undef, metadata !312, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !313, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* %smem, metadata !314, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !315, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata float* undef, metadata !316, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata float* undef, metadata !317, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata float* undef, metadata !318, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata float* undef, metadata !319, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32 64, metadata !325, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.label(metadata !326), !dbg !332
  call void @llvm.dbg.value(metadata i32 0, metadata !320, metadata !DIExpression()), !dbg !331
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1, !dbg !333
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2, !dbg !333
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3, !dbg !333
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4, !dbg !333
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5, !dbg !333
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6, !dbg !333
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7, !dbg !333
  br label %for.cond1.preheader, !dbg !335

for.cond1.preheader:                              ; preds = %for.end, %entry
  %indvars.iv126 = phi i64 [ 0, %entry ], [ %indvars.iv.next127, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !320, metadata !DIExpression()), !dbg !331
  call void @llvm.dbg.value(metadata i32 0, metadata !323, metadata !DIExpression()), !dbg !331
  %0 = shl i64 %indvars.iv126, 3, !dbg !336
  br label %for.body3, !dbg !340

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !323, metadata !DIExpression()), !dbg !331
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !341
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1, !dbg !342
  %2 = load i32, i32* %arrayidx, align 4, !dbg !342, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !343
  store i32 %2, i32* %arrayidx5, align 4, !dbg !344, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !345
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !323, metadata !DIExpression()), !dbg !331
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !346
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !340, !llvm.loop !347

for.end:                                          ; preds = %for.body3
  %3 = and i64 %indvars.iv126, 2147483640, !dbg !349
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !321, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shr, DW_OP_stack_value)), !dbg !331
  %and = and i64 %indvars.iv126, 7, !dbg !350
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !322, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !331
  %4 = load i32, i32* %reversed, align 4, !dbg !349, !tbaa !113
  %idxprom7 = sext i32 %4 to i64, !dbg !349
  %arrayidx8 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom7, !dbg !349
  %5 = load i32, i32* %arrayidx8, align 4, !dbg !349, !tbaa !113
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv126, !dbg !349
  store i32 %5, i32* %arrayidx13, align 4, !dbg !349, !tbaa !113
  %6 = load i32, i32* %arrayidx14, align 4, !dbg !349, !tbaa !113
  %idxprom15 = sext i32 %6 to i64, !dbg !349
  %arrayidx16 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom15, !dbg !349
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !349, !tbaa !113
  %8 = add nuw nsw i64 %indvars.iv126, 66, !dbg !349
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %8, !dbg !349
  store i32 %7, i32* %arrayidx21, align 4, !dbg !349, !tbaa !113
  %9 = load i32, i32* %arrayidx22, align 4, !dbg !349, !tbaa !113
  %idxprom23 = sext i32 %9 to i64, !dbg !349
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom23, !dbg !349
  %10 = load i32, i32* %arrayidx24, align 4, !dbg !349, !tbaa !113
  %11 = add nuw nsw i64 %indvars.iv126, 132, !dbg !349
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %11, !dbg !349
  store i32 %10, i32* %arrayidx29, align 4, !dbg !349, !tbaa !113
  %12 = load i32, i32* %arrayidx30, align 4, !dbg !349, !tbaa !113
  %idxprom31 = sext i32 %12 to i64, !dbg !349
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom31, !dbg !349
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !349, !tbaa !113
  %14 = add nuw nsw i64 %indvars.iv126, 198, !dbg !349
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !349
  store i32 %13, i32* %arrayidx37, align 4, !dbg !349, !tbaa !113
  %15 = load i32, i32* %arrayidx38, align 4, !dbg !349, !tbaa !113
  %idxprom39 = sext i32 %15 to i64, !dbg !349
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom39, !dbg !349
  %16 = load i32, i32* %arrayidx40, align 4, !dbg !349, !tbaa !113
  %add42 = add nuw nsw i64 %3, 264, !dbg !349
  %add43 = or i64 %add42, %and, !dbg !349
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %add43, !dbg !349
  store i32 %16, i32* %arrayidx45, align 4, !dbg !349, !tbaa !113
  %17 = load i32, i32* %arrayidx46, align 4, !dbg !349, !tbaa !113
  %idxprom47 = sext i32 %17 to i64, !dbg !349
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom47, !dbg !349
  %18 = load i32, i32* %arrayidx48, align 4, !dbg !349, !tbaa !113
  %19 = add nuw nsw i64 %indvars.iv126, 330, !dbg !349
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %19, !dbg !349
  store i32 %18, i32* %arrayidx53, align 4, !dbg !349, !tbaa !113
  %20 = load i32, i32* %arrayidx54, align 4, !dbg !349, !tbaa !113
  %idxprom55 = sext i32 %20 to i64, !dbg !349
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom55, !dbg !349
  %21 = load i32, i32* %arrayidx56, align 4, !dbg !349, !tbaa !113
  %22 = add nuw nsw i64 %indvars.iv126, 396, !dbg !349
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %22, !dbg !349
  store i32 %21, i32* %arrayidx61, align 4, !dbg !349, !tbaa !113
  %23 = load i32, i32* %arrayidx62, align 4, !dbg !349, !tbaa !113
  %idxprom63 = sext i32 %23 to i64, !dbg !349
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom63, !dbg !349
  %24 = load i32, i32* %arrayidx64, align 4, !dbg !349, !tbaa !113
  %25 = add nuw nsw i64 %indvars.iv126, 462, !dbg !349
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %25, !dbg !349
  store i32 %24, i32* %arrayidx69, align 4, !dbg !349, !tbaa !113
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1, !dbg !351
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next127, metadata !320, metadata !DIExpression()), !dbg !331
  %exitcond135 = icmp eq i64 %indvars.iv.next127, 64, !dbg !352
  br i1 %exitcond135, label %for.end72, label %for.cond1.preheader, !dbg !335, !llvm.loop !353

for.end72:                                        ; preds = %for.end
  ret void, !dbg !355
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step5(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !356 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !358, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* undef, metadata !359, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* undef, metadata !360, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !361, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* undef, metadata !362, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !363, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* %smem, metadata !364, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32* undef, metadata !365, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata float* undef, metadata !366, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata float* undef, metadata !367, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata float* undef, metadata !368, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata float* undef, metadata !369, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32 64, metadata !375, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.label(metadata !376), !dbg !383
  call void @llvm.dbg.value(metadata i32 0, metadata !370, metadata !DIExpression()), !dbg !382
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 1, !dbg !384
  %arrayidx23 = getelementptr inbounds i32, i32* %data_y, i64 2, !dbg !384
  %arrayidx29 = getelementptr inbounds i32, i32* %data_y, i64 3, !dbg !384
  %arrayidx35 = getelementptr inbounds i32, i32* %data_y, i64 4, !dbg !384
  %arrayidx41 = getelementptr inbounds i32, i32* %data_y, i64 5, !dbg !384
  %arrayidx47 = getelementptr inbounds i32, i32* %data_y, i64 6, !dbg !384
  %arrayidx53 = getelementptr inbounds i32, i32* %data_y, i64 7, !dbg !384
  br label %for.cond1.preheader, !dbg !386

for.cond1.preheader:                              ; preds = %for.inc66, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc66 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !370, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.value(metadata i32 0, metadata !373, metadata !DIExpression()), !dbg !382
  %0 = shl i64 %indvar, 3, !dbg !387
  br label %for.body3, !dbg !391

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !373, metadata !DIExpression()), !dbg !382
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !392
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1, !dbg !393
  %2 = load i32, i32* %arrayidx, align 4, !dbg !393, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !394
  store i32 %2, i32* %arrayidx5, align 4, !dbg !395, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !396
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !373, metadata !DIExpression()), !dbg !382
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !397
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !391, !llvm.loop !398

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvar to i32, !dbg !400
  %4 = lshr i32 %3, 3, !dbg !400
  call void @llvm.dbg.value(metadata i32 %4, metadata !371, metadata !DIExpression()), !dbg !382
  %5 = trunc i64 %indvar to i32, !dbg !401
  %and = and i32 %5, 7, !dbg !401
  call void @llvm.dbg.value(metadata i32 %and, metadata !372, metadata !DIExpression()), !dbg !382
  %mul6 = mul nuw nsw i32 %and, 66, !dbg !402
  %add8 = add nuw nsw i32 %mul6, %4, !dbg !402
  %idxprom9 = zext i32 %add8 to i64, !dbg !402
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9, !dbg !402
  %6 = load i32, i32* %arrayidx10, align 4, !dbg !402, !tbaa !113
  store i32 %6, i32* %data_y, align 4, !dbg !402, !tbaa !113
  %add13 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add14 = add nuw nsw i32 %add13, 8, !dbg !402
  %idxprom15 = zext i32 %add14 to i64, !dbg !402
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15, !dbg !402
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !402, !tbaa !113
  store i32 %7, i32* %arrayidx17, align 4, !dbg !402, !tbaa !113
  %add19 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add20 = add nuw nsw i32 %add19, 16, !dbg !402
  %idxprom21 = zext i32 %add20 to i64, !dbg !402
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21, !dbg !402
  %8 = load i32, i32* %arrayidx22, align 4, !dbg !402, !tbaa !113
  store i32 %8, i32* %arrayidx23, align 4, !dbg !402, !tbaa !113
  %add25 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add26 = add nuw nsw i32 %add25, 24, !dbg !402
  %idxprom27 = zext i32 %add26 to i64, !dbg !402
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27, !dbg !402
  %9 = load i32, i32* %arrayidx28, align 4, !dbg !402, !tbaa !113
  store i32 %9, i32* %arrayidx29, align 4, !dbg !402, !tbaa !113
  %add31 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add32 = add nuw nsw i32 %add31, 32, !dbg !402
  %idxprom33 = zext i32 %add32 to i64, !dbg !402
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33, !dbg !402
  %10 = load i32, i32* %arrayidx34, align 4, !dbg !402, !tbaa !113
  store i32 %10, i32* %arrayidx35, align 4, !dbg !402, !tbaa !113
  %add37 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add38 = add nuw nsw i32 %add37, 40, !dbg !402
  %idxprom39 = zext i32 %add38 to i64, !dbg !402
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39, !dbg !402
  %11 = load i32, i32* %arrayidx40, align 4, !dbg !402, !tbaa !113
  store i32 %11, i32* %arrayidx41, align 4, !dbg !402, !tbaa !113
  %add43 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add44 = add nuw nsw i32 %add43, 48, !dbg !402
  %idxprom45 = zext i32 %add44 to i64, !dbg !402
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45, !dbg !402
  %12 = load i32, i32* %arrayidx46, align 4, !dbg !402, !tbaa !113
  store i32 %12, i32* %arrayidx47, align 4, !dbg !402, !tbaa !113
  %add49 = add nuw nsw i32 %mul6, %4, !dbg !402
  %add50 = add nuw nsw i32 %add49, 56, !dbg !402
  %idxprom51 = zext i32 %add50 to i64, !dbg !402
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51, !dbg !402
  %13 = load i32, i32* %arrayidx52, align 4, !dbg !402, !tbaa !113
  store i32 %13, i32* %arrayidx53, align 4, !dbg !402, !tbaa !113
  call void @llvm.dbg.label(metadata !381), !dbg !403
  call void @llvm.dbg.value(metadata i32 0, metadata !373, metadata !DIExpression()), !dbg !382
  %14 = shl i64 %indvar, 3, !dbg !404
  br label %for.body56, !dbg !408

for.body56:                                       ; preds = %for.body56, %for.end
  %indvars.iv123 = phi i64 [ 0, %for.end ], [ %indvars.iv.next124, %for.body56 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv123, metadata !373, metadata !DIExpression()), !dbg !382
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv123, !dbg !409
  %15 = load i32, i32* %arrayidx58, align 4, !dbg !409, !tbaa !113
  %16 = add nuw nsw i64 %indvars.iv123, %14, !dbg !410
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_y, i64 %16, !dbg !411
  store i32 %15, i32* %arrayidx62, align 4, !dbg !412, !tbaa !113
  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1, !dbg !413
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next124, metadata !373, metadata !DIExpression()), !dbg !382
  %exitcond126 = icmp eq i64 %indvars.iv.next124, 8, !dbg !414
  br i1 %exitcond126, label %for.inc66, label %for.body56, !dbg !408, !llvm.loop !415

for.inc66:                                        ; preds = %for.body56
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !417
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !370, metadata !DIExpression()), !dbg !382
  %exitcond130 = icmp eq i64 %indvar.next, 64, !dbg !418
  br i1 %exitcond130, label %for.end68, label %for.cond1.preheader, !dbg !386, !llvm.loop !419

for.end68:                                        ; preds = %for.inc66
  ret void, !dbg !421
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step6(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture %DATA_x, i32* nocapture %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture readnone %smem, i32* nocapture readnone %reversed, float* nocapture readonly %sin_64, float* nocapture readonly %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !422 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !424, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* undef, metadata !425, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !426, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !427, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !428, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !429, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* undef, metadata !430, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32* undef, metadata !431, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !432, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !433, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata float* undef, metadata !434, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata float* undef, metadata !435, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32 64, metadata !441, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.label(metadata !504), !dbg !509
  call void @llvm.dbg.value(metadata i32 0, metadata !436, metadata !DIExpression()), !dbg !508
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4, !dbg !510
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4, !dbg !510
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1, !dbg !511
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1, !dbg !511
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5, !dbg !511
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5, !dbg !511
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2, !dbg !512
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2, !dbg !512
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6, !dbg !512
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6, !dbg !512
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3, !dbg !513
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3, !dbg !513
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7, !dbg !513
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7, !dbg !513
  br label %for.cond1.preheader, !dbg !514

for.cond1.preheader:                              ; preds = %for.inc332, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc332 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !436, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.value(metadata i32 0, metadata !439, metadata !DIExpression()), !dbg !508
  %0 = shl i64 %indvar, 3, !dbg !515
  br label %for.body3, !dbg !519

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !439, metadata !DIExpression()), !dbg !508
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !520
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1, !dbg !521
  %2 = load i32, i32* %arrayidx, align 4, !dbg !521, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !522
  store i32 %2, i32* %arrayidx5, align 4, !dbg !523, !tbaa !113
  %arrayidx9 = getelementptr inbounds i32, i32* %DATA_y, i64 %1, !dbg !524
  %3 = load i32, i32* %arrayidx9, align 4, !dbg !524, !tbaa !113
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !525
  store i32 %3, i32* %arrayidx11, align 4, !dbg !526, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !527
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !439, metadata !DIExpression()), !dbg !508
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !528
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !519, !llvm.loop !529

for.end:                                          ; preds = %for.body3
  call void @llvm.dbg.value(metadata i32 1, metadata !442, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.value(metadata i32 -1, metadata !449, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.value(metadata i32 0, metadata !447, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.value(metadata i32 -1, metadata !450, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.value(metadata i32 -1, metadata !448, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.value(metadata i32 -1, metadata !451, metadata !DIExpression()), !dbg !531
  %4 = load i32, i32* %data_x, align 4, !dbg !532, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %4, metadata !454, metadata !DIExpression()), !dbg !510
  %5 = load i32, i32* %data_y, align 4, !dbg !532, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %5, metadata !456, metadata !DIExpression()), !dbg !510
  %6 = load i32, i32* %arrayidx14, align 4, !dbg !532, !tbaa !113
  %add15 = add nsw i32 %6, %4, !dbg !532
  store i32 %add15, i32* %data_x, align 4, !dbg !532, !tbaa !113
  %7 = load i32, i32* %arrayidx17, align 4, !dbg !532, !tbaa !113
  %add18 = add nsw i32 %7, %5, !dbg !532
  store i32 %add18, i32* %data_y, align 4, !dbg !532, !tbaa !113
  %8 = load i32, i32* %arrayidx14, align 4, !dbg !532, !tbaa !113
  %sub = sub nsw i32 %4, %8, !dbg !532
  store i32 %sub, i32* %arrayidx14, align 4, !dbg !532, !tbaa !113
  %9 = load i32, i32* %arrayidx17, align 4, !dbg !532, !tbaa !113
  %sub23 = sub nsw i32 %5, %9, !dbg !532
  store i32 %sub23, i32* %arrayidx17, align 4, !dbg !532, !tbaa !113
  %10 = load i32, i32* %arrayidx26, align 4, !dbg !533, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %10, metadata !457, metadata !DIExpression()), !dbg !511
  %11 = load i32, i32* %arrayidx28, align 4, !dbg !533, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %11, metadata !459, metadata !DIExpression()), !dbg !511
  %12 = load i32, i32* %arrayidx29, align 4, !dbg !533, !tbaa !113
  %add30 = add nsw i32 %12, %10, !dbg !533
  store i32 %add30, i32* %arrayidx26, align 4, !dbg !533, !tbaa !113
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !533, !tbaa !113
  %add33 = add nsw i32 %13, %11, !dbg !533
  store i32 %add33, i32* %arrayidx28, align 4, !dbg !533, !tbaa !113
  %14 = load i32, i32* %arrayidx29, align 4, !dbg !533, !tbaa !113
  %sub36 = sub nsw i32 %10, %14, !dbg !533
  store i32 %sub36, i32* %arrayidx29, align 4, !dbg !533, !tbaa !113
  %15 = load i32, i32* %arrayidx32, align 4, !dbg !533, !tbaa !113
  %sub39 = sub nsw i32 %11, %15, !dbg !533
  store i32 %sub39, i32* %arrayidx32, align 4, !dbg !533, !tbaa !113
  %16 = load i32, i32* %arrayidx42, align 4, !dbg !534, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %16, metadata !460, metadata !DIExpression()), !dbg !512
  %17 = load i32, i32* %arrayidx44, align 4, !dbg !534, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %17, metadata !462, metadata !DIExpression()), !dbg !512
  %18 = load i32, i32* %arrayidx45, align 4, !dbg !534, !tbaa !113
  %add46 = add nsw i32 %18, %16, !dbg !534
  store i32 %add46, i32* %arrayidx42, align 4, !dbg !534, !tbaa !113
  %19 = load i32, i32* %arrayidx48, align 4, !dbg !534, !tbaa !113
  %add49 = add nsw i32 %19, %17, !dbg !534
  store i32 %add49, i32* %arrayidx44, align 4, !dbg !534, !tbaa !113
  %20 = load i32, i32* %arrayidx45, align 4, !dbg !534, !tbaa !113
  %sub52 = sub nsw i32 %16, %20, !dbg !534
  store i32 %sub52, i32* %arrayidx45, align 4, !dbg !534, !tbaa !113
  %21 = load i32, i32* %arrayidx48, align 4, !dbg !534, !tbaa !113
  %sub55 = sub nsw i32 %17, %21, !dbg !534
  store i32 %sub55, i32* %arrayidx48, align 4, !dbg !534, !tbaa !113
  %22 = load i32, i32* %arrayidx58, align 4, !dbg !535, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %22, metadata !463, metadata !DIExpression()), !dbg !513
  %23 = load i32, i32* %arrayidx60, align 4, !dbg !535, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %23, metadata !465, metadata !DIExpression()), !dbg !513
  %24 = load i32, i32* %arrayidx61, align 4, !dbg !535, !tbaa !113
  %add62 = add nsw i32 %24, %22, !dbg !535
  store i32 %add62, i32* %arrayidx58, align 4, !dbg !535, !tbaa !113
  %25 = load i32, i32* %arrayidx64, align 4, !dbg !535, !tbaa !113
  %add65 = add nsw i32 %25, %23, !dbg !535
  store i32 %add65, i32* %arrayidx60, align 4, !dbg !535, !tbaa !113
  %26 = load i32, i32* %arrayidx61, align 4, !dbg !535, !tbaa !113
  %sub68 = sub nsw i32 %22, %26, !dbg !535
  store i32 %sub68, i32* %arrayidx61, align 4, !dbg !535, !tbaa !113
  %27 = load i32, i32* %arrayidx64, align 4, !dbg !535, !tbaa !113
  %sub71 = sub nsw i32 %23, %27, !dbg !535
  store i32 %sub71, i32* %arrayidx64, align 4, !dbg !535, !tbaa !113
  %28 = load i32, i32* %arrayidx29, align 4, !dbg !536, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %28, metadata !452, metadata !DIExpression()), !dbg !531
  %29 = load i32, i32* %arrayidx32, align 4, !dbg !536, !tbaa !113
  %sub78 = add nsw i32 %29, %28, !dbg !536
  %conv = sitofp i32 %sub78 to float, !dbg !536
  %mul79 = fmul float %conv, 0x3FE6A09E60000000, !dbg !536
  %conv80 = fptosi float %mul79 to i32, !dbg !536
  store i32 %conv80, i32* %arrayidx29, align 4, !dbg !536, !tbaa !113
  %30 = load i32, i32* %arrayidx32, align 4, !dbg !536, !tbaa !113
  %add85 = sub i32 %30, %28, !dbg !536
  %conv86 = sitofp i32 %add85 to float, !dbg !536
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000, !dbg !536
  %conv88 = fptosi float %mul87 to i32, !dbg !536
  store i32 %conv88, i32* %arrayidx32, align 4, !dbg !536, !tbaa !113
  %31 = load i32, i32* %arrayidx45, align 4, !dbg !536, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %31, metadata !452, metadata !DIExpression()), !dbg !531
  %32 = load i32, i32* %arrayidx48, align 4, !dbg !536, !tbaa !113
  store i32 %32, i32* %arrayidx45, align 4, !dbg !536, !tbaa !113
  %mul97 = sub nsw i32 0, %31, !dbg !536
  store i32 %mul97, i32* %arrayidx48, align 4, !dbg !536, !tbaa !113
  %33 = load i32, i32* %arrayidx61, align 4, !dbg !536, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %33, metadata !452, metadata !DIExpression()), !dbg !531
  %34 = load i32, i32* %arrayidx64, align 4, !dbg !536, !tbaa !113
  %sub107 = sub i32 %34, %33, !dbg !536
  %conv108 = sitofp i32 %sub107 to float, !dbg !536
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000, !dbg !536
  %conv110 = fptosi float %mul109 to i32, !dbg !536
  store i32 %conv110, i32* %arrayidx61, align 4, !dbg !536, !tbaa !113
  %35 = load i32, i32* %arrayidx64, align 4, !dbg !536, !tbaa !113
  %36 = add i32 %33, %35, !dbg !536
  %add115 = sub i32 0, %36, !dbg !536
  %conv116 = sitofp i32 %add115 to float, !dbg !536
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000, !dbg !536
  %conv118 = fptosi float %mul117 to i32, !dbg !536
  store i32 %conv118, i32* %arrayidx64, align 4, !dbg !536, !tbaa !113
  call void @llvm.dbg.value(metadata i32 0, metadata !466, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i32 -1, metadata !468, metadata !DIExpression()), !dbg !537
  %37 = load i32, i32* %data_x, align 4, !dbg !538, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %37, metadata !470, metadata !DIExpression()), !dbg !539
  %38 = load i32, i32* %data_y, align 4, !dbg !538, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %38, metadata !472, metadata !DIExpression()), !dbg !539
  %39 = load i32, i32* %arrayidx42, align 4, !dbg !538, !tbaa !113
  %add125 = add nsw i32 %39, %37, !dbg !538
  store i32 %add125, i32* %data_x, align 4, !dbg !538, !tbaa !113
  %40 = load i32, i32* %arrayidx44, align 4, !dbg !538, !tbaa !113
  %add128 = add nsw i32 %40, %38, !dbg !538
  store i32 %add128, i32* %data_y, align 4, !dbg !538, !tbaa !113
  %41 = load i32, i32* %arrayidx42, align 4, !dbg !538, !tbaa !113
  %sub131 = sub nsw i32 %37, %41, !dbg !538
  store i32 %sub131, i32* %arrayidx42, align 4, !dbg !538, !tbaa !113
  %42 = load i32, i32* %arrayidx44, align 4, !dbg !538, !tbaa !113
  %sub134 = sub nsw i32 %38, %42, !dbg !538
  store i32 %sub134, i32* %arrayidx44, align 4, !dbg !538, !tbaa !113
  %43 = load i32, i32* %arrayidx26, align 4, !dbg !540, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %43, metadata !473, metadata !DIExpression()), !dbg !541
  %44 = load i32, i32* %arrayidx28, align 4, !dbg !540, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %44, metadata !475, metadata !DIExpression()), !dbg !541
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !540, !tbaa !113
  %add141 = add nsw i32 %45, %43, !dbg !540
  store i32 %add141, i32* %arrayidx26, align 4, !dbg !540, !tbaa !113
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !540, !tbaa !113
  %add144 = add nsw i32 %46, %44, !dbg !540
  store i32 %add144, i32* %arrayidx28, align 4, !dbg !540, !tbaa !113
  %47 = load i32, i32* %arrayidx58, align 4, !dbg !540, !tbaa !113
  %sub147 = sub nsw i32 %43, %47, !dbg !540
  store i32 %sub147, i32* %arrayidx58, align 4, !dbg !540, !tbaa !113
  %48 = load i32, i32* %arrayidx60, align 4, !dbg !540, !tbaa !113
  %sub150 = sub nsw i32 %44, %48, !dbg !540
  store i32 %sub150, i32* %arrayidx60, align 4, !dbg !540, !tbaa !113
  %49 = load i32, i32* %arrayidx58, align 4, !dbg !542, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %49, metadata !469, metadata !DIExpression()), !dbg !537
  store i32 %sub150, i32* %arrayidx58, align 4, !dbg !542, !tbaa !113
  %mul159 = sub nsw i32 0, %49, !dbg !542
  store i32 %mul159, i32* %arrayidx60, align 4, !dbg !542, !tbaa !113
  %50 = load i32, i32* %data_x, align 4, !dbg !543, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %50, metadata !476, metadata !DIExpression()), !dbg !544
  %51 = load i32, i32* %data_y, align 4, !dbg !543, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %51, metadata !478, metadata !DIExpression()), !dbg !544
  %52 = load i32, i32* %arrayidx26, align 4, !dbg !543, !tbaa !113
  %add169 = add nsw i32 %52, %50, !dbg !543
  store i32 %add169, i32* %data_x, align 4, !dbg !543, !tbaa !113
  %53 = load i32, i32* %arrayidx28, align 4, !dbg !543, !tbaa !113
  %add172 = add nsw i32 %53, %51, !dbg !543
  store i32 %add172, i32* %data_y, align 4, !dbg !543, !tbaa !113
  %54 = load i32, i32* %arrayidx26, align 4, !dbg !543, !tbaa !113
  %sub175 = sub nsw i32 %50, %54, !dbg !543
  store i32 %sub175, i32* %arrayidx26, align 4, !dbg !543, !tbaa !113
  %55 = load i32, i32* %arrayidx28, align 4, !dbg !543, !tbaa !113
  %sub178 = sub nsw i32 %51, %55, !dbg !543
  store i32 %sub178, i32* %arrayidx28, align 4, !dbg !543, !tbaa !113
  %56 = load i32, i32* %arrayidx42, align 4, !dbg !545, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %56, metadata !479, metadata !DIExpression()), !dbg !546
  %57 = load i32, i32* %arrayidx44, align 4, !dbg !545, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %57, metadata !481, metadata !DIExpression()), !dbg !546
  %58 = load i32, i32* %arrayidx58, align 4, !dbg !545, !tbaa !113
  %add185 = add nsw i32 %58, %56, !dbg !545
  store i32 %add185, i32* %arrayidx42, align 4, !dbg !545, !tbaa !113
  %59 = load i32, i32* %arrayidx60, align 4, !dbg !545, !tbaa !113
  %add188 = add nsw i32 %59, %57, !dbg !545
  store i32 %add188, i32* %arrayidx44, align 4, !dbg !545, !tbaa !113
  %60 = load i32, i32* %arrayidx58, align 4, !dbg !545, !tbaa !113
  %sub191 = sub nsw i32 %56, %60, !dbg !545
  store i32 %sub191, i32* %arrayidx58, align 4, !dbg !545, !tbaa !113
  %61 = load i32, i32* %arrayidx60, align 4, !dbg !545, !tbaa !113
  %sub194 = sub nsw i32 %57, %61, !dbg !545
  store i32 %sub194, i32* %arrayidx60, align 4, !dbg !545, !tbaa !113
  call void @llvm.dbg.value(metadata i32 0, metadata !482, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i32 -1, metadata !484, metadata !DIExpression()), !dbg !547
  %62 = load i32, i32* %arrayidx14, align 4, !dbg !548, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %62, metadata !486, metadata !DIExpression()), !dbg !549
  %63 = load i32, i32* %arrayidx17, align 4, !dbg !548, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %63, metadata !488, metadata !DIExpression()), !dbg !549
  %64 = load i32, i32* %arrayidx45, align 4, !dbg !548, !tbaa !113
  %add204 = add nsw i32 %64, %62, !dbg !548
  store i32 %add204, i32* %arrayidx14, align 4, !dbg !548, !tbaa !113
  %65 = load i32, i32* %arrayidx48, align 4, !dbg !548, !tbaa !113
  %add207 = add nsw i32 %65, %63, !dbg !548
  store i32 %add207, i32* %arrayidx17, align 4, !dbg !548, !tbaa !113
  %66 = load i32, i32* %arrayidx45, align 4, !dbg !548, !tbaa !113
  %sub210 = sub nsw i32 %62, %66, !dbg !548
  store i32 %sub210, i32* %arrayidx45, align 4, !dbg !548, !tbaa !113
  %67 = load i32, i32* %arrayidx48, align 4, !dbg !548, !tbaa !113
  %sub213 = sub nsw i32 %63, %67, !dbg !548
  store i32 %sub213, i32* %arrayidx48, align 4, !dbg !548, !tbaa !113
  %68 = load i32, i32* %arrayidx29, align 4, !dbg !550, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %68, metadata !489, metadata !DIExpression()), !dbg !551
  %69 = load i32, i32* %arrayidx32, align 4, !dbg !550, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %69, metadata !491, metadata !DIExpression()), !dbg !551
  %70 = load i32, i32* %arrayidx61, align 4, !dbg !550, !tbaa !113
  %add220 = add nsw i32 %70, %68, !dbg !550
  store i32 %add220, i32* %arrayidx29, align 4, !dbg !550, !tbaa !113
  %71 = load i32, i32* %arrayidx64, align 4, !dbg !550, !tbaa !113
  %add223 = add nsw i32 %71, %69, !dbg !550
  store i32 %add223, i32* %arrayidx32, align 4, !dbg !550, !tbaa !113
  %72 = load i32, i32* %arrayidx61, align 4, !dbg !550, !tbaa !113
  %sub226 = sub nsw i32 %68, %72, !dbg !550
  store i32 %sub226, i32* %arrayidx61, align 4, !dbg !550, !tbaa !113
  %73 = load i32, i32* %arrayidx64, align 4, !dbg !550, !tbaa !113
  %sub229 = sub nsw i32 %69, %73, !dbg !550
  store i32 %sub229, i32* %arrayidx64, align 4, !dbg !550, !tbaa !113
  %74 = load i32, i32* %arrayidx61, align 4, !dbg !552, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %74, metadata !485, metadata !DIExpression()), !dbg !547
  store i32 %sub229, i32* %arrayidx61, align 4, !dbg !552, !tbaa !113
  %mul238 = sub nsw i32 0, %74, !dbg !552
  store i32 %mul238, i32* %arrayidx64, align 4, !dbg !552, !tbaa !113
  %75 = load i32, i32* %arrayidx14, align 4, !dbg !553, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %75, metadata !492, metadata !DIExpression()), !dbg !554
  %76 = load i32, i32* %arrayidx17, align 4, !dbg !553, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %76, metadata !494, metadata !DIExpression()), !dbg !554
  %77 = load i32, i32* %arrayidx29, align 4, !dbg !553, !tbaa !113
  %add248 = add nsw i32 %77, %75, !dbg !553
  store i32 %add248, i32* %arrayidx14, align 4, !dbg !553, !tbaa !113
  %78 = load i32, i32* %arrayidx32, align 4, !dbg !553, !tbaa !113
  %add251 = add nsw i32 %78, %76, !dbg !553
  store i32 %add251, i32* %arrayidx17, align 4, !dbg !553, !tbaa !113
  %79 = load i32, i32* %arrayidx29, align 4, !dbg !553, !tbaa !113
  %sub254 = sub nsw i32 %75, %79, !dbg !553
  store i32 %sub254, i32* %arrayidx29, align 4, !dbg !553, !tbaa !113
  %80 = load i32, i32* %arrayidx32, align 4, !dbg !553, !tbaa !113
  %sub257 = sub nsw i32 %76, %80, !dbg !553
  store i32 %sub257, i32* %arrayidx32, align 4, !dbg !553, !tbaa !113
  %81 = load i32, i32* %arrayidx45, align 4, !dbg !555, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %81, metadata !495, metadata !DIExpression()), !dbg !556
  %82 = load i32, i32* %arrayidx48, align 4, !dbg !555, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %82, metadata !497, metadata !DIExpression()), !dbg !556
  %83 = load i32, i32* %arrayidx61, align 4, !dbg !555, !tbaa !113
  %add264 = add nsw i32 %83, %81, !dbg !555
  store i32 %add264, i32* %arrayidx45, align 4, !dbg !555, !tbaa !113
  %84 = load i32, i32* %arrayidx64, align 4, !dbg !555, !tbaa !113
  %add267 = add nsw i32 %84, %82, !dbg !555
  store i32 %add267, i32* %arrayidx48, align 4, !dbg !555, !tbaa !113
  %85 = load i32, i32* %arrayidx61, align 4, !dbg !555, !tbaa !113
  %sub270 = sub nsw i32 %81, %85, !dbg !555
  store i32 %sub270, i32* %arrayidx61, align 4, !dbg !555, !tbaa !113
  %86 = load i32, i32* %arrayidx64, align 4, !dbg !555, !tbaa !113
  %sub273 = sub nsw i32 %82, %86, !dbg !555
  store i32 %sub273, i32* %arrayidx64, align 4, !dbg !555, !tbaa !113
  %87 = trunc i64 %indvar to i32, !dbg !557
  %88 = lshr i32 %87, 3, !dbg !557
  call void @llvm.dbg.value(metadata i32 %88, metadata !437, metadata !DIExpression()), !dbg !508
  call void @llvm.dbg.label(metadata !506), !dbg !558
  call void @llvm.dbg.value(metadata i32 1, metadata !440, metadata !DIExpression()), !dbg !508
  %mul280 = mul nuw nsw i32 %88, 7, !dbg !559
  %add281 = add nsw i32 %mul280, -1, !dbg !559
  %89 = sext i32 %add281 to i64, !dbg !560
  br label %for.body278, !dbg !560

for.cond313.preheader:                            ; preds = %for.body278
  call void @llvm.dbg.value(metadata i32 0, metadata !439, metadata !DIExpression()), !dbg !508
  %90 = shl i64 %indvar, 3, !dbg !561
  br label %for.body316, !dbg !565

for.body278:                                      ; preds = %for.body278, %for.end
  %indvars.iv614 = phi i64 [ 1, %for.end ], [ %indvars.iv.next615, %for.body278 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv614, metadata !440, metadata !DIExpression()), !dbg !508
  %91 = add nsw i64 %indvars.iv614, %89, !dbg !566
  %arrayidx284 = getelementptr inbounds float, float* %cos_64, i64 %91, !dbg !567
  %92 = load float, float* %arrayidx284, align 4, !dbg !567, !tbaa !162
  %conv285 = fptosi float %92 to i32, !dbg !567
  call void @llvm.dbg.value(metadata i32 %conv285, metadata !498, metadata !DIExpression()), !dbg !559
  %arrayidx290 = getelementptr inbounds float, float* %sin_64, i64 %91, !dbg !568
  %93 = load float, float* %arrayidx290, align 4, !dbg !568, !tbaa !162
  %conv291 = fptosi float %93 to i32, !dbg !568
  call void @llvm.dbg.value(metadata i32 %conv291, metadata !502, metadata !DIExpression()), !dbg !559
  %arrayidx293 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv614, !dbg !569
  %94 = load i32, i32* %arrayidx293, align 4, !dbg !569, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %94, metadata !503, metadata !DIExpression()), !dbg !559
  %mul296 = mul nsw i32 %94, %conv285, !dbg !570
  %arrayidx298 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv614, !dbg !570
  %95 = load i32, i32* %arrayidx298, align 4, !dbg !570, !tbaa !113
  %mul299 = mul nsw i32 %95, %conv291, !dbg !570
  %sub300 = sub nsw i32 %mul296, %mul299, !dbg !570
  store i32 %sub300, i32* %arrayidx293, align 4, !dbg !571, !tbaa !113
  %mul303 = mul nsw i32 %94, %conv291, !dbg !572
  %96 = load i32, i32* %arrayidx298, align 4, !dbg !572, !tbaa !113
  %mul306 = mul nsw i32 %96, %conv285, !dbg !572
  %add307 = add nsw i32 %mul306, %mul303, !dbg !572
  store i32 %add307, i32* %arrayidx298, align 4, !dbg !573, !tbaa !113
  %indvars.iv.next615 = add nuw nsw i64 %indvars.iv614, 1, !dbg !574
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next615, metadata !440, metadata !DIExpression()), !dbg !508
  %exitcond617 = icmp eq i64 %indvars.iv.next615, 8, !dbg !575
  br i1 %exitcond617, label %for.cond313.preheader, label %for.body278, !dbg !560, !llvm.loop !576

for.body316:                                      ; preds = %for.body316, %for.cond313.preheader
  %indvars.iv618 = phi i64 [ 0, %for.cond313.preheader ], [ %indvars.iv.next619, %for.body316 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv618, metadata !439, metadata !DIExpression()), !dbg !508
  %arrayidx318 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv618, !dbg !578
  %97 = load i32, i32* %arrayidx318, align 4, !dbg !578, !tbaa !113
  %98 = add nuw nsw i64 %indvars.iv618, %90, !dbg !579
  %arrayidx322 = getelementptr inbounds i32, i32* %DATA_x, i64 %98, !dbg !580
  store i32 %97, i32* %arrayidx322, align 4, !dbg !581, !tbaa !113
  %arrayidx324 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv618, !dbg !582
  %99 = load i32, i32* %arrayidx324, align 4, !dbg !582, !tbaa !113
  %arrayidx328 = getelementptr inbounds i32, i32* %DATA_y, i64 %98, !dbg !583
  store i32 %99, i32* %arrayidx328, align 4, !dbg !584, !tbaa !113
  %indvars.iv.next619 = add nuw nsw i64 %indvars.iv618, 1, !dbg !585
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next619, metadata !439, metadata !DIExpression()), !dbg !508
  %exitcond621 = icmp eq i64 %indvars.iv.next619, 8, !dbg !586
  br i1 %exitcond621, label %for.inc332, label %for.body316, !dbg !565, !llvm.loop !587

for.inc332:                                       ; preds = %for.body316
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !589
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !436, metadata !DIExpression()), !dbg !508
  %exitcond626 = icmp eq i64 %indvar.next, 64, !dbg !590
  br i1 %exitcond626, label %for.end334, label %for.cond1.preheader, !dbg !514, !llvm.loop !591

for.end334:                                       ; preds = %for.inc332
  ret void, !dbg !593
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step7(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readonly %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !594 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !596, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* undef, metadata !597, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !598, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* undef, metadata !599, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !600, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* undef, metadata !601, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* %smem, metadata !602, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !603, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata float* undef, metadata !604, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata float* undef, metadata !605, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata float* undef, metadata !606, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata float* undef, metadata !607, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32 64, metadata !613, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.label(metadata !614), !dbg !620
  call void @llvm.dbg.value(metadata i32 0, metadata !608, metadata !DIExpression()), !dbg !619
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1, !dbg !621
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2, !dbg !621
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3, !dbg !621
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4, !dbg !621
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5, !dbg !621
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6, !dbg !621
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7, !dbg !621
  br label %for.cond1.preheader, !dbg !623

for.cond1.preheader:                              ; preds = %for.end, %entry
  %indvars.iv126 = phi i64 [ 0, %entry ], [ %indvars.iv.next127, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !608, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i32 0, metadata !611, metadata !DIExpression()), !dbg !619
  %0 = shl i64 %indvars.iv126, 3, !dbg !624
  br label %for.body3, !dbg !628

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !611, metadata !DIExpression()), !dbg !619
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !629
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1, !dbg !630
  %2 = load i32, i32* %arrayidx, align 4, !dbg !630, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !631
  store i32 %2, i32* %arrayidx5, align 4, !dbg !632, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !633
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !611, metadata !DIExpression()), !dbg !619
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !634
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !628, !llvm.loop !635

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv126 to i32, !dbg !637
  %4 = and i32 %3, 2147483640, !dbg !637
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !609, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shr, DW_OP_stack_value)), !dbg !619
  %5 = trunc i64 %indvars.iv126 to i32, !dbg !638
  %and = and i32 %5, 7, !dbg !638
  call void @llvm.dbg.value(metadata i32 %and, metadata !610, metadata !DIExpression()), !dbg !619
  %6 = load i32, i32* %reversed, align 4, !dbg !637, !tbaa !113
  %idxprom7 = sext i32 %6 to i64, !dbg !637
  %arrayidx8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7, !dbg !637
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !637, !tbaa !113
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv126, !dbg !637
  store i32 %7, i32* %arrayidx13, align 4, !dbg !637, !tbaa !113
  %8 = load i32, i32* %arrayidx14, align 4, !dbg !637, !tbaa !113
  %idxprom15 = sext i32 %8 to i64, !dbg !637
  %arrayidx16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15, !dbg !637
  %9 = load i32, i32* %arrayidx16, align 4, !dbg !637, !tbaa !113
  %add18 = add nuw nsw i32 %4, 72, !dbg !637
  %add19 = or i32 %add18, %and, !dbg !637
  %idxprom20 = zext i32 %add19 to i64, !dbg !637
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20, !dbg !637
  store i32 %9, i32* %arrayidx21, align 4, !dbg !637, !tbaa !113
  %10 = load i32, i32* %arrayidx22, align 4, !dbg !637, !tbaa !113
  %idxprom23 = sext i32 %10 to i64, !dbg !637
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23, !dbg !637
  %11 = load i32, i32* %arrayidx24, align 4, !dbg !637, !tbaa !113
  %add26 = add nuw nsw i32 %4, 144, !dbg !637
  %add27 = or i32 %add26, %and, !dbg !637
  %idxprom28 = zext i32 %add27 to i64, !dbg !637
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28, !dbg !637
  store i32 %11, i32* %arrayidx29, align 4, !dbg !637, !tbaa !113
  %12 = load i32, i32* %arrayidx30, align 4, !dbg !637, !tbaa !113
  %idxprom31 = sext i32 %12 to i64, !dbg !637
  %arrayidx32 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31, !dbg !637
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !637, !tbaa !113
  %add34 = add nuw nsw i32 %4, 216, !dbg !637
  %add35 = or i32 %add34, %and, !dbg !637
  %idxprom36 = zext i32 %add35 to i64, !dbg !637
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36, !dbg !637
  store i32 %13, i32* %arrayidx37, align 4, !dbg !637, !tbaa !113
  %14 = load i32, i32* %arrayidx38, align 4, !dbg !637, !tbaa !113
  %idxprom39 = sext i32 %14 to i64, !dbg !637
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39, !dbg !637
  %15 = load i32, i32* %arrayidx40, align 4, !dbg !637, !tbaa !113
  %add42 = add nuw nsw i32 %4, 288, !dbg !637
  %add43 = or i32 %add42, %and, !dbg !637
  %idxprom44 = zext i32 %add43 to i64, !dbg !637
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44, !dbg !637
  store i32 %15, i32* %arrayidx45, align 4, !dbg !637, !tbaa !113
  %16 = load i32, i32* %arrayidx46, align 4, !dbg !637, !tbaa !113
  %idxprom47 = sext i32 %16 to i64, !dbg !637
  %arrayidx48 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47, !dbg !637
  %17 = load i32, i32* %arrayidx48, align 4, !dbg !637, !tbaa !113
  %add50 = add nuw nsw i32 %4, 360, !dbg !637
  %add51 = or i32 %add50, %and, !dbg !637
  %idxprom52 = zext i32 %add51 to i64, !dbg !637
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52, !dbg !637
  store i32 %17, i32* %arrayidx53, align 4, !dbg !637, !tbaa !113
  %18 = load i32, i32* %arrayidx54, align 4, !dbg !637, !tbaa !113
  %idxprom55 = sext i32 %18 to i64, !dbg !637
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55, !dbg !637
  %19 = load i32, i32* %arrayidx56, align 4, !dbg !637, !tbaa !113
  %add58 = add nuw nsw i32 %4, 432, !dbg !637
  %add59 = or i32 %add58, %and, !dbg !637
  %idxprom60 = zext i32 %add59 to i64, !dbg !637
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60, !dbg !637
  store i32 %19, i32* %arrayidx61, align 4, !dbg !637, !tbaa !113
  %20 = load i32, i32* %arrayidx62, align 4, !dbg !637, !tbaa !113
  %idxprom63 = sext i32 %20 to i64, !dbg !637
  %arrayidx64 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63, !dbg !637
  %21 = load i32, i32* %arrayidx64, align 4, !dbg !637, !tbaa !113
  %add66 = add nuw nsw i32 %4, 504, !dbg !637
  %add67 = or i32 %add66, %and, !dbg !637
  %idxprom68 = zext i32 %add67 to i64, !dbg !637
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68, !dbg !637
  store i32 %21, i32* %arrayidx69, align 4, !dbg !637, !tbaa !113
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1, !dbg !639
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next127, metadata !608, metadata !DIExpression()), !dbg !619
  %exitcond129 = icmp eq i64 %indvars.iv.next127, 64, !dbg !640
  br i1 %exitcond129, label %for.end72, label %for.cond1.preheader, !dbg !623, !llvm.loop !641

for.end72:                                        ; preds = %for.end
  ret void, !dbg !643
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step8(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !644 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !646, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* undef, metadata !647, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !648, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* undef, metadata !649, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !650, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* undef, metadata !651, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* %smem, metadata !652, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32* undef, metadata !653, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata float* undef, metadata !654, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata float* undef, metadata !655, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata float* undef, metadata !656, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata float* undef, metadata !657, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32 64, metadata !663, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.label(metadata !664), !dbg !671
  call void @llvm.dbg.value(metadata i32 0, metadata !658, metadata !DIExpression()), !dbg !670
  %arrayidx17 = getelementptr inbounds i32, i32* %data_x, i64 1, !dbg !672
  %arrayidx23 = getelementptr inbounds i32, i32* %data_x, i64 2, !dbg !672
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 3, !dbg !672
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 4, !dbg !672
  %arrayidx41 = getelementptr inbounds i32, i32* %data_x, i64 5, !dbg !672
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 6, !dbg !672
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 7, !dbg !672
  br label %for.cond1.preheader, !dbg !674

for.cond1.preheader:                              ; preds = %for.inc66, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc66 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !658, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.value(metadata i32 0, metadata !661, metadata !DIExpression()), !dbg !670
  %0 = shl i64 %indvar, 3, !dbg !675
  br label %for.body3, !dbg !679

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !661, metadata !DIExpression()), !dbg !670
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !680
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1, !dbg !681
  %2 = load i32, i32* %arrayidx, align 4, !dbg !681, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !682
  store i32 %2, i32* %arrayidx5, align 4, !dbg !683, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !684
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !661, metadata !DIExpression()), !dbg !670
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !685
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !679, !llvm.loop !686

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvar to i32, !dbg !688
  %4 = lshr i32 %3, 3, !dbg !688
  call void @llvm.dbg.value(metadata i32 %4, metadata !659, metadata !DIExpression()), !dbg !670
  %5 = trunc i64 %indvar to i32, !dbg !689
  %and = and i32 %5, 7, !dbg !689
  call void @llvm.dbg.value(metadata i32 %and, metadata !660, metadata !DIExpression()), !dbg !670
  %mul6 = mul nsw i32 %4, 72, !dbg !690
  %add8 = or i32 %mul6, %and, !dbg !690
  %idxprom9 = zext i32 %add8 to i64, !dbg !690
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9, !dbg !690
  %6 = load i32, i32* %arrayidx10, align 4, !dbg !690, !tbaa !113
  store i32 %6, i32* %data_x, align 4, !dbg !690, !tbaa !113
  %add13 = add nuw nsw i32 %mul6, 8, !dbg !690
  %add14 = or i32 %add13, %and, !dbg !690
  %idxprom15 = zext i32 %add14 to i64, !dbg !690
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15, !dbg !690
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !690, !tbaa !113
  store i32 %7, i32* %arrayidx17, align 4, !dbg !690, !tbaa !113
  %add19 = add nuw nsw i32 %mul6, 16, !dbg !690
  %add20 = or i32 %add19, %and, !dbg !690
  %idxprom21 = zext i32 %add20 to i64, !dbg !690
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21, !dbg !690
  %8 = load i32, i32* %arrayidx22, align 4, !dbg !690, !tbaa !113
  store i32 %8, i32* %arrayidx23, align 4, !dbg !690, !tbaa !113
  %add25 = add nuw nsw i32 %mul6, 24, !dbg !690
  %add26 = or i32 %add25, %and, !dbg !690
  %idxprom27 = zext i32 %add26 to i64, !dbg !690
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27, !dbg !690
  %9 = load i32, i32* %arrayidx28, align 4, !dbg !690, !tbaa !113
  store i32 %9, i32* %arrayidx29, align 4, !dbg !690, !tbaa !113
  %add31 = add nuw nsw i32 %mul6, 32, !dbg !690
  %add32 = or i32 %add31, %and, !dbg !690
  %idxprom33 = zext i32 %add32 to i64, !dbg !690
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33, !dbg !690
  %10 = load i32, i32* %arrayidx34, align 4, !dbg !690, !tbaa !113
  store i32 %10, i32* %arrayidx35, align 4, !dbg !690, !tbaa !113
  %add37 = add nuw nsw i32 %mul6, 40, !dbg !690
  %add38 = or i32 %add37, %and, !dbg !690
  %idxprom39 = zext i32 %add38 to i64, !dbg !690
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39, !dbg !690
  %11 = load i32, i32* %arrayidx40, align 4, !dbg !690, !tbaa !113
  store i32 %11, i32* %arrayidx41, align 4, !dbg !690, !tbaa !113
  %add43 = add nuw nsw i32 %mul6, 48, !dbg !690
  %add44 = or i32 %add43, %and, !dbg !690
  %idxprom45 = zext i32 %add44 to i64, !dbg !690
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45, !dbg !690
  %12 = load i32, i32* %arrayidx46, align 4, !dbg !690, !tbaa !113
  store i32 %12, i32* %arrayidx47, align 4, !dbg !690, !tbaa !113
  %add49 = add nuw nsw i32 %mul6, 56, !dbg !690
  %add50 = or i32 %add49, %and, !dbg !690
  %idxprom51 = zext i32 %add50 to i64, !dbg !690
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51, !dbg !690
  %13 = load i32, i32* %arrayidx52, align 4, !dbg !690, !tbaa !113
  store i32 %13, i32* %arrayidx53, align 4, !dbg !690, !tbaa !113
  call void @llvm.dbg.label(metadata !669), !dbg !691
  call void @llvm.dbg.value(metadata i32 0, metadata !661, metadata !DIExpression()), !dbg !670
  %14 = shl i64 %indvar, 3, !dbg !692
  br label %for.body56, !dbg !696

for.body56:                                       ; preds = %for.body56, %for.end
  %indvars.iv123 = phi i64 [ 0, %for.end ], [ %indvars.iv.next124, %for.body56 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv123, metadata !661, metadata !DIExpression()), !dbg !670
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv123, !dbg !697
  %15 = load i32, i32* %arrayidx58, align 4, !dbg !697, !tbaa !113
  %16 = add nuw nsw i64 %indvars.iv123, %14, !dbg !698
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_x, i64 %16, !dbg !699
  store i32 %15, i32* %arrayidx62, align 4, !dbg !700, !tbaa !113
  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1, !dbg !701
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next124, metadata !661, metadata !DIExpression()), !dbg !670
  %exitcond126 = icmp eq i64 %indvars.iv.next124, 8, !dbg !702
  br i1 %exitcond126, label %for.inc66, label %for.body56, !dbg !696, !llvm.loop !703

for.inc66:                                        ; preds = %for.body56
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !705
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !658, metadata !DIExpression()), !dbg !670
  %exitcond130 = icmp eq i64 %indvar.next, 64, !dbg !706
  br i1 %exitcond130, label %for.end68, label %for.cond1.preheader, !dbg !674, !llvm.loop !707

for.end68:                                        ; preds = %for.inc66
  ret void, !dbg !709
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step9(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture readonly %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !710 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !712, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* undef, metadata !713, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* undef, metadata !714, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !715, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* undef, metadata !716, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !717, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* %smem, metadata !718, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !719, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata float* undef, metadata !720, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata float* undef, metadata !721, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata float* undef, metadata !722, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata float* undef, metadata !723, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32 64, metadata !729, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.label(metadata !730), !dbg !736
  call void @llvm.dbg.value(metadata i32 0, metadata !724, metadata !DIExpression()), !dbg !735
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1, !dbg !737
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2, !dbg !737
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3, !dbg !737
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4, !dbg !737
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5, !dbg !737
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6, !dbg !737
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7, !dbg !737
  br label %for.cond1.preheader, !dbg !739

for.cond1.preheader:                              ; preds = %for.end, %entry
  %indvars.iv126 = phi i64 [ 0, %entry ], [ %indvars.iv.next127, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !724, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.value(metadata i32 0, metadata !727, metadata !DIExpression()), !dbg !735
  %0 = shl i64 %indvars.iv126, 3, !dbg !740
  br label %for.body3, !dbg !744

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !727, metadata !DIExpression()), !dbg !735
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !745
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1, !dbg !746
  %2 = load i32, i32* %arrayidx, align 4, !dbg !746, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !747
  store i32 %2, i32* %arrayidx5, align 4, !dbg !748, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !749
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !727, metadata !DIExpression()), !dbg !735
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !750
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !744, !llvm.loop !751

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv126 to i32, !dbg !753
  %4 = and i32 %3, 2147483640, !dbg !753
  call void @llvm.dbg.value(metadata i64 %indvars.iv126, metadata !725, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shr, DW_OP_stack_value)), !dbg !735
  %5 = trunc i64 %indvars.iv126 to i32, !dbg !754
  %and = and i32 %5, 7, !dbg !754
  call void @llvm.dbg.value(metadata i32 %and, metadata !726, metadata !DIExpression()), !dbg !735
  %6 = load i32, i32* %reversed, align 4, !dbg !753, !tbaa !113
  %idxprom7 = sext i32 %6 to i64, !dbg !753
  %arrayidx8 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom7, !dbg !753
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !753, !tbaa !113
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv126, !dbg !753
  store i32 %7, i32* %arrayidx13, align 4, !dbg !753, !tbaa !113
  %8 = load i32, i32* %arrayidx14, align 4, !dbg !753, !tbaa !113
  %idxprom15 = sext i32 %8 to i64, !dbg !753
  %arrayidx16 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom15, !dbg !753
  %9 = load i32, i32* %arrayidx16, align 4, !dbg !753, !tbaa !113
  %add18 = add nuw nsw i32 %4, 72, !dbg !753
  %add19 = or i32 %add18, %and, !dbg !753
  %idxprom20 = zext i32 %add19 to i64, !dbg !753
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20, !dbg !753
  store i32 %9, i32* %arrayidx21, align 4, !dbg !753, !tbaa !113
  %10 = load i32, i32* %arrayidx22, align 4, !dbg !753, !tbaa !113
  %idxprom23 = sext i32 %10 to i64, !dbg !753
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom23, !dbg !753
  %11 = load i32, i32* %arrayidx24, align 4, !dbg !753, !tbaa !113
  %add26 = add nuw nsw i32 %4, 144, !dbg !753
  %add27 = or i32 %add26, %and, !dbg !753
  %idxprom28 = zext i32 %add27 to i64, !dbg !753
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28, !dbg !753
  store i32 %11, i32* %arrayidx29, align 4, !dbg !753, !tbaa !113
  %12 = load i32, i32* %arrayidx30, align 4, !dbg !753, !tbaa !113
  %idxprom31 = sext i32 %12 to i64, !dbg !753
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom31, !dbg !753
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !753, !tbaa !113
  %add34 = add nuw nsw i32 %4, 216, !dbg !753
  %add35 = or i32 %add34, %and, !dbg !753
  %idxprom36 = zext i32 %add35 to i64, !dbg !753
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36, !dbg !753
  store i32 %13, i32* %arrayidx37, align 4, !dbg !753, !tbaa !113
  %14 = load i32, i32* %arrayidx38, align 4, !dbg !753, !tbaa !113
  %idxprom39 = sext i32 %14 to i64, !dbg !753
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom39, !dbg !753
  %15 = load i32, i32* %arrayidx40, align 4, !dbg !753, !tbaa !113
  %add42 = add nuw nsw i32 %4, 288, !dbg !753
  %add43 = or i32 %add42, %and, !dbg !753
  %idxprom44 = zext i32 %add43 to i64, !dbg !753
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44, !dbg !753
  store i32 %15, i32* %arrayidx45, align 4, !dbg !753, !tbaa !113
  %16 = load i32, i32* %arrayidx46, align 4, !dbg !753, !tbaa !113
  %idxprom47 = sext i32 %16 to i64, !dbg !753
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom47, !dbg !753
  %17 = load i32, i32* %arrayidx48, align 4, !dbg !753, !tbaa !113
  %add50 = add nuw nsw i32 %4, 360, !dbg !753
  %add51 = or i32 %add50, %and, !dbg !753
  %idxprom52 = zext i32 %add51 to i64, !dbg !753
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52, !dbg !753
  store i32 %17, i32* %arrayidx53, align 4, !dbg !753, !tbaa !113
  %18 = load i32, i32* %arrayidx54, align 4, !dbg !753, !tbaa !113
  %idxprom55 = sext i32 %18 to i64, !dbg !753
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom55, !dbg !753
  %19 = load i32, i32* %arrayidx56, align 4, !dbg !753, !tbaa !113
  %add58 = add nuw nsw i32 %4, 432, !dbg !753
  %add59 = or i32 %add58, %and, !dbg !753
  %idxprom60 = zext i32 %add59 to i64, !dbg !753
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60, !dbg !753
  store i32 %19, i32* %arrayidx61, align 4, !dbg !753, !tbaa !113
  %20 = load i32, i32* %arrayidx62, align 4, !dbg !753, !tbaa !113
  %idxprom63 = sext i32 %20 to i64, !dbg !753
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom63, !dbg !753
  %21 = load i32, i32* %arrayidx64, align 4, !dbg !753, !tbaa !113
  %add66 = add nuw nsw i32 %4, 504, !dbg !753
  %add67 = or i32 %add66, %and, !dbg !753
  %idxprom68 = zext i32 %add67 to i64, !dbg !753
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68, !dbg !753
  store i32 %21, i32* %arrayidx69, align 4, !dbg !753, !tbaa !113
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1, !dbg !755
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next127, metadata !724, metadata !DIExpression()), !dbg !735
  %exitcond129 = icmp eq i64 %indvars.iv.next127, 64, !dbg !756
  br i1 %exitcond129, label %for.end72, label %for.cond1.preheader, !dbg !739, !llvm.loop !757

for.end72:                                        ; preds = %for.end
  ret void, !dbg !759
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step10(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !760 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !762, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* undef, metadata !763, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* undef, metadata !764, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !765, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* undef, metadata !766, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !767, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* %smem, metadata !768, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32* undef, metadata !769, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata float* undef, metadata !770, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata float* undef, metadata !771, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata float* undef, metadata !772, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata float* undef, metadata !773, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32 64, metadata !779, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.label(metadata !780), !dbg !787
  call void @llvm.dbg.value(metadata i32 0, metadata !774, metadata !DIExpression()), !dbg !786
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 1, !dbg !788
  %arrayidx23 = getelementptr inbounds i32, i32* %data_y, i64 2, !dbg !788
  %arrayidx29 = getelementptr inbounds i32, i32* %data_y, i64 3, !dbg !788
  %arrayidx35 = getelementptr inbounds i32, i32* %data_y, i64 4, !dbg !788
  %arrayidx41 = getelementptr inbounds i32, i32* %data_y, i64 5, !dbg !788
  %arrayidx47 = getelementptr inbounds i32, i32* %data_y, i64 6, !dbg !788
  %arrayidx53 = getelementptr inbounds i32, i32* %data_y, i64 7, !dbg !788
  br label %for.cond1.preheader, !dbg !790

for.cond1.preheader:                              ; preds = %for.inc66, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc66 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !774, metadata !DIExpression()), !dbg !786
  call void @llvm.dbg.value(metadata i32 0, metadata !777, metadata !DIExpression()), !dbg !786
  %0 = shl i64 %indvar, 3, !dbg !791
  br label %for.body3, !dbg !795

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !777, metadata !DIExpression()), !dbg !786
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !796
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1, !dbg !797
  %2 = load i32, i32* %arrayidx, align 4, !dbg !797, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !798
  store i32 %2, i32* %arrayidx5, align 4, !dbg !799, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !800
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !777, metadata !DIExpression()), !dbg !786
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !801
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !795, !llvm.loop !802

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvar to i32, !dbg !804
  %4 = lshr i32 %3, 3, !dbg !804
  call void @llvm.dbg.value(metadata i32 %4, metadata !775, metadata !DIExpression()), !dbg !786
  %5 = trunc i64 %indvar to i32, !dbg !805
  %and = and i32 %5, 7, !dbg !805
  call void @llvm.dbg.value(metadata i32 %and, metadata !776, metadata !DIExpression()), !dbg !786
  %mul6 = mul nsw i32 %4, 72, !dbg !806
  %add8 = or i32 %mul6, %and, !dbg !806
  %idxprom9 = zext i32 %add8 to i64, !dbg !806
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9, !dbg !806
  %6 = load i32, i32* %arrayidx10, align 4, !dbg !806, !tbaa !113
  store i32 %6, i32* %data_y, align 4, !dbg !806, !tbaa !113
  %add13 = add nuw nsw i32 %mul6, 8, !dbg !806
  %add14 = or i32 %add13, %and, !dbg !806
  %idxprom15 = zext i32 %add14 to i64, !dbg !806
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15, !dbg !806
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !806, !tbaa !113
  store i32 %7, i32* %arrayidx17, align 4, !dbg !806, !tbaa !113
  %add19 = add nuw nsw i32 %mul6, 16, !dbg !806
  %add20 = or i32 %add19, %and, !dbg !806
  %idxprom21 = zext i32 %add20 to i64, !dbg !806
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21, !dbg !806
  %8 = load i32, i32* %arrayidx22, align 4, !dbg !806, !tbaa !113
  store i32 %8, i32* %arrayidx23, align 4, !dbg !806, !tbaa !113
  %add25 = add nuw nsw i32 %mul6, 24, !dbg !806
  %add26 = or i32 %add25, %and, !dbg !806
  %idxprom27 = zext i32 %add26 to i64, !dbg !806
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27, !dbg !806
  %9 = load i32, i32* %arrayidx28, align 4, !dbg !806, !tbaa !113
  store i32 %9, i32* %arrayidx29, align 4, !dbg !806, !tbaa !113
  %add31 = add nuw nsw i32 %mul6, 32, !dbg !806
  %add32 = or i32 %add31, %and, !dbg !806
  %idxprom33 = zext i32 %add32 to i64, !dbg !806
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33, !dbg !806
  %10 = load i32, i32* %arrayidx34, align 4, !dbg !806, !tbaa !113
  store i32 %10, i32* %arrayidx35, align 4, !dbg !806, !tbaa !113
  %add37 = add nuw nsw i32 %mul6, 40, !dbg !806
  %add38 = or i32 %add37, %and, !dbg !806
  %idxprom39 = zext i32 %add38 to i64, !dbg !806
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39, !dbg !806
  %11 = load i32, i32* %arrayidx40, align 4, !dbg !806, !tbaa !113
  store i32 %11, i32* %arrayidx41, align 4, !dbg !806, !tbaa !113
  %add43 = add nuw nsw i32 %mul6, 48, !dbg !806
  %add44 = or i32 %add43, %and, !dbg !806
  %idxprom45 = zext i32 %add44 to i64, !dbg !806
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45, !dbg !806
  %12 = load i32, i32* %arrayidx46, align 4, !dbg !806, !tbaa !113
  store i32 %12, i32* %arrayidx47, align 4, !dbg !806, !tbaa !113
  %add49 = add nuw nsw i32 %mul6, 56, !dbg !806
  %add50 = or i32 %add49, %and, !dbg !806
  %idxprom51 = zext i32 %add50 to i64, !dbg !806
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51, !dbg !806
  %13 = load i32, i32* %arrayidx52, align 4, !dbg !806, !tbaa !113
  store i32 %13, i32* %arrayidx53, align 4, !dbg !806, !tbaa !113
  call void @llvm.dbg.label(metadata !785), !dbg !807
  call void @llvm.dbg.value(metadata i32 0, metadata !777, metadata !DIExpression()), !dbg !786
  %14 = shl i64 %indvar, 3, !dbg !808
  br label %for.body56, !dbg !812

for.body56:                                       ; preds = %for.body56, %for.end
  %indvars.iv123 = phi i64 [ 0, %for.end ], [ %indvars.iv.next124, %for.body56 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv123, metadata !777, metadata !DIExpression()), !dbg !786
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv123, !dbg !813
  %15 = load i32, i32* %arrayidx58, align 4, !dbg !813, !tbaa !113
  %16 = add nuw nsw i64 %indvars.iv123, %14, !dbg !814
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_y, i64 %16, !dbg !815
  store i32 %15, i32* %arrayidx62, align 4, !dbg !816, !tbaa !113
  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1, !dbg !817
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next124, metadata !777, metadata !DIExpression()), !dbg !786
  %exitcond126 = icmp eq i64 %indvars.iv.next124, 8, !dbg !818
  br i1 %exitcond126, label %for.inc66, label %for.body56, !dbg !812, !llvm.loop !819

for.inc66:                                        ; preds = %for.body56
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !821
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !774, metadata !DIExpression()), !dbg !786
  %exitcond130 = icmp eq i64 %indvar.next, 64, !dbg !822
  br i1 %exitcond130, label %for.end68, label %for.cond1.preheader, !dbg !790, !llvm.loop !823

for.end68:                                        ; preds = %for.inc66
  ret void, !dbg !825
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @step11(i32* nocapture %work_x, i32* nocapture %work_y, i32* nocapture readonly %DATA_x, i32* nocapture readonly %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture readnone %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !826 {
entry:
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !828, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !829, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !830, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !831, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !832, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !833, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* undef, metadata !834, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !835, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata float* undef, metadata !836, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata float* undef, metadata !837, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata float* undef, metadata !838, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata float* undef, metadata !839, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32 64, metadata !845, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.label(metadata !902), !dbg !906
  call void @llvm.dbg.value(metadata i32 0, metadata !840, metadata !DIExpression()), !dbg !905
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4, !dbg !907
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4, !dbg !907
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1, !dbg !908
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1, !dbg !908
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5, !dbg !908
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5, !dbg !908
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2, !dbg !909
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2, !dbg !909
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6, !dbg !909
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6, !dbg !909
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3, !dbg !910
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3, !dbg !910
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7, !dbg !910
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7, !dbg !910
  br label %for.cond1.preheader, !dbg !911

for.cond1.preheader:                              ; preds = %for.inc298, %entry
  %indvars.iv562 = phi i64 [ 0, %entry ], [ %indvars.iv.next563, %for.inc298 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv562, metadata !840, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.value(metadata i32 0, metadata !843, metadata !DIExpression()), !dbg !905
  %0 = shl i64 %indvars.iv562, 3, !dbg !912
  br label %for.body3, !dbg !916

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !843, metadata !DIExpression()), !dbg !905
  %1 = add nuw nsw i64 %indvars.iv, %0, !dbg !917
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1, !dbg !918
  %2 = load i32, i32* %arrayidx, align 4, !dbg !918, !tbaa !113
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !919
  store i32 %2, i32* %arrayidx5, align 4, !dbg !920, !tbaa !113
  %arrayidx9 = getelementptr inbounds i32, i32* %DATA_y, i64 %1, !dbg !921
  %3 = load i32, i32* %arrayidx9, align 4, !dbg !921, !tbaa !113
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !922
  store i32 %3, i32* %arrayidx11, align 4, !dbg !923, !tbaa !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !924
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !843, metadata !DIExpression()), !dbg !905
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !925
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !916, !llvm.loop !926

for.end:                                          ; preds = %for.body3
  call void @llvm.dbg.value(metadata i32 1, metadata !846, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.value(metadata i32 -1, metadata !853, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.value(metadata i32 0, metadata !851, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.value(metadata i32 -1, metadata !854, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.value(metadata i32 -1, metadata !852, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.value(metadata i32 -1, metadata !855, metadata !DIExpression()), !dbg !928
  %4 = load i32, i32* %data_x, align 4, !dbg !929, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %4, metadata !858, metadata !DIExpression()), !dbg !907
  %5 = load i32, i32* %data_y, align 4, !dbg !929, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %5, metadata !860, metadata !DIExpression()), !dbg !907
  %6 = load i32, i32* %arrayidx14, align 4, !dbg !929, !tbaa !113
  %add15 = add nsw i32 %6, %4, !dbg !929
  store i32 %add15, i32* %data_x, align 4, !dbg !929, !tbaa !113
  %7 = load i32, i32* %arrayidx17, align 4, !dbg !929, !tbaa !113
  %add18 = add nsw i32 %7, %5, !dbg !929
  store i32 %add18, i32* %data_y, align 4, !dbg !929, !tbaa !113
  %8 = load i32, i32* %arrayidx14, align 4, !dbg !929, !tbaa !113
  %sub = sub nsw i32 %4, %8, !dbg !929
  store i32 %sub, i32* %arrayidx14, align 4, !dbg !929, !tbaa !113
  %9 = load i32, i32* %arrayidx17, align 4, !dbg !929, !tbaa !113
  %sub23 = sub nsw i32 %5, %9, !dbg !929
  store i32 %sub23, i32* %arrayidx17, align 4, !dbg !929, !tbaa !113
  %10 = load i32, i32* %arrayidx26, align 4, !dbg !930, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %10, metadata !861, metadata !DIExpression()), !dbg !908
  %11 = load i32, i32* %arrayidx28, align 4, !dbg !930, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %11, metadata !863, metadata !DIExpression()), !dbg !908
  %12 = load i32, i32* %arrayidx29, align 4, !dbg !930, !tbaa !113
  %add30 = add nsw i32 %12, %10, !dbg !930
  store i32 %add30, i32* %arrayidx26, align 4, !dbg !930, !tbaa !113
  %13 = load i32, i32* %arrayidx32, align 4, !dbg !930, !tbaa !113
  %add33 = add nsw i32 %13, %11, !dbg !930
  store i32 %add33, i32* %arrayidx28, align 4, !dbg !930, !tbaa !113
  %14 = load i32, i32* %arrayidx29, align 4, !dbg !930, !tbaa !113
  %sub36 = sub nsw i32 %10, %14, !dbg !930
  store i32 %sub36, i32* %arrayidx29, align 4, !dbg !930, !tbaa !113
  %15 = load i32, i32* %arrayidx32, align 4, !dbg !930, !tbaa !113
  %sub39 = sub nsw i32 %11, %15, !dbg !930
  store i32 %sub39, i32* %arrayidx32, align 4, !dbg !930, !tbaa !113
  %16 = load i32, i32* %arrayidx42, align 4, !dbg !931, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %16, metadata !864, metadata !DIExpression()), !dbg !909
  %17 = load i32, i32* %arrayidx44, align 4, !dbg !931, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %17, metadata !866, metadata !DIExpression()), !dbg !909
  %18 = load i32, i32* %arrayidx45, align 4, !dbg !931, !tbaa !113
  %add46 = add nsw i32 %18, %16, !dbg !931
  store i32 %add46, i32* %arrayidx42, align 4, !dbg !931, !tbaa !113
  %19 = load i32, i32* %arrayidx48, align 4, !dbg !931, !tbaa !113
  %add49 = add nsw i32 %19, %17, !dbg !931
  store i32 %add49, i32* %arrayidx44, align 4, !dbg !931, !tbaa !113
  %20 = load i32, i32* %arrayidx45, align 4, !dbg !931, !tbaa !113
  %sub52 = sub nsw i32 %16, %20, !dbg !931
  store i32 %sub52, i32* %arrayidx45, align 4, !dbg !931, !tbaa !113
  %21 = load i32, i32* %arrayidx48, align 4, !dbg !931, !tbaa !113
  %sub55 = sub nsw i32 %17, %21, !dbg !931
  store i32 %sub55, i32* %arrayidx48, align 4, !dbg !931, !tbaa !113
  %22 = load i32, i32* %arrayidx58, align 4, !dbg !932, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %22, metadata !867, metadata !DIExpression()), !dbg !910
  %23 = load i32, i32* %arrayidx60, align 4, !dbg !932, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %23, metadata !869, metadata !DIExpression()), !dbg !910
  %24 = load i32, i32* %arrayidx61, align 4, !dbg !932, !tbaa !113
  %add62 = add nsw i32 %24, %22, !dbg !932
  store i32 %add62, i32* %arrayidx58, align 4, !dbg !932, !tbaa !113
  %25 = load i32, i32* %arrayidx64, align 4, !dbg !932, !tbaa !113
  %add65 = add nsw i32 %25, %23, !dbg !932
  store i32 %add65, i32* %arrayidx60, align 4, !dbg !932, !tbaa !113
  %26 = load i32, i32* %arrayidx61, align 4, !dbg !932, !tbaa !113
  %sub68 = sub nsw i32 %22, %26, !dbg !932
  store i32 %sub68, i32* %arrayidx61, align 4, !dbg !932, !tbaa !113
  %27 = load i32, i32* %arrayidx64, align 4, !dbg !932, !tbaa !113
  %sub71 = sub nsw i32 %23, %27, !dbg !932
  store i32 %sub71, i32* %arrayidx64, align 4, !dbg !932, !tbaa !113
  %28 = load i32, i32* %arrayidx29, align 4, !dbg !933, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %28, metadata !856, metadata !DIExpression()), !dbg !928
  %29 = load i32, i32* %arrayidx32, align 4, !dbg !933, !tbaa !113
  %sub78 = add nsw i32 %29, %28, !dbg !933
  %conv = sitofp i32 %sub78 to float, !dbg !933
  %mul79 = fmul float %conv, 0x3FE6A09E60000000, !dbg !933
  %conv80 = fptosi float %mul79 to i32, !dbg !933
  store i32 %conv80, i32* %arrayidx29, align 4, !dbg !933, !tbaa !113
  %30 = load i32, i32* %arrayidx32, align 4, !dbg !933, !tbaa !113
  %add85 = sub i32 %30, %28, !dbg !933
  %conv86 = sitofp i32 %add85 to float, !dbg !933
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000, !dbg !933
  %conv88 = fptosi float %mul87 to i32, !dbg !933
  store i32 %conv88, i32* %arrayidx32, align 4, !dbg !933, !tbaa !113
  %31 = load i32, i32* %arrayidx45, align 4, !dbg !933, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %31, metadata !856, metadata !DIExpression()), !dbg !928
  %32 = load i32, i32* %arrayidx48, align 4, !dbg !933, !tbaa !113
  store i32 %32, i32* %arrayidx45, align 4, !dbg !933, !tbaa !113
  %mul97 = sub nsw i32 0, %31, !dbg !933
  store i32 %mul97, i32* %arrayidx48, align 4, !dbg !933, !tbaa !113
  %33 = load i32, i32* %arrayidx61, align 4, !dbg !933, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %33, metadata !856, metadata !DIExpression()), !dbg !928
  %34 = load i32, i32* %arrayidx64, align 4, !dbg !933, !tbaa !113
  %sub107 = sub i32 %34, %33, !dbg !933
  %conv108 = sitofp i32 %sub107 to float, !dbg !933
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000, !dbg !933
  %conv110 = fptosi float %mul109 to i32, !dbg !933
  store i32 %conv110, i32* %arrayidx61, align 4, !dbg !933, !tbaa !113
  %35 = load i32, i32* %arrayidx64, align 4, !dbg !933, !tbaa !113
  %36 = add i32 %33, %35, !dbg !933
  %add115 = sub i32 0, %36, !dbg !933
  %conv116 = sitofp i32 %add115 to float, !dbg !933
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000, !dbg !933
  %conv118 = fptosi float %mul117 to i32, !dbg !933
  store i32 %conv118, i32* %arrayidx64, align 4, !dbg !933, !tbaa !113
  call void @llvm.dbg.value(metadata i32 0, metadata !870, metadata !DIExpression()), !dbg !934
  call void @llvm.dbg.value(metadata i32 -1, metadata !872, metadata !DIExpression()), !dbg !934
  %37 = load i32, i32* %data_x, align 4, !dbg !935, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %37, metadata !874, metadata !DIExpression()), !dbg !936
  %38 = load i32, i32* %data_y, align 4, !dbg !935, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %38, metadata !876, metadata !DIExpression()), !dbg !936
  %39 = load i32, i32* %arrayidx42, align 4, !dbg !935, !tbaa !113
  %add125 = add nsw i32 %39, %37, !dbg !935
  store i32 %add125, i32* %data_x, align 4, !dbg !935, !tbaa !113
  %40 = load i32, i32* %arrayidx44, align 4, !dbg !935, !tbaa !113
  %add128 = add nsw i32 %40, %38, !dbg !935
  store i32 %add128, i32* %data_y, align 4, !dbg !935, !tbaa !113
  %41 = load i32, i32* %arrayidx42, align 4, !dbg !935, !tbaa !113
  %sub131 = sub nsw i32 %37, %41, !dbg !935
  store i32 %sub131, i32* %arrayidx42, align 4, !dbg !935, !tbaa !113
  %42 = load i32, i32* %arrayidx44, align 4, !dbg !935, !tbaa !113
  %sub134 = sub nsw i32 %38, %42, !dbg !935
  store i32 %sub134, i32* %arrayidx44, align 4, !dbg !935, !tbaa !113
  %43 = load i32, i32* %arrayidx26, align 4, !dbg !937, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %43, metadata !877, metadata !DIExpression()), !dbg !938
  %44 = load i32, i32* %arrayidx28, align 4, !dbg !937, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %44, metadata !879, metadata !DIExpression()), !dbg !938
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !937, !tbaa !113
  %add141 = add nsw i32 %45, %43, !dbg !937
  store i32 %add141, i32* %arrayidx26, align 4, !dbg !937, !tbaa !113
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !937, !tbaa !113
  %add144 = add nsw i32 %46, %44, !dbg !937
  store i32 %add144, i32* %arrayidx28, align 4, !dbg !937, !tbaa !113
  %47 = load i32, i32* %arrayidx58, align 4, !dbg !937, !tbaa !113
  %sub147 = sub nsw i32 %43, %47, !dbg !937
  store i32 %sub147, i32* %arrayidx58, align 4, !dbg !937, !tbaa !113
  %48 = load i32, i32* %arrayidx60, align 4, !dbg !937, !tbaa !113
  %sub150 = sub nsw i32 %44, %48, !dbg !937
  store i32 %sub150, i32* %arrayidx60, align 4, !dbg !937, !tbaa !113
  %49 = load i32, i32* %arrayidx58, align 4, !dbg !939, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %49, metadata !873, metadata !DIExpression()), !dbg !934
  store i32 %sub150, i32* %arrayidx58, align 4, !dbg !939, !tbaa !113
  %mul159 = sub nsw i32 0, %49, !dbg !939
  store i32 %mul159, i32* %arrayidx60, align 4, !dbg !939, !tbaa !113
  %50 = load i32, i32* %data_x, align 4, !dbg !940, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %50, metadata !880, metadata !DIExpression()), !dbg !941
  %51 = load i32, i32* %data_y, align 4, !dbg !940, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %51, metadata !882, metadata !DIExpression()), !dbg !941
  %52 = load i32, i32* %arrayidx26, align 4, !dbg !940, !tbaa !113
  %add169 = add nsw i32 %52, %50, !dbg !940
  store i32 %add169, i32* %data_x, align 4, !dbg !940, !tbaa !113
  %53 = load i32, i32* %arrayidx28, align 4, !dbg !940, !tbaa !113
  %add172 = add nsw i32 %53, %51, !dbg !940
  store i32 %add172, i32* %data_y, align 4, !dbg !940, !tbaa !113
  %54 = load i32, i32* %arrayidx26, align 4, !dbg !940, !tbaa !113
  %sub175 = sub nsw i32 %50, %54, !dbg !940
  store i32 %sub175, i32* %arrayidx26, align 4, !dbg !940, !tbaa !113
  %55 = load i32, i32* %arrayidx28, align 4, !dbg !940, !tbaa !113
  %sub178 = sub nsw i32 %51, %55, !dbg !940
  store i32 %sub178, i32* %arrayidx28, align 4, !dbg !940, !tbaa !113
  %56 = load i32, i32* %arrayidx42, align 4, !dbg !942, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %56, metadata !883, metadata !DIExpression()), !dbg !943
  %57 = load i32, i32* %arrayidx44, align 4, !dbg !942, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %57, metadata !885, metadata !DIExpression()), !dbg !943
  %58 = load i32, i32* %arrayidx58, align 4, !dbg !942, !tbaa !113
  %add185 = add nsw i32 %58, %56, !dbg !942
  store i32 %add185, i32* %arrayidx42, align 4, !dbg !942, !tbaa !113
  %59 = load i32, i32* %arrayidx60, align 4, !dbg !942, !tbaa !113
  %add188 = add nsw i32 %59, %57, !dbg !942
  store i32 %add188, i32* %arrayidx44, align 4, !dbg !942, !tbaa !113
  %60 = load i32, i32* %arrayidx58, align 4, !dbg !942, !tbaa !113
  %sub191 = sub nsw i32 %56, %60, !dbg !942
  store i32 %sub191, i32* %arrayidx58, align 4, !dbg !942, !tbaa !113
  %61 = load i32, i32* %arrayidx60, align 4, !dbg !942, !tbaa !113
  %sub194 = sub nsw i32 %57, %61, !dbg !942
  store i32 %sub194, i32* %arrayidx60, align 4, !dbg !942, !tbaa !113
  call void @llvm.dbg.value(metadata i32 0, metadata !886, metadata !DIExpression()), !dbg !944
  call void @llvm.dbg.value(metadata i32 -1, metadata !888, metadata !DIExpression()), !dbg !944
  %62 = load i32, i32* %arrayidx14, align 4, !dbg !945, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %62, metadata !890, metadata !DIExpression()), !dbg !946
  %63 = load i32, i32* %arrayidx17, align 4, !dbg !945, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %63, metadata !892, metadata !DIExpression()), !dbg !946
  %64 = load i32, i32* %arrayidx45, align 4, !dbg !945, !tbaa !113
  %add204 = add nsw i32 %64, %62, !dbg !945
  store i32 %add204, i32* %arrayidx14, align 4, !dbg !945, !tbaa !113
  %65 = load i32, i32* %arrayidx48, align 4, !dbg !945, !tbaa !113
  %add207 = add nsw i32 %65, %63, !dbg !945
  store i32 %add207, i32* %arrayidx17, align 4, !dbg !945, !tbaa !113
  %66 = load i32, i32* %arrayidx45, align 4, !dbg !945, !tbaa !113
  %sub210 = sub nsw i32 %62, %66, !dbg !945
  store i32 %sub210, i32* %arrayidx45, align 4, !dbg !945, !tbaa !113
  %67 = load i32, i32* %arrayidx48, align 4, !dbg !945, !tbaa !113
  %sub213 = sub nsw i32 %63, %67, !dbg !945
  store i32 %sub213, i32* %arrayidx48, align 4, !dbg !945, !tbaa !113
  %68 = load i32, i32* %arrayidx29, align 4, !dbg !947, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %68, metadata !893, metadata !DIExpression()), !dbg !948
  %69 = load i32, i32* %arrayidx32, align 4, !dbg !947, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %69, metadata !895, metadata !DIExpression()), !dbg !948
  %70 = load i32, i32* %arrayidx61, align 4, !dbg !947, !tbaa !113
  %add220 = add nsw i32 %70, %68, !dbg !947
  store i32 %add220, i32* %arrayidx29, align 4, !dbg !947, !tbaa !113
  %71 = load i32, i32* %arrayidx64, align 4, !dbg !947, !tbaa !113
  %add223 = add nsw i32 %71, %69, !dbg !947
  store i32 %add223, i32* %arrayidx32, align 4, !dbg !947, !tbaa !113
  %72 = load i32, i32* %arrayidx61, align 4, !dbg !947, !tbaa !113
  %sub226 = sub nsw i32 %68, %72, !dbg !947
  store i32 %sub226, i32* %arrayidx61, align 4, !dbg !947, !tbaa !113
  %73 = load i32, i32* %arrayidx64, align 4, !dbg !947, !tbaa !113
  %sub229 = sub nsw i32 %69, %73, !dbg !947
  store i32 %sub229, i32* %arrayidx64, align 4, !dbg !947, !tbaa !113
  %74 = load i32, i32* %arrayidx61, align 4, !dbg !949, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %74, metadata !889, metadata !DIExpression()), !dbg !944
  store i32 %sub229, i32* %arrayidx61, align 4, !dbg !949, !tbaa !113
  %mul238 = sub nsw i32 0, %74, !dbg !949
  store i32 %mul238, i32* %arrayidx64, align 4, !dbg !949, !tbaa !113
  %75 = load i32, i32* %arrayidx14, align 4, !dbg !950, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %75, metadata !896, metadata !DIExpression()), !dbg !951
  %76 = load i32, i32* %arrayidx17, align 4, !dbg !950, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %76, metadata !898, metadata !DIExpression()), !dbg !951
  %77 = load i32, i32* %arrayidx29, align 4, !dbg !950, !tbaa !113
  %add248 = add nsw i32 %77, %75, !dbg !950
  store i32 %add248, i32* %arrayidx14, align 4, !dbg !950, !tbaa !113
  %78 = load i32, i32* %arrayidx32, align 4, !dbg !950, !tbaa !113
  %add251 = add nsw i32 %78, %76, !dbg !950
  store i32 %add251, i32* %arrayidx17, align 4, !dbg !950, !tbaa !113
  %79 = load i32, i32* %arrayidx29, align 4, !dbg !950, !tbaa !113
  %sub254 = sub nsw i32 %75, %79, !dbg !950
  store i32 %sub254, i32* %arrayidx29, align 4, !dbg !950, !tbaa !113
  %80 = load i32, i32* %arrayidx32, align 4, !dbg !950, !tbaa !113
  %sub257 = sub nsw i32 %76, %80, !dbg !950
  store i32 %sub257, i32* %arrayidx32, align 4, !dbg !950, !tbaa !113
  %81 = load i32, i32* %arrayidx45, align 4, !dbg !952, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %81, metadata !899, metadata !DIExpression()), !dbg !953
  %82 = load i32, i32* %arrayidx48, align 4, !dbg !952, !tbaa !113
  call void @llvm.dbg.value(metadata i32 %82, metadata !901, metadata !DIExpression()), !dbg !953
  %83 = load i32, i32* %arrayidx61, align 4, !dbg !952, !tbaa !113
  %add264 = add nsw i32 %83, %81, !dbg !952
  store i32 %add264, i32* %arrayidx45, align 4, !dbg !952, !tbaa !113
  %84 = load i32, i32* %arrayidx64, align 4, !dbg !952, !tbaa !113
  %add267 = add nsw i32 %84, %82, !dbg !952
  store i32 %add267, i32* %arrayidx48, align 4, !dbg !952, !tbaa !113
  %85 = load i32, i32* %arrayidx61, align 4, !dbg !952, !tbaa !113
  %sub270 = sub nsw i32 %81, %85, !dbg !952
  store i32 %sub270, i32* %arrayidx61, align 4, !dbg !952, !tbaa !113
  %86 = load i32, i32* %arrayidx64, align 4, !dbg !952, !tbaa !113
  %sub273 = sub nsw i32 %82, %86, !dbg !952
  store i32 %sub273, i32* %arrayidx64, align 4, !dbg !952, !tbaa !113
  call void @llvm.dbg.label(metadata !904), !dbg !954
  call void @llvm.dbg.value(metadata i32 0, metadata !843, metadata !DIExpression()), !dbg !905
  br label %for.body278, !dbg !955

for.body278:                                      ; preds = %for.body278, %for.end
  %indvars.iv557 = phi i64 [ 0, %for.end ], [ %indvars.iv.next558, %for.body278 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv557, metadata !843, metadata !DIExpression()), !dbg !905
  %arrayidx280 = getelementptr inbounds i32, i32* %reversed, i64 %indvars.iv557, !dbg !957
  %87 = load i32, i32* %arrayidx280, align 4, !dbg !957, !tbaa !113
  %idxprom281 = sext i32 %87 to i64, !dbg !960
  %arrayidx282 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom281, !dbg !960
  %88 = load i32, i32* %arrayidx282, align 4, !dbg !960, !tbaa !113
  %89 = shl i64 %indvars.iv557, 6, !dbg !961
  %90 = add nuw nsw i64 %89, %indvars.iv562, !dbg !962
  %arrayidx286 = getelementptr inbounds i32, i32* %work_x, i64 %90, !dbg !963
  store i32 %88, i32* %arrayidx286, align 4, !dbg !964, !tbaa !113
  %91 = load i32, i32* %arrayidx280, align 4, !dbg !965, !tbaa !113
  %idxprom289 = sext i32 %91 to i64, !dbg !966
  %arrayidx290 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom289, !dbg !966
  %92 = load i32, i32* %arrayidx290, align 4, !dbg !966, !tbaa !113
  %arrayidx294 = getelementptr inbounds i32, i32* %work_y, i64 %90, !dbg !967
  store i32 %92, i32* %arrayidx294, align 4, !dbg !968, !tbaa !113
  %indvars.iv.next558 = add nuw nsw i64 %indvars.iv557, 1, !dbg !969
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next558, metadata !843, metadata !DIExpression()), !dbg !905
  %exitcond561 = icmp eq i64 %indvars.iv.next558, 8, !dbg !970
  br i1 %exitcond561, label %for.inc298, label %for.body278, !dbg !955, !llvm.loop !971

for.inc298:                                       ; preds = %for.body278
  %indvars.iv.next563 = add nuw nsw i64 %indvars.iv562, 1, !dbg !973
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next563, metadata !840, metadata !DIExpression()), !dbg !905
  %exitcond565 = icmp eq i64 %indvars.iv.next563, 64, !dbg !974
  br i1 %exitcond565, label %for.end300, label %for.cond1.preheader, !dbg !911, !llvm.loop !975

for.end300:                                       ; preds = %for.inc298
  ret void, !dbg !977
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @fft1D_512(i32* nocapture %work_x, i32* nocapture %work_y, i32* nocapture %DATA_x, i32* nocapture %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readonly %sin_64, float* nocapture readonly %cos_64, float* nocapture readonly %sin_512, float* nocapture readonly %cos_512) local_unnamed_addr #0 !dbg !978 {
entry:
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !980, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !981, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !982, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !983, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !984, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !985, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %smem, metadata !986, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !987, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !988, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !989, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !990, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !991, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32 64, metadata !997, metadata !DIExpression()), !dbg !998
  call void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* undef, i32* undef, float* undef, float* undef, float* %sin_512, float* %cos_512), !dbg !999
  call void @step2(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef), !dbg !1000
  call void @step3(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef), !dbg !1001
  call void @step4(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef), !dbg !1002
  call void @step5(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef), !dbg !1003
  call void @step6(i32* undef, i32* undef, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* undef, i32* undef, float* %sin_64, float* %cos_64, float* undef, float* undef), !dbg !1004
  call void @step7(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef), !dbg !1005
  call void @step8(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef), !dbg !1006
  call void @step9(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef), !dbg !1007
  call void @step10(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef), !dbg !1008
  call void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* undef, i32* %reversed, float* undef, float* undef, float* undef, float* undef), !dbg !1009
  ret void, !dbg !1010
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #3 !dbg !1011 {
entry:
  %a_x = alloca [512 x i32], align 16
  %a_y = alloca [512 x i32], align 16
  %0 = bitcast [512 x i32]* %a_y to i8*
  %sin_64 = alloca [448 x float], align 16
  %sin_512 = alloca [448 x float], align 16
  %cos_64 = alloca [448 x float], align 16
  %cos_512 = alloca [448 x float], align 16
  %DATA_x = alloca [512 x i32], align 16
  %DATA_y = alloca [512 x i32], align 16
  %data_x = alloca [8 x i32], align 16
  %data_y = alloca [8 x i32], align 16
  %smem = alloca [576 x i32], align 16
  %reversed = alloca [8 x i32], align 16
  %1 = bitcast [512 x i32]* %a_x to i8*, !dbg !1040
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %1) #5, !dbg !1040
  call void @llvm.dbg.declare(metadata [512 x i32]* %a_x, metadata !1015, metadata !DIExpression()), !dbg !1041
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %0) #5, !dbg !1042
  call void @llvm.dbg.declare(metadata [512 x i32]* %a_y, metadata !1019, metadata !DIExpression()), !dbg !1043
  call void @llvm.dbg.value(metadata i32 0, metadata !1020, metadata !DIExpression()), !dbg !1044
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(2048) %0, i8 0, i64 2048, i1 false), !dbg !1045
  br label %for.body, !dbg !1049

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv35 = phi i64 [ 0, %entry ], [ %indvars.iv.next36, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv35, metadata !1020, metadata !DIExpression()), !dbg !1044
  %arrayidx = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv35, !dbg !1050
  %2 = trunc i64 %indvars.iv35 to i32, !dbg !1051
  store i32 %2, i32* %arrayidx, align 4, !dbg !1051, !tbaa !113
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !1052
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next36, metadata !1020, metadata !DIExpression()), !dbg !1044
  %exitcond = icmp eq i64 %indvars.iv.next36, 512, !dbg !1053
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1049, !llvm.loop !1054

for.end:                                          ; preds = %for.body
  %3 = bitcast [448 x float]* %sin_64 to i8*, !dbg !1056
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %3) #5, !dbg !1056
  call void @llvm.dbg.declare(metadata [448 x float]* %sin_64, metadata !1021, metadata !DIExpression()), !dbg !1057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %3, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.sin_64 to i8*), i64 1792, i1 false), !dbg !1057
  %4 = bitcast [448 x float]* %sin_512 to i8*, !dbg !1058
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %4) #5, !dbg !1058
  call void @llvm.dbg.declare(metadata [448 x float]* %sin_512, metadata !1025, metadata !DIExpression()), !dbg !1059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %4, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.sin_512 to i8*), i64 1792, i1 false), !dbg !1059
  %5 = bitcast [448 x float]* %cos_64 to i8*, !dbg !1060
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %5) #5, !dbg !1060
  call void @llvm.dbg.declare(metadata [448 x float]* %cos_64, metadata !1026, metadata !DIExpression()), !dbg !1061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %5, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.cos_64 to i8*), i64 1792, i1 false), !dbg !1061
  %6 = bitcast [448 x float]* %cos_512 to i8*, !dbg !1062
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %6) #5, !dbg !1062
  call void @llvm.dbg.declare(metadata [448 x float]* %cos_512, metadata !1027, metadata !DIExpression()), !dbg !1063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %6, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.cos_512 to i8*), i64 1792, i1 false), !dbg !1063
  %7 = bitcast [512 x i32]* %DATA_x to i8*, !dbg !1064
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %7) #5, !dbg !1064
  call void @llvm.dbg.declare(metadata [512 x i32]* %DATA_x, metadata !1028, metadata !DIExpression()), !dbg !1065
  %8 = bitcast [512 x i32]* %DATA_y to i8*, !dbg !1066
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %8) #5, !dbg !1066
  call void @llvm.dbg.declare(metadata [512 x i32]* %DATA_y, metadata !1029, metadata !DIExpression()), !dbg !1067
  %9 = bitcast [8 x i32]* %data_x to i8*, !dbg !1068
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #5, !dbg !1068
  call void @llvm.dbg.declare(metadata [8 x i32]* %data_x, metadata !1030, metadata !DIExpression()), !dbg !1069
  %10 = bitcast [8 x i32]* %data_y to i8*, !dbg !1070
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #5, !dbg !1070
  call void @llvm.dbg.declare(metadata [8 x i32]* %data_y, metadata !1034, metadata !DIExpression()), !dbg !1071
  %11 = bitcast [576 x i32]* %smem to i8*, !dbg !1072
  call void @llvm.lifetime.start.p0i8(i64 2304, i8* nonnull %11) #5, !dbg !1072
  call void @llvm.dbg.declare(metadata [576 x i32]* %smem, metadata !1035, metadata !DIExpression()), !dbg !1073
  %12 = bitcast [8 x i32]* %reversed to i8*, !dbg !1074
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #5, !dbg !1074
  call void @llvm.dbg.declare(metadata [8 x i32]* %reversed, metadata !1039, metadata !DIExpression()), !dbg !1075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(32) %12, i8* nonnull align 16 dereferenceable(32) bitcast ([8 x i32]* @__const.main.reversed to i8*), i64 32, i1 false), !dbg !1075
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0, !dbg !1076
  %arraydecay3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0, !dbg !1077
  %arraydecay4 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_x, i64 0, i64 0, !dbg !1078
  %arraydecay5 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_y, i64 0, i64 0, !dbg !1079
  %arraydecay6 = getelementptr inbounds [8 x i32], [8 x i32]* %data_x, i64 0, i64 0, !dbg !1080
  %arraydecay7 = getelementptr inbounds [8 x i32], [8 x i32]* %data_y, i64 0, i64 0, !dbg !1081
  %arraydecay8 = getelementptr inbounds [576 x i32], [576 x i32]* %smem, i64 0, i64 0, !dbg !1082
  %arraydecay9 = getelementptr inbounds [8 x i32], [8 x i32]* %reversed, i64 0, i64 0, !dbg !1083
  %arraydecay10 = getelementptr inbounds [448 x float], [448 x float]* %sin_64, i64 0, i64 0, !dbg !1084
  %arraydecay11 = getelementptr inbounds [448 x float], [448 x float]* %sin_512, i64 0, i64 0, !dbg !1085
  %arraydecay12 = getelementptr inbounds [448 x float], [448 x float]* %cos_64, i64 0, i64 0, !dbg !1086
  %arraydecay13 = getelementptr inbounds [448 x float], [448 x float]* %cos_512, i64 0, i64 0, !dbg !1087
  call void @fft1D_512(i32* nonnull %arraydecay, i32* nonnull %arraydecay3, i32* nonnull %arraydecay4, i32* nonnull %arraydecay5, i32* nonnull %arraydecay6, i32* nonnull %arraydecay7, i32* nonnull %arraydecay8, i32* nonnull %arraydecay9, float* nonnull %arraydecay10, float* nonnull %arraydecay11, float* nonnull %arraydecay12, float* nonnull %arraydecay13), !dbg !1088
  call void @llvm.dbg.value(metadata i32 0, metadata !1020, metadata !DIExpression()), !dbg !1044
  br label %for.body16, !dbg !1089

for.body16:                                       ; preds = %for.end, %for.body16
  %indvars.iv = phi i64 [ 0, %for.end ], [ %indvars.iv.next, %for.body16 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1020, metadata !DIExpression()), !dbg !1044
  %arrayidx18 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv, !dbg !1091
  %13 = load i32, i32* %arrayidx18, align 4, !dbg !1091, !tbaa !113
  %arrayidx20 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv, !dbg !1094
  %14 = load i32, i32* %arrayidx20, align 4, !dbg !1094, !tbaa !113
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %13, i32 %14), !dbg !1095
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1096
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1020, metadata !DIExpression()), !dbg !1044
  %cmp15 = icmp eq i64 %indvars.iv, 0, !dbg !1097
  br i1 %cmp15, label %for.body16, label %for.end23, !dbg !1089, !llvm.loop !1098

for.end23:                                        ; preds = %for.body16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 2304, i8* nonnull %11) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %8) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %7) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %6) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %5) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %4) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %3) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %0) #5, !dbg !1100
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %1) #5, !dbg !1100
  ret i32 0, !dbg !1101
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "fft.c", directory: "/home/coco/work/benchmark_codes/fft")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "step1", scope: !1, file: !1, line: 8, type: !8, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !14)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10, !10, !10, !10, !12, !12, !12, !12}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !38, !39, !40, !41, !42, !43, !44, !45, !47, !48, !50, !51, !53, !54, !56, !57, !59, !60, !61, !63, !64, !66, !67, !69, !70, !72, !73, !75, !76, !77, !79, !80, !82, !83, !85, !86, !88, !89, !93, !94, !95, !96, !97, !98}
!15 = !DILocalVariable(name: "work_x", arg: 1, scope: !7, file: !1, line: 8, type: !10)
!16 = !DILocalVariable(name: "work_y", arg: 2, scope: !7, file: !1, line: 8, type: !10)
!17 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !7, file: !1, line: 8, type: !10)
!18 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !7, file: !1, line: 9, type: !10)
!19 = !DILocalVariable(name: "data_x", arg: 5, scope: !7, file: !1, line: 9, type: !10)
!20 = !DILocalVariable(name: "data_y", arg: 6, scope: !7, file: !1, line: 9, type: !10)
!21 = !DILocalVariable(name: "smem", arg: 7, scope: !7, file: !1, line: 9, type: !10)
!22 = !DILocalVariable(name: "reversed", arg: 8, scope: !7, file: !1, line: 10, type: !10)
!23 = !DILocalVariable(name: "sin_64", arg: 9, scope: !7, file: !1, line: 11, type: !12)
!24 = !DILocalVariable(name: "cos_64", arg: 10, scope: !7, file: !1, line: 12, type: !12)
!25 = !DILocalVariable(name: "sin_512", arg: 11, scope: !7, file: !1, line: 13, type: !12)
!26 = !DILocalVariable(name: "cos_512", arg: 12, scope: !7, file: !1, line: 14, type: !12)
!27 = !DILocalVariable(name: "tid", scope: !7, file: !1, line: 17, type: !11)
!28 = !DILocalVariable(name: "hi", scope: !7, file: !1, line: 17, type: !11)
!29 = !DILocalVariable(name: "lo", scope: !7, file: !1, line: 17, type: !11)
!30 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 17, type: !11)
!31 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 17, type: !11)
!32 = !DILocalVariable(name: "stride", scope: !7, file: !1, line: 17, type: !11)
!33 = !DILocalVariable(name: "exp_1_8_x", scope: !34, file: !1, line: 26, type: !11)
!34 = distinct !DILexicalBlock(scope: !35, file: !1, line: 26, column: 3)
!35 = distinct !DILexicalBlock(scope: !36, file: !1, line: 20, column: 43)
!36 = distinct !DILexicalBlock(scope: !37, file: !1, line: 20, column: 9)
!37 = distinct !DILexicalBlock(scope: !7, file: !1, line: 20, column: 9)
!38 = !DILocalVariable(name: "exp_1_4_x", scope: !34, file: !1, line: 26, type: !11)
!39 = !DILocalVariable(name: "exp_3_8_x", scope: !34, file: !1, line: 26, type: !11)
!40 = !DILocalVariable(name: "exp_1_8_y", scope: !34, file: !1, line: 26, type: !11)
!41 = !DILocalVariable(name: "exp_1_4_y", scope: !34, file: !1, line: 26, type: !11)
!42 = !DILocalVariable(name: "exp_3_8_y", scope: !34, file: !1, line: 26, type: !11)
!43 = !DILocalVariable(name: "tmp_1", scope: !34, file: !1, line: 26, type: !11)
!44 = !DILocalVariable(name: "tmp_2", scope: !34, file: !1, line: 26, type: !11)
!45 = !DILocalVariable(name: "c0_x", scope: !46, file: !1, line: 26, type: !11)
!46 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!47 = !DILocalVariable(name: "c0_y", scope: !46, file: !1, line: 26, type: !11)
!48 = !DILocalVariable(name: "c0_x", scope: !49, file: !1, line: 26, type: !11)
!49 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!50 = !DILocalVariable(name: "c0_y", scope: !49, file: !1, line: 26, type: !11)
!51 = !DILocalVariable(name: "c0_x", scope: !52, file: !1, line: 26, type: !11)
!52 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!53 = !DILocalVariable(name: "c0_y", scope: !52, file: !1, line: 26, type: !11)
!54 = !DILocalVariable(name: "c0_x", scope: !55, file: !1, line: 26, type: !11)
!55 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!56 = !DILocalVariable(name: "c0_y", scope: !55, file: !1, line: 26, type: !11)
!57 = !DILocalVariable(name: "exp_1_44_x", scope: !58, file: !1, line: 26, type: !11)
!58 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!59 = !DILocalVariable(name: "exp_1_44_y", scope: !58, file: !1, line: 26, type: !11)
!60 = !DILocalVariable(name: "tmp", scope: !58, file: !1, line: 26, type: !11)
!61 = !DILocalVariable(name: "c0_x", scope: !62, file: !1, line: 26, type: !11)
!62 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!63 = !DILocalVariable(name: "c0_y", scope: !62, file: !1, line: 26, type: !11)
!64 = !DILocalVariable(name: "c0_x", scope: !65, file: !1, line: 26, type: !11)
!65 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!66 = !DILocalVariable(name: "c0_y", scope: !65, file: !1, line: 26, type: !11)
!67 = !DILocalVariable(name: "c0_x", scope: !68, file: !1, line: 26, type: !11)
!68 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!69 = !DILocalVariable(name: "c0_y", scope: !68, file: !1, line: 26, type: !11)
!70 = !DILocalVariable(name: "c0_x", scope: !71, file: !1, line: 26, type: !11)
!71 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!72 = !DILocalVariable(name: "c0_y", scope: !71, file: !1, line: 26, type: !11)
!73 = !DILocalVariable(name: "exp_1_44_x", scope: !74, file: !1, line: 26, type: !11)
!74 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!75 = !DILocalVariable(name: "exp_1_44_y", scope: !74, file: !1, line: 26, type: !11)
!76 = !DILocalVariable(name: "tmp", scope: !74, file: !1, line: 26, type: !11)
!77 = !DILocalVariable(name: "c0_x", scope: !78, file: !1, line: 26, type: !11)
!78 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!79 = !DILocalVariable(name: "c0_y", scope: !78, file: !1, line: 26, type: !11)
!80 = !DILocalVariable(name: "c0_x", scope: !81, file: !1, line: 26, type: !11)
!81 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!82 = !DILocalVariable(name: "c0_y", scope: !81, file: !1, line: 26, type: !11)
!83 = !DILocalVariable(name: "c0_x", scope: !84, file: !1, line: 26, type: !11)
!84 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!85 = !DILocalVariable(name: "c0_y", scope: !84, file: !1, line: 26, type: !11)
!86 = !DILocalVariable(name: "c0_x", scope: !87, file: !1, line: 26, type: !11)
!87 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!88 = !DILocalVariable(name: "c0_y", scope: !87, file: !1, line: 26, type: !11)
!89 = !DILocalVariable(name: "A_x", scope: !90, file: !1, line: 31, type: !11)
!90 = distinct !DILexicalBlock(scope: !91, file: !1, line: 30, column: 36)
!91 = distinct !DILexicalBlock(scope: !92, file: !1, line: 30, column: 14)
!92 = distinct !DILexicalBlock(scope: !35, file: !1, line: 30, column: 14)
!93 = !DILocalVariable(name: "A_y", scope: !90, file: !1, line: 31, type: !11)
!94 = !DILocalVariable(name: "tmp", scope: !90, file: !1, line: 31, type: !11)
!95 = !DILabel(scope: !7, name: "outer", file: !1, line: 20)
!96 = !DILabel(scope: !35, name: "load", file: !1, line: 22)
!97 = !DILabel(scope: !35, name: "twiddles", file: !1, line: 30)
!98 = !DILabel(scope: !35, name: "store", file: !1, line: 40)
!99 = !DILocation(line: 0, scope: !7)
!100 = !DILocation(line: 20, column: 3, scope: !7)
!101 = !DILocation(line: 0, scope: !46)
!102 = !DILocation(line: 0, scope: !49)
!103 = !DILocation(line: 0, scope: !52)
!104 = !DILocation(line: 0, scope: !55)
!105 = !DILocation(line: 20, column: 9, scope: !37)
!106 = !DILocation(line: 22, column: 10, scope: !107)
!107 = distinct !DILexicalBlock(scope: !35, file: !1, line: 22, column: 10)
!108 = !DILocation(line: 23, column: 24, scope: !109)
!109 = distinct !DILexicalBlock(scope: !110, file: !1, line: 22, column: 29)
!110 = distinct !DILexicalBlock(scope: !107, file: !1, line: 22, column: 10)
!111 = !DILocation(line: 23, column: 31, scope: !109)
!112 = !DILocation(line: 23, column: 16, scope: !109)
!113 = !{!114, !114, i64 0}
!114 = !{!"int", !115, i64 0}
!115 = !{!"omnipotent char", !116, i64 0}
!116 = !{!"Simple C/C++ TBAA"}
!117 = !DILocation(line: 23, column: 4, scope: !109)
!118 = !DILocation(line: 23, column: 14, scope: !109)
!119 = !DILocation(line: 24, column: 16, scope: !109)
!120 = !DILocation(line: 24, column: 4, scope: !109)
!121 = !DILocation(line: 24, column: 14, scope: !109)
!122 = !DILocation(line: 22, column: 26, scope: !110)
!123 = !DILocation(line: 22, column: 22, scope: !110)
!124 = distinct !{!124, !106, !125}
!125 = !DILocation(line: 25, column: 3, scope: !107)
!126 = !DILocation(line: 0, scope: !34)
!127 = !DILocation(line: 26, column: 3, scope: !46)
!128 = !DILocation(line: 26, column: 3, scope: !49)
!129 = !DILocation(line: 26, column: 3, scope: !52)
!130 = !DILocation(line: 26, column: 3, scope: !55)
!131 = !DILocation(line: 26, column: 3, scope: !34)
!132 = !DILocation(line: 0, scope: !58)
!133 = !DILocation(line: 26, column: 3, scope: !62)
!134 = !DILocation(line: 0, scope: !62)
!135 = !DILocation(line: 26, column: 3, scope: !65)
!136 = !DILocation(line: 0, scope: !65)
!137 = !DILocation(line: 26, column: 3, scope: !58)
!138 = !DILocation(line: 26, column: 3, scope: !68)
!139 = !DILocation(line: 0, scope: !68)
!140 = !DILocation(line: 26, column: 3, scope: !71)
!141 = !DILocation(line: 0, scope: !71)
!142 = !DILocation(line: 0, scope: !74)
!143 = !DILocation(line: 26, column: 3, scope: !78)
!144 = !DILocation(line: 0, scope: !78)
!145 = !DILocation(line: 26, column: 3, scope: !81)
!146 = !DILocation(line: 0, scope: !81)
!147 = !DILocation(line: 26, column: 3, scope: !74)
!148 = !DILocation(line: 26, column: 3, scope: !84)
!149 = !DILocation(line: 0, scope: !84)
!150 = !DILocation(line: 26, column: 3, scope: !87)
!151 = !DILocation(line: 0, scope: !87)
!152 = !DILocation(line: 30, column: 5, scope: !35)
!153 = !DILocation(line: 0, scope: !90)
!154 = !DILocation(line: 30, column: 14, scope: !92)
!155 = !DILocation(line: 0, scope: !156)
!156 = distinct !DILexicalBlock(scope: !157, file: !1, line: 40, column: 34)
!157 = distinct !DILexicalBlock(scope: !158, file: !1, line: 40, column: 11)
!158 = distinct !DILexicalBlock(scope: !35, file: !1, line: 40, column: 11)
!159 = !DILocation(line: 40, column: 11, scope: !158)
!160 = !DILocation(line: 32, column: 34, scope: !90)
!161 = !DILocation(line: 32, column: 19, scope: !90)
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !115, i64 0}
!164 = !DILocation(line: 33, column: 19, scope: !90)
!165 = !DILocation(line: 34, column: 19, scope: !90)
!166 = !DILocation(line: 35, column: 25, scope: !90)
!167 = !DILocation(line: 35, column: 23, scope: !90)
!168 = !DILocation(line: 36, column: 25, scope: !90)
!169 = !DILocation(line: 36, column: 23, scope: !90)
!170 = !DILocation(line: 30, column: 33, scope: !91)
!171 = !DILocation(line: 30, column: 27, scope: !91)
!172 = distinct !{!172, !154, !173}
!173 = !DILocation(line: 37, column: 5, scope: !92)
!174 = !DILocation(line: 41, column: 24, scope: !156)
!175 = !DILocation(line: 41, column: 17, scope: !156)
!176 = !DILocation(line: 41, column: 4, scope: !156)
!177 = !DILocation(line: 41, column: 22, scope: !156)
!178 = !DILocation(line: 42, column: 24, scope: !156)
!179 = !DILocation(line: 42, column: 4, scope: !156)
!180 = !DILocation(line: 42, column: 22, scope: !156)
!181 = !DILocation(line: 40, column: 31, scope: !157)
!182 = !DILocation(line: 40, column: 24, scope: !157)
!183 = distinct !{!183, !159, !184}
!184 = !DILocation(line: 43, column: 3, scope: !158)
!185 = !DILocation(line: 20, column: 40, scope: !36)
!186 = !DILocation(line: 20, column: 26, scope: !36)
!187 = distinct !{!187, !105, !188}
!188 = !DILocation(line: 44, column: 2, scope: !37)
!189 = !DILocation(line: 45, column: 1, scope: !7)
!190 = distinct !DISubprogram(name: "step2", scope: !1, file: !1, line: 46, type: !8, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!192 = !DILocalVariable(name: "work_x", arg: 1, scope: !190, file: !1, line: 46, type: !10)
!193 = !DILocalVariable(name: "work_y", arg: 2, scope: !190, file: !1, line: 46, type: !10)
!194 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !190, file: !1, line: 46, type: !10)
!195 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !190, file: !1, line: 47, type: !10)
!196 = !DILocalVariable(name: "data_x", arg: 5, scope: !190, file: !1, line: 47, type: !10)
!197 = !DILocalVariable(name: "data_y", arg: 6, scope: !190, file: !1, line: 47, type: !10)
!198 = !DILocalVariable(name: "smem", arg: 7, scope: !190, file: !1, line: 47, type: !10)
!199 = !DILocalVariable(name: "reversed", arg: 8, scope: !190, file: !1, line: 48, type: !10)
!200 = !DILocalVariable(name: "sin_64", arg: 9, scope: !190, file: !1, line: 49, type: !12)
!201 = !DILocalVariable(name: "cos_64", arg: 10, scope: !190, file: !1, line: 50, type: !12)
!202 = !DILocalVariable(name: "sin_512", arg: 11, scope: !190, file: !1, line: 51, type: !12)
!203 = !DILocalVariable(name: "cos_512", arg: 12, scope: !190, file: !1, line: 52, type: !12)
!204 = !DILocalVariable(name: "tid", scope: !190, file: !1, line: 55, type: !11)
!205 = !DILocalVariable(name: "hi", scope: !190, file: !1, line: 55, type: !11)
!206 = !DILocalVariable(name: "lo", scope: !190, file: !1, line: 55, type: !11)
!207 = !DILocalVariable(name: "i", scope: !190, file: !1, line: 55, type: !11)
!208 = !DILocalVariable(name: "j", scope: !190, file: !1, line: 55, type: !11)
!209 = !DILocalVariable(name: "stride", scope: !190, file: !1, line: 55, type: !11)
!210 = !DILabel(scope: !190, name: "outer", file: !1, line: 57)
!211 = !DILabel(scope: !212, name: "load", file: !1, line: 58)
!212 = distinct !DILexicalBlock(scope: !213, file: !1, line: 57, column: 38)
!213 = distinct !DILexicalBlock(scope: !214, file: !1, line: 57, column: 9)
!214 = distinct !DILexicalBlock(scope: !190, file: !1, line: 57, column: 9)
!215 = !DILocation(line: 0, scope: !190)
!216 = !DILocation(line: 57, column: 3, scope: !190)
!217 = !DILocation(line: 0, scope: !218)
!218 = distinct !DILexicalBlock(scope: !212, file: !1, line: 64, column: 3)
!219 = !DILocation(line: 57, column: 9, scope: !214)
!220 = !DILocation(line: 0, scope: !221)
!221 = distinct !DILexicalBlock(scope: !222, file: !1, line: 58, column: 33)
!222 = distinct !DILexicalBlock(scope: !223, file: !1, line: 58, column: 10)
!223 = distinct !DILexicalBlock(scope: !212, file: !1, line: 58, column: 10)
!224 = !DILocation(line: 58, column: 10, scope: !223)
!225 = !DILocation(line: 59, column: 29, scope: !221)
!226 = !DILocation(line: 59, column: 16, scope: !221)
!227 = !DILocation(line: 59, column: 4, scope: !221)
!228 = !DILocation(line: 59, column: 14, scope: !221)
!229 = !DILocation(line: 58, column: 30, scope: !222)
!230 = !DILocation(line: 58, column: 23, scope: !222)
!231 = distinct !{!231, !224, !232}
!232 = !DILocation(line: 61, column: 3, scope: !223)
!233 = !DILocation(line: 64, column: 3, scope: !218)
!234 = !DILocation(line: 63, column: 11, scope: !212)
!235 = !DILocation(line: 57, column: 35, scope: !213)
!236 = !DILocation(line: 57, column: 26, scope: !213)
!237 = distinct !{!237, !219, !238}
!238 = !DILocation(line: 65, column: 2, scope: !214)
!239 = !DILocation(line: 67, column: 1, scope: !190)
!240 = distinct !DISubprogram(name: "step3", scope: !1, file: !1, line: 68, type: !8, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !241)
!241 = !{!242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !265}
!242 = !DILocalVariable(name: "work_x", arg: 1, scope: !240, file: !1, line: 68, type: !10)
!243 = !DILocalVariable(name: "work_y", arg: 2, scope: !240, file: !1, line: 68, type: !10)
!244 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !240, file: !1, line: 68, type: !10)
!245 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !240, file: !1, line: 69, type: !10)
!246 = !DILocalVariable(name: "data_x", arg: 5, scope: !240, file: !1, line: 69, type: !10)
!247 = !DILocalVariable(name: "data_y", arg: 6, scope: !240, file: !1, line: 69, type: !10)
!248 = !DILocalVariable(name: "smem", arg: 7, scope: !240, file: !1, line: 69, type: !10)
!249 = !DILocalVariable(name: "reversed", arg: 8, scope: !240, file: !1, line: 70, type: !10)
!250 = !DILocalVariable(name: "sin_64", arg: 9, scope: !240, file: !1, line: 71, type: !12)
!251 = !DILocalVariable(name: "cos_64", arg: 10, scope: !240, file: !1, line: 72, type: !12)
!252 = !DILocalVariable(name: "sin_512", arg: 11, scope: !240, file: !1, line: 73, type: !12)
!253 = !DILocalVariable(name: "cos_512", arg: 12, scope: !240, file: !1, line: 74, type: !12)
!254 = !DILocalVariable(name: "tid", scope: !240, file: !1, line: 77, type: !11)
!255 = !DILocalVariable(name: "hi", scope: !240, file: !1, line: 77, type: !11)
!256 = !DILocalVariable(name: "lo", scope: !240, file: !1, line: 77, type: !11)
!257 = !DILocalVariable(name: "i", scope: !240, file: !1, line: 77, type: !11)
!258 = !DILocalVariable(name: "j", scope: !240, file: !1, line: 77, type: !11)
!259 = !DILocalVariable(name: "stride", scope: !240, file: !1, line: 77, type: !11)
!260 = !DILabel(scope: !240, name: "outer", file: !1, line: 79)
!261 = !DILabel(scope: !262, name: "load", file: !1, line: 80)
!262 = distinct !DILexicalBlock(scope: !263, file: !1, line: 79, column: 38)
!263 = distinct !DILexicalBlock(scope: !264, file: !1, line: 79, column: 9)
!264 = distinct !DILexicalBlock(scope: !240, file: !1, line: 79, column: 9)
!265 = !DILabel(scope: !262, name: "store", file: !1, line: 87)
!266 = !DILocation(line: 0, scope: !240)
!267 = !DILocation(line: 79, column: 3, scope: !240)
!268 = !DILocation(line: 0, scope: !269)
!269 = distinct !DILexicalBlock(scope: !262, file: !1, line: 86, column: 3)
!270 = !DILocation(line: 79, column: 9, scope: !264)
!271 = !DILocation(line: 0, scope: !272)
!272 = distinct !DILexicalBlock(scope: !273, file: !1, line: 80, column: 33)
!273 = distinct !DILexicalBlock(scope: !274, file: !1, line: 80, column: 10)
!274 = distinct !DILexicalBlock(scope: !262, file: !1, line: 80, column: 10)
!275 = !DILocation(line: 80, column: 10, scope: !274)
!276 = !DILocation(line: 81, column: 29, scope: !272)
!277 = !DILocation(line: 81, column: 16, scope: !272)
!278 = !DILocation(line: 81, column: 4, scope: !272)
!279 = !DILocation(line: 81, column: 14, scope: !272)
!280 = !DILocation(line: 80, column: 30, scope: !273)
!281 = !DILocation(line: 80, column: 23, scope: !273)
!282 = distinct !{!282, !275, !283}
!283 = !DILocation(line: 83, column: 3, scope: !274)
!284 = !DILocation(line: 84, column: 11, scope: !262)
!285 = !DILocation(line: 85, column: 11, scope: !262)
!286 = !DILocation(line: 86, column: 3, scope: !269)
!287 = !DILocation(line: 87, column: 5, scope: !262)
!288 = !DILocation(line: 0, scope: !289)
!289 = distinct !DILexicalBlock(scope: !290, file: !1, line: 87, column: 34)
!290 = distinct !DILexicalBlock(scope: !291, file: !1, line: 87, column: 11)
!291 = distinct !DILexicalBlock(scope: !262, file: !1, line: 87, column: 11)
!292 = !DILocation(line: 87, column: 11, scope: !291)
!293 = !DILocation(line: 88, column: 24, scope: !289)
!294 = !DILocation(line: 88, column: 17, scope: !289)
!295 = !DILocation(line: 88, column: 4, scope: !289)
!296 = !DILocation(line: 88, column: 22, scope: !289)
!297 = !DILocation(line: 87, column: 31, scope: !290)
!298 = !DILocation(line: 87, column: 24, scope: !290)
!299 = distinct !{!299, !292, !300}
!300 = !DILocation(line: 90, column: 3, scope: !291)
!301 = !DILocation(line: 79, column: 35, scope: !263)
!302 = !DILocation(line: 79, column: 26, scope: !263)
!303 = distinct !{!303, !270, !304}
!304 = !DILocation(line: 91, column: 2, scope: !264)
!305 = !DILocation(line: 92, column: 1, scope: !240)
!306 = distinct !DISubprogram(name: "step4", scope: !1, file: !1, line: 93, type: !8, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !307)
!307 = !{!308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327}
!308 = !DILocalVariable(name: "work_x", arg: 1, scope: !306, file: !1, line: 93, type: !10)
!309 = !DILocalVariable(name: "work_y", arg: 2, scope: !306, file: !1, line: 93, type: !10)
!310 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !306, file: !1, line: 93, type: !10)
!311 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !306, file: !1, line: 94, type: !10)
!312 = !DILocalVariable(name: "data_x", arg: 5, scope: !306, file: !1, line: 94, type: !10)
!313 = !DILocalVariable(name: "data_y", arg: 6, scope: !306, file: !1, line: 94, type: !10)
!314 = !DILocalVariable(name: "smem", arg: 7, scope: !306, file: !1, line: 94, type: !10)
!315 = !DILocalVariable(name: "reversed", arg: 8, scope: !306, file: !1, line: 95, type: !10)
!316 = !DILocalVariable(name: "sin_64", arg: 9, scope: !306, file: !1, line: 96, type: !12)
!317 = !DILocalVariable(name: "cos_64", arg: 10, scope: !306, file: !1, line: 97, type: !12)
!318 = !DILocalVariable(name: "sin_512", arg: 11, scope: !306, file: !1, line: 98, type: !12)
!319 = !DILocalVariable(name: "cos_512", arg: 12, scope: !306, file: !1, line: 99, type: !12)
!320 = !DILocalVariable(name: "tid", scope: !306, file: !1, line: 102, type: !11)
!321 = !DILocalVariable(name: "hi", scope: !306, file: !1, line: 102, type: !11)
!322 = !DILocalVariable(name: "lo", scope: !306, file: !1, line: 102, type: !11)
!323 = !DILocalVariable(name: "i", scope: !306, file: !1, line: 102, type: !11)
!324 = !DILocalVariable(name: "j", scope: !306, file: !1, line: 102, type: !11)
!325 = !DILocalVariable(name: "stride", scope: !306, file: !1, line: 102, type: !11)
!326 = !DILabel(scope: !306, name: "outer", file: !1, line: 104)
!327 = !DILabel(scope: !328, name: "load", file: !1, line: 105)
!328 = distinct !DILexicalBlock(scope: !329, file: !1, line: 104, column: 38)
!329 = distinct !DILexicalBlock(scope: !330, file: !1, line: 104, column: 9)
!330 = distinct !DILexicalBlock(scope: !306, file: !1, line: 104, column: 9)
!331 = !DILocation(line: 0, scope: !306)
!332 = !DILocation(line: 104, column: 3, scope: !306)
!333 = !DILocation(line: 0, scope: !334)
!334 = distinct !DILexicalBlock(scope: !328, file: !1, line: 111, column: 3)
!335 = !DILocation(line: 104, column: 9, scope: !330)
!336 = !DILocation(line: 0, scope: !337)
!337 = distinct !DILexicalBlock(scope: !338, file: !1, line: 105, column: 33)
!338 = distinct !DILexicalBlock(scope: !339, file: !1, line: 105, column: 10)
!339 = distinct !DILexicalBlock(scope: !328, file: !1, line: 105, column: 10)
!340 = !DILocation(line: 105, column: 10, scope: !339)
!341 = !DILocation(line: 107, column: 29, scope: !337)
!342 = !DILocation(line: 107, column: 16, scope: !337)
!343 = !DILocation(line: 107, column: 4, scope: !337)
!344 = !DILocation(line: 107, column: 14, scope: !337)
!345 = !DILocation(line: 105, column: 30, scope: !338)
!346 = !DILocation(line: 105, column: 23, scope: !338)
!347 = distinct !{!347, !340, !348}
!348 = !DILocation(line: 108, column: 3, scope: !339)
!349 = !DILocation(line: 111, column: 3, scope: !334)
!350 = !DILocation(line: 110, column: 11, scope: !328)
!351 = !DILocation(line: 104, column: 35, scope: !329)
!352 = !DILocation(line: 104, column: 26, scope: !329)
!353 = distinct !{!353, !335, !354}
!354 = !DILocation(line: 112, column: 2, scope: !330)
!355 = !DILocation(line: 113, column: 1, scope: !306)
!356 = distinct !DISubprogram(name: "step5", scope: !1, file: !1, line: 114, type: !8, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !381}
!358 = !DILocalVariable(name: "work_x", arg: 1, scope: !356, file: !1, line: 114, type: !10)
!359 = !DILocalVariable(name: "work_y", arg: 2, scope: !356, file: !1, line: 114, type: !10)
!360 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !356, file: !1, line: 114, type: !10)
!361 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !356, file: !1, line: 115, type: !10)
!362 = !DILocalVariable(name: "data_x", arg: 5, scope: !356, file: !1, line: 115, type: !10)
!363 = !DILocalVariable(name: "data_y", arg: 6, scope: !356, file: !1, line: 115, type: !10)
!364 = !DILocalVariable(name: "smem", arg: 7, scope: !356, file: !1, line: 115, type: !10)
!365 = !DILocalVariable(name: "reversed", arg: 8, scope: !356, file: !1, line: 116, type: !10)
!366 = !DILocalVariable(name: "sin_64", arg: 9, scope: !356, file: !1, line: 117, type: !12)
!367 = !DILocalVariable(name: "cos_64", arg: 10, scope: !356, file: !1, line: 118, type: !12)
!368 = !DILocalVariable(name: "sin_512", arg: 11, scope: !356, file: !1, line: 119, type: !12)
!369 = !DILocalVariable(name: "cos_512", arg: 12, scope: !356, file: !1, line: 120, type: !12)
!370 = !DILocalVariable(name: "tid", scope: !356, file: !1, line: 124, type: !11)
!371 = !DILocalVariable(name: "hi", scope: !356, file: !1, line: 124, type: !11)
!372 = !DILocalVariable(name: "lo", scope: !356, file: !1, line: 124, type: !11)
!373 = !DILocalVariable(name: "i", scope: !356, file: !1, line: 124, type: !11)
!374 = !DILocalVariable(name: "j", scope: !356, file: !1, line: 124, type: !11)
!375 = !DILocalVariable(name: "stride", scope: !356, file: !1, line: 124, type: !11)
!376 = !DILabel(scope: !356, name: "outer", file: !1, line: 126)
!377 = !DILabel(scope: !378, name: "load", file: !1, line: 127)
!378 = distinct !DILexicalBlock(scope: !379, file: !1, line: 126, column: 38)
!379 = distinct !DILexicalBlock(scope: !380, file: !1, line: 126, column: 9)
!380 = distinct !DILexicalBlock(scope: !356, file: !1, line: 126, column: 9)
!381 = !DILabel(scope: !378, name: "store", file: !1, line: 134)
!382 = !DILocation(line: 0, scope: !356)
!383 = !DILocation(line: 126, column: 3, scope: !356)
!384 = !DILocation(line: 0, scope: !385)
!385 = distinct !DILexicalBlock(scope: !378, file: !1, line: 133, column: 3)
!386 = !DILocation(line: 126, column: 9, scope: !380)
!387 = !DILocation(line: 0, scope: !388)
!388 = distinct !DILexicalBlock(scope: !389, file: !1, line: 127, column: 33)
!389 = distinct !DILexicalBlock(scope: !390, file: !1, line: 127, column: 10)
!390 = distinct !DILexicalBlock(scope: !378, file: !1, line: 127, column: 10)
!391 = !DILocation(line: 127, column: 10, scope: !390)
!392 = !DILocation(line: 129, column: 29, scope: !388)
!393 = !DILocation(line: 129, column: 16, scope: !388)
!394 = !DILocation(line: 129, column: 4, scope: !388)
!395 = !DILocation(line: 129, column: 14, scope: !388)
!396 = !DILocation(line: 127, column: 30, scope: !389)
!397 = !DILocation(line: 127, column: 23, scope: !389)
!398 = distinct !{!398, !391, !399}
!399 = !DILocation(line: 130, column: 3, scope: !390)
!400 = !DILocation(line: 131, column: 11, scope: !378)
!401 = !DILocation(line: 132, column: 11, scope: !378)
!402 = !DILocation(line: 133, column: 3, scope: !385)
!403 = !DILocation(line: 134, column: 5, scope: !378)
!404 = !DILocation(line: 0, scope: !405)
!405 = distinct !DILexicalBlock(scope: !406, file: !1, line: 134, column: 34)
!406 = distinct !DILexicalBlock(scope: !407, file: !1, line: 134, column: 11)
!407 = distinct !DILexicalBlock(scope: !378, file: !1, line: 134, column: 11)
!408 = !DILocation(line: 134, column: 11, scope: !407)
!409 = !DILocation(line: 136, column: 24, scope: !405)
!410 = !DILocation(line: 136, column: 17, scope: !405)
!411 = !DILocation(line: 136, column: 4, scope: !405)
!412 = !DILocation(line: 136, column: 22, scope: !405)
!413 = !DILocation(line: 134, column: 31, scope: !406)
!414 = !DILocation(line: 134, column: 24, scope: !406)
!415 = distinct !{!415, !408, !416}
!416 = !DILocation(line: 137, column: 3, scope: !407)
!417 = !DILocation(line: 126, column: 35, scope: !379)
!418 = !DILocation(line: 126, column: 26, scope: !379)
!419 = distinct !{!419, !386, !420}
!420 = !DILocation(line: 138, column: 2, scope: !380)
!421 = !DILocation(line: 140, column: 1, scope: !356)
!422 = distinct !DISubprogram(name: "step6", scope: !1, file: !1, line: 141, type: !8, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !447, !448, !449, !450, !451, !452, !453, !454, !456, !457, !459, !460, !462, !463, !465, !466, !468, !469, !470, !472, !473, !475, !476, !478, !479, !481, !482, !484, !485, !486, !488, !489, !491, !492, !494, !495, !497, !498, !502, !503, !504, !505, !506, !507}
!424 = !DILocalVariable(name: "work_x", arg: 1, scope: !422, file: !1, line: 141, type: !10)
!425 = !DILocalVariable(name: "work_y", arg: 2, scope: !422, file: !1, line: 141, type: !10)
!426 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !422, file: !1, line: 141, type: !10)
!427 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !422, file: !1, line: 142, type: !10)
!428 = !DILocalVariable(name: "data_x", arg: 5, scope: !422, file: !1, line: 142, type: !10)
!429 = !DILocalVariable(name: "data_y", arg: 6, scope: !422, file: !1, line: 142, type: !10)
!430 = !DILocalVariable(name: "smem", arg: 7, scope: !422, file: !1, line: 142, type: !10)
!431 = !DILocalVariable(name: "reversed", arg: 8, scope: !422, file: !1, line: 143, type: !10)
!432 = !DILocalVariable(name: "sin_64", arg: 9, scope: !422, file: !1, line: 144, type: !12)
!433 = !DILocalVariable(name: "cos_64", arg: 10, scope: !422, file: !1, line: 145, type: !12)
!434 = !DILocalVariable(name: "sin_512", arg: 11, scope: !422, file: !1, line: 146, type: !12)
!435 = !DILocalVariable(name: "cos_512", arg: 12, scope: !422, file: !1, line: 147, type: !12)
!436 = !DILocalVariable(name: "tid", scope: !422, file: !1, line: 150, type: !11)
!437 = !DILocalVariable(name: "hi", scope: !422, file: !1, line: 150, type: !11)
!438 = !DILocalVariable(name: "lo", scope: !422, file: !1, line: 150, type: !11)
!439 = !DILocalVariable(name: "i", scope: !422, file: !1, line: 150, type: !11)
!440 = !DILocalVariable(name: "j", scope: !422, file: !1, line: 150, type: !11)
!441 = !DILocalVariable(name: "stride", scope: !422, file: !1, line: 150, type: !11)
!442 = !DILocalVariable(name: "exp_1_8_x", scope: !443, file: !1, line: 161, type: !11)
!443 = distinct !DILexicalBlock(scope: !444, file: !1, line: 161, column: 3)
!444 = distinct !DILexicalBlock(scope: !445, file: !1, line: 153, column: 38)
!445 = distinct !DILexicalBlock(scope: !446, file: !1, line: 153, column: 9)
!446 = distinct !DILexicalBlock(scope: !422, file: !1, line: 153, column: 9)
!447 = !DILocalVariable(name: "exp_1_4_x", scope: !443, file: !1, line: 161, type: !11)
!448 = !DILocalVariable(name: "exp_3_8_x", scope: !443, file: !1, line: 161, type: !11)
!449 = !DILocalVariable(name: "exp_1_8_y", scope: !443, file: !1, line: 161, type: !11)
!450 = !DILocalVariable(name: "exp_1_4_y", scope: !443, file: !1, line: 161, type: !11)
!451 = !DILocalVariable(name: "exp_3_8_y", scope: !443, file: !1, line: 161, type: !11)
!452 = !DILocalVariable(name: "tmp_1", scope: !443, file: !1, line: 161, type: !11)
!453 = !DILocalVariable(name: "tmp_2", scope: !443, file: !1, line: 161, type: !11)
!454 = !DILocalVariable(name: "c0_x", scope: !455, file: !1, line: 161, type: !11)
!455 = distinct !DILexicalBlock(scope: !443, file: !1, line: 161, column: 3)
!456 = !DILocalVariable(name: "c0_y", scope: !455, file: !1, line: 161, type: !11)
!457 = !DILocalVariable(name: "c0_x", scope: !458, file: !1, line: 161, type: !11)
!458 = distinct !DILexicalBlock(scope: !443, file: !1, line: 161, column: 3)
!459 = !DILocalVariable(name: "c0_y", scope: !458, file: !1, line: 161, type: !11)
!460 = !DILocalVariable(name: "c0_x", scope: !461, file: !1, line: 161, type: !11)
!461 = distinct !DILexicalBlock(scope: !443, file: !1, line: 161, column: 3)
!462 = !DILocalVariable(name: "c0_y", scope: !461, file: !1, line: 161, type: !11)
!463 = !DILocalVariable(name: "c0_x", scope: !464, file: !1, line: 161, type: !11)
!464 = distinct !DILexicalBlock(scope: !443, file: !1, line: 161, column: 3)
!465 = !DILocalVariable(name: "c0_y", scope: !464, file: !1, line: 161, type: !11)
!466 = !DILocalVariable(name: "exp_1_44_x", scope: !467, file: !1, line: 161, type: !11)
!467 = distinct !DILexicalBlock(scope: !443, file: !1, line: 161, column: 3)
!468 = !DILocalVariable(name: "exp_1_44_y", scope: !467, file: !1, line: 161, type: !11)
!469 = !DILocalVariable(name: "tmp", scope: !467, file: !1, line: 161, type: !11)
!470 = !DILocalVariable(name: "c0_x", scope: !471, file: !1, line: 161, type: !11)
!471 = distinct !DILexicalBlock(scope: !467, file: !1, line: 161, column: 3)
!472 = !DILocalVariable(name: "c0_y", scope: !471, file: !1, line: 161, type: !11)
!473 = !DILocalVariable(name: "c0_x", scope: !474, file: !1, line: 161, type: !11)
!474 = distinct !DILexicalBlock(scope: !467, file: !1, line: 161, column: 3)
!475 = !DILocalVariable(name: "c0_y", scope: !474, file: !1, line: 161, type: !11)
!476 = !DILocalVariable(name: "c0_x", scope: !477, file: !1, line: 161, type: !11)
!477 = distinct !DILexicalBlock(scope: !467, file: !1, line: 161, column: 3)
!478 = !DILocalVariable(name: "c0_y", scope: !477, file: !1, line: 161, type: !11)
!479 = !DILocalVariable(name: "c0_x", scope: !480, file: !1, line: 161, type: !11)
!480 = distinct !DILexicalBlock(scope: !467, file: !1, line: 161, column: 3)
!481 = !DILocalVariable(name: "c0_y", scope: !480, file: !1, line: 161, type: !11)
!482 = !DILocalVariable(name: "exp_1_44_x", scope: !483, file: !1, line: 161, type: !11)
!483 = distinct !DILexicalBlock(scope: !443, file: !1, line: 161, column: 3)
!484 = !DILocalVariable(name: "exp_1_44_y", scope: !483, file: !1, line: 161, type: !11)
!485 = !DILocalVariable(name: "tmp", scope: !483, file: !1, line: 161, type: !11)
!486 = !DILocalVariable(name: "c0_x", scope: !487, file: !1, line: 161, type: !11)
!487 = distinct !DILexicalBlock(scope: !483, file: !1, line: 161, column: 3)
!488 = !DILocalVariable(name: "c0_y", scope: !487, file: !1, line: 161, type: !11)
!489 = !DILocalVariable(name: "c0_x", scope: !490, file: !1, line: 161, type: !11)
!490 = distinct !DILexicalBlock(scope: !483, file: !1, line: 161, column: 3)
!491 = !DILocalVariable(name: "c0_y", scope: !490, file: !1, line: 161, type: !11)
!492 = !DILocalVariable(name: "c0_x", scope: !493, file: !1, line: 161, type: !11)
!493 = distinct !DILexicalBlock(scope: !483, file: !1, line: 161, column: 3)
!494 = !DILocalVariable(name: "c0_y", scope: !493, file: !1, line: 161, type: !11)
!495 = !DILocalVariable(name: "c0_x", scope: !496, file: !1, line: 161, type: !11)
!496 = distinct !DILexicalBlock(scope: !483, file: !1, line: 161, column: 3)
!497 = !DILocalVariable(name: "c0_y", scope: !496, file: !1, line: 161, type: !11)
!498 = !DILocalVariable(name: "A_x", scope: !499, file: !1, line: 169, type: !11)
!499 = distinct !DILexicalBlock(scope: !500, file: !1, line: 168, column: 37)
!500 = distinct !DILexicalBlock(scope: !501, file: !1, line: 168, column: 15)
!501 = distinct !DILexicalBlock(scope: !444, file: !1, line: 168, column: 15)
!502 = !DILocalVariable(name: "A_y", scope: !499, file: !1, line: 169, type: !11)
!503 = !DILocalVariable(name: "tmp", scope: !499, file: !1, line: 169, type: !11)
!504 = !DILabel(scope: !422, name: "outer", file: !1, line: 153)
!505 = !DILabel(scope: !444, name: "load", file: !1, line: 155)
!506 = !DILabel(scope: !444, name: "twiddles", file: !1, line: 168)
!507 = !DILabel(scope: !444, name: "save", file: !1, line: 178)
!508 = !DILocation(line: 0, scope: !422)
!509 = !DILocation(line: 153, column: 3, scope: !422)
!510 = !DILocation(line: 0, scope: !455)
!511 = !DILocation(line: 0, scope: !458)
!512 = !DILocation(line: 0, scope: !461)
!513 = !DILocation(line: 0, scope: !464)
!514 = !DILocation(line: 153, column: 9, scope: !446)
!515 = !DILocation(line: 0, scope: !516)
!516 = distinct !DILexicalBlock(scope: !517, file: !1, line: 155, column: 33)
!517 = distinct !DILexicalBlock(scope: !518, file: !1, line: 155, column: 10)
!518 = distinct !DILexicalBlock(scope: !444, file: !1, line: 155, column: 10)
!519 = !DILocation(line: 155, column: 10, scope: !518)
!520 = !DILocation(line: 156, column: 29, scope: !516)
!521 = !DILocation(line: 156, column: 16, scope: !516)
!522 = !DILocation(line: 156, column: 4, scope: !516)
!523 = !DILocation(line: 156, column: 14, scope: !516)
!524 = !DILocation(line: 157, column: 16, scope: !516)
!525 = !DILocation(line: 157, column: 4, scope: !516)
!526 = !DILocation(line: 157, column: 14, scope: !516)
!527 = !DILocation(line: 155, column: 30, scope: !517)
!528 = !DILocation(line: 155, column: 23, scope: !517)
!529 = distinct !{!529, !519, !530}
!530 = !DILocation(line: 158, column: 3, scope: !518)
!531 = !DILocation(line: 0, scope: !443)
!532 = !DILocation(line: 161, column: 3, scope: !455)
!533 = !DILocation(line: 161, column: 3, scope: !458)
!534 = !DILocation(line: 161, column: 3, scope: !461)
!535 = !DILocation(line: 161, column: 3, scope: !464)
!536 = !DILocation(line: 161, column: 3, scope: !443)
!537 = !DILocation(line: 0, scope: !467)
!538 = !DILocation(line: 161, column: 3, scope: !471)
!539 = !DILocation(line: 0, scope: !471)
!540 = !DILocation(line: 161, column: 3, scope: !474)
!541 = !DILocation(line: 0, scope: !474)
!542 = !DILocation(line: 161, column: 3, scope: !467)
!543 = !DILocation(line: 161, column: 3, scope: !477)
!544 = !DILocation(line: 0, scope: !477)
!545 = !DILocation(line: 161, column: 3, scope: !480)
!546 = !DILocation(line: 0, scope: !480)
!547 = !DILocation(line: 0, scope: !483)
!548 = !DILocation(line: 161, column: 3, scope: !487)
!549 = !DILocation(line: 0, scope: !487)
!550 = !DILocation(line: 161, column: 3, scope: !490)
!551 = !DILocation(line: 0, scope: !490)
!552 = !DILocation(line: 161, column: 3, scope: !483)
!553 = !DILocation(line: 161, column: 3, scope: !493)
!554 = !DILocation(line: 0, scope: !493)
!555 = !DILocation(line: 161, column: 3, scope: !496)
!556 = !DILocation(line: 0, scope: !496)
!557 = !DILocation(line: 164, column: 11, scope: !444)
!558 = !DILocation(line: 168, column: 5, scope: !444)
!559 = !DILocation(line: 0, scope: !499)
!560 = !DILocation(line: 168, column: 15, scope: !501)
!561 = !DILocation(line: 0, scope: !562)
!562 = distinct !DILexicalBlock(scope: !563, file: !1, line: 178, column: 33)
!563 = distinct !DILexicalBlock(scope: !564, file: !1, line: 178, column: 10)
!564 = distinct !DILexicalBlock(scope: !444, file: !1, line: 178, column: 10)
!565 = !DILocation(line: 178, column: 10, scope: !564)
!566 = !DILocation(line: 170, column: 32, scope: !499)
!567 = !DILocation(line: 170, column: 19, scope: !499)
!568 = !DILocation(line: 171, column: 19, scope: !499)
!569 = !DILocation(line: 172, column: 19, scope: !499)
!570 = !DILocation(line: 173, column: 25, scope: !499)
!571 = !DILocation(line: 173, column: 23, scope: !499)
!572 = !DILocation(line: 174, column: 25, scope: !499)
!573 = !DILocation(line: 174, column: 23, scope: !499)
!574 = !DILocation(line: 168, column: 34, scope: !500)
!575 = !DILocation(line: 168, column: 28, scope: !500)
!576 = distinct !{!576, !560, !577}
!577 = !DILocation(line: 175, column: 5, scope: !501)
!578 = !DILocation(line: 179, column: 24, scope: !562)
!579 = !DILocation(line: 179, column: 17, scope: !562)
!580 = !DILocation(line: 179, column: 4, scope: !562)
!581 = !DILocation(line: 179, column: 22, scope: !562)
!582 = !DILocation(line: 180, column: 24, scope: !562)
!583 = !DILocation(line: 180, column: 4, scope: !562)
!584 = !DILocation(line: 180, column: 22, scope: !562)
!585 = !DILocation(line: 178, column: 30, scope: !563)
!586 = !DILocation(line: 178, column: 23, scope: !563)
!587 = distinct !{!587, !565, !588}
!588 = !DILocation(line: 181, column: 3, scope: !564)
!589 = !DILocation(line: 153, column: 35, scope: !445)
!590 = !DILocation(line: 153, column: 26, scope: !445)
!591 = distinct !{!591, !514, !592}
!592 = !DILocation(line: 182, column: 2, scope: !446)
!593 = !DILocation(line: 184, column: 1, scope: !422)
!594 = distinct !DISubprogram(name: "step7", scope: !1, file: !1, line: 185, type: !8, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !595)
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!596 = !DILocalVariable(name: "work_x", arg: 1, scope: !594, file: !1, line: 185, type: !10)
!597 = !DILocalVariable(name: "work_y", arg: 2, scope: !594, file: !1, line: 185, type: !10)
!598 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !594, file: !1, line: 185, type: !10)
!599 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !594, file: !1, line: 186, type: !10)
!600 = !DILocalVariable(name: "data_x", arg: 5, scope: !594, file: !1, line: 186, type: !10)
!601 = !DILocalVariable(name: "data_y", arg: 6, scope: !594, file: !1, line: 186, type: !10)
!602 = !DILocalVariable(name: "smem", arg: 7, scope: !594, file: !1, line: 186, type: !10)
!603 = !DILocalVariable(name: "reversed", arg: 8, scope: !594, file: !1, line: 187, type: !10)
!604 = !DILocalVariable(name: "sin_64", arg: 9, scope: !594, file: !1, line: 188, type: !12)
!605 = !DILocalVariable(name: "cos_64", arg: 10, scope: !594, file: !1, line: 189, type: !12)
!606 = !DILocalVariable(name: "sin_512", arg: 11, scope: !594, file: !1, line: 190, type: !12)
!607 = !DILocalVariable(name: "cos_512", arg: 12, scope: !594, file: !1, line: 191, type: !12)
!608 = !DILocalVariable(name: "tid", scope: !594, file: !1, line: 194, type: !11)
!609 = !DILocalVariable(name: "hi", scope: !594, file: !1, line: 194, type: !11)
!610 = !DILocalVariable(name: "lo", scope: !594, file: !1, line: 194, type: !11)
!611 = !DILocalVariable(name: "i", scope: !594, file: !1, line: 194, type: !11)
!612 = !DILocalVariable(name: "j", scope: !594, file: !1, line: 194, type: !11)
!613 = !DILocalVariable(name: "stride", scope: !594, file: !1, line: 194, type: !11)
!614 = !DILabel(scope: !594, name: "outer", file: !1, line: 197)
!615 = !DILabel(scope: !616, name: "load", file: !1, line: 198)
!616 = distinct !DILexicalBlock(scope: !617, file: !1, line: 197, column: 38)
!617 = distinct !DILexicalBlock(scope: !618, file: !1, line: 197, column: 9)
!618 = distinct !DILexicalBlock(scope: !594, file: !1, line: 197, column: 9)
!619 = !DILocation(line: 0, scope: !594)
!620 = !DILocation(line: 197, column: 3, scope: !594)
!621 = !DILocation(line: 0, scope: !622)
!622 = distinct !DILexicalBlock(scope: !616, file: !1, line: 204, column: 3)
!623 = !DILocation(line: 197, column: 9, scope: !618)
!624 = !DILocation(line: 0, scope: !625)
!625 = distinct !DILexicalBlock(scope: !626, file: !1, line: 198, column: 33)
!626 = distinct !DILexicalBlock(scope: !627, file: !1, line: 198, column: 10)
!627 = distinct !DILexicalBlock(scope: !616, file: !1, line: 198, column: 10)
!628 = !DILocation(line: 198, column: 10, scope: !627)
!629 = !DILocation(line: 199, column: 29, scope: !625)
!630 = !DILocation(line: 199, column: 16, scope: !625)
!631 = !DILocation(line: 199, column: 4, scope: !625)
!632 = !DILocation(line: 199, column: 14, scope: !625)
!633 = !DILocation(line: 198, column: 30, scope: !626)
!634 = !DILocation(line: 198, column: 23, scope: !626)
!635 = distinct !{!635, !628, !636}
!636 = !DILocation(line: 201, column: 3, scope: !627)
!637 = !DILocation(line: 204, column: 3, scope: !622)
!638 = !DILocation(line: 203, column: 11, scope: !616)
!639 = !DILocation(line: 197, column: 35, scope: !617)
!640 = !DILocation(line: 197, column: 26, scope: !617)
!641 = distinct !{!641, !623, !642}
!642 = !DILocation(line: 205, column: 2, scope: !618)
!643 = !DILocation(line: 207, column: 1, scope: !594)
!644 = distinct !DISubprogram(name: "step8", scope: !1, file: !1, line: 208, type: !8, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !645)
!645 = !{!646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !669}
!646 = !DILocalVariable(name: "work_x", arg: 1, scope: !644, file: !1, line: 208, type: !10)
!647 = !DILocalVariable(name: "work_y", arg: 2, scope: !644, file: !1, line: 208, type: !10)
!648 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !644, file: !1, line: 208, type: !10)
!649 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !644, file: !1, line: 209, type: !10)
!650 = !DILocalVariable(name: "data_x", arg: 5, scope: !644, file: !1, line: 209, type: !10)
!651 = !DILocalVariable(name: "data_y", arg: 6, scope: !644, file: !1, line: 209, type: !10)
!652 = !DILocalVariable(name: "smem", arg: 7, scope: !644, file: !1, line: 209, type: !10)
!653 = !DILocalVariable(name: "reversed", arg: 8, scope: !644, file: !1, line: 210, type: !10)
!654 = !DILocalVariable(name: "sin_64", arg: 9, scope: !644, file: !1, line: 211, type: !12)
!655 = !DILocalVariable(name: "cos_64", arg: 10, scope: !644, file: !1, line: 212, type: !12)
!656 = !DILocalVariable(name: "sin_512", arg: 11, scope: !644, file: !1, line: 213, type: !12)
!657 = !DILocalVariable(name: "cos_512", arg: 12, scope: !644, file: !1, line: 214, type: !12)
!658 = !DILocalVariable(name: "tid", scope: !644, file: !1, line: 217, type: !11)
!659 = !DILocalVariable(name: "hi", scope: !644, file: !1, line: 217, type: !11)
!660 = !DILocalVariable(name: "lo", scope: !644, file: !1, line: 217, type: !11)
!661 = !DILocalVariable(name: "i", scope: !644, file: !1, line: 217, type: !11)
!662 = !DILocalVariable(name: "j", scope: !644, file: !1, line: 217, type: !11)
!663 = !DILocalVariable(name: "stride", scope: !644, file: !1, line: 217, type: !11)
!664 = !DILabel(scope: !644, name: "outer", file: !1, line: 220)
!665 = !DILabel(scope: !666, name: "load", file: !1, line: 221)
!666 = distinct !DILexicalBlock(scope: !667, file: !1, line: 220, column: 38)
!667 = distinct !DILexicalBlock(scope: !668, file: !1, line: 220, column: 9)
!668 = distinct !DILexicalBlock(scope: !644, file: !1, line: 220, column: 9)
!669 = !DILabel(scope: !666, name: "store", file: !1, line: 228)
!670 = !DILocation(line: 0, scope: !644)
!671 = !DILocation(line: 220, column: 3, scope: !644)
!672 = !DILocation(line: 0, scope: !673)
!673 = distinct !DILexicalBlock(scope: !666, file: !1, line: 227, column: 3)
!674 = !DILocation(line: 220, column: 9, scope: !668)
!675 = !DILocation(line: 0, scope: !676)
!676 = distinct !DILexicalBlock(scope: !677, file: !1, line: 221, column: 33)
!677 = distinct !DILexicalBlock(scope: !678, file: !1, line: 221, column: 10)
!678 = distinct !DILexicalBlock(scope: !666, file: !1, line: 221, column: 10)
!679 = !DILocation(line: 221, column: 10, scope: !678)
!680 = !DILocation(line: 222, column: 29, scope: !676)
!681 = !DILocation(line: 222, column: 16, scope: !676)
!682 = !DILocation(line: 222, column: 4, scope: !676)
!683 = !DILocation(line: 222, column: 14, scope: !676)
!684 = !DILocation(line: 221, column: 30, scope: !677)
!685 = !DILocation(line: 221, column: 23, scope: !677)
!686 = distinct !{!686, !679, !687}
!687 = !DILocation(line: 224, column: 3, scope: !678)
!688 = !DILocation(line: 225, column: 11, scope: !666)
!689 = !DILocation(line: 226, column: 11, scope: !666)
!690 = !DILocation(line: 227, column: 3, scope: !673)
!691 = !DILocation(line: 228, column: 5, scope: !666)
!692 = !DILocation(line: 0, scope: !693)
!693 = distinct !DILexicalBlock(scope: !694, file: !1, line: 228, column: 34)
!694 = distinct !DILexicalBlock(scope: !695, file: !1, line: 228, column: 11)
!695 = distinct !DILexicalBlock(scope: !666, file: !1, line: 228, column: 11)
!696 = !DILocation(line: 228, column: 11, scope: !695)
!697 = !DILocation(line: 229, column: 24, scope: !693)
!698 = !DILocation(line: 229, column: 17, scope: !693)
!699 = !DILocation(line: 229, column: 4, scope: !693)
!700 = !DILocation(line: 229, column: 22, scope: !693)
!701 = !DILocation(line: 228, column: 31, scope: !694)
!702 = !DILocation(line: 228, column: 24, scope: !694)
!703 = distinct !{!703, !696, !704}
!704 = !DILocation(line: 231, column: 3, scope: !695)
!705 = !DILocation(line: 220, column: 35, scope: !667)
!706 = !DILocation(line: 220, column: 26, scope: !667)
!707 = distinct !{!707, !674, !708}
!708 = !DILocation(line: 232, column: 2, scope: !668)
!709 = !DILocation(line: 234, column: 1, scope: !644)
!710 = distinct !DISubprogram(name: "step9", scope: !1, file: !1, line: 235, type: !8, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !711)
!711 = !{!712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731}
!712 = !DILocalVariable(name: "work_x", arg: 1, scope: !710, file: !1, line: 235, type: !10)
!713 = !DILocalVariable(name: "work_y", arg: 2, scope: !710, file: !1, line: 235, type: !10)
!714 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !710, file: !1, line: 235, type: !10)
!715 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !710, file: !1, line: 236, type: !10)
!716 = !DILocalVariable(name: "data_x", arg: 5, scope: !710, file: !1, line: 236, type: !10)
!717 = !DILocalVariable(name: "data_y", arg: 6, scope: !710, file: !1, line: 236, type: !10)
!718 = !DILocalVariable(name: "smem", arg: 7, scope: !710, file: !1, line: 236, type: !10)
!719 = !DILocalVariable(name: "reversed", arg: 8, scope: !710, file: !1, line: 237, type: !10)
!720 = !DILocalVariable(name: "sin_64", arg: 9, scope: !710, file: !1, line: 238, type: !12)
!721 = !DILocalVariable(name: "cos_64", arg: 10, scope: !710, file: !1, line: 239, type: !12)
!722 = !DILocalVariable(name: "sin_512", arg: 11, scope: !710, file: !1, line: 240, type: !12)
!723 = !DILocalVariable(name: "cos_512", arg: 12, scope: !710, file: !1, line: 241, type: !12)
!724 = !DILocalVariable(name: "tid", scope: !710, file: !1, line: 245, type: !11)
!725 = !DILocalVariable(name: "hi", scope: !710, file: !1, line: 245, type: !11)
!726 = !DILocalVariable(name: "lo", scope: !710, file: !1, line: 245, type: !11)
!727 = !DILocalVariable(name: "i", scope: !710, file: !1, line: 245, type: !11)
!728 = !DILocalVariable(name: "j", scope: !710, file: !1, line: 245, type: !11)
!729 = !DILocalVariable(name: "stride", scope: !710, file: !1, line: 245, type: !11)
!730 = !DILabel(scope: !710, name: "outer", file: !1, line: 247)
!731 = !DILabel(scope: !732, name: "load", file: !1, line: 248)
!732 = distinct !DILexicalBlock(scope: !733, file: !1, line: 247, column: 38)
!733 = distinct !DILexicalBlock(scope: !734, file: !1, line: 247, column: 9)
!734 = distinct !DILexicalBlock(scope: !710, file: !1, line: 247, column: 9)
!735 = !DILocation(line: 0, scope: !710)
!736 = !DILocation(line: 247, column: 3, scope: !710)
!737 = !DILocation(line: 0, scope: !738)
!738 = distinct !DILexicalBlock(scope: !732, file: !1, line: 254, column: 3)
!739 = !DILocation(line: 247, column: 9, scope: !734)
!740 = !DILocation(line: 0, scope: !741)
!741 = distinct !DILexicalBlock(scope: !742, file: !1, line: 248, column: 33)
!742 = distinct !DILexicalBlock(scope: !743, file: !1, line: 248, column: 10)
!743 = distinct !DILexicalBlock(scope: !732, file: !1, line: 248, column: 10)
!744 = !DILocation(line: 248, column: 10, scope: !743)
!745 = !DILocation(line: 250, column: 29, scope: !741)
!746 = !DILocation(line: 250, column: 16, scope: !741)
!747 = !DILocation(line: 250, column: 4, scope: !741)
!748 = !DILocation(line: 250, column: 14, scope: !741)
!749 = !DILocation(line: 248, column: 30, scope: !742)
!750 = !DILocation(line: 248, column: 23, scope: !742)
!751 = distinct !{!751, !744, !752}
!752 = !DILocation(line: 251, column: 3, scope: !743)
!753 = !DILocation(line: 254, column: 3, scope: !738)
!754 = !DILocation(line: 253, column: 11, scope: !732)
!755 = !DILocation(line: 247, column: 35, scope: !733)
!756 = !DILocation(line: 247, column: 26, scope: !733)
!757 = distinct !{!757, !739, !758}
!758 = !DILocation(line: 255, column: 2, scope: !734)
!759 = !DILocation(line: 257, column: 1, scope: !710)
!760 = distinct !DISubprogram(name: "step10", scope: !1, file: !1, line: 258, type: !8, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !761)
!761 = !{!762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !785}
!762 = !DILocalVariable(name: "work_x", arg: 1, scope: !760, file: !1, line: 258, type: !10)
!763 = !DILocalVariable(name: "work_y", arg: 2, scope: !760, file: !1, line: 258, type: !10)
!764 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !760, file: !1, line: 258, type: !10)
!765 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !760, file: !1, line: 259, type: !10)
!766 = !DILocalVariable(name: "data_x", arg: 5, scope: !760, file: !1, line: 259, type: !10)
!767 = !DILocalVariable(name: "data_y", arg: 6, scope: !760, file: !1, line: 259, type: !10)
!768 = !DILocalVariable(name: "smem", arg: 7, scope: !760, file: !1, line: 259, type: !10)
!769 = !DILocalVariable(name: "reversed", arg: 8, scope: !760, file: !1, line: 260, type: !10)
!770 = !DILocalVariable(name: "sin_64", arg: 9, scope: !760, file: !1, line: 261, type: !12)
!771 = !DILocalVariable(name: "cos_64", arg: 10, scope: !760, file: !1, line: 262, type: !12)
!772 = !DILocalVariable(name: "sin_512", arg: 11, scope: !760, file: !1, line: 263, type: !12)
!773 = !DILocalVariable(name: "cos_512", arg: 12, scope: !760, file: !1, line: 264, type: !12)
!774 = !DILocalVariable(name: "tid", scope: !760, file: !1, line: 268, type: !11)
!775 = !DILocalVariable(name: "hi", scope: !760, file: !1, line: 268, type: !11)
!776 = !DILocalVariable(name: "lo", scope: !760, file: !1, line: 268, type: !11)
!777 = !DILocalVariable(name: "i", scope: !760, file: !1, line: 268, type: !11)
!778 = !DILocalVariable(name: "j", scope: !760, file: !1, line: 268, type: !11)
!779 = !DILocalVariable(name: "stride", scope: !760, file: !1, line: 268, type: !11)
!780 = !DILabel(scope: !760, name: "outer", file: !1, line: 270)
!781 = !DILabel(scope: !782, name: "load", file: !1, line: 271)
!782 = distinct !DILexicalBlock(scope: !783, file: !1, line: 270, column: 38)
!783 = distinct !DILexicalBlock(scope: !784, file: !1, line: 270, column: 9)
!784 = distinct !DILexicalBlock(scope: !760, file: !1, line: 270, column: 9)
!785 = !DILabel(scope: !782, name: "store", file: !1, line: 278)
!786 = !DILocation(line: 0, scope: !760)
!787 = !DILocation(line: 270, column: 3, scope: !760)
!788 = !DILocation(line: 0, scope: !789)
!789 = distinct !DILexicalBlock(scope: !782, file: !1, line: 277, column: 3)
!790 = !DILocation(line: 270, column: 9, scope: !784)
!791 = !DILocation(line: 0, scope: !792)
!792 = distinct !DILexicalBlock(scope: !793, file: !1, line: 271, column: 33)
!793 = distinct !DILexicalBlock(scope: !794, file: !1, line: 271, column: 10)
!794 = distinct !DILexicalBlock(scope: !782, file: !1, line: 271, column: 10)
!795 = !DILocation(line: 271, column: 10, scope: !794)
!796 = !DILocation(line: 273, column: 29, scope: !792)
!797 = !DILocation(line: 273, column: 16, scope: !792)
!798 = !DILocation(line: 273, column: 4, scope: !792)
!799 = !DILocation(line: 273, column: 14, scope: !792)
!800 = !DILocation(line: 271, column: 30, scope: !793)
!801 = !DILocation(line: 271, column: 23, scope: !793)
!802 = distinct !{!802, !795, !803}
!803 = !DILocation(line: 274, column: 3, scope: !794)
!804 = !DILocation(line: 275, column: 11, scope: !782)
!805 = !DILocation(line: 276, column: 11, scope: !782)
!806 = !DILocation(line: 277, column: 3, scope: !789)
!807 = !DILocation(line: 278, column: 5, scope: !782)
!808 = !DILocation(line: 0, scope: !809)
!809 = distinct !DILexicalBlock(scope: !810, file: !1, line: 278, column: 34)
!810 = distinct !DILexicalBlock(scope: !811, file: !1, line: 278, column: 11)
!811 = distinct !DILexicalBlock(scope: !782, file: !1, line: 278, column: 11)
!812 = !DILocation(line: 278, column: 11, scope: !811)
!813 = !DILocation(line: 280, column: 24, scope: !809)
!814 = !DILocation(line: 280, column: 17, scope: !809)
!815 = !DILocation(line: 280, column: 4, scope: !809)
!816 = !DILocation(line: 280, column: 22, scope: !809)
!817 = !DILocation(line: 278, column: 31, scope: !810)
!818 = !DILocation(line: 278, column: 24, scope: !810)
!819 = distinct !{!819, !812, !820}
!820 = !DILocation(line: 281, column: 3, scope: !811)
!821 = !DILocation(line: 270, column: 35, scope: !783)
!822 = !DILocation(line: 270, column: 26, scope: !783)
!823 = distinct !{!823, !790, !824}
!824 = !DILocation(line: 282, column: 2, scope: !784)
!825 = !DILocation(line: 284, column: 1, scope: !760)
!826 = distinct !DISubprogram(name: "step11", scope: !1, file: !1, line: 285, type: !8, scopeLine: 293, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !827)
!827 = !{!828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !851, !852, !853, !854, !855, !856, !857, !858, !860, !861, !863, !864, !866, !867, !869, !870, !872, !873, !874, !876, !877, !879, !880, !882, !883, !885, !886, !888, !889, !890, !892, !893, !895, !896, !898, !899, !901, !902, !903, !904}
!828 = !DILocalVariable(name: "work_x", arg: 1, scope: !826, file: !1, line: 285, type: !10)
!829 = !DILocalVariable(name: "work_y", arg: 2, scope: !826, file: !1, line: 285, type: !10)
!830 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !826, file: !1, line: 285, type: !10)
!831 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !826, file: !1, line: 286, type: !10)
!832 = !DILocalVariable(name: "data_x", arg: 5, scope: !826, file: !1, line: 286, type: !10)
!833 = !DILocalVariable(name: "data_y", arg: 6, scope: !826, file: !1, line: 286, type: !10)
!834 = !DILocalVariable(name: "smem", arg: 7, scope: !826, file: !1, line: 286, type: !10)
!835 = !DILocalVariable(name: "reversed", arg: 8, scope: !826, file: !1, line: 287, type: !10)
!836 = !DILocalVariable(name: "sin_64", arg: 9, scope: !826, file: !1, line: 288, type: !12)
!837 = !DILocalVariable(name: "cos_64", arg: 10, scope: !826, file: !1, line: 289, type: !12)
!838 = !DILocalVariable(name: "sin_512", arg: 11, scope: !826, file: !1, line: 290, type: !12)
!839 = !DILocalVariable(name: "cos_512", arg: 12, scope: !826, file: !1, line: 291, type: !12)
!840 = !DILocalVariable(name: "tid", scope: !826, file: !1, line: 295, type: !11)
!841 = !DILocalVariable(name: "hi", scope: !826, file: !1, line: 295, type: !11)
!842 = !DILocalVariable(name: "lo", scope: !826, file: !1, line: 295, type: !11)
!843 = !DILocalVariable(name: "i", scope: !826, file: !1, line: 295, type: !11)
!844 = !DILocalVariable(name: "j", scope: !826, file: !1, line: 295, type: !11)
!845 = !DILocalVariable(name: "stride", scope: !826, file: !1, line: 295, type: !11)
!846 = !DILocalVariable(name: "exp_1_8_x", scope: !847, file: !1, line: 305, type: !11)
!847 = distinct !DILexicalBlock(scope: !848, file: !1, line: 305, column: 3)
!848 = distinct !DILexicalBlock(scope: !849, file: !1, line: 297, column: 38)
!849 = distinct !DILexicalBlock(scope: !850, file: !1, line: 297, column: 9)
!850 = distinct !DILexicalBlock(scope: !826, file: !1, line: 297, column: 9)
!851 = !DILocalVariable(name: "exp_1_4_x", scope: !847, file: !1, line: 305, type: !11)
!852 = !DILocalVariable(name: "exp_3_8_x", scope: !847, file: !1, line: 305, type: !11)
!853 = !DILocalVariable(name: "exp_1_8_y", scope: !847, file: !1, line: 305, type: !11)
!854 = !DILocalVariable(name: "exp_1_4_y", scope: !847, file: !1, line: 305, type: !11)
!855 = !DILocalVariable(name: "exp_3_8_y", scope: !847, file: !1, line: 305, type: !11)
!856 = !DILocalVariable(name: "tmp_1", scope: !847, file: !1, line: 305, type: !11)
!857 = !DILocalVariable(name: "tmp_2", scope: !847, file: !1, line: 305, type: !11)
!858 = !DILocalVariable(name: "c0_x", scope: !859, file: !1, line: 305, type: !11)
!859 = distinct !DILexicalBlock(scope: !847, file: !1, line: 305, column: 3)
!860 = !DILocalVariable(name: "c0_y", scope: !859, file: !1, line: 305, type: !11)
!861 = !DILocalVariable(name: "c0_x", scope: !862, file: !1, line: 305, type: !11)
!862 = distinct !DILexicalBlock(scope: !847, file: !1, line: 305, column: 3)
!863 = !DILocalVariable(name: "c0_y", scope: !862, file: !1, line: 305, type: !11)
!864 = !DILocalVariable(name: "c0_x", scope: !865, file: !1, line: 305, type: !11)
!865 = distinct !DILexicalBlock(scope: !847, file: !1, line: 305, column: 3)
!866 = !DILocalVariable(name: "c0_y", scope: !865, file: !1, line: 305, type: !11)
!867 = !DILocalVariable(name: "c0_x", scope: !868, file: !1, line: 305, type: !11)
!868 = distinct !DILexicalBlock(scope: !847, file: !1, line: 305, column: 3)
!869 = !DILocalVariable(name: "c0_y", scope: !868, file: !1, line: 305, type: !11)
!870 = !DILocalVariable(name: "exp_1_44_x", scope: !871, file: !1, line: 305, type: !11)
!871 = distinct !DILexicalBlock(scope: !847, file: !1, line: 305, column: 3)
!872 = !DILocalVariable(name: "exp_1_44_y", scope: !871, file: !1, line: 305, type: !11)
!873 = !DILocalVariable(name: "tmp", scope: !871, file: !1, line: 305, type: !11)
!874 = !DILocalVariable(name: "c0_x", scope: !875, file: !1, line: 305, type: !11)
!875 = distinct !DILexicalBlock(scope: !871, file: !1, line: 305, column: 3)
!876 = !DILocalVariable(name: "c0_y", scope: !875, file: !1, line: 305, type: !11)
!877 = !DILocalVariable(name: "c0_x", scope: !878, file: !1, line: 305, type: !11)
!878 = distinct !DILexicalBlock(scope: !871, file: !1, line: 305, column: 3)
!879 = !DILocalVariable(name: "c0_y", scope: !878, file: !1, line: 305, type: !11)
!880 = !DILocalVariable(name: "c0_x", scope: !881, file: !1, line: 305, type: !11)
!881 = distinct !DILexicalBlock(scope: !871, file: !1, line: 305, column: 3)
!882 = !DILocalVariable(name: "c0_y", scope: !881, file: !1, line: 305, type: !11)
!883 = !DILocalVariable(name: "c0_x", scope: !884, file: !1, line: 305, type: !11)
!884 = distinct !DILexicalBlock(scope: !871, file: !1, line: 305, column: 3)
!885 = !DILocalVariable(name: "c0_y", scope: !884, file: !1, line: 305, type: !11)
!886 = !DILocalVariable(name: "exp_1_44_x", scope: !887, file: !1, line: 305, type: !11)
!887 = distinct !DILexicalBlock(scope: !847, file: !1, line: 305, column: 3)
!888 = !DILocalVariable(name: "exp_1_44_y", scope: !887, file: !1, line: 305, type: !11)
!889 = !DILocalVariable(name: "tmp", scope: !887, file: !1, line: 305, type: !11)
!890 = !DILocalVariable(name: "c0_x", scope: !891, file: !1, line: 305, type: !11)
!891 = distinct !DILexicalBlock(scope: !887, file: !1, line: 305, column: 3)
!892 = !DILocalVariable(name: "c0_y", scope: !891, file: !1, line: 305, type: !11)
!893 = !DILocalVariable(name: "c0_x", scope: !894, file: !1, line: 305, type: !11)
!894 = distinct !DILexicalBlock(scope: !887, file: !1, line: 305, column: 3)
!895 = !DILocalVariable(name: "c0_y", scope: !894, file: !1, line: 305, type: !11)
!896 = !DILocalVariable(name: "c0_x", scope: !897, file: !1, line: 305, type: !11)
!897 = distinct !DILexicalBlock(scope: !887, file: !1, line: 305, column: 3)
!898 = !DILocalVariable(name: "c0_y", scope: !897, file: !1, line: 305, type: !11)
!899 = !DILocalVariable(name: "c0_x", scope: !900, file: !1, line: 305, type: !11)
!900 = distinct !DILexicalBlock(scope: !887, file: !1, line: 305, column: 3)
!901 = !DILocalVariable(name: "c0_y", scope: !900, file: !1, line: 305, type: !11)
!902 = !DILabel(scope: !826, name: "outer", file: !1, line: 297)
!903 = !DILabel(scope: !848, name: "load", file: !1, line: 299)
!904 = !DILabel(scope: !848, name: "store", file: !1, line: 308)
!905 = !DILocation(line: 0, scope: !826)
!906 = !DILocation(line: 297, column: 3, scope: !826)
!907 = !DILocation(line: 0, scope: !859)
!908 = !DILocation(line: 0, scope: !862)
!909 = !DILocation(line: 0, scope: !865)
!910 = !DILocation(line: 0, scope: !868)
!911 = !DILocation(line: 297, column: 9, scope: !850)
!912 = !DILocation(line: 0, scope: !913)
!913 = distinct !DILexicalBlock(scope: !914, file: !1, line: 299, column: 33)
!914 = distinct !DILexicalBlock(scope: !915, file: !1, line: 299, column: 10)
!915 = distinct !DILexicalBlock(scope: !848, file: !1, line: 299, column: 10)
!916 = !DILocation(line: 299, column: 10, scope: !915)
!917 = !DILocation(line: 300, column: 29, scope: !913)
!918 = !DILocation(line: 300, column: 16, scope: !913)
!919 = !DILocation(line: 300, column: 4, scope: !913)
!920 = !DILocation(line: 300, column: 14, scope: !913)
!921 = !DILocation(line: 301, column: 16, scope: !913)
!922 = !DILocation(line: 301, column: 4, scope: !913)
!923 = !DILocation(line: 301, column: 14, scope: !913)
!924 = !DILocation(line: 299, column: 30, scope: !914)
!925 = !DILocation(line: 299, column: 23, scope: !914)
!926 = distinct !{!926, !916, !927}
!927 = !DILocation(line: 302, column: 3, scope: !915)
!928 = !DILocation(line: 0, scope: !847)
!929 = !DILocation(line: 305, column: 3, scope: !859)
!930 = !DILocation(line: 305, column: 3, scope: !862)
!931 = !DILocation(line: 305, column: 3, scope: !865)
!932 = !DILocation(line: 305, column: 3, scope: !868)
!933 = !DILocation(line: 305, column: 3, scope: !847)
!934 = !DILocation(line: 0, scope: !871)
!935 = !DILocation(line: 305, column: 3, scope: !875)
!936 = !DILocation(line: 0, scope: !875)
!937 = !DILocation(line: 305, column: 3, scope: !878)
!938 = !DILocation(line: 0, scope: !878)
!939 = !DILocation(line: 305, column: 3, scope: !871)
!940 = !DILocation(line: 305, column: 3, scope: !881)
!941 = !DILocation(line: 0, scope: !881)
!942 = !DILocation(line: 305, column: 3, scope: !884)
!943 = !DILocation(line: 0, scope: !884)
!944 = !DILocation(line: 0, scope: !887)
!945 = !DILocation(line: 305, column: 3, scope: !891)
!946 = !DILocation(line: 0, scope: !891)
!947 = !DILocation(line: 305, column: 3, scope: !894)
!948 = !DILocation(line: 0, scope: !894)
!949 = !DILocation(line: 305, column: 3, scope: !887)
!950 = !DILocation(line: 305, column: 3, scope: !897)
!951 = !DILocation(line: 0, scope: !897)
!952 = !DILocation(line: 305, column: 3, scope: !900)
!953 = !DILocation(line: 0, scope: !900)
!954 = !DILocation(line: 308, column: 5, scope: !848)
!955 = !DILocation(line: 308, column: 11, scope: !956)
!956 = distinct !DILexicalBlock(scope: !848, file: !1, line: 308, column: 11)
!957 = !DILocation(line: 310, column: 34, scope: !958)
!958 = distinct !DILexicalBlock(scope: !959, file: !1, line: 308, column: 28)
!959 = distinct !DILexicalBlock(scope: !956, file: !1, line: 308, column: 11)
!960 = !DILocation(line: 310, column: 27, scope: !958)
!961 = !DILocation(line: 310, column: 12, scope: !958)
!962 = !DILocation(line: 310, column: 19, scope: !958)
!963 = !DILocation(line: 310, column: 4, scope: !958)
!964 = !DILocation(line: 310, column: 25, scope: !958)
!965 = !DILocation(line: 311, column: 34, scope: !958)
!966 = !DILocation(line: 311, column: 27, scope: !958)
!967 = !DILocation(line: 311, column: 4, scope: !958)
!968 = !DILocation(line: 311, column: 25, scope: !958)
!969 = !DILocation(line: 308, column: 25, scope: !959)
!970 = !DILocation(line: 308, column: 21, scope: !959)
!971 = distinct !{!971, !955, !972}
!972 = !DILocation(line: 312, column: 3, scope: !956)
!973 = !DILocation(line: 297, column: 35, scope: !849)
!974 = !DILocation(line: 297, column: 26, scope: !849)
!975 = distinct !{!975, !911, !976}
!976 = !DILocation(line: 313, column: 2, scope: !850)
!977 = !DILocation(line: 314, column: 1, scope: !826)
!978 = distinct !DISubprogram(name: "fft1D_512", scope: !1, file: !1, line: 315, type: !8, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !979)
!979 = !{!980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997}
!980 = !DILocalVariable(name: "work_x", arg: 1, scope: !978, file: !1, line: 315, type: !10)
!981 = !DILocalVariable(name: "work_y", arg: 2, scope: !978, file: !1, line: 315, type: !10)
!982 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !978, file: !1, line: 316, type: !10)
!983 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !978, file: !1, line: 317, type: !10)
!984 = !DILocalVariable(name: "data_x", arg: 5, scope: !978, file: !1, line: 318, type: !10)
!985 = !DILocalVariable(name: "data_y", arg: 6, scope: !978, file: !1, line: 319, type: !10)
!986 = !DILocalVariable(name: "smem", arg: 7, scope: !978, file: !1, line: 320, type: !10)
!987 = !DILocalVariable(name: "reversed", arg: 8, scope: !978, file: !1, line: 321, type: !10)
!988 = !DILocalVariable(name: "sin_64", arg: 9, scope: !978, file: !1, line: 322, type: !12)
!989 = !DILocalVariable(name: "cos_64", arg: 10, scope: !978, file: !1, line: 323, type: !12)
!990 = !DILocalVariable(name: "sin_512", arg: 11, scope: !978, file: !1, line: 324, type: !12)
!991 = !DILocalVariable(name: "cos_512", arg: 12, scope: !978, file: !1, line: 325, type: !12)
!992 = !DILocalVariable(name: "tid", scope: !978, file: !1, line: 332, type: !11)
!993 = !DILocalVariable(name: "hi", scope: !978, file: !1, line: 332, type: !11)
!994 = !DILocalVariable(name: "lo", scope: !978, file: !1, line: 332, type: !11)
!995 = !DILocalVariable(name: "i", scope: !978, file: !1, line: 332, type: !11)
!996 = !DILocalVariable(name: "j", scope: !978, file: !1, line: 332, type: !11)
!997 = !DILocalVariable(name: "stride", scope: !978, file: !1, line: 332, type: !11)
!998 = !DILocation(line: 0, scope: !978)
!999 = !DILocation(line: 335, column: 3, scope: !978)
!1000 = !DILocation(line: 336, column: 3, scope: !978)
!1001 = !DILocation(line: 337, column: 3, scope: !978)
!1002 = !DILocation(line: 338, column: 3, scope: !978)
!1003 = !DILocation(line: 339, column: 3, scope: !978)
!1004 = !DILocation(line: 340, column: 3, scope: !978)
!1005 = !DILocation(line: 341, column: 3, scope: !978)
!1006 = !DILocation(line: 342, column: 3, scope: !978)
!1007 = !DILocation(line: 343, column: 3, scope: !978)
!1008 = !DILocation(line: 344, column: 3, scope: !978)
!1009 = !DILocation(line: 345, column: 3, scope: !978)
!1010 = !DILocation(line: 351, column: 1, scope: !978)
!1011 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 352, type: !1012, scopeLine: 352, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1014)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!11}
!1014 = !{!1015, !1019, !1020, !1021, !1025, !1026, !1027, !1028, !1029, !1030, !1034, !1035, !1039}
!1015 = !DILocalVariable(name: "a_x", scope: !1011, file: !1, line: 353, type: !1016)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 16384, elements: !1017)
!1017 = !{!1018}
!1018 = !DISubrange(count: 512)
!1019 = !DILocalVariable(name: "a_y", scope: !1011, file: !1, line: 354, type: !1016)
!1020 = !DILocalVariable(name: "i", scope: !1011, file: !1, line: 355, type: !11)
!1021 = !DILocalVariable(name: "sin_64", scope: !1011, file: !1, line: 361, type: !1022)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 14336, elements: !1023)
!1023 = !{!1024}
!1024 = !DISubrange(count: 448)
!1025 = !DILocalVariable(name: "sin_512", scope: !1011, file: !1, line: 426, type: !1022)
!1026 = !DILocalVariable(name: "cos_64", scope: !1011, file: !1, line: 491, type: !1022)
!1027 = !DILocalVariable(name: "cos_512", scope: !1011, file: !1, line: 556, type: !1022)
!1028 = !DILocalVariable(name: "DATA_x", scope: !1011, file: !1, line: 622, type: !1016)
!1029 = !DILocalVariable(name: "DATA_y", scope: !1011, file: !1, line: 623, type: !1016)
!1030 = !DILocalVariable(name: "data_x", scope: !1011, file: !1, line: 624, type: !1031)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 256, elements: !1032)
!1032 = !{!1033}
!1033 = !DISubrange(count: 8)
!1034 = !DILocalVariable(name: "data_y", scope: !1011, file: !1, line: 625, type: !1031)
!1035 = !DILocalVariable(name: "smem", scope: !1011, file: !1, line: 626, type: !1036)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 18432, elements: !1037)
!1037 = !{!1038}
!1038 = !DISubrange(count: 576)
!1039 = !DILocalVariable(name: "reversed", scope: !1011, file: !1, line: 627, type: !1031)
!1040 = !DILocation(line: 353, column: 3, scope: !1011)
!1041 = !DILocation(line: 353, column: 8, scope: !1011)
!1042 = !DILocation(line: 354, column: 3, scope: !1011)
!1043 = !DILocation(line: 354, column: 8, scope: !1011)
!1044 = !DILocation(line: 0, scope: !1011)
!1045 = !DILocation(line: 359, column: 12, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !1, line: 357, column: 28)
!1047 = distinct !DILexicalBlock(scope: !1048, file: !1, line: 357, column: 3)
!1048 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 357, column: 3)
!1049 = !DILocation(line: 357, column: 3, scope: !1048)
!1050 = !DILocation(line: 358, column: 5, scope: !1046)
!1051 = !DILocation(line: 358, column: 12, scope: !1046)
!1052 = !DILocation(line: 357, column: 25, scope: !1047)
!1053 = !DILocation(line: 357, column: 17, scope: !1047)
!1054 = distinct !{!1054, !1049, !1055}
!1055 = !DILocation(line: 360, column: 3, scope: !1048)
!1056 = !DILocation(line: 361, column: 3, scope: !1011)
!1057 = !DILocation(line: 361, column: 9, scope: !1011)
!1058 = !DILocation(line: 426, column: 3, scope: !1011)
!1059 = !DILocation(line: 426, column: 9, scope: !1011)
!1060 = !DILocation(line: 491, column: 3, scope: !1011)
!1061 = !DILocation(line: 491, column: 9, scope: !1011)
!1062 = !DILocation(line: 556, column: 3, scope: !1011)
!1063 = !DILocation(line: 556, column: 9, scope: !1011)
!1064 = !DILocation(line: 622, column: 3, scope: !1011)
!1065 = !DILocation(line: 622, column: 8, scope: !1011)
!1066 = !DILocation(line: 623, column: 3, scope: !1011)
!1067 = !DILocation(line: 623, column: 8, scope: !1011)
!1068 = !DILocation(line: 624, column: 3, scope: !1011)
!1069 = !DILocation(line: 624, column: 8, scope: !1011)
!1070 = !DILocation(line: 625, column: 3, scope: !1011)
!1071 = !DILocation(line: 625, column: 8, scope: !1011)
!1072 = !DILocation(line: 626, column: 3, scope: !1011)
!1073 = !DILocation(line: 626, column: 8, scope: !1011)
!1074 = !DILocation(line: 627, column: 3, scope: !1011)
!1075 = !DILocation(line: 627, column: 7, scope: !1011)
!1076 = !DILocation(line: 631, column: 13, scope: !1011)
!1077 = !DILocation(line: 631, column: 18, scope: !1011)
!1078 = !DILocation(line: 631, column: 23, scope: !1011)
!1079 = !DILocation(line: 631, column: 31, scope: !1011)
!1080 = !DILocation(line: 631, column: 39, scope: !1011)
!1081 = !DILocation(line: 631, column: 47, scope: !1011)
!1082 = !DILocation(line: 631, column: 55, scope: !1011)
!1083 = !DILocation(line: 631, column: 61, scope: !1011)
!1084 = !DILocation(line: 631, column: 71, scope: !1011)
!1085 = !DILocation(line: 631, column: 79, scope: !1011)
!1086 = !DILocation(line: 631, column: 88, scope: !1011)
!1087 = !DILocation(line: 631, column: 96, scope: !1011)
!1088 = !DILocation(line: 631, column: 3, scope: !1011)
!1089 = !DILocation(line: 636, column: 3, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 636, column: 3)
!1091 = !DILocation(line: 637, column: 32, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1093, file: !1, line: 636, column: 26)
!1093 = distinct !DILexicalBlock(scope: !1090, file: !1, line: 636, column: 3)
!1094 = !DILocation(line: 637, column: 40, scope: !1092)
!1095 = !DILocation(line: 637, column: 5, scope: !1092)
!1096 = !DILocation(line: 636, column: 23, scope: !1093)
!1097 = !DILocation(line: 636, column: 17, scope: !1093)
!1098 = distinct !{!1098, !1089, !1099}
!1099 = !DILocation(line: 638, column: 3, scope: !1090)
!1100 = !DILocation(line: 641, column: 1, scope: !1011)
!1101 = !DILocation(line: 640, column: 3, scope: !1011)
