; ModuleID = 'viterbi.c'
source_filename = "viterbi.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @viterbi(double* nocapture readonly %host_init, double* nocapture readonly %host_transition, double* nocapture readonly %host_emission, i8* nocapture %host_path, i8* nocapture readonly %obs, double* nocapture readnone %init, double* nocapture readnone %transition, double* nocapture readnone %emission, i8* nocapture readnone %path) local_unnamed_addr #0 !dbg !7 {
entry:
  %llike = alloca [140 x [64 x double]], align 16
  call void @llvm.dbg.value(metadata double* %host_init, metadata !25, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %host_transition, metadata !26, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %host_emission, metadata !27, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8* %host_path, metadata !28, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8* %obs, metadata !29, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %init, metadata !30, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %transition, metadata !31, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %emission, metadata !32, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8* %path, metadata !33, metadata !DIExpression()), !dbg !66
  %0 = bitcast [140 x [64 x double]]* %llike to i8*, !dbg !67
  call void @llvm.lifetime.start.p0i8(i64 71680, i8* nonnull %0) #3, !dbg !67
  call void @llvm.dbg.declare(metadata [140 x [64 x double]]* %llike, metadata !34, metadata !DIExpression()), !dbg !68
  call void @llvm.dbg.value(metadata double* %host_init, metadata !30, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %host_transition, metadata !31, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double* %host_emission, metadata !32, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8* %host_path, metadata !33, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.label(metadata !50), !dbg !69
  call void @llvm.dbg.value(metadata i8 0, metadata !49, metadata !DIExpression()), !dbg !66
  %1 = load i8, i8* %obs, align 1, !dbg !70, !tbaa !74
  %conv4 = zext i8 %1 to i64, !dbg !70
  br label %for.body, !dbg !77

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv241 = phi i64 [ 0, %entry ], [ %indvars.iv.next242, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv241, metadata !49, metadata !DIExpression()), !dbg !66
  %arrayidx = getelementptr inbounds double, double* %host_init, i64 %indvars.iv241, !dbg !78
  %2 = load double, double* %arrayidx, align 8, !dbg !78, !tbaa !79
  %mul = shl nuw nsw i64 %indvars.iv241, 6, !dbg !81
  %add = add nuw nsw i64 %mul, %conv4, !dbg !82
  %arrayidx6 = getelementptr inbounds double, double* %host_emission, i64 %add, !dbg !83
  %3 = load double, double* %arrayidx6, align 8, !dbg !83, !tbaa !79
  %add7 = fadd double %2, %3, !dbg !84
  %arrayidx10 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 0, i64 %indvars.iv241, !dbg !85
  store double %add7, double* %arrayidx10, align 8, !dbg !86, !tbaa !79
  %indvars.iv.next242 = add nuw nsw i64 %indvars.iv241, 1, !dbg !87
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next242, metadata !49, metadata !DIExpression()), !dbg !66
  %exitcond243 = icmp eq i64 %indvars.iv.next242, 64, !dbg !88
  br i1 %exitcond243, label %for.cond15.preheader, label %for.body, !dbg !77, !llvm.loop !89

for.cond15.preheader:                             ; preds = %for.body, %for.inc78
  %indvars.iv237 = phi i64 [ %indvars.iv.next238, %for.inc78 ], [ 1, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv237, metadata !39, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 0, metadata !45, metadata !DIExpression()), !dbg !66
  %4 = add nsw i64 %indvars.iv237, -1, !dbg !91
  %arrayidx23 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 %4, i64 0, !dbg !91
  %arrayidx34 = getelementptr inbounds i8, i8* %obs, i64 %indvars.iv237, !dbg !91
  %5 = load i8, i8* %arrayidx34, align 1, !dbg !91, !tbaa !74
  %6 = zext i8 %5 to i64, !dbg !92
  br label %for.body19, !dbg !92

for.body19:                                       ; preds = %for.end70, %for.cond15.preheader
  %indvars.iv232 = phi i64 [ 0, %for.cond15.preheader ], [ %indvars.iv.next233, %for.end70 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv232, metadata !45, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 0, metadata !44, metadata !DIExpression()), !dbg !66
  %7 = load double, double* %arrayidx23, align 16, !dbg !93, !tbaa !79
  %arrayidx29 = getelementptr inbounds double, double* %host_transition, i64 %indvars.iv232, !dbg !94
  %8 = load double, double* %arrayidx29, align 8, !dbg !94, !tbaa !79
  %add30 = fadd double %7, %8, !dbg !95
  %9 = shl nuw nsw i64 %indvars.iv232, 6, !dbg !96
  %10 = add nuw nsw i64 %9, %6, !dbg !97
  %arrayidx38 = getelementptr inbounds double, double* %host_emission, i64 %10, !dbg !98
  %11 = load double, double* %arrayidx38, align 8, !dbg !98, !tbaa !79
  %add39 = fadd double %add30, %11, !dbg !99
  call void @llvm.dbg.value(metadata double %add39, metadata !46, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.label(metadata !56), !dbg !100
  call void @llvm.dbg.value(metadata i8 1, metadata !44, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %add39, metadata !46, metadata !DIExpression()), !dbg !66
  br label %for.body44, !dbg !101

for.body44:                                       ; preds = %for.body44, %for.body19
  %indvars.iv229 = phi i64 [ 1, %for.body19 ], [ %indvars.iv.next230, %for.body44 ]
  %min_p.0218 = phi double [ %add39, %for.body19 ], [ %min_p.1, %for.body44 ]
  call void @llvm.dbg.value(metadata double %min_p.0218, metadata !46, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i64 %indvars.iv229, metadata !44, metadata !DIExpression()), !dbg !66
  %arrayidx49 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 %4, i64 %indvars.iv229, !dbg !103
  %12 = load double, double* %arrayidx49, align 8, !dbg !103, !tbaa !79
  %mul51 = shl i64 %indvars.iv229, 6, !dbg !106
  %add53 = add i64 %mul51, %indvars.iv232, !dbg !107
  %idxprom54 = and i64 %add53, 4294967295, !dbg !108
  %arrayidx55 = getelementptr inbounds double, double* %host_transition, i64 %idxprom54, !dbg !108
  %13 = load double, double* %arrayidx55, align 8, !dbg !108, !tbaa !79
  %add56 = fadd double %12, %13, !dbg !109
  %add65 = fadd double %11, %add56, !dbg !110
  call void @llvm.dbg.value(metadata double %add65, metadata !47, metadata !DIExpression()), !dbg !66
  %cmp66 = fcmp olt double %add65, %min_p.0218, !dbg !111
  %min_p.1 = select i1 %cmp66, double %add65, double %min_p.0218, !dbg !113
  call void @llvm.dbg.value(metadata double %min_p.1, metadata !46, metadata !DIExpression()), !dbg !66
  %indvars.iv.next230 = add nuw nsw i64 %indvars.iv229, 1, !dbg !114
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next230, metadata !44, metadata !DIExpression()), !dbg !66
  %exitcond231 = icmp eq i64 %indvars.iv.next230, 64, !dbg !115
  br i1 %exitcond231, label %for.end70, label %for.body44, !dbg !101, !llvm.loop !116

for.end70:                                        ; preds = %for.body44
  call void @llvm.dbg.value(metadata double %min_p.1, metadata !46, metadata !DIExpression()), !dbg !66
  %arrayidx74 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 %indvars.iv237, i64 %indvars.iv232, !dbg !118
  store double %min_p.1, double* %arrayidx74, align 8, !dbg !119, !tbaa !79
  %indvars.iv.next233 = add nuw nsw i64 %indvars.iv232, 1, !dbg !120
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next233, metadata !45, metadata !DIExpression()), !dbg !66
  %exitcond236 = icmp eq i64 %indvars.iv.next233, 64, !dbg !121
  br i1 %exitcond236, label %for.inc78, label %for.body19, !dbg !92, !llvm.loop !122

for.inc78:                                        ; preds = %for.end70
  %indvars.iv.next238 = add nuw nsw i64 %indvars.iv237, 1, !dbg !124
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next238, metadata !39, metadata !DIExpression()), !dbg !66
  %exitcond240 = icmp eq i64 %indvars.iv.next238, 140, !dbg !125
  br i1 %exitcond240, label %for.end80, label %for.cond15.preheader, !dbg !126, !llvm.loop !127

for.end80:                                        ; preds = %for.inc78
  call void @llvm.dbg.value(metadata i8 0, metadata !48, metadata !DIExpression()), !dbg !66
  %arrayidx83 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 139, i64 0, !dbg !129
  %14 = load double, double* %arrayidx83, align 16, !dbg !129, !tbaa !79
  call void @llvm.dbg.value(metadata double %14, metadata !46, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.label(metadata !60), !dbg !130
  call void @llvm.dbg.value(metadata i8 1, metadata !49, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 0, metadata !48, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %14, metadata !46, metadata !DIExpression()), !dbg !66
  br label %for.body88, !dbg !131

for.body88:                                       ; preds = %for.body88, %for.end80
  %indvars.iv226 = phi i64 [ 1, %for.end80 ], [ %indvars.iv.next227, %for.body88 ]
  %min_s.0215 = phi i8 [ 0, %for.end80 ], [ %min_s.1, %for.body88 ]
  %min_p.2214 = phi double [ %14, %for.end80 ], [ %min_p.3, %for.body88 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv226, metadata !49, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 %min_s.0215, metadata !48, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %min_p.2214, metadata !46, metadata !DIExpression()), !dbg !66
  %arrayidx91 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 139, i64 %indvars.iv226, !dbg !133
  %15 = load double, double* %arrayidx91, align 8, !dbg !133, !tbaa !79
  call void @llvm.dbg.value(metadata double %15, metadata !47, metadata !DIExpression()), !dbg !66
  %cmp92 = fcmp olt double %15, %min_p.2214, !dbg !136
  %min_p.3 = select i1 %cmp92, double %15, double %min_p.2214, !dbg !138
  %16 = trunc i64 %indvars.iv226 to i8, !dbg !138
  %min_s.1 = select i1 %cmp92, i8 %16, i8 %min_s.0215, !dbg !138
  call void @llvm.dbg.value(metadata i8 %min_s.1, metadata !48, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %min_p.3, metadata !46, metadata !DIExpression()), !dbg !66
  %indvars.iv.next227 = add nuw nsw i64 %indvars.iv226, 1, !dbg !139
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next227, metadata !49, metadata !DIExpression()), !dbg !66
  %exitcond228 = icmp eq i64 %indvars.iv.next227, 64, !dbg !140
  br i1 %exitcond228, label %for.end98, label %for.body88, !dbg !131, !llvm.loop !141

for.end98:                                        ; preds = %for.body88
  call void @llvm.dbg.value(metadata i8 %min_s.1, metadata !48, metadata !DIExpression()), !dbg !66
  %arrayidx99 = getelementptr inbounds i8, i8* %host_path, i64 139, !dbg !143
  store i8 %min_s.1, i8* %arrayidx99, align 1, !dbg !144, !tbaa !74
  call void @llvm.dbg.label(metadata !61), !dbg !145
  call void @llvm.dbg.value(metadata i32 138, metadata !39, metadata !DIExpression()), !dbg !66
  br label %for.body103, !dbg !146

for.body103:                                      ; preds = %for.end143, %for.end98
  %indvars.iv223 = phi i64 [ 138, %for.end98 ], [ %indvars.iv.next224, %for.end143 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv223, metadata !39, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 0, metadata !48, metadata !DIExpression()), !dbg !66
  %arrayidx107 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 %indvars.iv223, i64 0, !dbg !147
  %17 = load double, double* %arrayidx107, align 16, !dbg !147, !tbaa !79
  %18 = add nuw nsw i64 %indvars.iv223, 1, !dbg !148
  %arrayidx112 = getelementptr inbounds i8, i8* %host_path, i64 %18, !dbg !149
  %19 = load i8, i8* %arrayidx112, align 1, !dbg !149, !tbaa !74
  %idxprom115 = zext i8 %19 to i64, !dbg !150
  %arrayidx116 = getelementptr inbounds double, double* %host_transition, i64 %idxprom115, !dbg !150
  %20 = load double, double* %arrayidx116, align 8, !dbg !150, !tbaa !79
  %add117 = fadd double %17, %20, !dbg !151
  call void @llvm.dbg.value(metadata double %add117, metadata !46, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.label(metadata !62), !dbg !152
  call void @llvm.dbg.value(metadata i8 1, metadata !49, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 0, metadata !48, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %add117, metadata !46, metadata !DIExpression()), !dbg !66
  br label %for.body122, !dbg !153

for.body122:                                      ; preds = %for.body122, %for.body103
  %indvars.iv = phi i64 [ 1, %for.body103 ], [ %indvars.iv.next, %for.body122 ]
  %min_s.2211 = phi i8 [ 0, %for.body103 ], [ %min_s.3, %for.body122 ]
  %min_p.4210 = phi double [ %add117, %for.body103 ], [ %min_p.5, %for.body122 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !49, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i8 %min_s.2211, metadata !48, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %min_p.4210, metadata !46, metadata !DIExpression()), !dbg !66
  %arrayidx126 = getelementptr inbounds [140 x [64 x double]], [140 x [64 x double]]* %llike, i64 0, i64 %indvars.iv223, i64 %indvars.iv, !dbg !155
  %21 = load double, double* %arrayidx126, align 8, !dbg !155, !tbaa !79
  %mul128 = shl nuw nsw i64 %indvars.iv, 6, !dbg !158
  %add133 = add nuw nsw i64 %mul128, %idxprom115, !dbg !159
  %arrayidx135 = getelementptr inbounds double, double* %host_transition, i64 %add133, !dbg !160
  %22 = load double, double* %arrayidx135, align 8, !dbg !160, !tbaa !79
  %add136 = fadd double %21, %22, !dbg !161
  call void @llvm.dbg.value(metadata double %add136, metadata !47, metadata !DIExpression()), !dbg !66
  %cmp137 = fcmp olt double %add136, %min_p.4210, !dbg !162
  %min_p.5 = select i1 %cmp137, double %add136, double %min_p.4210, !dbg !164
  %23 = trunc i64 %indvars.iv to i8, !dbg !164
  %min_s.3 = select i1 %cmp137, i8 %23, i8 %min_s.2211, !dbg !164
  call void @llvm.dbg.value(metadata i8 %min_s.3, metadata !48, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata double %min_p.5, metadata !46, metadata !DIExpression()), !dbg !66
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !165
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !49, metadata !DIExpression()), !dbg !66
  %exitcond = icmp eq i64 %indvars.iv.next, 64, !dbg !166
  br i1 %exitcond, label %for.end143, label %for.body122, !dbg !153, !llvm.loop !167

for.end143:                                       ; preds = %for.body122
  call void @llvm.dbg.value(metadata i8 %min_s.3, metadata !48, metadata !DIExpression()), !dbg !66
  %arrayidx145 = getelementptr inbounds i8, i8* %host_path, i64 %indvars.iv223, !dbg !169
  store i8 %min_s.3, i8* %arrayidx145, align 1, !dbg !170, !tbaa !74
  %indvars.iv.next224 = add nsw i64 %indvars.iv223, -1, !dbg !171
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next224, metadata !39, metadata !DIExpression()), !dbg !66
  %cmp101 = icmp eq i64 %indvars.iv223, 0, !dbg !172
  br i1 %cmp101, label %for.end147, label %for.body103, !dbg !146, !llvm.loop !173

for.end147:                                       ; preds = %for.end143
  call void @llvm.lifetime.end.p0i8(i64 71680, i8* nonnull %0) #3, !dbg !175
  ret i32 0, !dbg !176
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "viterbi.c", directory: "/home/coco/work/benchmark_codes/viterbi")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "viterbi", scope: !1, file: !1, line: 7, type: !8, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !24)
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !11, !11, !11, !15, !22, !11, !11, !11, !15}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "prob_t", file: !13, line: 14, baseType: !14)
!13 = !DIFile(filename: "./viterbi.h", directory: "/home/coco/work/benchmark_codes/viterbi")
!14 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "state_t", file: !13, line: 15, baseType: !17)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !18, line: 24, baseType: !19)
!18 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !20, line: 38, baseType: !21)
!20 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!21 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "tok_t", file: !13, line: 13, baseType: !17)
!24 = !{!25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !39, !44, !45, !46, !47, !48, !49, !50, !51, !52, !56, !60, !61, !62}
!25 = !DILocalVariable(name: "host_init", arg: 1, scope: !7, file: !1, line: 7, type: !11)
!26 = !DILocalVariable(name: "host_transition", arg: 2, scope: !7, file: !1, line: 8, type: !11)
!27 = !DILocalVariable(name: "host_emission", arg: 3, scope: !7, file: !1, line: 9, type: !11)
!28 = !DILocalVariable(name: "host_path", arg: 4, scope: !7, file: !1, line: 10, type: !15)
!29 = !DILocalVariable(name: "obs", arg: 5, scope: !7, file: !1, line: 11, type: !22)
!30 = !DILocalVariable(name: "init", arg: 6, scope: !7, file: !1, line: 12, type: !11)
!31 = !DILocalVariable(name: "transition", arg: 7, scope: !7, file: !1, line: 13, type: !11)
!32 = !DILocalVariable(name: "emission", arg: 8, scope: !7, file: !1, line: 14, type: !11)
!33 = !DILocalVariable(name: "path", arg: 9, scope: !7, file: !1, line: 15, type: !15)
!34 = !DILocalVariable(name: "llike", scope: !7, file: !1, line: 17, type: !35)
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 573440, elements: !36)
!36 = !{!37, !38}
!37 = !DISubrange(count: 140)
!38 = !DISubrange(count: 64)
!39 = !DILocalVariable(name: "t", scope: !7, file: !1, line: 18, type: !40)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "step_t", file: !13, line: 16, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !42, line: 26, baseType: !43)
!42 = !DIFile(filename: "/usr/include/bits/stdint-intn.h", directory: "")
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !20, line: 41, baseType: !10)
!44 = !DILocalVariable(name: "prev", scope: !7, file: !1, line: 19, type: !16)
!45 = !DILocalVariable(name: "curr", scope: !7, file: !1, line: 19, type: !16)
!46 = !DILocalVariable(name: "min_p", scope: !7, file: !1, line: 20, type: !12)
!47 = !DILocalVariable(name: "p", scope: !7, file: !1, line: 20, type: !12)
!48 = !DILocalVariable(name: "min_s", scope: !7, file: !1, line: 21, type: !16)
!49 = !DILocalVariable(name: "s", scope: !7, file: !1, line: 21, type: !16)
!50 = !DILabel(scope: !7, name: "L_init", file: !1, line: 36)
!51 = !DILabel(scope: !7, name: "L_timestep", file: !1, line: 41)
!52 = !DILabel(scope: !53, name: "L_curr_state", file: !1, line: 42)
!53 = distinct !DILexicalBlock(scope: !54, file: !1, line: 41, column: 40)
!54 = distinct !DILexicalBlock(scope: !55, file: !1, line: 41, column: 15)
!55 = distinct !DILexicalBlock(scope: !7, file: !1, line: 41, column: 15)
!56 = !DILabel(scope: !57, name: "L_prev_state", file: !1, line: 48)
!57 = distinct !DILexicalBlock(scope: !58, file: !1, line: 42, column: 56)
!58 = distinct !DILexicalBlock(scope: !59, file: !1, line: 42, column: 19)
!59 = distinct !DILexicalBlock(scope: !53, file: !1, line: 42, column: 19)
!60 = !DILabel(scope: !7, name: "L_end", file: !1, line: 63)
!61 = !DILabel(scope: !7, name: "L_backtrack", file: !1, line: 73)
!62 = !DILabel(scope: !63, name: "L_state", file: !1, line: 76)
!63 = distinct !DILexicalBlock(scope: !64, file: !1, line: 73, column: 44)
!64 = distinct !DILexicalBlock(scope: !65, file: !1, line: 73, column: 16)
!65 = distinct !DILexicalBlock(scope: !7, file: !1, line: 73, column: 16)
!66 = !DILocation(line: 0, scope: !7)
!67 = !DILocation(line: 17, column: 3, scope: !7)
!68 = !DILocation(line: 17, column: 10, scope: !7)
!69 = !DILocation(line: 36, column: 3, scope: !7)
!70 = !DILocation(line: 0, scope: !71)
!71 = distinct !DILexicalBlock(scope: !72, file: !1, line: 36, column: 39)
!72 = distinct !DILexicalBlock(scope: !73, file: !1, line: 36, column: 11)
!73 = distinct !DILexicalBlock(scope: !7, file: !1, line: 36, column: 11)
!74 = !{!75, !75, i64 0}
!75 = !{!"omnipotent char", !76, i64 0}
!76 = !{!"Simple C/C++ TBAA"}
!77 = !DILocation(line: 36, column: 11, scope: !73)
!78 = !DILocation(line: 37, column: 19, scope: !71)
!79 = !{!80, !80, i64 0}
!80 = !{!"double", !75, i64 0}
!81 = !DILocation(line: 37, column: 39, scope: !71)
!82 = !DILocation(line: 37, column: 48, scope: !71)
!83 = !DILocation(line: 37, column: 29, scope: !71)
!84 = !DILocation(line: 37, column: 27, scope: !71)
!85 = !DILocation(line: 37, column: 5, scope: !71)
!86 = !DILocation(line: 37, column: 17, scope: !71)
!87 = !DILocation(line: 36, column: 34, scope: !72)
!88 = !DILocation(line: 36, column: 22, scope: !72)
!89 = distinct !{!89, !77, !90}
!90 = !DILocation(line: 38, column: 3, scope: !73)
!91 = !DILocation(line: 0, scope: !57)
!92 = !DILocation(line: 42, column: 19, scope: !59)
!93 = !DILocation(line: 45, column: 15, scope: !57)
!94 = !DILocation(line: 46, column: 15, scope: !57)
!95 = !DILocation(line: 45, column: 32, scope: !57)
!96 = !DILocation(line: 47, column: 28, scope: !57)
!97 = !DILocation(line: 47, column: 37, scope: !57)
!98 = !DILocation(line: 47, column: 15, scope: !57)
!99 = !DILocation(line: 46, column: 46, scope: !57)
!100 = !DILocation(line: 48, column: 7, scope: !57)
!101 = !DILocation(line: 48, column: 21, scope: !102)
!102 = distinct !DILexicalBlock(scope: !57, file: !1, line: 48, column: 21)
!103 = !DILocation(line: 49, column: 13, scope: !104)
!104 = distinct !DILexicalBlock(scope: !105, file: !1, line: 48, column: 58)
!105 = distinct !DILexicalBlock(scope: !102, file: !1, line: 48, column: 21)
!106 = !DILocation(line: 50, column: 28, scope: !104)
!107 = !DILocation(line: 50, column: 37, scope: !104)
!108 = !DILocation(line: 50, column: 13, scope: !104)
!109 = !DILocation(line: 49, column: 30, scope: !104)
!110 = !DILocation(line: 50, column: 44, scope: !104)
!111 = !DILocation(line: 52, column: 14, scope: !112)
!112 = distinct !DILexicalBlock(scope: !104, file: !1, line: 52, column: 13)
!113 = !DILocation(line: 52, column: 13, scope: !104)
!114 = !DILocation(line: 48, column: 53, scope: !105)
!115 = !DILocation(line: 48, column: 38, scope: !105)
!116 = distinct !{!116, !101, !117}
!117 = !DILocation(line: 55, column: 7, scope: !102)
!118 = !DILocation(line: 56, column: 7, scope: !57)
!119 = !DILocation(line: 56, column: 22, scope: !57)
!120 = !DILocation(line: 42, column: 51, scope: !58)
!121 = !DILocation(line: 42, column: 36, scope: !58)
!122 = distinct !{!122, !92, !123}
!123 = !DILocation(line: 57, column: 5, scope: !59)
!124 = !DILocation(line: 41, column: 35, scope: !54)
!125 = !DILocation(line: 41, column: 26, scope: !54)
!126 = !DILocation(line: 41, column: 15, scope: !55)
!127 = distinct !{!127, !126, !128}
!128 = !DILocation(line: 58, column: 3, scope: !55)
!129 = !DILocation(line: 62, column: 11, scope: !7)
!130 = !DILocation(line: 63, column: 3, scope: !7)
!131 = !DILocation(line: 63, column: 10, scope: !132)
!132 = distinct !DILexicalBlock(scope: !7, file: !1, line: 63, column: 10)
!133 = !DILocation(line: 64, column: 9, scope: !134)
!134 = distinct !DILexicalBlock(scope: !135, file: !1, line: 63, column: 38)
!135 = distinct !DILexicalBlock(scope: !132, file: !1, line: 63, column: 10)
!136 = !DILocation(line: 65, column: 10, scope: !137)
!137 = distinct !DILexicalBlock(scope: !134, file: !1, line: 65, column: 9)
!138 = !DILocation(line: 65, column: 9, scope: !134)
!139 = !DILocation(line: 63, column: 33, scope: !135)
!140 = !DILocation(line: 63, column: 21, scope: !135)
!141 = distinct !{!141, !131, !142}
!142 = !DILocation(line: 69, column: 3, scope: !132)
!143 = !DILocation(line: 70, column: 3, scope: !7)
!144 = !DILocation(line: 70, column: 17, scope: !7)
!145 = !DILocation(line: 73, column: 3, scope: !7)
!146 = !DILocation(line: 73, column: 16, scope: !65)
!147 = !DILocation(line: 75, column: 13, scope: !63)
!148 = !DILocation(line: 75, column: 63, scope: !63)
!149 = !DILocation(line: 75, column: 57, scope: !63)
!150 = !DILocation(line: 75, column: 31, scope: !63)
!151 = !DILocation(line: 75, column: 29, scope: !63)
!152 = !DILocation(line: 76, column: 5, scope: !63)
!153 = !DILocation(line: 76, column: 14, scope: !154)
!154 = distinct !DILexicalBlock(scope: !63, file: !1, line: 76, column: 14)
!155 = !DILocation(line: 77, column: 11, scope: !156)
!156 = distinct !DILexicalBlock(scope: !157, file: !1, line: 76, column: 42)
!157 = distinct !DILexicalBlock(scope: !154, file: !1, line: 76, column: 14)
!158 = !DILocation(line: 77, column: 37, scope: !156)
!159 = !DILocation(line: 77, column: 46, scope: !156)
!160 = !DILocation(line: 77, column: 25, scope: !156)
!161 = !DILocation(line: 77, column: 23, scope: !156)
!162 = !DILocation(line: 78, column: 12, scope: !163)
!163 = distinct !DILexicalBlock(scope: !156, file: !1, line: 78, column: 11)
!164 = !DILocation(line: 78, column: 11, scope: !156)
!165 = !DILocation(line: 76, column: 37, scope: !157)
!166 = !DILocation(line: 76, column: 25, scope: !157)
!167 = distinct !{!167, !153, !168}
!168 = !DILocation(line: 82, column: 5, scope: !154)
!169 = !DILocation(line: 83, column: 5, scope: !63)
!170 = !DILocation(line: 83, column: 13, scope: !63)
!171 = !DILocation(line: 73, column: 39, scope: !64)
!172 = !DILocation(line: 73, column: 33, scope: !64)
!173 = distinct !{!173, !146, !174}
!174 = !DILocation(line: 84, column: 3, scope: !65)
!175 = !DILocation(line: 91, column: 1, scope: !7)
!176 = !DILocation(line: 90, column: 3, scope: !7)
