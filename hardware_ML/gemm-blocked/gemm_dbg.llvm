; ModuleID = 'gemm.c'
source_filename = "gemm.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @bbgemm(double* nocapture readonly %host_m1, double* nocapture readonly %host_m2, double* nocapture %host_prod, double* nocapture readnone %m1, double* nocapture readnone %m2, double* nocapture readnone %prod) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata double* %host_m1, metadata !13, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %host_m2, metadata !14, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %host_prod, metadata !15, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %m1, metadata !16, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %m2, metadata !17, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %prod, metadata !18, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %host_m1, metadata !16, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %host_m2, metadata !17, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double* %host_prod, metadata !18, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.label(metadata !29), !dbg !47
  call void @llvm.dbg.value(metadata i32 0, metadata !23, metadata !DIExpression()), !dbg !46
  br label %for.cond1.preheader, !dbg !48

for.cond1.preheader:                              ; preds = %entry, %for.inc36
  %indvars.iv84 = phi i64 [ 0, %entry ], [ %indvars.iv.next85, %for.inc36 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv84, metadata !23, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata i32 0, metadata !24, metadata !DIExpression()), !dbg !46
  br label %for.cond4.preheader, !dbg !49

for.cond4.preheader:                              ; preds = %for.cond1.preheader, %for.inc33
  %indvars.iv82 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next83, %for.inc33 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv82, metadata !24, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata i32 0, metadata !19, metadata !DIExpression()), !dbg !46
  br label %for.cond7.preheader, !dbg !50

for.cond7.preheader:                              ; preds = %for.inc30, %for.cond4.preheader
  %indvars.iv78 = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next79, %for.inc30 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv78, metadata !19, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata i32 0, metadata !21, metadata !DIExpression()), !dbg !46
  %0 = shl nsw i64 %indvars.iv78, 6, !dbg !51
  br label %for.body9, !dbg !52

for.body9:                                        ; preds = %for.inc27, %for.cond7.preheader
  %indvars.iv71 = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next72, %for.inc27 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv71, metadata !21, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata i64 %0, metadata !25, metadata !DIExpression()), !dbg !46
  %1 = add nuw nsw i64 %indvars.iv71, %indvars.iv82, !dbg !53
  %2 = shl i64 %1, 6, !dbg !54
  call void @llvm.dbg.value(metadata i64 %2, metadata !26, metadata !DIExpression()), !dbg !46
  %3 = add nuw nsw i64 %indvars.iv71, %indvars.iv82, !dbg !55
  %4 = add nuw nsw i64 %3, %0, !dbg !56
  %arrayidx = getelementptr inbounds double, double* %host_m1, i64 %4, !dbg !57
  %5 = load double, double* %arrayidx, align 8, !dbg !57, !tbaa !58
  call void @llvm.dbg.value(metadata double %5, metadata !27, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.label(metadata !42), !dbg !62
  call void @llvm.dbg.value(metadata i32 0, metadata !22, metadata !DIExpression()), !dbg !46
  br label %for.body16, !dbg !63

for.body16:                                       ; preds = %for.body16, %for.body9
  %indvars.iv = phi i64 [ 0, %for.body9 ], [ %indvars.iv.next, %for.body16 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !22, metadata !DIExpression()), !dbg !46
  %6 = add nuw nsw i64 %indvars.iv, %indvars.iv84, !dbg !65
  %7 = add nuw nsw i64 %6, %2, !dbg !68
  %arrayidx20 = getelementptr inbounds double, double* %host_m2, i64 %7, !dbg !69
  %8 = load double, double* %arrayidx20, align 8, !dbg !69, !tbaa !58
  %mul21 = fmul double %5, %8, !dbg !70
  call void @llvm.dbg.value(metadata double %mul21, metadata !28, metadata !DIExpression()), !dbg !46
  %9 = add nuw nsw i64 %indvars.iv, %indvars.iv84, !dbg !71
  %10 = add nuw nsw i64 %9, %0, !dbg !72
  %arrayidx25 = getelementptr inbounds double, double* %host_prod, i64 %10, !dbg !73
  %11 = load double, double* %arrayidx25, align 8, !dbg !74, !tbaa !58
  %add26 = fadd double %11, %mul21, !dbg !74
  store double %add26, double* %arrayidx25, align 8, !dbg !74, !tbaa !58
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !75
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !22, metadata !DIExpression()), !dbg !46
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !76
  br i1 %exitcond, label %for.inc27, label %for.body16, !dbg !63, !llvm.loop !77

for.inc27:                                        ; preds = %for.body16
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1, !dbg !79
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next72, metadata !21, metadata !DIExpression()), !dbg !46
  %exitcond77 = icmp eq i64 %indvars.iv.next72, 8, !dbg !80
  br i1 %exitcond77, label %for.inc30, label %for.body9, !dbg !52, !llvm.loop !81

for.inc30:                                        ; preds = %for.inc27
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1, !dbg !83
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next79, metadata !19, metadata !DIExpression()), !dbg !46
  %exitcond81 = icmp eq i64 %indvars.iv.next79, 64, !dbg !84
  br i1 %exitcond81, label %for.inc33, label %for.cond7.preheader, !dbg !50, !llvm.loop !85

for.inc33:                                        ; preds = %for.inc30
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 8, !dbg !87
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next83, metadata !24, metadata !DIExpression()), !dbg !46
  %cmp2 = icmp ult i64 %indvars.iv82, 56, !dbg !88
  br i1 %cmp2, label %for.cond4.preheader, label %for.inc36, !dbg !49, !llvm.loop !89

for.inc36:                                        ; preds = %for.inc33
  %indvars.iv.next85 = add nuw nsw i64 %indvars.iv84, 8, !dbg !91
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next85, metadata !23, metadata !DIExpression()), !dbg !46
  %cmp = icmp ult i64 %indvars.iv84, 56, !dbg !92
  br i1 %cmp, label %for.cond1.preheader, label %for.end38, !dbg !48, !llvm.loop !93

for.end38:                                        ; preds = %for.inc36
  ret void, !dbg !95
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "gemm.c", directory: "/home/coco/work/benchmark_codes/gemm-blocked")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "bbgemm", scope: !1, file: !1, line: 14, type: !8, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !12)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10, !10}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!12 = !{!13, !14, !15, !16, !17, !18, !19, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !34, !38, !42}
!13 = !DILocalVariable(name: "host_m1", arg: 1, scope: !7, file: !1, line: 14, type: !10)
!14 = !DILocalVariable(name: "host_m2", arg: 2, scope: !7, file: !1, line: 14, type: !10)
!15 = !DILocalVariable(name: "host_prod", arg: 3, scope: !7, file: !1, line: 14, type: !10)
!16 = !DILocalVariable(name: "m1", arg: 4, scope: !7, file: !1, line: 15, type: !10)
!17 = !DILocalVariable(name: "m2", arg: 5, scope: !7, file: !1, line: 15, type: !10)
!18 = !DILocalVariable(name: "prod", arg: 6, scope: !7, file: !1, line: 15, type: !10)
!19 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 16, type: !20)
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !DILocalVariable(name: "k", scope: !7, file: !1, line: 16, type: !20)
!22 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 16, type: !20)
!23 = !DILocalVariable(name: "jj", scope: !7, file: !1, line: 16, type: !20)
!24 = !DILocalVariable(name: "kk", scope: !7, file: !1, line: 16, type: !20)
!25 = !DILocalVariable(name: "i_row", scope: !7, file: !1, line: 17, type: !20)
!26 = !DILocalVariable(name: "k_row", scope: !7, file: !1, line: 17, type: !20)
!27 = !DILocalVariable(name: "temp_x", scope: !7, file: !1, line: 18, type: !11)
!28 = !DILocalVariable(name: "mul", scope: !7, file: !1, line: 18, type: !11)
!29 = !DILabel(scope: !7, name: "loopjj", file: !1, line: 29)
!30 = !DILabel(scope: !31, name: "loopkk", file: !1, line: 30)
!31 = distinct !DILexicalBlock(scope: !32, file: !1, line: 29, column: 57)
!32 = distinct !DILexicalBlock(scope: !33, file: !1, line: 29, column: 12)
!33 = distinct !DILexicalBlock(scope: !7, file: !1, line: 29, column: 12)
!34 = !DILabel(scope: !35, name: "loopi", file: !1, line: 31)
!35 = distinct !DILexicalBlock(scope: !36, file: !1, line: 30, column: 61)
!36 = distinct !DILexicalBlock(scope: !37, file: !1, line: 30, column: 16)
!37 = distinct !DILexicalBlock(scope: !31, file: !1, line: 30, column: 16)
!38 = !DILabel(scope: !39, name: "loopk", file: !1, line: 32)
!39 = distinct !DILexicalBlock(scope: !40, file: !1, line: 31, column: 50)
!40 = distinct !DILexicalBlock(scope: !41, file: !1, line: 31, column: 19)
!41 = distinct !DILexicalBlock(scope: !35, file: !1, line: 31, column: 19)
!42 = !DILabel(scope: !43, name: "loopj", file: !1, line: 36)
!43 = distinct !DILexicalBlock(scope: !44, file: !1, line: 32, column: 55)
!44 = distinct !DILexicalBlock(scope: !45, file: !1, line: 32, column: 23)
!45 = distinct !DILexicalBlock(scope: !39, file: !1, line: 32, column: 23)
!46 = !DILocation(line: 0, scope: !7)
!47 = !DILocation(line: 29, column: 5, scope: !7)
!48 = !DILocation(line: 29, column: 12, scope: !33)
!49 = !DILocation(line: 30, column: 16, scope: !37)
!50 = !DILocation(line: 31, column: 19, scope: !41)
!51 = !DILocation(line: 0, scope: !43)
!52 = !DILocation(line: 32, column: 23, scope: !45)
!53 = !DILocation(line: 34, column: 33, scope: !43)
!54 = !DILocation(line: 34, column: 39, scope: !43)
!55 = !DILocation(line: 35, column: 39, scope: !43)
!56 = !DILocation(line: 35, column: 43, scope: !43)
!57 = !DILocation(line: 35, column: 30, scope: !43)
!58 = !{!59, !59, i64 0}
!59 = !{!"double", !60, i64 0}
!60 = !{!"omnipotent char", !61, i64 0}
!61 = !{!"Simple C/C++ TBAA"}
!62 = !DILocation(line: 36, column: 21, scope: !43)
!63 = !DILocation(line: 36, column: 27, scope: !64)
!64 = distinct !DILexicalBlock(scope: !43, file: !1, line: 36, column: 27)
!65 = !DILocation(line: 37, column: 49, scope: !66)
!66 = distinct !DILexicalBlock(scope: !67, file: !1, line: 36, column: 59)
!67 = distinct !DILexicalBlock(scope: !64, file: !1, line: 36, column: 27)
!68 = !DILocation(line: 37, column: 53, scope: !66)
!69 = !DILocation(line: 37, column: 40, scope: !66)
!70 = !DILocation(line: 37, column: 38, scope: !66)
!71 = !DILocation(line: 38, column: 36, scope: !66)
!72 = !DILocation(line: 38, column: 40, scope: !66)
!73 = !DILocation(line: 38, column: 25, scope: !66)
!74 = !DILocation(line: 38, column: 46, scope: !66)
!75 = !DILocation(line: 36, column: 55, scope: !67)
!76 = !DILocation(line: 36, column: 41, scope: !67)
!77 = distinct !{!77, !63, !78}
!78 = !DILocation(line: 39, column: 21, scope: !64)
!79 = !DILocation(line: 32, column: 51, scope: !44)
!80 = !DILocation(line: 32, column: 37, scope: !44)
!81 = distinct !{!81, !52, !82}
!82 = !DILocation(line: 40, column: 17, scope: !45)
!83 = !DILocation(line: 31, column: 46, scope: !40)
!84 = !DILocation(line: 31, column: 34, scope: !40)
!85 = distinct !{!85, !50, !86}
!86 = !DILocation(line: 41, column: 13, scope: !41)
!87 = !DILocation(line: 30, column: 47, scope: !36)
!88 = !DILocation(line: 30, column: 32, scope: !36)
!89 = distinct !{!89, !49, !90}
!90 = !DILocation(line: 42, column: 9, scope: !37)
!91 = !DILocation(line: 29, column: 43, scope: !32)
!92 = !DILocation(line: 29, column: 28, scope: !32)
!93 = distinct !{!93, !48, !94}
!94 = !DILocation(line: 43, column: 5, scope: !33)
!95 = !DILocation(line: 47, column: 1, scope: !7)
