; ModuleID = 'triad.c'
source_filename = "triad.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [12 x i8] c"output.data\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d,\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @triad(i32* nocapture readonly %a, i32* nocapture readonly %b, i32* nocapture %c, i32 %s) local_unnamed_addr #0 !dbg !86 {
entry:
  call void @llvm.dbg.value(metadata i32* %a, metadata !90, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.value(metadata i32* %b, metadata !91, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.value(metadata i32* %c, metadata !92, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.value(metadata i32 %s, metadata !93, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.label(metadata !95), !dbg !97
  call void @llvm.dbg.value(metadata i32 0, metadata !94, metadata !DIExpression()), !dbg !96
  br label %for.body, !dbg !98

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !94, metadata !DIExpression()), !dbg !96
  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %indvars.iv, !dbg !100
  %0 = load i32, i32* %arrayidx, align 4, !dbg !100, !tbaa !102
  %arrayidx2 = getelementptr inbounds i32, i32* %b, i64 %indvars.iv, !dbg !106
  %1 = load i32, i32* %arrayidx2, align 4, !dbg !106, !tbaa !102
  %mul = mul nsw i32 %1, %s, !dbg !107
  %add = add nsw i32 %mul, %0, !dbg !108
  %arrayidx4 = getelementptr inbounds i32, i32* %c, i64 %indvars.iv, !dbg !109
  store i32 %add, i32* %arrayidx4, align 4, !dbg !110, !tbaa !102
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !111
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !94, metadata !DIExpression()), !dbg !96
  %exitcond = icmp eq i64 %indvars.iv.next, 2048, !dbg !112
  br i1 %exitcond, label %for.end, label %for.body, !dbg !98, !llvm.loop !113

for.end:                                          ; preds = %for.body
  ret void, !dbg !115
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #2 !dbg !116 {
entry:
  %call = call noalias dereferenceable_or_null(8192) i8* @malloc(i64 8192) #6, !dbg !126
  %0 = bitcast i8* %call to i32*, !dbg !127
  call void @llvm.dbg.value(metadata i32* %0, metadata !118, metadata !DIExpression()), !dbg !128
  %call1 = call noalias dereferenceable_or_null(8192) i8* @malloc(i64 8192) #6, !dbg !129
  %1 = bitcast i8* %call1 to i32*, !dbg !130
  call void @llvm.dbg.value(metadata i32* %1, metadata !119, metadata !DIExpression()), !dbg !128
  %call2 = call noalias dereferenceable_or_null(8192) i8* @malloc(i64 8192) #6, !dbg !131
  %2 = bitcast i8* %call2 to i32*, !dbg !132
  call void @llvm.dbg.value(metadata i32* %2, metadata !120, metadata !DIExpression()), !dbg !128
  %call3 = call i64 @time(i64* null) #6, !dbg !133
  %conv = trunc i64 %call3 to i32, !dbg !133
  call void @srand(i32 %conv) #6, !dbg !134
  call void @llvm.dbg.value(metadata i32 0, metadata !121, metadata !DIExpression()), !dbg !128
  br label %for.body, !dbg !135

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv46 = phi i64 [ 0, %entry ], [ %indvars.iv.next47, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv46, metadata !121, metadata !DIExpression()), !dbg !128
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %indvars.iv46, !dbg !137
  store i32 0, i32* %arrayidx, align 4, !dbg !140, !tbaa !102
  %call5 = call i32 @rand() #6, !dbg !141
  %arrayidx7 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv46, !dbg !142
  store i32 %call5, i32* %arrayidx7, align 4, !dbg !143, !tbaa !102
  %call8 = call i32 @rand() #6, !dbg !144
  %arrayidx10 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv46, !dbg !145
  store i32 %call8, i32* %arrayidx10, align 4, !dbg !146, !tbaa !102
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1, !dbg !147
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next47, metadata !121, metadata !DIExpression()), !dbg !128
  %exitcond48 = icmp eq i64 %indvars.iv.next47, 2048, !dbg !148
  br i1 %exitcond48, label %for.end, label %for.body, !dbg !135, !llvm.loop !149

for.end:                                          ; preds = %for.body
  call void @triad(i32* %0, i32* %1, i32* %2, i32 3), !dbg !151
  %call14 = call noalias %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !152
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call14, metadata !122, metadata !DIExpression()), !dbg !128
  call void @llvm.dbg.value(metadata i32 0, metadata !121, metadata !DIExpression()), !dbg !128
  br label %for.body18, !dbg !153

for.body18:                                       ; preds = %for.body18, %for.end
  %indvars.iv = phi i64 [ 0, %for.end ], [ %indvars.iv.next, %for.body18 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !121, metadata !DIExpression()), !dbg !128
  %arrayidx20 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv, !dbg !155
  %3 = load i32, i32* %arrayidx20, align 4, !dbg !155, !tbaa !102
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %3), !dbg !157
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !158
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !121, metadata !DIExpression()), !dbg !128
  %exitcond = icmp eq i64 %indvars.iv.next, 2048, !dbg !159
  br i1 %exitcond, label %for.end24, label %for.body18, !dbg !153, !llvm.loop !160

for.end24:                                        ; preds = %for.body18
  %fputc_unlocked = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %call14), !dbg !162
  %call26 = call i32 @fclose(%struct._IO_FILE* %call14), !dbg !163
  ret i32 0, !dbg !164
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !12 dso_local void @srand(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !6 dso_local i64 @time(i64*) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !17 dso_local i32 @rand() local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare dso_local noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare !dbg !20 dso_local i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nofree nounwind
declare i32 @fputc_unlocked(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #5

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!82, !83, !84}
!llvm.ident = !{!85}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "triad.c", directory: "/home/coco/work/benchmark_codes/triad")
!2 = !{}
!3 = !{!4, !6, !12, !17, !20}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !DISubprogram(name: "time", scope: !7, file: !7, line: 76, type: !8, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2)
!7 = !DIFile(filename: "/usr/include/time.h", directory: "")
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !11}
!10 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!12 = !DISubprogram(name: "srand", scope: !13, file: !13, line: 456, type: !14, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2)
!13 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!14 = !DISubroutineType(types: !15)
!15 = !{null, !16}
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !DISubprogram(name: "rand", scope: !13, file: !13, line: 454, type: !18, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{!5}
!20 = !DISubprogram(name: "fclose", scope: !21, file: !21, line: 178, type: !22, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2)
!21 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!22 = !DISubroutineType(types: !23)
!23 = !{!5, !24}
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !26, line: 49, size: 1728, elements: !27)
!26 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!27 = !{!28, !29, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !45, !46, !47, !48, !51, !53, !55, !59, !62, !64, !67, !70, !71, !73, !77, !78}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !25, file: !26, line: 51, baseType: !5, size: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !25, file: !26, line: 54, baseType: !30, size: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!31 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !25, file: !26, line: 55, baseType: !30, size: 64, offset: 128)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !25, file: !26, line: 56, baseType: !30, size: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !25, file: !26, line: 57, baseType: !30, size: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !25, file: !26, line: 58, baseType: !30, size: 64, offset: 320)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !25, file: !26, line: 59, baseType: !30, size: 64, offset: 384)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !25, file: !26, line: 60, baseType: !30, size: 64, offset: 448)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !25, file: !26, line: 61, baseType: !30, size: 64, offset: 512)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !25, file: !26, line: 64, baseType: !30, size: 64, offset: 576)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !25, file: !26, line: 65, baseType: !30, size: 64, offset: 640)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !25, file: !26, line: 66, baseType: !30, size: 64, offset: 704)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !25, file: !26, line: 68, baseType: !43, size: 64, offset: 768)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !26, line: 36, flags: DIFlagFwdDecl)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !25, file: !26, line: 70, baseType: !24, size: 64, offset: 832)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !25, file: !26, line: 72, baseType: !5, size: 32, offset: 896)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !25, file: !26, line: 73, baseType: !5, size: 32, offset: 928)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !25, file: !26, line: 74, baseType: !49, size: 64, offset: 960)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !50, line: 152, baseType: !10)
!50 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !25, file: !26, line: 77, baseType: !52, size: 16, offset: 1024)
!52 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !25, file: !26, line: 78, baseType: !54, size: 8, offset: 1040)
!54 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !25, file: !26, line: 79, baseType: !56, size: 8, offset: 1048)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 8, elements: !57)
!57 = !{!58}
!58 = !DISubrange(count: 1)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !25, file: !26, line: 81, baseType: !60, size: 64, offset: 1088)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !26, line: 43, baseType: null)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !25, file: !26, line: 89, baseType: !63, size: 64, offset: 1152)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !50, line: 153, baseType: !10)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !25, file: !26, line: 91, baseType: !65, size: 64, offset: 1216)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !26, line: 37, flags: DIFlagFwdDecl)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !25, file: !26, line: 92, baseType: !68, size: 64, offset: 1280)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !26, line: 38, flags: DIFlagFwdDecl)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !25, file: !26, line: 93, baseType: !24, size: 64, offset: 1344)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !25, file: !26, line: 94, baseType: !72, size: 64, offset: 1408)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !25, file: !26, line: 95, baseType: !74, size: 64, offset: 1472)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !75, line: 46, baseType: !76)
!75 = !DIFile(filename: "/usr/lib/clang/10.0.1/include/stddef.h", directory: "")
!76 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !25, file: !26, line: 96, baseType: !5, size: 32, offset: 1536)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !25, file: !26, line: 98, baseType: !79, size: 160, offset: 1568)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 160, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 20)
!82 = !{i32 7, !"Dwarf Version", i32 4}
!83 = !{i32 2, !"Debug Info Version", i32 3}
!84 = !{i32 1, !"wchar_size", i32 4}
!85 = !{!"clang version 10.0.1 "}
!86 = distinct !DISubprogram(name: "triad", scope: !1, file: !1, line: 7, type: !87, scopeLine: 7, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !89)
!87 = !DISubroutineType(types: !88)
!88 = !{null, !4, !4, !4, !5}
!89 = !{!90, !91, !92, !93, !94, !95}
!90 = !DILocalVariable(name: "a", arg: 1, scope: !86, file: !1, line: 7, type: !4)
!91 = !DILocalVariable(name: "b", arg: 2, scope: !86, file: !1, line: 7, type: !4)
!92 = !DILocalVariable(name: "c", arg: 3, scope: !86, file: !1, line: 7, type: !4)
!93 = !DILocalVariable(name: "s", arg: 4, scope: !86, file: !1, line: 7, type: !5)
!94 = !DILocalVariable(name: "i", scope: !86, file: !1, line: 14, type: !5)
!95 = !DILabel(scope: !86, name: "triad", file: !1, line: 15)
!96 = !DILocation(line: 0, scope: !86)
!97 = !DILocation(line: 15, column: 3, scope: !86)
!98 = !DILocation(line: 15, column: 9, scope: !99)
!99 = distinct !DILexicalBlock(scope: !86, file: !1, line: 15, column: 9)
!100 = !DILocation(line: 16, column: 12, scope: !101)
!101 = distinct !DILexicalBlock(scope: !99, file: !1, line: 15, column: 9)
!102 = !{!103, !103, i64 0}
!103 = !{!"int", !104, i64 0}
!104 = !{!"omnipotent char", !105, i64 0}
!105 = !{!"Simple C/C++ TBAA"}
!106 = !DILocation(line: 16, column: 21, scope: !101)
!107 = !DILocation(line: 16, column: 20, scope: !101)
!108 = !DILocation(line: 16, column: 17, scope: !101)
!109 = !DILocation(line: 16, column: 5, scope: !101)
!110 = !DILocation(line: 16, column: 10, scope: !101)
!111 = !DILocation(line: 15, column: 24, scope: !101)
!112 = !DILocation(line: 15, column: 18, scope: !101)
!113 = distinct !{!113, !98, !114}
!114 = !DILocation(line: 16, column: 24, scope: !99)
!115 = !DILocation(line: 21, column: 1, scope: !86)
!116 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 23, type: !18, scopeLine: 23, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !117)
!117 = !{!118, !119, !120, !121, !122}
!118 = !DILocalVariable(name: "a", scope: !116, file: !1, line: 24, type: !4)
!119 = !DILocalVariable(name: "b", scope: !116, file: !1, line: 24, type: !4)
!120 = !DILocalVariable(name: "c", scope: !116, file: !1, line: 24, type: !4)
!121 = !DILocalVariable(name: "i", scope: !116, file: !1, line: 28, type: !5)
!122 = !DILocalVariable(name: "output", scope: !116, file: !1, line: 42, type: !123)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !125, line: 7, baseType: !25)
!125 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!126 = !DILocation(line: 25, column: 17, scope: !116)
!127 = !DILocation(line: 25, column: 9, scope: !116)
!128 = !DILocation(line: 0, scope: !116)
!129 = !DILocation(line: 26, column: 17, scope: !116)
!130 = !DILocation(line: 26, column: 9, scope: !116)
!131 = !DILocation(line: 27, column: 17, scope: !116)
!132 = !DILocation(line: 27, column: 9, scope: !116)
!133 = !DILocation(line: 29, column: 9, scope: !116)
!134 = !DILocation(line: 29, column: 3, scope: !116)
!135 = !DILocation(line: 30, column: 2, scope: !136)
!136 = distinct !DILexicalBlock(scope: !116, file: !1, line: 30, column: 2)
!137 = !DILocation(line: 31, column: 3, scope: !138)
!138 = distinct !DILexicalBlock(scope: !139, file: !1, line: 30, column: 22)
!139 = distinct !DILexicalBlock(scope: !136, file: !1, line: 30, column: 2)
!140 = !DILocation(line: 31, column: 8, scope: !138)
!141 = !DILocation(line: 32, column: 10, scope: !138)
!142 = !DILocation(line: 32, column: 3, scope: !138)
!143 = !DILocation(line: 32, column: 8, scope: !138)
!144 = !DILocation(line: 33, column: 10, scope: !138)
!145 = !DILocation(line: 33, column: 3, scope: !138)
!146 = !DILocation(line: 33, column: 8, scope: !138)
!147 = !DILocation(line: 30, column: 19, scope: !139)
!148 = !DILocation(line: 30, column: 12, scope: !139)
!149 = distinct !{!149, !135, !150}
!150 = !DILocation(line: 34, column: 2, scope: !136)
!151 = !DILocation(line: 38, column: 2, scope: !116)
!152 = !DILocation(line: 43, column: 12, scope: !116)
!153 = !DILocation(line: 44, column: 2, scope: !154)
!154 = distinct !DILexicalBlock(scope: !116, file: !1, line: 44, column: 2)
!155 = !DILocation(line: 45, column: 28, scope: !156)
!156 = distinct !DILexicalBlock(scope: !154, file: !1, line: 44, column: 2)
!157 = !DILocation(line: 45, column: 5, scope: !156)
!158 = !DILocation(line: 44, column: 19, scope: !156)
!159 = !DILocation(line: 44, column: 12, scope: !156)
!160 = distinct !{!160, !153, !161}
!161 = !DILocation(line: 45, column: 32, scope: !154)
!162 = !DILocation(line: 46, column: 3, scope: !116)
!163 = !DILocation(line: 47, column: 3, scope: !116)
!164 = !DILocation(line: 48, column: 2, scope: !116)
