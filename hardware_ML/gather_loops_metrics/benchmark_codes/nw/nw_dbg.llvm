; ModuleID = 'nw.c'
source_filename = "nw.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @needwun(i8* nocapture readonly %host_SEQA, i8* nocapture readonly %host_SEQB, i8* nocapture %host_alignedA, i8* nocapture %host_alignedB, i8* nocapture readnone %SEQA, i8* nocapture readnone %SEQB, i8* nocapture readnone %alignedA, i8* nocapture readnone %alignedB, i32* nocapture %M, i8* nocapture %ptr) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata i8* %host_SEQA, metadata !15, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_SEQB, metadata !16, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_alignedA, metadata !17, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_alignedB, metadata !18, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %SEQA, metadata !19, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %SEQB, metadata !20, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %alignedA, metadata !21, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %alignedB, metadata !22, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32* %M, metadata !23, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !24, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_SEQA, metadata !19, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_SEQB, metadata !20, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_alignedA, metadata !21, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i8* %host_alignedB, metadata !22, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.label(metadata !37), !dbg !48
  call void @llvm.dbg.value(metadata i32 0, metadata !33, metadata !DIExpression()), !dbg !47
  br label %for.body, !dbg !49

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv280 = phi i64 [ 0, %entry ], [ %indvars.iv.next281, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv280, metadata !33, metadata !DIExpression()), !dbg !47
  %arrayidx = getelementptr inbounds i32, i32* %M, i64 %indvars.iv280, !dbg !51
  %0 = trunc i64 %indvars.iv280 to i32, !dbg !54
  %1 = sub i32 0, %0, !dbg !54
  store i32 %1, i32* %arrayidx, align 4, !dbg !54, !tbaa !55
  %indvars.iv.next281 = add nuw nsw i64 %indvars.iv280, 1, !dbg !59
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next281, metadata !33, metadata !DIExpression()), !dbg !47
  %exitcond283 = icmp eq i64 %indvars.iv.next281, 129, !dbg !60
  br i1 %exitcond283, label %for.body3, label %for.body, !dbg !49, !llvm.loop !61

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv275 = phi i64 [ %indvars.iv.next276, %for.body3 ], [ 0, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv275, metadata !34, metadata !DIExpression()), !dbg !47
  %2 = mul nuw nsw i64 %indvars.iv275, 129, !dbg !63
  %arrayidx7 = getelementptr inbounds i32, i32* %M, i64 %2, !dbg !67
  %3 = trunc i64 %indvars.iv275 to i32, !dbg !68
  %4 = sub i32 0, %3, !dbg !68
  store i32 %4, i32* %arrayidx7, align 4, !dbg !68, !tbaa !55
  %indvars.iv.next276 = add nuw nsw i64 %indvars.iv275, 1, !dbg !69
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next276, metadata !34, metadata !DIExpression()), !dbg !47
  %exitcond279 = icmp eq i64 %indvars.iv.next276, 129, !dbg !70
  br i1 %exitcond279, label %for.body16.lver.check, label %for.body3, !dbg !71, !llvm.loop !72

for.body16.lver.check:                            ; preds = %for.body3, %for.inc80
  %indvar = phi i64 [ %indvar.next, %for.inc80 ], [ 0, %for.body3 ]
  %indvars.iv269 = phi i64 [ %indvars.iv.next270, %for.inc80 ], [ 1, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv269, metadata !34, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 1, metadata !33, metadata !DIExpression()), !dbg !47
  %5 = mul nuw nsw i64 %indvar, 129, !dbg !74
  %scevgep285 = getelementptr i32, i32* %M, i64 %5, !dbg !74
  %scevgep285286 = bitcast i32* %scevgep285 to i8*
  %6 = add i64 %5, 258, !dbg !74
  %scevgep287 = getelementptr i32, i32* %M, i64 %6, !dbg !74
  %scevgep287288 = bitcast i32* %scevgep287 to i8*
  %7 = add i64 %5, 130, !dbg !74
  %scevgep289 = getelementptr i8, i8* %ptr, i64 %7, !dbg !74
  %scevgep290 = getelementptr i8, i8* %ptr, i64 %6, !dbg !74
  %8 = add nsw i64 %indvars.iv269, -1, !dbg !74
  %arrayidx21 = getelementptr inbounds i8, i8* %host_SEQB, i64 %8, !dbg !74
  %9 = mul nuw nsw i64 %8, 129, !dbg !79
  %10 = mul nuw nsw i64 %indvars.iv269, 129, !dbg !79
  %bound0 = icmp ugt i8* %scevgep290, %scevgep285286, !dbg !80
  %bound1 = icmp ult i8* %scevgep289, %scevgep287288, !dbg !80
  %found.conflict = and i1 %bound0, %bound1, !dbg !80
  br i1 %found.conflict, label %for.body16.lver.orig, label %for.body16.ph

for.body16.lver.orig:                             ; preds = %for.body16.lver.check, %for.inc77.lver.orig
  %indvars.iv262.lver.orig = phi i64 [ %indvars.iv.next263.lver.orig, %for.inc77.lver.orig ], [ 1, %for.body16.lver.check ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv262.lver.orig, metadata !33, metadata !DIExpression()), !dbg !47
  %11 = add nsw i64 %indvars.iv262.lver.orig, -1, !dbg !81
  %arrayidx18.lver.orig = getelementptr inbounds i8, i8* %host_SEQA, i64 %11, !dbg !82
  %12 = load i8, i8* %arrayidx18.lver.orig, align 1, !dbg !82, !tbaa !83
  %13 = load i8, i8* %arrayidx21, align 1, !dbg !84, !tbaa !83
  %cmp23.lver.orig = icmp eq i8 %12, %13, !dbg !85
  %..lver.orig = select i1 %cmp23.lver.orig, i32 1, i32 -1
  call void @llvm.dbg.value(metadata i32 %..lver.orig, metadata !25, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %9, metadata !31, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %10, metadata !30, metadata !DIExpression()), !dbg !47
  %14 = add nuw nsw i64 %11, %9, !dbg !86
  %arrayidx30.lver.orig = getelementptr inbounds i32, i32* %M, i64 %14, !dbg !87
  %15 = load i32, i32* %arrayidx30.lver.orig, align 4, !dbg !87, !tbaa !55
  %add31.lver.orig = add nsw i32 %..lver.orig, %15, !dbg !88
  call void @llvm.dbg.value(metadata i32 %add31.lver.orig, metadata !26, metadata !DIExpression()), !dbg !47
  %16 = add nuw nsw i64 %indvars.iv262.lver.orig, %9, !dbg !89
  %arrayidx34.lver.orig = getelementptr inbounds i32, i32* %M, i64 %16, !dbg !90
  %17 = load i32, i32* %arrayidx34.lver.orig, align 4, !dbg !90, !tbaa !55
  %add35.lver.orig = add nsw i32 %17, -1, !dbg !91
  call void @llvm.dbg.value(metadata i32 %add35.lver.orig, metadata !27, metadata !DIExpression()), !dbg !47
  %18 = add nuw nsw i64 %11, %10, !dbg !92
  %arrayidx39.lver.orig = getelementptr inbounds i32, i32* %M, i64 %18, !dbg !93
  %19 = load i32, i32* %arrayidx39.lver.orig, align 4, !dbg !93, !tbaa !55
  %add40.lver.orig = add nsw i32 %19, -1, !dbg !94
  call void @llvm.dbg.value(metadata i32 %add40.lver.orig, metadata !28, metadata !DIExpression()), !dbg !47
  %cmp41.lver.orig = icmp sgt i32 %17, %19, !dbg !95
  %cond.lver.orig = select i1 %cmp41.lver.orig, i32 %add35.lver.orig, i32 %add40.lver.orig, !dbg !95
  %cmp43.lver.orig = icmp sgt i32 %add31.lver.orig, %cond.lver.orig, !dbg !95
  %cond54.lver.orig = select i1 %cmp43.lver.orig, i32 %add31.lver.orig, i32 %cond.lver.orig, !dbg !95
  call void @llvm.dbg.value(metadata i32 %cond54.lver.orig, metadata !29, metadata !DIExpression()), !dbg !47
  %20 = add nuw nsw i64 %indvars.iv262.lver.orig, %10, !dbg !96
  %arrayidx57.lver.orig = getelementptr inbounds i32, i32* %M, i64 %20, !dbg !97
  store i32 %cond54.lver.orig, i32* %arrayidx57.lver.orig, align 4, !dbg !98, !tbaa !55
  %cmp58.lver.orig = icmp eq i32 %cond54.lver.orig, %add40.lver.orig, !dbg !99
  br i1 %cmp58.lver.orig, label %if.then60.lver.orig, label %if.else64.lver.orig, !dbg !101

if.else64.lver.orig:                              ; preds = %for.body16.lver.orig
  %cmp65.lver.orig = icmp eq i32 %cond54.lver.orig, %add35.lver.orig, !dbg !102
  %arrayidx70.lver.orig = getelementptr inbounds i8, i8* %ptr, i64 %20, !dbg !104
  br i1 %cmp65.lver.orig, label %if.then67.lver.orig, label %if.else71.lver.orig, !dbg !105

if.else71.lver.orig:                              ; preds = %if.else64.lver.orig
  store i8 92, i8* %arrayidx70.lver.orig, align 1, !dbg !106, !tbaa !83
  br label %for.inc77.lver.orig

if.then67.lver.orig:                              ; preds = %if.else64.lver.orig
  store i8 94, i8* %arrayidx70.lver.orig, align 1, !dbg !108, !tbaa !83
  br label %for.inc77.lver.orig, !dbg !110

if.then60.lver.orig:                              ; preds = %for.body16.lver.orig
  %arrayidx63.lver.orig = getelementptr inbounds i8, i8* %ptr, i64 %20, !dbg !111
  store i8 60, i8* %arrayidx63.lver.orig, align 1, !dbg !113, !tbaa !83
  br label %for.inc77.lver.orig, !dbg !114

for.inc77.lver.orig:                              ; preds = %if.then60.lver.orig, %if.then67.lver.orig, %if.else71.lver.orig
  %indvars.iv.next263.lver.orig = add nuw nsw i64 %indvars.iv262.lver.orig, 1, !dbg !115
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next263.lver.orig, metadata !33, metadata !DIExpression()), !dbg !47
  %exitcond.lver.orig = icmp eq i64 %indvars.iv.next263.lver.orig, 129, !dbg !116
  br i1 %exitcond.lver.orig, label %for.inc80, label %for.body16.lver.orig, !dbg !80, !llvm.loop !117

for.body16.ph:                                    ; preds = %for.body16.lver.check
  %21 = mul nuw nsw i64 %indvar, 129, !dbg !74
  %22 = add i64 %21, 129, !dbg !74
  %scevgep291 = getelementptr i32, i32* %M, i64 %22, !dbg !74
  %load_initial = load i32, i32* %scevgep291, align 4
  br label %for.body16, !dbg !80

for.body16:                                       ; preds = %for.inc77, %for.body16.ph
  %store_forwarded = phi i32 [ %load_initial, %for.body16.ph ], [ %cond54, %for.inc77 ]
  %indvars.iv262 = phi i64 [ 1, %for.body16.ph ], [ %indvars.iv.next263, %for.inc77 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv262, metadata !33, metadata !DIExpression()), !dbg !47
  %23 = add nsw i64 %indvars.iv262, -1, !dbg !81
  %arrayidx18 = getelementptr inbounds i8, i8* %host_SEQA, i64 %23, !dbg !82
  %24 = load i8, i8* %arrayidx18, align 1, !dbg !82, !tbaa !83
  %25 = load i8, i8* %arrayidx21, align 1, !dbg !84, !tbaa !83
  %cmp23 = icmp eq i8 %24, %25, !dbg !85
  %. = select i1 %cmp23, i32 1, i32 -1
  call void @llvm.dbg.value(metadata i32 %., metadata !25, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %9, metadata !31, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %10, metadata !30, metadata !DIExpression()), !dbg !47
  %26 = add nuw nsw i64 %23, %9, !dbg !86
  %arrayidx30 = getelementptr inbounds i32, i32* %M, i64 %26, !dbg !87
  %27 = load i32, i32* %arrayidx30, align 4, !dbg !87, !tbaa !55
  %add31 = add nsw i32 %., %27, !dbg !88
  call void @llvm.dbg.value(metadata i32 %add31, metadata !26, metadata !DIExpression()), !dbg !47
  %28 = add nuw nsw i64 %indvars.iv262, %9, !dbg !89
  %arrayidx34 = getelementptr inbounds i32, i32* %M, i64 %28, !dbg !90
  %29 = load i32, i32* %arrayidx34, align 4, !dbg !90, !tbaa !55
  %add35 = add nsw i32 %29, -1, !dbg !91
  call void @llvm.dbg.value(metadata i32 %add35, metadata !27, metadata !DIExpression()), !dbg !47
  %add40 = add nsw i32 %store_forwarded, -1, !dbg !94
  call void @llvm.dbg.value(metadata i32 %add40, metadata !28, metadata !DIExpression()), !dbg !47
  %cmp41 = icmp sgt i32 %29, %store_forwarded, !dbg !95
  %cond = select i1 %cmp41, i32 %add35, i32 %add40, !dbg !95
  %cmp43 = icmp sgt i32 %add31, %cond, !dbg !95
  %cond54 = select i1 %cmp43, i32 %add31, i32 %cond, !dbg !95
  call void @llvm.dbg.value(metadata i32 %cond54, metadata !29, metadata !DIExpression()), !dbg !47
  %30 = add nuw nsw i64 %indvars.iv262, %10, !dbg !96
  %arrayidx57 = getelementptr inbounds i32, i32* %M, i64 %30, !dbg !97
  store i32 %cond54, i32* %arrayidx57, align 4, !dbg !98, !tbaa !55
  %cmp58 = icmp eq i32 %cond54, %add40, !dbg !99
  br i1 %cmp58, label %if.then60, label %if.else64, !dbg !101

if.then60:                                        ; preds = %for.body16
  %arrayidx63 = getelementptr inbounds i8, i8* %ptr, i64 %30, !dbg !111
  store i8 60, i8* %arrayidx63, align 1, !dbg !113, !tbaa !83
  br label %for.inc77, !dbg !114

if.else64:                                        ; preds = %for.body16
  %cmp65 = icmp eq i32 %cond54, %add35, !dbg !102
  %arrayidx70 = getelementptr inbounds i8, i8* %ptr, i64 %30, !dbg !104
  br i1 %cmp65, label %if.then67, label %if.else71, !dbg !105

if.then67:                                        ; preds = %if.else64
  store i8 94, i8* %arrayidx70, align 1, !dbg !108, !tbaa !83
  br label %for.inc77, !dbg !110

if.else71:                                        ; preds = %if.else64
  store i8 92, i8* %arrayidx70, align 1, !dbg !106, !tbaa !83
  br label %for.inc77

for.inc77:                                        ; preds = %if.then60, %if.else71, %if.then67
  %indvars.iv.next263 = add nuw nsw i64 %indvars.iv262, 1, !dbg !115
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next263, metadata !33, metadata !DIExpression()), !dbg !47
  %exitcond = icmp eq i64 %indvars.iv.next263, 129, !dbg !116
  br i1 %exitcond, label %for.inc80, label %for.body16, !dbg !80, !llvm.loop !117

for.inc80:                                        ; preds = %for.inc77, %for.inc77.lver.orig
  %indvars.iv.next270 = add nuw nsw i64 %indvars.iv269, 1, !dbg !119
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next270, metadata !34, metadata !DIExpression()), !dbg !47
  %exitcond274 = icmp eq i64 %indvars.iv.next270, 129, !dbg !120
  %indvar.next = add i64 %indvar, 1, !dbg !121
  br i1 %exitcond274, label %while.body, label %for.body16.lver.check, !dbg !121, !llvm.loop !122

for.cond139.preheader:                            ; preds = %if.end138
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !36, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !36, metadata !DIExpression()), !dbg !47
  %31 = trunc i64 %indvars.iv to i32, !dbg !47
  %32 = trunc i64 %indvars.iv to i32, !dbg !47
  %33 = trunc i64 %indvars.iv.next to i32, !dbg !47
  call void @llvm.dbg.value(metadata i32 %32, metadata !36, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 %31, metadata !35, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !35, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !47
  call void @llvm.dbg.value(metadata i32 %33, metadata !36, metadata !DIExpression()), !dbg !47
  %cmp140248 = icmp ult i32 %31, 255, !dbg !124
  br i1 %cmp140248, label %for.body142.preheader, label %for.cond148.preheader, !dbg !127

for.body142.preheader:                            ; preds = %for.cond139.preheader
  %34 = trunc i64 %indvars.iv.next to i32, !dbg !47
  call void @llvm.dbg.value(metadata i32 %34, metadata !35, metadata !DIExpression()), !dbg !47
  %35 = and i64 %indvars.iv.next, 4294967295, !dbg !127
  %scevgep260 = getelementptr i8, i8* %host_alignedA, i64 %35, !dbg !127
  %36 = call i32 @llvm.usub.sat.i32(i32 255, i32 %34), !dbg !127
  %narrow284 = add nuw nsw i32 %36, 1, !dbg !127
  %37 = zext i32 %narrow284 to i64, !dbg !127
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(1) %scevgep260, i8 95, i64 %37, i1 false), !dbg !128
  call void @llvm.dbg.value(metadata i32 undef, metadata !35, metadata !DIExpression()), !dbg !47
  br label %for.cond148.preheader, !dbg !130

while.body:                                       ; preds = %for.inc80, %if.end138
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end138 ], [ 0, %for.inc80 ]
  %b_idx.2251 = phi i32 [ %b_idx.3, %if.end138 ], [ 128, %for.inc80 ]
  %a_idx.2250 = phi i32 [ %a_idx.3, %if.end138 ], [ 128, %for.inc80 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !36, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !35, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 %b_idx.2251, metadata !34, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 %a_idx.2250, metadata !33, metadata !DIExpression()), !dbg !47
  %mul87 = mul nsw i32 %b_idx.2251, 129, !dbg !133
  call void @llvm.dbg.value(metadata i32 %mul87, metadata !32, metadata !DIExpression()), !dbg !47
  %add88 = add nsw i32 %mul87, %a_idx.2250, !dbg !135
  %idxprom89 = sext i32 %add88 to i64, !dbg !137
  %arrayidx90 = getelementptr inbounds i8, i8* %ptr, i64 %idxprom89, !dbg !137
  %38 = load i8, i8* %arrayidx90, align 1, !dbg !137, !tbaa !83
  switch i8 %38, label %if.else126 [
    i8 92, label %if.then94
    i8 60, label %if.then115
  ], !dbg !138

if.then94:                                        ; preds = %while.body
  %sub95 = add nsw i32 %a_idx.2250, -1, !dbg !139
  %idxprom96 = sext i32 %sub95 to i64, !dbg !141
  %arrayidx97 = getelementptr inbounds i8, i8* %host_SEQA, i64 %idxprom96, !dbg !141
  %39 = load i8, i8* %arrayidx97, align 1, !dbg !141, !tbaa !83
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !35, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !47
  %arrayidx100 = getelementptr inbounds i8, i8* %host_alignedA, i64 %indvars.iv, !dbg !142
  store i8 %39, i8* %arrayidx100, align 1, !dbg !143, !tbaa !83
  %sub101 = add nsw i32 %b_idx.2251, -1, !dbg !144
  %idxprom102 = sext i32 %sub101 to i64, !dbg !145
  %arrayidx103 = getelementptr inbounds i8, i8* %host_SEQB, i64 %idxprom102, !dbg !145
  %40 = load i8, i8* %arrayidx103, align 1, !dbg !145, !tbaa !83
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !36, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !47
  call void @llvm.dbg.value(metadata i32 %sub95, metadata !33, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 %sub101, metadata !34, metadata !DIExpression()), !dbg !47
  br label %if.end138, !dbg !146

if.then115:                                       ; preds = %while.body
  %sub116 = add nsw i32 %a_idx.2250, -1, !dbg !147
  %idxprom117 = sext i32 %sub116 to i64, !dbg !150
  %arrayidx118 = getelementptr inbounds i8, i8* %host_SEQA, i64 %idxprom117, !dbg !150
  %41 = load i8, i8* %arrayidx118, align 1, !dbg !150, !tbaa !83
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !35, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !47
  %arrayidx121 = getelementptr inbounds i8, i8* %host_alignedA, i64 %indvars.iv, !dbg !151
  store i8 %41, i8* %arrayidx121, align 1, !dbg !152, !tbaa !83
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !36, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !47
  call void @llvm.dbg.value(metadata i32 %sub116, metadata !33, metadata !DIExpression()), !dbg !47
  br label %if.end138, !dbg !153

if.else126:                                       ; preds = %while.body
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !35, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !47
  %arrayidx129 = getelementptr inbounds i8, i8* %host_alignedA, i64 %indvars.iv, !dbg !154
  store i8 45, i8* %arrayidx129, align 1, !dbg !156, !tbaa !83
  %sub130 = add nsw i32 %b_idx.2251, -1, !dbg !157
  %idxprom131 = sext i32 %sub130 to i64, !dbg !158
  %arrayidx132 = getelementptr inbounds i8, i8* %host_SEQB, i64 %idxprom131, !dbg !158
  %42 = load i8, i8* %arrayidx132, align 1, !dbg !158, !tbaa !83
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !36, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !47
  call void @llvm.dbg.value(metadata i32 %sub130, metadata !34, metadata !DIExpression()), !dbg !47
  br label %if.end138

if.end138:                                        ; preds = %if.then115, %if.else126, %if.then94
  %.sink = phi i8 [ 45, %if.then115 ], [ %42, %if.else126 ], [ %40, %if.then94 ]
  %a_idx.3 = phi i32 [ %sub116, %if.then115 ], [ %a_idx.2250, %if.else126 ], [ %sub95, %if.then94 ], !dbg !47
  %b_idx.3 = phi i32 [ %b_idx.2251, %if.then115 ], [ %sub130, %if.else126 ], [ %sub101, %if.then94 ], !dbg !47
  %arrayidx124 = getelementptr inbounds i8, i8* %host_alignedB, i64 %indvars.iv, !dbg !159
  store i8 %.sink, i8* %arrayidx124, align 1, !dbg !159, !tbaa !83
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !159
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !36, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !35, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 %b_idx.3, metadata !34, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 %a_idx.3, metadata !33, metadata !DIExpression()), !dbg !47
  %cmp83 = icmp sgt i32 %a_idx.3, 0, !dbg !160
  %cmp85 = icmp sgt i32 %b_idx.3, 0, !dbg !161
  %43 = or i1 %cmp83, %cmp85, !dbg !161
  br i1 %43, label %while.body, label %for.cond139.preheader, !dbg !162, !llvm.loop !163

for.cond148.preheader:                            ; preds = %for.body142.preheader, %for.cond139.preheader
  call void @llvm.dbg.value(metadata i32 %33, metadata !36, metadata !DIExpression()), !dbg !47
  %cmp149246 = icmp ult i32 %32, 255, !dbg !130
  br i1 %cmp149246, label %for.body151.preheader, label %for.end156, !dbg !165

for.body151.preheader:                            ; preds = %for.cond148.preheader
  %44 = and i64 %indvars.iv.next, 4294967295, !dbg !165
  %scevgep = getelementptr i8, i8* %host_alignedB, i64 %44, !dbg !165
  %45 = call i32 @llvm.usub.sat.i32(i32 255, i32 %33), !dbg !165
  %narrow = add nuw nsw i32 %45, 1, !dbg !165
  %46 = zext i32 %narrow to i64, !dbg !165
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(1) %scevgep, i8 95, i64 %46, i1 false), !dbg !166
  call void @llvm.dbg.value(metadata i32 undef, metadata !36, metadata !DIExpression()), !dbg !47
  br label %for.end156, !dbg !168

for.end156:                                       ; preds = %for.body151.preheader, %for.cond148.preheader
  ret void, !dbg !168
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "nw.c", directory: "/home/coco/work/benchmark_codes/nw")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "needwun", scope: !1, file: !1, line: 17, type: !8, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !14)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10, !10, !10, !10, !12, !10}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !44, !45, !46}
!15 = !DILocalVariable(name: "host_SEQA", arg: 1, scope: !7, file: !1, line: 17, type: !10)
!16 = !DILocalVariable(name: "host_SEQB", arg: 2, scope: !7, file: !1, line: 18, type: !10)
!17 = !DILocalVariable(name: "host_alignedA", arg: 3, scope: !7, file: !1, line: 19, type: !10)
!18 = !DILocalVariable(name: "host_alignedB", arg: 4, scope: !7, file: !1, line: 20, type: !10)
!19 = !DILocalVariable(name: "SEQA", arg: 5, scope: !7, file: !1, line: 21, type: !10)
!20 = !DILocalVariable(name: "SEQB", arg: 6, scope: !7, file: !1, line: 22, type: !10)
!21 = !DILocalVariable(name: "alignedA", arg: 7, scope: !7, file: !1, line: 23, type: !10)
!22 = !DILocalVariable(name: "alignedB", arg: 8, scope: !7, file: !1, line: 24, type: !10)
!23 = !DILocalVariable(name: "M", arg: 9, scope: !7, file: !1, line: 25, type: !12)
!24 = !DILocalVariable(name: "ptr", arg: 10, scope: !7, file: !1, line: 26, type: !10)
!25 = !DILocalVariable(name: "score", scope: !7, file: !1, line: 27, type: !13)
!26 = !DILocalVariable(name: "up_left", scope: !7, file: !1, line: 27, type: !13)
!27 = !DILocalVariable(name: "up", scope: !7, file: !1, line: 27, type: !13)
!28 = !DILocalVariable(name: "left", scope: !7, file: !1, line: 27, type: !13)
!29 = !DILocalVariable(name: "max", scope: !7, file: !1, line: 27, type: !13)
!30 = !DILocalVariable(name: "row", scope: !7, file: !1, line: 28, type: !13)
!31 = !DILocalVariable(name: "row_up", scope: !7, file: !1, line: 28, type: !13)
!32 = !DILocalVariable(name: "r", scope: !7, file: !1, line: 28, type: !13)
!33 = !DILocalVariable(name: "a_idx", scope: !7, file: !1, line: 29, type: !13)
!34 = !DILocalVariable(name: "b_idx", scope: !7, file: !1, line: 29, type: !13)
!35 = !DILocalVariable(name: "a_str_idx", scope: !7, file: !1, line: 30, type: !13)
!36 = !DILocalVariable(name: "b_str_idx", scope: !7, file: !1, line: 30, type: !13)
!37 = !DILabel(scope: !7, name: "init_row", file: !1, line: 42)
!38 = !DILabel(scope: !7, name: "init_col", file: !1, line: 45)
!39 = !DILabel(scope: !7, name: "fill_out", file: !1, line: 50)
!40 = !DILabel(scope: !41, name: "fill_in", file: !1, line: 51)
!41 = distinct !DILexicalBlock(scope: !42, file: !1, line: 50, column: 52)
!42 = distinct !DILexicalBlock(scope: !43, file: !1, line: 50, column: 15)
!43 = distinct !DILexicalBlock(scope: !7, file: !1, line: 50, column: 15)
!44 = !DILabel(scope: !7, name: "trace", file: !1, line: 84)
!45 = !DILabel(scope: !7, name: "pad_a", file: !1, line: 105)
!46 = !DILabel(scope: !7, name: "pad_b", file: !1, line: 108)
!47 = !DILocation(line: 0, scope: !7)
!48 = !DILocation(line: 42, column: 5, scope: !7)
!49 = !DILocation(line: 42, column: 15, scope: !50)
!50 = distinct !DILexicalBlock(scope: !7, file: !1, line: 42, column: 15)
!51 = !DILocation(line: 43, column: 9, scope: !52)
!52 = distinct !DILexicalBlock(scope: !53, file: !1, line: 42, column: 52)
!53 = distinct !DILexicalBlock(scope: !50, file: !1, line: 42, column: 15)
!54 = !DILocation(line: 43, column: 18, scope: !52)
!55 = !{!56, !56, i64 0}
!56 = !{!"int", !57, i64 0}
!57 = !{!"omnipotent char", !58, i64 0}
!58 = !{!"Simple C/C++ TBAA"}
!59 = !DILocation(line: 42, column: 49, scope: !53)
!60 = !DILocation(line: 42, column: 33, scope: !53)
!61 = distinct !{!61, !49, !62}
!62 = !DILocation(line: 44, column: 5, scope: !50)
!63 = !DILocation(line: 46, column: 16, scope: !64)
!64 = distinct !DILexicalBlock(scope: !65, file: !1, line: 45, column: 52)
!65 = distinct !DILexicalBlock(scope: !66, file: !1, line: 45, column: 15)
!66 = distinct !DILexicalBlock(scope: !7, file: !1, line: 45, column: 15)
!67 = !DILocation(line: 46, column: 9, scope: !64)
!68 = !DILocation(line: 46, column: 27, scope: !64)
!69 = !DILocation(line: 45, column: 49, scope: !65)
!70 = !DILocation(line: 45, column: 33, scope: !65)
!71 = !DILocation(line: 45, column: 15, scope: !66)
!72 = distinct !{!72, !71, !73}
!73 = !DILocation(line: 47, column: 5, scope: !66)
!74 = !DILocation(line: 0, scope: !75)
!75 = distinct !DILexicalBlock(scope: !76, file: !1, line: 52, column: 16)
!76 = distinct !DILexicalBlock(scope: !77, file: !1, line: 51, column: 55)
!77 = distinct !DILexicalBlock(scope: !78, file: !1, line: 51, column: 18)
!78 = distinct !DILexicalBlock(scope: !41, file: !1, line: 51, column: 18)
!79 = !DILocation(line: 0, scope: !76)
!80 = !DILocation(line: 51, column: 18, scope: !78)
!81 = !DILocation(line: 52, column: 26, scope: !75)
!82 = !DILocation(line: 52, column: 16, scope: !75)
!83 = !{!57, !57, i64 0}
!84 = !DILocation(line: 52, column: 33, scope: !75)
!85 = !DILocation(line: 52, column: 30, scope: !75)
!86 = !DILocation(line: 61, column: 32, scope: !76)
!87 = !DILocation(line: 61, column: 23, scope: !76)
!88 = !DILocation(line: 61, column: 45, scope: !76)
!89 = !DILocation(line: 62, column: 32, scope: !76)
!90 = !DILocation(line: 62, column: 23, scope: !76)
!91 = !DILocation(line: 62, column: 45, scope: !76)
!92 = !DILocation(line: 63, column: 32, scope: !76)
!93 = !DILocation(line: 63, column: 23, scope: !76)
!94 = !DILocation(line: 63, column: 45, scope: !76)
!95 = !DILocation(line: 65, column: 19, scope: !76)
!96 = !DILocation(line: 67, column: 19, scope: !76)
!97 = !DILocation(line: 67, column: 13, scope: !76)
!98 = !DILocation(line: 67, column: 28, scope: !76)
!99 = !DILocation(line: 68, column: 20, scope: !100)
!100 = distinct !DILexicalBlock(scope: !76, file: !1, line: 68, column: 16)
!101 = !DILocation(line: 68, column: 16, scope: !76)
!102 = !DILocation(line: 70, column: 27, scope: !103)
!103 = distinct !DILexicalBlock(scope: !100, file: !1, line: 70, column: 23)
!104 = !DILocation(line: 0, scope: !103)
!105 = !DILocation(line: 70, column: 23, scope: !100)
!106 = !DILocation(line: 73, column: 34, scope: !107)
!107 = distinct !DILexicalBlock(scope: !103, file: !1, line: 72, column: 19)
!108 = !DILocation(line: 71, column: 34, scope: !109)
!109 = distinct !DILexicalBlock(scope: !103, file: !1, line: 70, column: 33)
!110 = !DILocation(line: 72, column: 13, scope: !109)
!111 = !DILocation(line: 69, column: 17, scope: !112)
!112 = distinct !DILexicalBlock(scope: !100, file: !1, line: 68, column: 28)
!113 = !DILocation(line: 69, column: 34, scope: !112)
!114 = !DILocation(line: 70, column: 13, scope: !112)
!115 = !DILocation(line: 51, column: 52, scope: !77)
!116 = !DILocation(line: 51, column: 36, scope: !77)
!117 = distinct !{!117, !80, !118}
!118 = !DILocation(line: 75, column: 9, scope: !78)
!119 = !DILocation(line: 50, column: 49, scope: !42)
!120 = !DILocation(line: 50, column: 33, scope: !42)
!121 = !DILocation(line: 50, column: 15, scope: !43)
!122 = distinct !{!122, !121, !123}
!123 = !DILocation(line: 76, column: 5, scope: !43)
!124 = !DILocation(line: 105, column: 28, scope: !125)
!125 = distinct !DILexicalBlock(scope: !126, file: !1, line: 105, column: 12)
!126 = distinct !DILexicalBlock(scope: !7, file: !1, line: 105, column: 12)
!127 = !DILocation(line: 105, column: 12, scope: !126)
!128 = !DILocation(line: 106, column: 27, scope: !129)
!129 = distinct !DILexicalBlock(scope: !125, file: !1, line: 105, column: 54)
!130 = !DILocation(line: 108, column: 28, scope: !131)
!131 = distinct !DILexicalBlock(scope: !132, file: !1, line: 108, column: 12)
!132 = distinct !DILexicalBlock(scope: !7, file: !1, line: 108, column: 12)
!133 = !DILocation(line: 85, column: 18, scope: !134)
!134 = distinct !DILexicalBlock(scope: !7, file: !1, line: 84, column: 38)
!135 = !DILocation(line: 86, column: 19, scope: !136)
!136 = distinct !DILexicalBlock(scope: !134, file: !1, line: 86, column: 13)
!137 = !DILocation(line: 86, column: 13, scope: !136)
!138 = !DILocation(line: 86, column: 13, scope: !134)
!139 = !DILocation(line: 87, column: 47, scope: !140)
!140 = distinct !DILexicalBlock(scope: !136, file: !1, line: 86, column: 37)
!141 = !DILocation(line: 87, column: 37, scope: !140)
!142 = !DILocation(line: 87, column: 13, scope: !140)
!143 = !DILocation(line: 87, column: 35, scope: !140)
!144 = !DILocation(line: 88, column: 47, scope: !140)
!145 = !DILocation(line: 88, column: 37, scope: !140)
!146 = !DILocation(line: 91, column: 9, scope: !140)
!147 = !DILocation(line: 93, column: 47, scope: !148)
!148 = distinct !DILexicalBlock(scope: !149, file: !1, line: 92, column: 42)
!149 = distinct !DILexicalBlock(scope: !136, file: !1, line: 92, column: 18)
!150 = !DILocation(line: 93, column: 37, scope: !148)
!151 = !DILocation(line: 93, column: 13, scope: !148)
!152 = !DILocation(line: 93, column: 35, scope: !148)
!153 = !DILocation(line: 96, column: 9, scope: !148)
!154 = !DILocation(line: 98, column: 13, scope: !155)
!155 = distinct !DILexicalBlock(scope: !149, file: !1, line: 97, column: 13)
!156 = !DILocation(line: 98, column: 35, scope: !155)
!157 = !DILocation(line: 99, column: 47, scope: !155)
!158 = !DILocation(line: 99, column: 37, scope: !155)
!159 = !DILocation(line: 0, scope: !136)
!160 = !DILocation(line: 84, column: 23, scope: !7)
!161 = !DILocation(line: 84, column: 26, scope: !7)
!162 = !DILocation(line: 84, column: 12, scope: !7)
!163 = distinct !{!163, !162, !164}
!164 = !DILocation(line: 102, column: 5, scope: !7)
!165 = !DILocation(line: 108, column: 12, scope: !132)
!166 = !DILocation(line: 109, column: 27, scope: !167)
!167 = distinct !DILexicalBlock(scope: !131, file: !1, line: 108, column: 54)
!168 = !DILocation(line: 115, column: 1, scope: !7)
