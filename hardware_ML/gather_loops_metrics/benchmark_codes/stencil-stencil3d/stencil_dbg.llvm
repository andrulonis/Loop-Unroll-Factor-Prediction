; ModuleID = 'stencil.c'
source_filename = "stencil.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @stencil3d(i32* nocapture readonly %host_orig, i32* nocapture %host_sol, i32* nocapture readonly %C, i32* nocapture readnone %orig, i32* nocapture readnone %sol) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata i32* %host_orig, metadata !17, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %host_sol, metadata !18, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %C, metadata !19, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %orig, metadata !20, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %sol, metadata !21, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %host_orig, metadata !20, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %host_sol, metadata !21, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.label(metadata !29), !dbg !54
  call void @llvm.dbg.value(metadata i32 0, metadata !23, metadata !DIExpression()), !dbg !53
  br label %for.cond1.preheader, !dbg !55

for.cond1.preheader:                              ; preds = %for.inc20, %entry
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc20 ]
  call void @llvm.dbg.value(metadata i64 %indvar, metadata !23, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32 0, metadata !24, metadata !DIExpression()), !dbg !53
  %0 = shl i64 %indvar, 4, !dbg !56
  br label %for.body3, !dbg !60

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv325 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next326, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv325, metadata !24, metadata !DIExpression()), !dbg !53
  %1 = add nuw nsw i64 %indvars.iv325, %0, !dbg !61
  %arrayidx = getelementptr inbounds i32, i32* %host_orig, i64 %1, !dbg !62
  %2 = load i32, i32* %arrayidx, align 4, !dbg !62, !tbaa !63
  %arrayidx9 = getelementptr inbounds i32, i32* %host_sol, i64 %1, !dbg !67
  store i32 %2, i32* %arrayidx9, align 4, !dbg !68, !tbaa !63
  %3 = add nuw nsw i64 %indvars.iv325, %0, !dbg !69
  %4 = add nuw nsw i64 %3, 15872, !dbg !69
  %arrayidx14 = getelementptr inbounds i32, i32* %host_orig, i64 %4, !dbg !70
  %5 = load i32, i32* %arrayidx14, align 4, !dbg !70, !tbaa !63
  %arrayidx19 = getelementptr inbounds i32, i32* %host_sol, i64 %4, !dbg !71
  store i32 %5, i32* %arrayidx19, align 4, !dbg !72, !tbaa !63
  %indvars.iv.next326 = add nuw nsw i64 %indvars.iv325, 1, !dbg !73
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next326, metadata !24, metadata !DIExpression()), !dbg !53
  %exitcond330 = icmp eq i64 %indvars.iv.next326, 16, !dbg !74
  br i1 %exitcond330, label %for.inc20, label %for.body3, !dbg !60, !llvm.loop !75

for.inc20:                                        ; preds = %for.body3
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !77
  call void @llvm.dbg.value(metadata i64 %indvar.next, metadata !23, metadata !DIExpression()), !dbg !53
  %exitcond334 = icmp eq i64 %indvar.next, 32, !dbg !78
  br i1 %exitcond334, label %for.cond26.preheader, label %for.cond1.preheader, !dbg !55, !llvm.loop !79

for.cond26.preheader:                             ; preds = %for.inc20, %for.inc56
  %indvars.iv320 = phi i64 [ %indvars.iv.next321, %for.inc56 ], [ 1, %for.inc20 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv320, metadata !22, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32 0, metadata !24, metadata !DIExpression()), !dbg !53
  %6 = shl i64 %indvars.iv320, 9, !dbg !81
  %7 = or i64 %6, 496, !dbg !81
  br label %for.body28, !dbg !85

for.body28:                                       ; preds = %for.body28, %for.cond26.preheader
  %indvars.iv313 = phi i64 [ 0, %for.cond26.preheader ], [ %indvars.iv.next314, %for.body28 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv313, metadata !24, metadata !DIExpression()), !dbg !53
  %8 = add nuw nsw i64 %indvars.iv313, %6, !dbg !86
  %arrayidx34 = getelementptr inbounds i32, i32* %host_orig, i64 %8, !dbg !87
  %9 = load i32, i32* %arrayidx34, align 4, !dbg !87, !tbaa !63
  %arrayidx40 = getelementptr inbounds i32, i32* %host_sol, i64 %8, !dbg !88
  store i32 %9, i32* %arrayidx40, align 4, !dbg !89, !tbaa !63
  %10 = add nuw nsw i64 %indvars.iv313, %7, !dbg !90
  %arrayidx46 = getelementptr inbounds i32, i32* %host_orig, i64 %10, !dbg !91
  %11 = load i32, i32* %arrayidx46, align 4, !dbg !91, !tbaa !63
  %arrayidx52 = getelementptr inbounds i32, i32* %host_sol, i64 %10, !dbg !92
  store i32 %11, i32* %arrayidx52, align 4, !dbg !93, !tbaa !63
  %indvars.iv.next314 = add nuw nsw i64 %indvars.iv313, 1, !dbg !94
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next314, metadata !24, metadata !DIExpression()), !dbg !53
  %exitcond317 = icmp eq i64 %indvars.iv.next314, 16, !dbg !95
  br i1 %exitcond317, label %for.inc56, label %for.body28, !dbg !85, !llvm.loop !96

for.inc56:                                        ; preds = %for.body28
  %indvars.iv.next321 = add nuw nsw i64 %indvars.iv320, 1, !dbg !98
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next321, metadata !22, metadata !DIExpression()), !dbg !53
  %exitcond324 = icmp eq i64 %indvars.iv.next321, 31, !dbg !99
  br i1 %exitcond324, label %for.cond62.preheader, label %for.cond26.preheader, !dbg !100, !llvm.loop !101

for.cond62.preheader:                             ; preds = %for.inc56, %for.inc92
  %indvars.iv309 = phi i64 [ %indvars.iv.next310, %for.inc92 ], [ 1, %for.inc56 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv309, metadata !22, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32 1, metadata !23, metadata !DIExpression()), !dbg !53
  %12 = shl i64 %indvars.iv309, 5, !dbg !103
  br label %for.body64, !dbg !107

for.cond95.preheader:                             ; preds = %for.inc92
  call void @llvm.dbg.value(metadata i32 1, metadata !22, metadata !DIExpression()), !dbg !53
  %arrayidx158 = getelementptr inbounds i32, i32* %C, i64 1, !dbg !108
  br label %for.cond98.preheader, !dbg !112

for.body64:                                       ; preds = %for.body64, %for.cond62.preheader
  %indvars.iv303 = phi i64 [ 1, %for.cond62.preheader ], [ %indvars.iv.next304, %for.body64 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv303, metadata !23, metadata !DIExpression()), !dbg !53
  %13 = add nuw nsw i64 %indvars.iv303, %12, !dbg !113
  %14 = shl nsw i64 %13, 4, !dbg !113
  %arrayidx70 = getelementptr inbounds i32, i32* %host_orig, i64 %14, !dbg !114
  %15 = load i32, i32* %arrayidx70, align 4, !dbg !114, !tbaa !63
  %arrayidx76 = getelementptr inbounds i32, i32* %host_sol, i64 %14, !dbg !115
  store i32 %15, i32* %arrayidx76, align 4, !dbg !116, !tbaa !63
  %16 = or i64 %14, 15, !dbg !117
  %arrayidx82 = getelementptr inbounds i32, i32* %host_orig, i64 %16, !dbg !118
  %17 = load i32, i32* %arrayidx82, align 4, !dbg !118, !tbaa !63
  %arrayidx88 = getelementptr inbounds i32, i32* %host_sol, i64 %16, !dbg !119
  store i32 %17, i32* %arrayidx88, align 4, !dbg !120, !tbaa !63
  %indvars.iv.next304 = add nuw nsw i64 %indvars.iv303, 1, !dbg !121
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next304, metadata !23, metadata !DIExpression()), !dbg !53
  %exitcond308 = icmp eq i64 %indvars.iv.next304, 31, !dbg !122
  br i1 %exitcond308, label %for.inc92, label %for.body64, !dbg !107, !llvm.loop !123

for.inc92:                                        ; preds = %for.body64
  %indvars.iv.next310 = add nuw nsw i64 %indvars.iv309, 1, !dbg !125
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next310, metadata !22, metadata !DIExpression()), !dbg !53
  %exitcond312 = icmp eq i64 %indvars.iv.next310, 31, !dbg !126
  br i1 %exitcond312, label %for.cond95.preheader, label %for.cond62.preheader, !dbg !127, !llvm.loop !128

for.cond98.preheader:                             ; preds = %for.inc173, %for.cond95.preheader
  %indvars.iv299 = phi i64 [ 1, %for.cond95.preheader ], [ %indvars.iv.next300, %for.inc173 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv299, metadata !22, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32 1, metadata !23, metadata !DIExpression()), !dbg !53
  %18 = shl i64 %indvars.iv299, 5, !dbg !108
  br label %for.cond101.preheader, !dbg !130

for.cond101.preheader:                            ; preds = %for.inc170, %for.cond98.preheader
  %indvars.iv282 = phi i64 [ 1, %for.cond98.preheader ], [ %indvars.iv.next283, %for.inc170 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv282, metadata !23, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32 1, metadata !24, metadata !DIExpression()), !dbg !53
  %19 = add nuw nsw i64 %indvars.iv282, %18, !dbg !108
  %20 = shl nsw i64 %19, 4, !dbg !108
  %21 = add nuw nsw i64 %indvars.iv282, %18, !dbg !108
  %22 = shl i64 %21, 4, !dbg !108
  %23 = add nuw nsw i64 %22, 512, !dbg !108
  %24 = add nuw nsw i64 %indvars.iv282, %18, !dbg !108
  %25 = shl i64 %24, 4, !dbg !108
  %26 = add nsw i64 %25, -512, !dbg !108
  %27 = add nuw nsw i64 %indvars.iv282, %18, !dbg !108
  %28 = shl i64 %27, 4, !dbg !108
  %29 = add nuw nsw i64 %28, 16, !dbg !108
  %30 = add nuw nsw i64 %indvars.iv282, %18, !dbg !108
  %31 = shl i64 %30, 4, !dbg !108
  %32 = add nsw i64 %31, -16, !dbg !108
  br label %for.body103, !dbg !131

for.body103:                                      ; preds = %for.body103, %for.cond101.preheader
  %indvars.iv = phi i64 [ 1, %for.cond101.preheader ], [ %indvars.iv.next, %for.body103 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !24, metadata !DIExpression()), !dbg !53
  %33 = add nuw nsw i64 %indvars.iv, %20, !dbg !132
  %arrayidx109 = getelementptr inbounds i32, i32* %host_orig, i64 %33, !dbg !133
  %34 = load i32, i32* %arrayidx109, align 4, !dbg !133, !tbaa !63
  call void @llvm.dbg.value(metadata i32 %34, metadata !25, metadata !DIExpression()), !dbg !53
  %35 = add nuw nsw i64 %indvars.iv, %23, !dbg !134
  %arrayidx116 = getelementptr inbounds i32, i32* %host_orig, i64 %35, !dbg !135
  %36 = load i32, i32* %arrayidx116, align 4, !dbg !135, !tbaa !63
  %37 = add nuw nsw i64 %indvars.iv, %26, !dbg !136
  %arrayidx122 = getelementptr inbounds i32, i32* %host_orig, i64 %37, !dbg !137
  %38 = load i32, i32* %arrayidx122, align 4, !dbg !137, !tbaa !63
  %add123 = add nsw i32 %38, %36, !dbg !138
  %39 = add nuw nsw i64 %indvars.iv, %29, !dbg !139
  %arrayidx130 = getelementptr inbounds i32, i32* %host_orig, i64 %39, !dbg !140
  %40 = load i32, i32* %arrayidx130, align 4, !dbg !140, !tbaa !63
  %add131 = add nsw i32 %add123, %40, !dbg !141
  %41 = add nuw nsw i64 %indvars.iv, %32, !dbg !142
  %arrayidx138 = getelementptr inbounds i32, i32* %host_orig, i64 %41, !dbg !143
  %42 = load i32, i32* %arrayidx138, align 4, !dbg !143, !tbaa !63
  %add139 = add nsw i32 %add131, %42, !dbg !144
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !145
  %43 = add nuw nsw i64 %indvars.iv.next, %20, !dbg !145
  %arrayidx146 = getelementptr inbounds i32, i32* %host_orig, i64 %43, !dbg !146
  %44 = load i32, i32* %arrayidx146, align 4, !dbg !146, !tbaa !63
  %add147 = add nsw i32 %add139, %44, !dbg !147
  %45 = add nuw nsw i64 %indvars.iv, %20, !dbg !148
  %46 = add nsw i64 %45, -1, !dbg !148
  %arrayidx154 = getelementptr inbounds i32, i32* %host_orig, i64 %46, !dbg !149
  %47 = load i32, i32* %arrayidx154, align 4, !dbg !149, !tbaa !63
  %add155 = add nsw i32 %add147, %47, !dbg !150
  call void @llvm.dbg.value(metadata i32 %add155, metadata !26, metadata !DIExpression()), !dbg !53
  %48 = load i32, i32* %C, align 4, !dbg !151, !tbaa !63
  %mul157 = mul nsw i32 %48, %34, !dbg !152
  call void @llvm.dbg.value(metadata i32 %mul157, metadata !27, metadata !DIExpression()), !dbg !53
  %49 = load i32, i32* %arrayidx158, align 4, !dbg !153, !tbaa !63
  %mul159 = mul nsw i32 %49, %add155, !dbg !154
  call void @llvm.dbg.value(metadata i32 %mul159, metadata !28, metadata !DIExpression()), !dbg !53
  %add160 = add nsw i32 %mul159, %mul157, !dbg !155
  %arrayidx166 = getelementptr inbounds i32, i32* %host_sol, i64 %33, !dbg !156
  store i32 %add160, i32* %arrayidx166, align 4, !dbg !157, !tbaa !63
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !24, metadata !DIExpression()), !dbg !53
  %exitcond = icmp eq i64 %indvars.iv.next, 15, !dbg !158
  br i1 %exitcond, label %for.inc170, label %for.body103, !dbg !131, !llvm.loop !159

for.inc170:                                       ; preds = %for.body103
  %indvars.iv.next283 = add nuw nsw i64 %indvars.iv282, 1, !dbg !161
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next283, metadata !23, metadata !DIExpression()), !dbg !53
  %exitcond298 = icmp eq i64 %indvars.iv.next283, 31, !dbg !162
  br i1 %exitcond298, label %for.inc173, label %for.cond101.preheader, !dbg !130, !llvm.loop !163

for.inc173:                                       ; preds = %for.inc170
  %indvars.iv.next300 = add nuw nsw i64 %indvars.iv299, 1, !dbg !165
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next300, metadata !22, metadata !DIExpression()), !dbg !53
  %exitcond302 = icmp eq i64 %indvars.iv.next300, 31, !dbg !166
  br i1 %exitcond302, label %for.end175, label %for.cond98.preheader, !dbg !112, !llvm.loop !167

for.end175:                                       ; preds = %for.inc173
  ret void, !dbg !169
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "stencil.c", directory: "/home/coco/work/benchmark_codes/stencil-stencil3d")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "stencil3d", scope: !1, file: !1, line: 14, type: !8, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !16)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !12, line: 26, baseType: !13)
!12 = !DIFile(filename: "/usr/include/bits/stdint-intn.h", directory: "")
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !14, line: 41, baseType: !15)
!14 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!15 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !34, !35, !39, !40, !44, !45, !49}
!17 = !DILocalVariable(name: "host_orig", arg: 1, scope: !7, file: !1, line: 14, type: !10)
!18 = !DILocalVariable(name: "host_sol", arg: 2, scope: !7, file: !1, line: 15, type: !10)
!19 = !DILocalVariable(name: "C", arg: 3, scope: !7, file: !1, line: 16, type: !10)
!20 = !DILocalVariable(name: "orig", arg: 4, scope: !7, file: !1, line: 17, type: !10)
!21 = !DILocalVariable(name: "sol", arg: 5, scope: !7, file: !1, line: 18, type: !10)
!22 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 19, type: !15)
!23 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 19, type: !15)
!24 = !DILocalVariable(name: "k", scope: !7, file: !1, line: 19, type: !15)
!25 = !DILocalVariable(name: "sum0", scope: !7, file: !1, line: 20, type: !11)
!26 = !DILocalVariable(name: "sum1", scope: !7, file: !1, line: 20, type: !11)
!27 = !DILocalVariable(name: "mul0", scope: !7, file: !1, line: 20, type: !11)
!28 = !DILocalVariable(name: "mul1", scope: !7, file: !1, line: 20, type: !11)
!29 = !DILabel(scope: !7, name: "height_bound_col", file: !1, line: 30)
!30 = !DILabel(scope: !31, name: "height_bound_row", file: !1, line: 31)
!31 = distinct !DILexicalBlock(scope: !32, file: !1, line: 30, column: 50)
!32 = distinct !DILexicalBlock(scope: !33, file: !1, line: 30, column: 24)
!33 = distinct !DILexicalBlock(scope: !7, file: !1, line: 30, column: 24)
!34 = !DILabel(scope: !7, name: "col_bound_height", file: !1, line: 36)
!35 = !DILabel(scope: !36, name: "col_bound_row", file: !1, line: 37)
!36 = distinct !DILexicalBlock(scope: !37, file: !1, line: 36, column: 55)
!37 = distinct !DILexicalBlock(scope: !38, file: !1, line: 36, column: 24)
!38 = distinct !DILexicalBlock(scope: !7, file: !1, line: 36, column: 24)
!39 = !DILabel(scope: !7, name: "row_bound_height", file: !1, line: 42)
!40 = !DILabel(scope: !41, name: "row_bound_col", file: !1, line: 43)
!41 = distinct !DILexicalBlock(scope: !42, file: !1, line: 42, column: 55)
!42 = distinct !DILexicalBlock(scope: !43, file: !1, line: 42, column: 24)
!43 = distinct !DILexicalBlock(scope: !7, file: !1, line: 42, column: 24)
!44 = !DILabel(scope: !7, name: "loop_height", file: !1, line: 51)
!45 = !DILabel(scope: !46, name: "loop_col", file: !1, line: 52)
!46 = distinct !DILexicalBlock(scope: !47, file: !1, line: 51, column: 55)
!47 = distinct !DILexicalBlock(scope: !48, file: !1, line: 51, column: 19)
!48 = distinct !DILexicalBlock(scope: !7, file: !1, line: 51, column: 19)
!49 = !DILabel(scope: !50, name: "loop_row", file: !1, line: 53)
!50 = distinct !DILexicalBlock(scope: !51, file: !1, line: 52, column: 53)
!51 = distinct !DILexicalBlock(scope: !52, file: !1, line: 52, column: 20)
!52 = distinct !DILexicalBlock(scope: !46, file: !1, line: 52, column: 20)
!53 = !DILocation(line: 0, scope: !7)
!54 = !DILocation(line: 30, column: 5, scope: !7)
!55 = !DILocation(line: 30, column: 24, scope: !33)
!56 = !DILocation(line: 0, scope: !57)
!57 = distinct !DILexicalBlock(scope: !58, file: !1, line: 31, column: 54)
!58 = distinct !DILexicalBlock(scope: !59, file: !1, line: 31, column: 28)
!59 = distinct !DILexicalBlock(scope: !31, file: !1, line: 31, column: 28)
!60 = !DILocation(line: 31, column: 28, scope: !59)
!61 = !DILocation(line: 32, column: 59, scope: !57)
!62 = !DILocation(line: 32, column: 54, scope: !57)
!63 = !{!64, !64, i64 0}
!64 = !{!"int", !65, i64 0}
!65 = !{!"omnipotent char", !66, i64 0}
!66 = !{!"Simple C/C++ TBAA"}
!67 = !DILocation(line: 32, column: 13, scope: !57)
!68 = !DILocation(line: 32, column: 52, scope: !57)
!69 = !DILocation(line: 33, column: 71, scope: !57)
!70 = !DILocation(line: 33, column: 66, scope: !57)
!71 = !DILocation(line: 33, column: 13, scope: !57)
!72 = !DILocation(line: 33, column: 64, scope: !57)
!73 = !DILocation(line: 31, column: 50, scope: !58)
!74 = !DILocation(line: 31, column: 38, scope: !58)
!75 = distinct !{!75, !60, !76}
!76 = !DILocation(line: 34, column: 9, scope: !59)
!77 = !DILocation(line: 30, column: 46, scope: !32)
!78 = !DILocation(line: 30, column: 34, scope: !32)
!79 = distinct !{!79, !55, !80}
!80 = !DILocation(line: 35, column: 5, scope: !33)
!81 = !DILocation(line: 0, scope: !82)
!82 = distinct !DILexicalBlock(scope: !83, file: !1, line: 37, column: 51)
!83 = distinct !DILexicalBlock(scope: !84, file: !1, line: 37, column: 25)
!84 = distinct !DILexicalBlock(scope: !36, file: !1, line: 37, column: 25)
!85 = !DILocation(line: 37, column: 25, scope: !84)
!86 = !DILocation(line: 38, column: 59, scope: !82)
!87 = !DILocation(line: 38, column: 54, scope: !82)
!88 = !DILocation(line: 38, column: 13, scope: !82)
!89 = !DILocation(line: 38, column: 52, scope: !82)
!90 = !DILocation(line: 39, column: 68, scope: !82)
!91 = !DILocation(line: 39, column: 63, scope: !82)
!92 = !DILocation(line: 39, column: 13, scope: !82)
!93 = !DILocation(line: 39, column: 61, scope: !82)
!94 = !DILocation(line: 37, column: 47, scope: !83)
!95 = !DILocation(line: 37, column: 35, scope: !83)
!96 = distinct !{!96, !85, !97}
!97 = !DILocation(line: 40, column: 9, scope: !84)
!98 = !DILocation(line: 36, column: 51, scope: !37)
!99 = !DILocation(line: 36, column: 34, scope: !37)
!100 = !DILocation(line: 36, column: 24, scope: !38)
!101 = distinct !{!101, !100, !102}
!102 = !DILocation(line: 41, column: 5, scope: !38)
!103 = !DILocation(line: 0, scope: !104)
!104 = distinct !DILexicalBlock(scope: !105, file: !1, line: 43, column: 53)
!105 = distinct !DILexicalBlock(scope: !106, file: !1, line: 43, column: 25)
!106 = distinct !DILexicalBlock(scope: !41, file: !1, line: 43, column: 25)
!107 = !DILocation(line: 43, column: 25, scope: !106)
!108 = !DILocation(line: 0, scope: !109)
!109 = distinct !DILexicalBlock(scope: !110, file: !1, line: 53, column: 57)
!110 = distinct !DILexicalBlock(scope: !111, file: !1, line: 53, column: 24)
!111 = distinct !DILexicalBlock(scope: !50, file: !1, line: 53, column: 24)
!112 = !DILocation(line: 51, column: 19, scope: !48)
!113 = !DILocation(line: 44, column: 59, scope: !104)
!114 = !DILocation(line: 44, column: 54, scope: !104)
!115 = !DILocation(line: 44, column: 13, scope: !104)
!116 = !DILocation(line: 44, column: 52, scope: !104)
!117 = !DILocation(line: 45, column: 68, scope: !104)
!118 = !DILocation(line: 45, column: 63, scope: !104)
!119 = !DILocation(line: 45, column: 13, scope: !104)
!120 = !DILocation(line: 45, column: 61, scope: !104)
!121 = !DILocation(line: 43, column: 49, scope: !105)
!122 = !DILocation(line: 43, column: 35, scope: !105)
!123 = distinct !{!123, !107, !124}
!124 = !DILocation(line: 46, column: 9, scope: !106)
!125 = !DILocation(line: 42, column: 51, scope: !42)
!126 = !DILocation(line: 42, column: 34, scope: !42)
!127 = !DILocation(line: 42, column: 24, scope: !43)
!128 = distinct !{!128, !127, !129}
!129 = !DILocation(line: 47, column: 5, scope: !43)
!130 = !DILocation(line: 52, column: 20, scope: !52)
!131 = !DILocation(line: 53, column: 24, scope: !111)
!132 = !DILocation(line: 54, column: 29, scope: !109)
!133 = !DILocation(line: 54, column: 24, scope: !109)
!134 = !DILocation(line: 55, column: 29, scope: !109)
!135 = !DILocation(line: 55, column: 24, scope: !109)
!136 = !DILocation(line: 56, column: 29, scope: !109)
!137 = !DILocation(line: 56, column: 24, scope: !109)
!138 = !DILocation(line: 55, column: 68, scope: !109)
!139 = !DILocation(line: 57, column: 29, scope: !109)
!140 = !DILocation(line: 57, column: 24, scope: !109)
!141 = !DILocation(line: 56, column: 68, scope: !109)
!142 = !DILocation(line: 58, column: 29, scope: !109)
!143 = !DILocation(line: 58, column: 24, scope: !109)
!144 = !DILocation(line: 57, column: 68, scope: !109)
!145 = !DILocation(line: 59, column: 29, scope: !109)
!146 = !DILocation(line: 59, column: 24, scope: !109)
!147 = !DILocation(line: 58, column: 68, scope: !109)
!148 = !DILocation(line: 60, column: 29, scope: !109)
!149 = !DILocation(line: 60, column: 24, scope: !109)
!150 = !DILocation(line: 59, column: 68, scope: !109)
!151 = !DILocation(line: 61, column: 31, scope: !109)
!152 = !DILocation(line: 61, column: 29, scope: !109)
!153 = !DILocation(line: 62, column: 31, scope: !109)
!154 = !DILocation(line: 62, column: 29, scope: !109)
!155 = !DILocation(line: 63, column: 63, scope: !109)
!156 = !DILocation(line: 63, column: 17, scope: !109)
!157 = !DILocation(line: 63, column: 56, scope: !109)
!158 = !DILocation(line: 53, column: 37, scope: !110)
!159 = distinct !{!159, !131, !160}
!160 = !DILocation(line: 64, column: 13, scope: !111)
!161 = !DILocation(line: 52, column: 50, scope: !51)
!162 = !DILocation(line: 52, column: 33, scope: !51)
!163 = distinct !{!163, !130, !164}
!164 = !DILocation(line: 65, column: 9, scope: !52)
!165 = !DILocation(line: 51, column: 52, scope: !47)
!166 = !DILocation(line: 51, column: 32, scope: !47)
!167 = distinct !{!167, !112, !168}
!168 = !DILocation(line: 66, column: 5, scope: !48)
!169 = !DILocation(line: 71, column: 1, scope: !7)
