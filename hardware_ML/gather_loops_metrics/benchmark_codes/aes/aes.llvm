; ModuleID = 'aes.c'
source_filename = "aes.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.aes256_context = type { [32 x i8], [32 x i8], [32 x i8] }

@sbox = dso_local local_unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 16

; Function Attrs: noinline norecurse nounwind readnone uwtable
define dso_local zeroext i8 @rj_xtime(i8 zeroext %x) local_unnamed_addr #0 {
entry:
  %conv = zext i8 %x to i32
  %tobool = icmp slt i8 %x, 0
  %shl = shl nuw nsw i32 %conv, 1
  %xor = xor i32 %shl, 27
  %cond = select i1 %tobool, i32 %xor, i32 %shl
  %conv4 = trunc i32 %cond to i8
  ret i8 %conv4
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @aes_subBytes(i8* nocapture %buf) local_unnamed_addr #1 {
entry:
  br label %while.body

while.body:                                       ; preds = %entry, %while.body
  %indvars.iv = phi i64 [ 15, %entry ], [ %indvars.iv.next, %while.body ]
  %arrayidx = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %idxprom1 = zext i8 %0 to i64
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom1
  %1 = load i8, i8* %arrayidx2, align 1, !tbaa !2
  store i8 %1, i8* %arrayidx, align 1, !tbaa !2
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %tobool = icmp eq i64 %indvars.iv, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @aes_addRoundKey(i8* nocapture %buf, i8* nocapture readonly %key) local_unnamed_addr #1 {
entry:
  br label %while.body

while.body:                                       ; preds = %entry, %while.body
  %indvars.iv = phi i64 [ 15, %entry ], [ %indvars.iv.next, %while.body ]
  %arrayidx = getelementptr inbounds i8, i8* %key, i64 %indvars.iv
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %arrayidx2 = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv
  %1 = load i8, i8* %arrayidx2, align 1, !tbaa !2
  %xor7 = xor i8 %1, %0
  store i8 %xor7, i8* %arrayidx2, align 1, !tbaa !2
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %tobool = icmp eq i64 %indvars.iv, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @aes_addRoundKey_cpy(i8* nocapture %buf, i8* nocapture readonly %key, i8* nocapture %cpk) local_unnamed_addr #1 {
entry:
  br label %while.body

while.body:                                       ; preds = %entry, %while.body
  %indvars.iv = phi i64 [ 15, %entry ], [ %indvars.iv.next, %while.body ]
  %arrayidx = getelementptr inbounds i8, i8* %key, i64 %indvars.iv
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %arrayidx2 = getelementptr inbounds i8, i8* %cpk, i64 %indvars.iv
  store i8 %0, i8* %arrayidx2, align 1, !tbaa !2
  %arrayidx4 = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv
  %1 = load i8, i8* %arrayidx4, align 1, !tbaa !2
  %xor21 = xor i8 %1, %0
  store i8 %xor21, i8* %arrayidx4, align 1, !tbaa !2
  %add = add nuw nsw i64 %indvars.iv, 16
  %arrayidx9 = getelementptr inbounds i8, i8* %key, i64 %add
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !2
  %arrayidx13 = getelementptr inbounds i8, i8* %cpk, i64 %add
  store i8 %2, i8* %arrayidx13, align 1, !tbaa !2
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %tobool = icmp eq i64 %indvars.iv, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @aes_shiftRows(i8* nocapture %buf) local_unnamed_addr #1 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %buf, i64 1
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %arrayidx1 = getelementptr inbounds i8, i8* %buf, i64 5
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !2
  store i8 %1, i8* %arrayidx, align 1, !tbaa !2
  %arrayidx3 = getelementptr inbounds i8, i8* %buf, i64 9
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !2
  store i8 %2, i8* %arrayidx1, align 1, !tbaa !2
  %arrayidx5 = getelementptr inbounds i8, i8* %buf, i64 13
  %3 = load i8, i8* %arrayidx5, align 1, !tbaa !2
  store i8 %3, i8* %arrayidx3, align 1, !tbaa !2
  store i8 %0, i8* %arrayidx5, align 1, !tbaa !2
  %arrayidx8 = getelementptr inbounds i8, i8* %buf, i64 10
  %4 = load i8, i8* %arrayidx8, align 1, !tbaa !2
  %arrayidx9 = getelementptr inbounds i8, i8* %buf, i64 2
  %5 = load i8, i8* %arrayidx9, align 1, !tbaa !2
  store i8 %5, i8* %arrayidx8, align 1, !tbaa !2
  store i8 %4, i8* %arrayidx9, align 1, !tbaa !2
  %arrayidx12 = getelementptr inbounds i8, i8* %buf, i64 3
  %6 = load i8, i8* %arrayidx12, align 1, !tbaa !2
  %arrayidx13 = getelementptr inbounds i8, i8* %buf, i64 15
  %7 = load i8, i8* %arrayidx13, align 1, !tbaa !2
  store i8 %7, i8* %arrayidx12, align 1, !tbaa !2
  %arrayidx15 = getelementptr inbounds i8, i8* %buf, i64 11
  %8 = load i8, i8* %arrayidx15, align 1, !tbaa !2
  store i8 %8, i8* %arrayidx13, align 1, !tbaa !2
  %arrayidx17 = getelementptr inbounds i8, i8* %buf, i64 7
  %9 = load i8, i8* %arrayidx17, align 1, !tbaa !2
  store i8 %9, i8* %arrayidx15, align 1, !tbaa !2
  store i8 %6, i8* %arrayidx17, align 1, !tbaa !2
  %arrayidx20 = getelementptr inbounds i8, i8* %buf, i64 14
  %10 = load i8, i8* %arrayidx20, align 1, !tbaa !2
  %arrayidx21 = getelementptr inbounds i8, i8* %buf, i64 6
  %11 = load i8, i8* %arrayidx21, align 1, !tbaa !2
  store i8 %11, i8* %arrayidx20, align 1, !tbaa !2
  store i8 %10, i8* %arrayidx21, align 1, !tbaa !2
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @aes_mixColumns(i8* nocapture %buf) local_unnamed_addr #1 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %1 = or i64 %indvars.iv, 1
  %arrayidx4 = getelementptr inbounds i8, i8* %buf, i64 %1
  %2 = load i8, i8* %arrayidx4, align 1, !tbaa !2
  %3 = or i64 %indvars.iv, 2
  %arrayidx8 = getelementptr inbounds i8, i8* %buf, i64 %3
  %4 = load i8, i8* %arrayidx8, align 1, !tbaa !2
  %5 = or i64 %indvars.iv, 3
  %arrayidx12 = getelementptr inbounds i8, i8* %buf, i64 %5
  %6 = load i8, i8* %arrayidx12, align 1, !tbaa !2
  %xor107 = xor i8 %2, %0
  %xor16108 = xor i8 %xor107, %4
  %xor18109 = xor i8 %xor16108, %6
  %call = call zeroext i8 @rj_xtime(i8 zeroext %xor107)
  %xor26110 = xor i8 %call, %0
  %xor30111 = xor i8 %xor26110, %xor18109
  store i8 %xor30111, i8* %arrayidx, align 1, !tbaa !2
  %xor35112 = xor i8 %4, %2
  %call37 = call zeroext i8 @rj_xtime(i8 zeroext %xor35112)
  %xor39113 = xor i8 %xor18109, %2
  %xor45114 = xor i8 %xor39113, %call37
  store i8 %xor45114, i8* %arrayidx4, align 1, !tbaa !2
  %xor50115 = xor i8 %6, %4
  %call52 = call zeroext i8 @rj_xtime(i8 zeroext %xor50115)
  %xor54116 = xor i8 %xor107, %6
  %xor60117 = xor i8 %xor54116, %call52
  store i8 %xor60117, i8* %arrayidx8, align 1, !tbaa !2
  %xor65118 = xor i8 %6, %0
  %call67 = call zeroext i8 @rj_xtime(i8 zeroext %xor65118)
  %xor75120 = xor i8 %call67, %xor16108
  store i8 %xor75120, i8* %arrayidx12, align 1, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4
  %cmp = icmp ult i64 %indvars.iv, 12
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local zeroext i8 @aes_expandEncKey(i8* %k, i8 zeroext %rc) local_unnamed_addr #1 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %k, i64 29
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %idxprom = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !2
  %xor224 = xor i8 %1, %rc
  %2 = load i8, i8* %k, align 1, !tbaa !2
  %xor5225 = xor i8 %xor224, %2
  store i8 %xor5225, i8* %k, align 1, !tbaa !2
  %arrayidx7 = getelementptr inbounds i8, i8* %k, i64 30
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !2
  %idxprom8 = zext i8 %3 to i64
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom8
  %4 = load i8, i8* %arrayidx9, align 1, !tbaa !2
  %arrayidx11 = getelementptr inbounds i8, i8* %k, i64 1
  %5 = load i8, i8* %arrayidx11, align 1, !tbaa !2
  %xor13226 = xor i8 %5, %4
  store i8 %xor13226, i8* %arrayidx11, align 1, !tbaa !2
  %arrayidx15 = getelementptr inbounds i8, i8* %k, i64 31
  %6 = load i8, i8* %arrayidx15, align 1, !tbaa !2
  %idxprom16 = zext i8 %6 to i64
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom16
  %7 = load i8, i8* %arrayidx17, align 1, !tbaa !2
  %arrayidx19 = getelementptr inbounds i8, i8* %k, i64 2
  %8 = load i8, i8* %arrayidx19, align 1, !tbaa !2
  %xor21227 = xor i8 %8, %7
  store i8 %xor21227, i8* %arrayidx19, align 1, !tbaa !2
  %arrayidx23 = getelementptr inbounds i8, i8* %k, i64 28
  %9 = load i8, i8* %arrayidx23, align 1, !tbaa !2
  %idxprom24 = zext i8 %9 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom24
  %10 = load i8, i8* %arrayidx25, align 1, !tbaa !2
  %arrayidx27 = getelementptr inbounds i8, i8* %k, i64 3
  %11 = load i8, i8* %arrayidx27, align 1, !tbaa !2
  %xor29228 = xor i8 %11, %10
  store i8 %xor29228, i8* %arrayidx27, align 1, !tbaa !2
  %12 = ashr i8 %rc, 7
  %mul = and i8 %12, 27
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv252 = phi i64 [ 4, %entry ], [ %indvars.iv.next253, %for.body ]
  %13 = add nsw i64 %indvars.iv252, -4
  %arrayidx39 = getelementptr inbounds i8, i8* %k, i64 %13
  %14 = load i8, i8* %arrayidx39, align 1, !tbaa !2
  %arrayidx42 = getelementptr inbounds i8, i8* %k, i64 %indvars.iv252
  %15 = load i8, i8* %arrayidx42, align 1, !tbaa !2
  %xor44237 = xor i8 %15, %14
  store i8 %xor44237, i8* %arrayidx42, align 1, !tbaa !2
  %16 = add nsw i64 %indvars.iv252, -3
  %arrayidx49 = getelementptr inbounds i8, i8* %k, i64 %16
  %17 = load i8, i8* %arrayidx49, align 1, !tbaa !2
  %18 = or i64 %indvars.iv252, 1
  %arrayidx53 = getelementptr inbounds i8, i8* %k, i64 %18
  %19 = load i8, i8* %arrayidx53, align 1, !tbaa !2
  %xor55238 = xor i8 %19, %17
  store i8 %xor55238, i8* %arrayidx53, align 1, !tbaa !2
  %20 = add nsw i64 %indvars.iv252, -2
  %arrayidx60 = getelementptr inbounds i8, i8* %k, i64 %20
  %21 = load i8, i8* %arrayidx60, align 1, !tbaa !2
  %22 = or i64 %indvars.iv252, 2
  %arrayidx65 = getelementptr inbounds i8, i8* %k, i64 %22
  %23 = load i8, i8* %arrayidx65, align 1, !tbaa !2
  %xor67239 = xor i8 %23, %21
  store i8 %xor67239, i8* %arrayidx65, align 1, !tbaa !2
  %24 = add nsw i64 %indvars.iv252, -1
  %arrayidx72 = getelementptr inbounds i8, i8* %k, i64 %24
  %25 = load i8, i8* %arrayidx72, align 1, !tbaa !2
  %26 = or i64 %indvars.iv252, 3
  %arrayidx77 = getelementptr inbounds i8, i8* %k, i64 %26
  %27 = load i8, i8* %arrayidx77, align 1, !tbaa !2
  %xor79240 = xor i8 %27, %25
  store i8 %xor79240, i8* %arrayidx77, align 1, !tbaa !2
  %indvars.iv.next253 = add nuw nsw i64 %indvars.iv252, 4
  %cmp = icmp ult i64 %indvars.iv252, 12
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %shl = shl i8 %rc, 1
  %xor33 = xor i8 %mul, %shl
  %arrayidx84 = getelementptr inbounds i8, i8* %k, i64 12
  %28 = load i8, i8* %arrayidx84, align 1, !tbaa !2
  %idxprom85 = zext i8 %28 to i64
  %arrayidx86 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom85
  %29 = load i8, i8* %arrayidx86, align 1, !tbaa !2
  %arrayidx88 = getelementptr inbounds i8, i8* %k, i64 16
  %30 = load i8, i8* %arrayidx88, align 1, !tbaa !2
  %xor90229 = xor i8 %30, %29
  store i8 %xor90229, i8* %arrayidx88, align 1, !tbaa !2
  %arrayidx92 = getelementptr inbounds i8, i8* %k, i64 13
  %31 = load i8, i8* %arrayidx92, align 1, !tbaa !2
  %idxprom93 = zext i8 %31 to i64
  %arrayidx94 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom93
  %32 = load i8, i8* %arrayidx94, align 1, !tbaa !2
  %arrayidx96 = getelementptr inbounds i8, i8* %k, i64 17
  %33 = load i8, i8* %arrayidx96, align 1, !tbaa !2
  %xor98230 = xor i8 %33, %32
  store i8 %xor98230, i8* %arrayidx96, align 1, !tbaa !2
  %arrayidx100 = getelementptr inbounds i8, i8* %k, i64 14
  %34 = load i8, i8* %arrayidx100, align 1, !tbaa !2
  %idxprom101 = zext i8 %34 to i64
  %arrayidx102 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom101
  %35 = load i8, i8* %arrayidx102, align 1, !tbaa !2
  %arrayidx104 = getelementptr inbounds i8, i8* %k, i64 18
  %36 = load i8, i8* %arrayidx104, align 1, !tbaa !2
  %xor106231 = xor i8 %36, %35
  store i8 %xor106231, i8* %arrayidx104, align 1, !tbaa !2
  %arrayidx108 = getelementptr inbounds i8, i8* %k, i64 15
  %37 = load i8, i8* %arrayidx108, align 1, !tbaa !2
  %idxprom109 = zext i8 %37 to i64
  %arrayidx110 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom109
  %38 = load i8, i8* %arrayidx110, align 1, !tbaa !2
  %arrayidx112 = getelementptr inbounds i8, i8* %k, i64 19
  %39 = load i8, i8* %arrayidx112, align 1, !tbaa !2
  %xor114232 = xor i8 %39, %38
  store i8 %xor114232, i8* %arrayidx112, align 1, !tbaa !2
  br label %for.body120

for.body120:                                      ; preds = %for.end, %for.body120
  %indvars.iv = phi i64 [ 20, %for.end ], [ %indvars.iv.next, %for.body120 ]
  %40 = add nsw i64 %indvars.iv, -4
  %arrayidx124 = getelementptr inbounds i8, i8* %k, i64 %40
  %41 = load i8, i8* %arrayidx124, align 1, !tbaa !2
  %arrayidx127 = getelementptr inbounds i8, i8* %k, i64 %indvars.iv
  %42 = load i8, i8* %arrayidx127, align 1, !tbaa !2
  %xor129233 = xor i8 %42, %41
  store i8 %xor129233, i8* %arrayidx127, align 1, !tbaa !2
  %43 = add nsw i64 %indvars.iv, -3
  %arrayidx134 = getelementptr inbounds i8, i8* %k, i64 %43
  %44 = load i8, i8* %arrayidx134, align 1, !tbaa !2
  %45 = or i64 %indvars.iv, 1
  %arrayidx139 = getelementptr inbounds i8, i8* %k, i64 %45
  %46 = load i8, i8* %arrayidx139, align 1, !tbaa !2
  %xor141234 = xor i8 %46, %44
  store i8 %xor141234, i8* %arrayidx139, align 1, !tbaa !2
  %47 = add nsw i64 %indvars.iv, -2
  %arrayidx146 = getelementptr inbounds i8, i8* %k, i64 %47
  %48 = load i8, i8* %arrayidx146, align 1, !tbaa !2
  %49 = or i64 %indvars.iv, 2
  %arrayidx151 = getelementptr inbounds i8, i8* %k, i64 %49
  %50 = load i8, i8* %arrayidx151, align 1, !tbaa !2
  %xor153235 = xor i8 %50, %48
  store i8 %xor153235, i8* %arrayidx151, align 1, !tbaa !2
  %51 = add nsw i64 %indvars.iv, -1
  %arrayidx158 = getelementptr inbounds i8, i8* %k, i64 %51
  %52 = load i8, i8* %arrayidx158, align 1, !tbaa !2
  %53 = or i64 %indvars.iv, 3
  %arrayidx163 = getelementptr inbounds i8, i8* %k, i64 %53
  %54 = load i8, i8* %arrayidx163, align 1, !tbaa !2
  %xor165236 = xor i8 %54, %52
  store i8 %xor165236, i8* %arrayidx163, align 1, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4
  %cmp118 = icmp ult i64 %indvars.iv, 28
  br i1 %cmp118, label %for.body120, label %for.end171

for.end171:                                       ; preds = %for.body120
  ret i8 %xor33
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @aes256_encrypt_ecb(%struct.aes256_context* %host_ctx, i8* nocapture readonly %host_k, i8* nocapture %host_buf, %struct.aes256_context* nocapture readnone %ctx, i8* nocapture readnone %k, i8* nocapture readnone %buf) local_unnamed_addr #1 {
entry:
  br label %for.body

for.cond6.preheader:                              ; preds = %for.body
  %arraydecay = getelementptr inbounds %struct.aes256_context, %struct.aes256_context* %host_ctx, i64 0, i32 2, i64 0
  br label %for.body7

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i8, i8* %host_k, i64 %indvars.iv
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %arrayidx3 = getelementptr inbounds %struct.aes256_context, %struct.aes256_context* %host_ctx, i64 0, i32 2, i64 %indvars.iv
  store i8 %0, i8* %arrayidx3, align 1, !tbaa !2
  %arrayidx5 = getelementptr inbounds %struct.aes256_context, %struct.aes256_context* %host_ctx, i64 0, i32 1, i64 %indvars.iv
  store i8 %0, i8* %arrayidx5, align 1, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond66 = icmp eq i64 %indvars.iv.next, 32
  br i1 %exitcond66, label %for.cond6.preheader, label %for.body

for.body7:                                        ; preds = %for.cond6.preheader, %for.body7
  %dec63 = phi i8 [ 7, %for.cond6.preheader ], [ %dec, %for.body7 ]
  %rcon.062 = phi i8 [ 1, %for.cond6.preheader ], [ %call, %for.body7 ]
  %call = call zeroext i8 @aes_expandEncKey(i8* nonnull %arraydecay, i8 zeroext %rcon.062)
  %dec = add nsw i8 %dec63, -1
  %tobool = icmp eq i8 %dec, 0
  br i1 %tobool, label %for.end9, label %for.body7

for.end9:                                         ; preds = %for.body7
  %arraydecay11 = getelementptr inbounds %struct.aes256_context, %struct.aes256_context* %host_ctx, i64 0, i32 1, i64 0
  %arraydecay12 = getelementptr inbounds %struct.aes256_context, %struct.aes256_context* %host_ctx, i64 0, i32 0, i64 0
  call void @aes_addRoundKey_cpy(i8* %host_buf, i8* nonnull %arraydecay11, i8* %arraydecay12)
  call void @aes_subBytes(i8* %host_buf)
  call void @aes_shiftRows(i8* %host_buf)
  %arrayidx21 = getelementptr inbounds %struct.aes256_context, %struct.aes256_context* %host_ctx, i64 0, i32 0, i64 16
  br label %for.body17

for.body17:                                       ; preds = %for.inc27, %for.end9
  %i.261 = phi i8 [ 1, %for.end9 ], [ %inc28, %for.inc27 ]
  %rcon.160 = phi i8 [ 1, %for.end9 ], [ %rcon.2, %for.inc27 ]
  call void @aes_mixColumns(i8* %host_buf)
  %1 = and i8 %i.261, 1
  %tobool19 = icmp eq i8 %1, 0
  br i1 %tobool19, label %if.else, label %if.then

if.then:                                          ; preds = %for.body17
  call void @aes_addRoundKey(i8* %host_buf, i8* nonnull %arrayidx21)
  br label %for.inc27

if.else:                                          ; preds = %for.body17
  %call24 = call zeroext i8 @aes_expandEncKey(i8* %arraydecay12, i8 zeroext %rcon.160)
  call void @aes_addRoundKey(i8* %host_buf, i8* %arraydecay12)
  br label %for.inc27

for.inc27:                                        ; preds = %if.then, %if.else
  %rcon.2 = phi i8 [ %rcon.160, %if.then ], [ %call24, %if.else ]
  %inc28 = add nuw nsw i8 %i.261, 1
  call void @aes_subBytes(i8* %host_buf)
  call void @aes_shiftRows(i8* %host_buf)
  %exitcond = icmp eq i8 %inc28, 14
  br i1 %exitcond, label %for.end29, label %for.body17

for.end29:                                        ; preds = %for.inc27
  %call32 = call zeroext i8 @aes_expandEncKey(i8* %arraydecay12, i8 zeroext %rcon.2)
  call void @aes_addRoundKey(i8* %host_buf, i8* %arraydecay12)
  ret void
}

attributes #0 = { noinline norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
