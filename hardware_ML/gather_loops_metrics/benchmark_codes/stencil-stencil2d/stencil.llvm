; ModuleID = 'stencil.c'
source_filename = "stencil.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @stencil(i32* nocapture readonly %host_orig, i32* nocapture %host_sol, i32* nocapture readnone %orig, i32* nocapture readnone %sol, i32* nocapture readonly %filter) local_unnamed_addr #0 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc29, %entry
  %indvars.iv70 = phi i64 [ 0, %entry ], [ %indvars.iv.next71, %for.inc29 ]
  %0 = shl i64 %indvars.iv70, 6
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.end21, %for.cond1.preheader
  %indvars.iv66 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next67, %for.end21 ]
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.inc19, %for.cond4.preheader
  %indvars.iv59 = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next60, %for.inc19 ]
  %temp.054 = phi i32 [ 0, %for.cond4.preheader ], [ %add18, %for.inc19 ]
  %1 = mul nuw nsw i64 %indvars.iv59, 3
  %2 = add nuw nsw i64 %indvars.iv59, %indvars.iv70
  %3 = shl i64 %2, 6
  %4 = add nuw nsw i64 %3, %indvars.iv66
  br label %for.body9

for.body9:                                        ; preds = %for.body9, %for.cond7.preheader
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.body9 ]
  %temp.152 = phi i32 [ %temp.054, %for.cond7.preheader ], [ %add18, %for.body9 ]
  %5 = add nuw nsw i64 %indvars.iv, %1
  %arrayidx = getelementptr inbounds i32, i32* %filter, i64 %5
  %6 = load i32, i32* %arrayidx, align 4, !tbaa !2
  %7 = add nuw nsw i64 %4, %indvars.iv
  %arrayidx16 = getelementptr inbounds i32, i32* %host_orig, i64 %7
  %8 = load i32, i32* %arrayidx16, align 4, !tbaa !2
  %mul17 = mul nsw i32 %8, %6
  %add18 = add nsw i32 %mul17, %temp.152
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %for.inc19, label %for.body9

for.inc19:                                        ; preds = %for.body9
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1
  %exitcond65 = icmp eq i64 %indvars.iv.next60, 3
  br i1 %exitcond65, label %for.end21, label %for.cond7.preheader

for.end21:                                        ; preds = %for.inc19
  %9 = add nuw nsw i64 %indvars.iv66, %0
  %arrayidx25 = getelementptr inbounds i32, i32* %host_sol, i64 %9
  store i32 %add18, i32* %arrayidx25, align 4, !tbaa !2
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1
  %exitcond69 = icmp eq i64 %indvars.iv.next67, 62
  br i1 %exitcond69, label %for.inc29, label %for.cond4.preheader

for.inc29:                                        ; preds = %for.end21
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %exitcond73 = icmp eq i64 %indvars.iv.next71, 126
  br i1 %exitcond73, label %for.end31, label %for.cond1.preheader

for.end31:                                        ; preds = %for.inc29
  ret void
}

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
