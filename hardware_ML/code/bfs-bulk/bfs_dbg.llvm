; ModuleID = 'bfs.c'
source_filename = "bfs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.node_t_struct = type { i64, i64 }
%struct.edge_t_struct = type { i64 }

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @bfs(%struct.node_t_struct* nocapture readonly %host_nodes, %struct.edge_t_struct* nocapture readonly %host_edges, i8* nocapture %host_level, i64* nocapture %host_level_counts, %struct.node_t_struct* nocapture readnone %nodes, %struct.edge_t_struct* nocapture readnone %edges, i8* nocapture readnone %level, i64* nocapture readnone %level_counts, i64 %starting_node) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata %struct.node_t_struct* %host_nodes, metadata !37, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata %struct.edge_t_struct* %host_edges, metadata !38, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i8* %host_level, metadata !39, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64* %host_level_counts, metadata !40, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %starting_node, metadata !45, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata %struct.node_t_struct* %host_nodes, metadata !41, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata %struct.edge_t_struct* %host_edges, metadata !42, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i8* %host_level, metadata !43, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64* %host_level_counts, metadata !44, metadata !DIExpression()), !dbg !71
  %host_level_counts90 = bitcast i64* %host_level_counts to i8*
  %arrayidx = getelementptr inbounds i8, i8* %host_level, i64 %starting_node, !dbg !72
  store i8 0, i8* %arrayidx, align 1, !dbg !73, !tbaa !74
  call void @llvm.dbg.label(metadata !67), !dbg !77
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !71
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %host_level_counts90, i8 0, i64 80, i1 false), !dbg !78
  call void @llvm.dbg.value(metadata i32 undef, metadata !50, metadata !DIExpression()), !dbg !71
  store i64 1, i64* %host_level_counts, align 8, !dbg !81, !tbaa !82
  call void @llvm.dbg.label(metadata !68), !dbg !84
  call void @llvm.dbg.value(metadata i8 0, metadata !48, metadata !DIExpression()), !dbg !71
  br label %for.cond7.preheader, !dbg !85

for.cond7.preheader:                              ; preds = %for.end38, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.end38 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !48, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 0, metadata !49, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 0, metadata !46, metadata !DIExpression()), !dbg !71
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !86
  br label %for.body10, !dbg !87

for.body10:                                       ; preds = %for.inc36, %for.cond7.preheader
  %cnt.081 = phi i64 [ 0, %for.cond7.preheader ], [ %cnt.3, %for.inc36 ]
  %n.079 = phi i64 [ 0, %for.cond7.preheader ], [ %inc37, %for.inc36 ]
  call void @llvm.dbg.value(metadata i64 %cnt.081, metadata !49, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %n.079, metadata !46, metadata !DIExpression()), !dbg !71
  %arrayidx11 = getelementptr inbounds i8, i8* %host_level, i64 %n.079, !dbg !88
  %0 = load i8, i8* %arrayidx11, align 1, !dbg !88, !tbaa !74
  %1 = zext i8 %0 to i64, !dbg !89
  %cmp14 = icmp eq i64 %indvars.iv, %1, !dbg !89
  br i1 %cmp14, label %if.then, label %for.inc36, !dbg !90

if.then:                                          ; preds = %for.body10
  %edge_begin = getelementptr inbounds %struct.node_t_struct, %struct.node_t_struct* %host_nodes, i64 %n.079, i32 0, !dbg !91
  %2 = load i64, i64* %edge_begin, align 8, !dbg !91, !tbaa !92
  call void @llvm.dbg.value(metadata i64 %2, metadata !52, metadata !DIExpression()), !dbg !94
  %edge_end = getelementptr inbounds %struct.node_t_struct, %struct.node_t_struct* %host_nodes, i64 %n.079, i32 1, !dbg !95
  %3 = load i64, i64* %edge_end, align 8, !dbg !95, !tbaa !96
  call void @llvm.dbg.value(metadata i64 %3, metadata !61, metadata !DIExpression()), !dbg !94
  call void @llvm.dbg.label(metadata !70), !dbg !97
  call void @llvm.dbg.value(metadata i64 %2, metadata !47, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %cnt.081, metadata !49, metadata !DIExpression()), !dbg !71
  %cmp1976 = icmp ult i64 %2, %3, !dbg !98
  br i1 %cmp1976, label %for.body21, label %for.inc36, !dbg !99

for.body21:                                       ; preds = %if.then, %if.end
  %cnt.178 = phi i64 [ %cnt.2, %if.end ], [ %cnt.081, %if.then ]
  %e.077 = phi i64 [ %inc33, %if.end ], [ %2, %if.then ]
  call void @llvm.dbg.value(metadata i64 %cnt.178, metadata !49, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %e.077, metadata !47, metadata !DIExpression()), !dbg !71
  %dst = getelementptr inbounds %struct.edge_t_struct, %struct.edge_t_struct* %host_edges, i64 %e.077, i32 0, !dbg !100
  %4 = load i64, i64* %dst, align 8, !dbg !100, !tbaa !101
  call void @llvm.dbg.value(metadata i64 %4, metadata !62, metadata !DIExpression()), !dbg !103
  %arrayidx23 = getelementptr inbounds i8, i8* %host_level, i64 %4, !dbg !104
  %5 = load i8, i8* %arrayidx23, align 1, !dbg !104, !tbaa !74
  call void @llvm.dbg.value(metadata i8 %5, metadata !66, metadata !DIExpression()), !dbg !103
  %cmp25 = icmp eq i8 %5, 127, !dbg !105
  br i1 %cmp25, label %if.then27, label %if.end, !dbg !107

if.then27:                                        ; preds = %for.body21
  %6 = trunc i64 %indvars.iv.next to i8, !dbg !108
  store i8 %6, i8* %arrayidx23, align 1, !dbg !108, !tbaa !74
  %inc31 = add i64 %cnt.178, 1, !dbg !110
  call void @llvm.dbg.value(metadata i64 %inc31, metadata !49, metadata !DIExpression()), !dbg !71
  br label %if.end, !dbg !111

if.end:                                           ; preds = %if.then27, %for.body21
  %cnt.2 = phi i64 [ %inc31, %if.then27 ], [ %cnt.178, %for.body21 ], !dbg !112
  call void @llvm.dbg.value(metadata i64 %cnt.2, metadata !49, metadata !DIExpression()), !dbg !71
  %inc33 = add nuw i64 %e.077, 1, !dbg !113
  call void @llvm.dbg.value(metadata i64 %inc33, metadata !47, metadata !DIExpression()), !dbg !71
  %exitcond = icmp eq i64 %inc33, %3, !dbg !98
  br i1 %exitcond, label %for.inc36, label %for.body21, !dbg !99, !llvm.loop !114

for.inc36:                                        ; preds = %if.end, %if.then, %for.body10
  %cnt.3 = phi i64 [ %cnt.081, %for.body10 ], [ %cnt.081, %if.then ], [ %cnt.2, %if.end ], !dbg !116
  call void @llvm.dbg.value(metadata i64 %cnt.3, metadata !49, metadata !DIExpression()), !dbg !71
  %inc37 = add nuw nsw i64 %n.079, 1, !dbg !117
  call void @llvm.dbg.value(metadata i64 %inc37, metadata !46, metadata !DIExpression()), !dbg !71
  %exitcond85 = icmp eq i64 %inc37, 256, !dbg !118
  br i1 %exitcond85, label %for.end38, label %for.body10, !dbg !87, !llvm.loop !119

for.end38:                                        ; preds = %for.inc36
  call void @llvm.dbg.value(metadata i64 %cnt.3, metadata !49, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %cnt.3, metadata !49, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %cnt.3, metadata !49, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i64 %cnt.3, metadata !49, metadata !DIExpression()), !dbg !71
  %add40 = add nuw nsw i64 %indvars.iv, 1, !dbg !121
  %arrayidx42 = getelementptr inbounds i64, i64* %host_level_counts, i64 %add40, !dbg !123
  store i64 %cnt.3, i64* %arrayidx42, align 8, !dbg !124, !tbaa !82
  %cmp43 = icmp eq i64 %cnt.3, 0, !dbg !125
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !48, metadata !DIExpression()), !dbg !71
  %exitcond86 = icmp eq i64 %indvars.iv.next, 10, !dbg !126
  %or.cond = or i1 %cmp43, %exitcond86, !dbg !127
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !48, metadata !DIExpression()), !dbg !71
  br i1 %or.cond, label %for.end49, label %for.cond7.preheader, !dbg !127, !llvm.loop !128

for.end49:                                        ; preds = %for.end38
  ret void, !dbg !130
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "bfs.c", directory: "/home/coco/work/benchmark_codes/bfs-bulk")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "bfs", scope: !1, file: !1, line: 13, type: !8, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !36)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !23, !29, !35, !10, !23, !29, !35, !28}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "node_t", file: !12, line: 38, baseType: !13)
!12 = !DIFile(filename: "./bfs.h", directory: "/home/coco/work/benchmark_codes/bfs-bulk")
!13 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "node_t_struct", file: !12, line: 35, size: 128, elements: !14)
!14 = !{!15, !22}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "edge_begin", scope: !13, file: !12, line: 36, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_index_t", file: !12, line: 25, baseType: !17)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !18, line: 27, baseType: !19)
!18 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !20, line: 45, baseType: !21)
!20 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!21 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "edge_end", scope: !13, file: !12, line: 37, baseType: !16, size: 64, offset: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_t", file: !12, line: 33, baseType: !25)
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_t_struct", file: !12, line: 28, size: 64, elements: !26)
!26 = !{!27}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !25, file: !12, line: 32, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "node_index_t", file: !12, line: 26, baseType: !17)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "level_t", file: !12, line: 40, baseType: !31)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !32, line: 24, baseType: !33)
!32 = !DIFile(filename: "/usr/include/bits/stdint-intn.h", directory: "")
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !20, line: 37, baseType: !34)
!34 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !52, !61, !62, !66, !67, !68, !69, !70}
!37 = !DILocalVariable(name: "host_nodes", arg: 1, scope: !7, file: !1, line: 13, type: !10)
!38 = !DILocalVariable(name: "host_edges", arg: 2, scope: !7, file: !1, line: 14, type: !23)
!39 = !DILocalVariable(name: "host_level", arg: 3, scope: !7, file: !1, line: 15, type: !29)
!40 = !DILocalVariable(name: "host_level_counts", arg: 4, scope: !7, file: !1, line: 16, type: !35)
!41 = !DILocalVariable(name: "nodes", arg: 5, scope: !7, file: !1, line: 17, type: !10)
!42 = !DILocalVariable(name: "edges", arg: 6, scope: !7, file: !1, line: 18, type: !23)
!43 = !DILocalVariable(name: "level", arg: 7, scope: !7, file: !1, line: 19, type: !29)
!44 = !DILocalVariable(name: "level_counts", arg: 8, scope: !7, file: !1, line: 20, type: !35)
!45 = !DILocalVariable(name: "starting_node", arg: 9, scope: !7, file: !1, line: 21, type: !28)
!46 = !DILocalVariable(name: "n", scope: !7, file: !1, line: 23, type: !28)
!47 = !DILocalVariable(name: "e", scope: !7, file: !1, line: 24, type: !16)
!48 = !DILocalVariable(name: "horizon", scope: !7, file: !1, line: 25, type: !30)
!49 = !DILocalVariable(name: "cnt", scope: !7, file: !1, line: 26, type: !16)
!50 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 27, type: !51)
!51 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!52 = !DILocalVariable(name: "tmp_begin", scope: !53, file: !1, line: 50, type: !16)
!53 = distinct !DILexicalBlock(scope: !54, file: !1, line: 49, column: 31)
!54 = distinct !DILexicalBlock(scope: !55, file: !1, line: 49, column: 11)
!55 = distinct !DILexicalBlock(scope: !56, file: !1, line: 48, column: 44)
!56 = distinct !DILexicalBlock(scope: !57, file: !1, line: 48, column: 17)
!57 = distinct !DILexicalBlock(scope: !58, file: !1, line: 48, column: 17)
!58 = distinct !DILexicalBlock(scope: !59, file: !1, line: 45, column: 64)
!59 = distinct !DILexicalBlock(scope: !60, file: !1, line: 45, column: 18)
!60 = distinct !DILexicalBlock(scope: !7, file: !1, line: 45, column: 18)
!61 = !DILocalVariable(name: "tmp_end", scope: !53, file: !1, line: 51, type: !16)
!62 = !DILocalVariable(name: "tmp_dst", scope: !63, file: !1, line: 53, type: !28)
!63 = distinct !DILexicalBlock(scope: !64, file: !1, line: 52, column: 60)
!64 = distinct !DILexicalBlock(scope: !65, file: !1, line: 52, column: 25)
!65 = distinct !DILexicalBlock(scope: !53, file: !1, line: 52, column: 25)
!66 = !DILocalVariable(name: "tmp_level", scope: !63, file: !1, line: 54, type: !30)
!67 = !DILabel(scope: !7, name: "init_horizons", file: !1, line: 41)
!68 = !DILabel(scope: !7, name: "loop_horizons", file: !1, line: 45)
!69 = !DILabel(scope: !58, name: "loop_nodes", file: !1, line: 48)
!70 = !DILabel(scope: !53, name: "loop_neighbors", file: !1, line: 52)
!71 = !DILocation(line: 0, scope: !7)
!72 = !DILocation(line: 40, column: 3, scope: !7)
!73 = !DILocation(line: 40, column: 24, scope: !7)
!74 = !{!75, !75, i64 0}
!75 = !{!"omnipotent char", !76, i64 0}
!76 = !{!"Simple C/C++ TBAA"}
!77 = !DILocation(line: 41, column: 3, scope: !7)
!78 = !DILocation(line: 42, column: 21, scope: !79)
!79 = distinct !DILexicalBlock(scope: !80, file: !1, line: 41, column: 18)
!80 = distinct !DILexicalBlock(scope: !7, file: !1, line: 41, column: 18)
!81 = !DILocation(line: 43, column: 19, scope: !7)
!82 = !{!83, !83, i64 0}
!83 = !{!"long", !75, i64 0}
!84 = !DILocation(line: 45, column: 3, scope: !7)
!85 = !DILocation(line: 45, column: 18, scope: !60)
!86 = !DILocation(line: 45, column: 59, scope: !59)
!87 = !DILocation(line: 48, column: 17, scope: !57)
!88 = !DILocation(line: 49, column: 11, scope: !54)
!89 = !DILocation(line: 49, column: 19, scope: !54)
!90 = !DILocation(line: 49, column: 11, scope: !55)
!91 = !DILocation(line: 50, column: 43, scope: !53)
!92 = !{!93, !83, i64 0}
!93 = !{!"node_t_struct", !83, i64 0, !83, i64 8}
!94 = !DILocation(line: 0, scope: !53)
!95 = !DILocation(line: 51, column: 41, scope: !53)
!96 = !{!93, !83, i64 8}
!97 = !DILocation(line: 52, column: 9, scope: !53)
!98 = !DILocation(line: 52, column: 44, scope: !64)
!99 = !DILocation(line: 52, column: 25, scope: !65)
!100 = !DILocation(line: 53, column: 43, scope: !63)
!101 = !{!102, !83, i64 0}
!102 = !{!"edge_t_struct", !83, i64 0}
!103 = !DILocation(line: 0, scope: !63)
!104 = !DILocation(line: 54, column: 31, scope: !63)
!105 = !DILocation(line: 56, column: 25, scope: !106)
!106 = distinct !DILexicalBlock(scope: !63, file: !1, line: 56, column: 15)
!107 = !DILocation(line: 56, column: 15, scope: !63)
!108 = !DILocation(line: 57, column: 28, scope: !109)
!109 = distinct !DILexicalBlock(scope: !106, file: !1, line: 56, column: 39)
!110 = !DILocation(line: 58, column: 13, scope: !109)
!111 = !DILocation(line: 59, column: 11, scope: !109)
!112 = !DILocation(line: 0, scope: !58)
!113 = !DILocation(line: 52, column: 55, scope: !64)
!114 = distinct !{!114, !99, !115}
!115 = !DILocation(line: 60, column: 9, scope: !65)
!116 = !DILocation(line: 46, column: 9, scope: !58)
!117 = !DILocation(line: 48, column: 39, scope: !56)
!118 = !DILocation(line: 48, column: 28, scope: !56)
!119 = distinct !{!119, !87, !120}
!120 = !DILocation(line: 62, column: 5, scope: !57)
!121 = !DILocation(line: 63, column: 30, scope: !122)
!122 = distinct !DILexicalBlock(scope: !58, file: !1, line: 63, column: 9)
!123 = !DILocation(line: 63, column: 10, scope: !122)
!124 = !DILocation(line: 63, column: 33, scope: !122)
!125 = !DILocation(line: 63, column: 38, scope: !122)
!126 = !DILocation(line: 45, column: 41, scope: !59)
!127 = !DILocation(line: 63, column: 9, scope: !58)
!128 = distinct !{!128, !85, !129}
!129 = !DILocation(line: 65, column: 3, scope: !60)
!130 = !DILocation(line: 69, column: 1, scope: !7)
