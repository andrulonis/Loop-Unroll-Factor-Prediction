; ModuleID = 'bfs.c'
source_filename = "bfs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.node_t_struct = type { i64, i64 }
%struct.edge_t_struct = type { i64 }

; Function Attrs: noinline nounwind uwtable
define dso_local void @bfs(%struct.node_t_struct* nocapture readonly %host_nodes, %struct.edge_t_struct* nocapture readonly %host_edges, i8* nocapture %host_level, i64* nocapture %host_level_counts, %struct.node_t_struct* nocapture readnone %nodes, %struct.edge_t_struct* nocapture readnone %edges, i8* nocapture readnone %level, i64* nocapture readnone %level_counts, i64 %starting_node) local_unnamed_addr #0 !dbg !7 {
entry:
  %host_level_counts101 = bitcast i64* %host_level_counts to i8*
  %queue = alloca [256 x i64], align 16
  call void @llvm.dbg.value(metadata %struct.node_t_struct* %host_nodes, metadata !37, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata %struct.edge_t_struct* %host_edges, metadata !38, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i8* %host_level, metadata !39, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64* %host_level_counts, metadata !40, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata %struct.node_t_struct* %nodes, metadata !41, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata %struct.edge_t_struct* %edges, metadata !42, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i8* %level, metadata !43, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64* %level_counts, metadata !44, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 %starting_node, metadata !45, metadata !DIExpression()), !dbg !73
  %0 = bitcast [256 x i64]* %queue to i8*, !dbg !74
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %0) #3, !dbg !74
  call void @llvm.dbg.declare(metadata [256 x i64]* %queue, metadata !46, metadata !DIExpression()), !dbg !75
  call void @llvm.dbg.value(metadata %struct.node_t_struct* %host_nodes, metadata !41, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata %struct.edge_t_struct* %host_edges, metadata !42, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i8* %host_level, metadata !43, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64* %host_level_counts, metadata !44, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.label(metadata !70), !dbg !76
  call void @llvm.dbg.value(metadata i32 0, metadata !55, metadata !DIExpression()), !dbg !73
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %host_level_counts101, i8 0, i64 80, i1 false), !dbg !77
  call void @llvm.dbg.value(metadata i32 undef, metadata !55, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 1, metadata !50, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 0, metadata !51, metadata !DIExpression()), !dbg !73
  %arrayidx1 = getelementptr inbounds i8, i8* %host_level, i64 %starting_node, !dbg !80
  store i8 0, i8* %arrayidx1, align 1, !dbg !81, !tbaa !82
  store i64 1, i64* %host_level_counts, align 8, !dbg !85, !tbaa !86
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %queue, i64 0, i64 0, !dbg !88
  store i64 %starting_node, i64* %arrayidx4, align 16, !dbg !88, !tbaa !86
  call void @llvm.dbg.value(metadata i64 2, metadata !50, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.label(metadata !71), !dbg !90
  call void @llvm.dbg.value(metadata i64 0, metadata !52, metadata !DIExpression()), !dbg !73
  br label %for.body7, !dbg !91

for.body7:                                        ; preds = %for.end50, %entry
  %q_in.097 = phi i64 [ 2, %entry ], [ %q_in.1.lcssa, %for.end50 ]
  %q_out.095 = phi i64 [ 0, %entry ], [ %rem17, %for.end50 ]
  %dummy.094 = phi i64 [ 0, %entry ], [ %inc52, %for.end50 ]
  call void @llvm.dbg.value(metadata i64 %q_in.097, metadata !50, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 %q_out.095, metadata !51, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 %dummy.094, metadata !52, metadata !DIExpression()), !dbg !73
  %cmp8 = icmp ugt i64 %q_in.097, %q_out.095, !dbg !92
  br i1 %cmp8, label %cond.true9, label %cond.false12, !dbg !94

cond.true9:                                       ; preds = %for.body7
  %add10 = add nuw nsw i64 %q_out.095, 1, !dbg !92
  %cmp11 = icmp eq i64 %q_in.097, %add10, !dbg !92
  br i1 %cmp11, label %for.end53, label %if.end, !dbg !92

cond.false12:                                     ; preds = %for.body7
  %cmp13 = icmp eq i64 %q_in.097, 0, !dbg !92
  %cmp14 = icmp eq i64 %q_out.095, 255, !dbg !92
  %or.cond = and i1 %cmp14, %cmp13, !dbg !92
  br i1 %or.cond, label %for.end53, label %if.end, !dbg !92

if.end:                                           ; preds = %cond.false12, %cond.true9
  %arrayidx15 = getelementptr inbounds [256 x i64], [256 x i64]* %queue, i64 0, i64 %q_out.095, !dbg !95
  %1 = load i64, i64* %arrayidx15, align 8, !dbg !95, !tbaa !86
  call void @llvm.dbg.value(metadata i64 %1, metadata !53, metadata !DIExpression()), !dbg !73
  %add16 = add nuw nsw i64 %q_out.095, 1, !dbg !96
  %rem17 = and i64 %add16, 255, !dbg !96
  call void @llvm.dbg.value(metadata i64 %rem17, metadata !51, metadata !DIExpression()), !dbg !73
  %edge_begin = getelementptr inbounds %struct.node_t_struct, %struct.node_t_struct* %host_nodes, i64 %1, i32 0, !dbg !98
  %2 = load i64, i64* %edge_begin, align 8, !dbg !98, !tbaa !99
  call void @llvm.dbg.value(metadata i64 %2, metadata !57, metadata !DIExpression()), !dbg !101
  %edge_end = getelementptr inbounds %struct.node_t_struct, %struct.node_t_struct* %host_nodes, i64 %1, i32 1, !dbg !102
  %3 = load i64, i64* %edge_end, align 8, !dbg !102, !tbaa !103
  call void @llvm.dbg.value(metadata i64 %3, metadata !61, metadata !DIExpression()), !dbg !101
  call void @llvm.dbg.label(metadata !72), !dbg !104
  call void @llvm.dbg.value(metadata i64 %2, metadata !54, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 %q_in.097, metadata !50, metadata !DIExpression()), !dbg !73
  %cmp2191 = icmp ult i64 %2, %3, !dbg !105
  br i1 %cmp2191, label %for.body22.lr.ph, label %for.end50, !dbg !106

for.body22.lr.ph:                                 ; preds = %if.end
  %arrayidx29 = getelementptr inbounds i8, i8* %host_level, i64 %1, !dbg !107
  br label %for.body22, !dbg !106

for.body22:                                       ; preds = %if.end47, %for.body22.lr.ph
  %q_in.193 = phi i64 [ %q_in.097, %for.body22.lr.ph ], [ %q_in.2, %if.end47 ]
  %e.092 = phi i64 [ %2, %for.body22.lr.ph ], [ %inc49, %if.end47 ]
  call void @llvm.dbg.value(metadata i64 %q_in.193, metadata !50, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 %e.092, metadata !54, metadata !DIExpression()), !dbg !73
  %dst = getelementptr inbounds %struct.edge_t_struct, %struct.edge_t_struct* %host_edges, i64 %e.092, i32 0, !dbg !108
  %4 = load i64, i64* %dst, align 8, !dbg !108, !tbaa !109
  call void @llvm.dbg.value(metadata i64 %4, metadata !62, metadata !DIExpression()), !dbg !111
  %arrayidx24 = getelementptr inbounds i8, i8* %host_level, i64 %4, !dbg !112
  %5 = load i8, i8* %arrayidx24, align 1, !dbg !112, !tbaa !82
  call void @llvm.dbg.value(metadata i8 %5, metadata !66, metadata !DIExpression()), !dbg !111
  %cmp25 = icmp eq i8 %5, 127, !dbg !113
  br i1 %cmp25, label %if.then27, label %if.end47, !dbg !114

if.then27:                                        ; preds = %for.body22
  %6 = load i8, i8* %arrayidx29, align 1, !dbg !115, !tbaa !82
  %add31 = add i8 %6, 1, !dbg !116
  call void @llvm.dbg.value(metadata i8 %add31, metadata !67, metadata !DIExpression()), !dbg !107
  store i8 %add31, i8* %arrayidx24, align 1, !dbg !117, !tbaa !82
  %idxprom34 = sext i8 %add31 to i64, !dbg !118
  %arrayidx35 = getelementptr inbounds i64, i64* %host_level_counts, i64 %idxprom34, !dbg !118
  %7 = load i64, i64* %arrayidx35, align 8, !dbg !119, !tbaa !86
  %inc36 = add i64 %7, 1, !dbg !119
  store i64 %inc36, i64* %arrayidx35, align 8, !dbg !119, !tbaa !86
  %cmp37 = icmp eq i64 %q_in.193, 0, !dbg !120
  %sub41 = add i64 %q_in.193, -1, !dbg !120
  %cond43 = select i1 %cmp37, i64 255, i64 %sub41, !dbg !120
  %arrayidx44 = getelementptr inbounds [256 x i64], [256 x i64]* %queue, i64 0, i64 %cond43, !dbg !120
  store i64 %4, i64* %arrayidx44, align 8, !dbg !120, !tbaa !86
  %add45 = add i64 %q_in.193, 1, !dbg !120
  %rem46 = and i64 %add45, 255, !dbg !120
  call void @llvm.dbg.value(metadata i64 %rem46, metadata !50, metadata !DIExpression()), !dbg !73
  br label %if.end47, !dbg !122

if.end47:                                         ; preds = %if.then27, %for.body22
  %q_in.2 = phi i64 [ %rem46, %if.then27 ], [ %q_in.193, %for.body22 ], !dbg !73
  call void @llvm.dbg.value(metadata i64 %q_in.2, metadata !50, metadata !DIExpression()), !dbg !73
  %inc49 = add nuw i64 %e.092, 1, !dbg !123
  call void @llvm.dbg.value(metadata i64 %inc49, metadata !54, metadata !DIExpression()), !dbg !73
  %exitcond = icmp eq i64 %inc49, %3, !dbg !105
  br i1 %exitcond, label %for.end50, label %for.body22, !dbg !106, !llvm.loop !124

for.end50:                                        ; preds = %if.end47, %if.end
  %q_in.1.lcssa = phi i64 [ %q_in.097, %if.end ], [ %q_in.2, %if.end47 ], !dbg !73
  call void @llvm.dbg.value(metadata i64 %q_in.1.lcssa, metadata !50, metadata !DIExpression()), !dbg !73
  %inc52 = add nuw nsw i64 %dummy.094, 1, !dbg !126
  call void @llvm.dbg.value(metadata i64 %rem17, metadata !51, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.value(metadata i64 %inc52, metadata !52, metadata !DIExpression()), !dbg !73
  %exitcond99 = icmp eq i64 %inc52, 256, !dbg !127
  br i1 %exitcond99, label %for.end53, label %for.body7, !dbg !91, !llvm.loop !128

for.end53:                                        ; preds = %for.end50, %cond.true9, %cond.false12
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %0) #3, !dbg !130
  ret void, !dbg !130
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "bfs.c", directory: "/home/coco/work/benchmark_codes/bfs-queue")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "bfs", scope: !1, file: !1, line: 17, type: !8, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !36)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !23, !29, !35, !10, !23, !29, !35, !28}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "node_t", file: !12, line: 37, baseType: !13)
!12 = !DIFile(filename: "./bfs.h", directory: "/home/coco/work/benchmark_codes/bfs-queue")
!13 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "node_t_struct", file: !12, line: 34, size: 128, elements: !14)
!14 = !{!15, !22}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "edge_begin", scope: !13, file: !12, line: 35, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_index_t", file: !12, line: 24, baseType: !17)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !18, line: 27, baseType: !19)
!18 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !20, line: 45, baseType: !21)
!20 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!21 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "edge_end", scope: !13, file: !12, line: 36, baseType: !16, size: 64, offset: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_t", file: !12, line: 32, baseType: !25)
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_t_struct", file: !12, line: 27, size: 64, elements: !26)
!26 = !{!27}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !25, file: !12, line: 31, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "node_index_t", file: !12, line: 25, baseType: !17)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "level_t", file: !12, line: 39, baseType: !31)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !32, line: 24, baseType: !33)
!32 = !DIFile(filename: "/usr/include/bits/stdint-intn.h", directory: "")
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !20, line: 37, baseType: !34)
!34 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !50, !51, !52, !53, !54, !55, !57, !61, !62, !66, !67, !70, !71, !72}
!37 = !DILocalVariable(name: "host_nodes", arg: 1, scope: !7, file: !1, line: 17, type: !10)
!38 = !DILocalVariable(name: "host_edges", arg: 2, scope: !7, file: !1, line: 18, type: !23)
!39 = !DILocalVariable(name: "host_level", arg: 3, scope: !7, file: !1, line: 19, type: !29)
!40 = !DILocalVariable(name: "host_level_counts", arg: 4, scope: !7, file: !1, line: 20, type: !35)
!41 = !DILocalVariable(name: "nodes", arg: 5, scope: !7, file: !1, line: 21, type: !10)
!42 = !DILocalVariable(name: "edges", arg: 6, scope: !7, file: !1, line: 22, type: !23)
!43 = !DILocalVariable(name: "level", arg: 7, scope: !7, file: !1, line: 23, type: !29)
!44 = !DILocalVariable(name: "level_counts", arg: 8, scope: !7, file: !1, line: 24, type: !35)
!45 = !DILocalVariable(name: "starting_node", arg: 9, scope: !7, file: !1, line: 25, type: !28)
!46 = !DILocalVariable(name: "queue", scope: !7, file: !1, line: 27, type: !47)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 16384, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 256)
!50 = !DILocalVariable(name: "q_in", scope: !7, file: !1, line: 28, type: !28)
!51 = !DILocalVariable(name: "q_out", scope: !7, file: !1, line: 28, type: !28)
!52 = !DILocalVariable(name: "dummy", scope: !7, file: !1, line: 29, type: !28)
!53 = !DILocalVariable(name: "n", scope: !7, file: !1, line: 30, type: !28)
!54 = !DILocalVariable(name: "e", scope: !7, file: !1, line: 31, type: !16)
!55 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 32, type: !56)
!56 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!57 = !DILocalVariable(name: "tmp_begin", scope: !58, file: !1, line: 61, type: !16)
!58 = distinct !DILexicalBlock(scope: !59, file: !1, line: 56, column: 54)
!59 = distinct !DILexicalBlock(scope: !60, file: !1, line: 56, column: 15)
!60 = distinct !DILexicalBlock(scope: !7, file: !1, line: 56, column: 15)
!61 = !DILocalVariable(name: "tmp_end", scope: !58, file: !1, line: 62, type: !16)
!62 = !DILocalVariable(name: "tmp_dst", scope: !63, file: !1, line: 64, type: !28)
!63 = distinct !DILexicalBlock(scope: !64, file: !1, line: 63, column: 56)
!64 = distinct !DILexicalBlock(scope: !65, file: !1, line: 63, column: 21)
!65 = distinct !DILexicalBlock(scope: !58, file: !1, line: 63, column: 21)
!66 = !DILocalVariable(name: "tmp_level", scope: !63, file: !1, line: 65, type: !30)
!67 = !DILocalVariable(name: "tmp_level", scope: !68, file: !1, line: 68, type: !30)
!68 = distinct !DILexicalBlock(scope: !69, file: !1, line: 67, column: 35)
!69 = distinct !DILexicalBlock(scope: !63, file: !1, line: 67, column: 11)
!70 = !DILabel(scope: !7, name: "init_horizons", file: !1, line: 47)
!71 = !DILabel(scope: !7, name: "loop_queue", file: !1, line: 56)
!72 = !DILabel(scope: !58, name: "loop_neighbors", file: !1, line: 63)
!73 = !DILocation(line: 0, scope: !7)
!74 = !DILocation(line: 27, column: 3, scope: !7)
!75 = !DILocation(line: 27, column: 16, scope: !7)
!76 = !DILocation(line: 47, column: 3, scope: !7)
!77 = !DILocation(line: 48, column: 21, scope: !78)
!78 = distinct !DILexicalBlock(scope: !79, file: !1, line: 47, column: 18)
!79 = distinct !DILexicalBlock(scope: !7, file: !1, line: 47, column: 18)
!80 = !DILocation(line: 52, column: 3, scope: !7)
!81 = !DILocation(line: 52, column: 24, scope: !7)
!82 = !{!83, !83, i64 0}
!83 = !{!"omnipotent char", !84, i64 0}
!84 = !{!"Simple C/C++ TBAA"}
!85 = !DILocation(line: 53, column: 19, scope: !7)
!86 = !{!87, !87, i64 0}
!87 = !{!"long", !83, i64 0}
!88 = !DILocation(line: 54, column: 3, scope: !89)
!89 = distinct !DILexicalBlock(scope: !7, file: !1, line: 54, column: 3)
!90 = !DILocation(line: 56, column: 3, scope: !7)
!91 = !DILocation(line: 56, column: 15, scope: !60)
!92 = !DILocation(line: 57, column: 9, scope: !93)
!93 = distinct !DILexicalBlock(scope: !58, file: !1, line: 57, column: 9)
!94 = !DILocation(line: 57, column: 9, scope: !58)
!95 = !DILocation(line: 59, column: 9, scope: !58)
!96 = !DILocation(line: 60, column: 5, scope: !97)
!97 = distinct !DILexicalBlock(scope: !58, file: !1, line: 60, column: 5)
!98 = !DILocation(line: 61, column: 39, scope: !58)
!99 = !{!100, !87, i64 0}
!100 = !{!"node_t_struct", !87, i64 0, !87, i64 8}
!101 = !DILocation(line: 0, scope: !58)
!102 = !DILocation(line: 62, column: 37, scope: !58)
!103 = !{!100, !87, i64 8}
!104 = !DILocation(line: 63, column: 5, scope: !58)
!105 = !DILocation(line: 63, column: 40, scope: !64)
!106 = !DILocation(line: 63, column: 21, scope: !65)
!107 = !DILocation(line: 0, scope: !68)
!108 = !DILocation(line: 64, column: 39, scope: !63)
!109 = !{!110, !87, i64 0}
!110 = !{!"edge_t_struct", !87, i64 0}
!111 = !DILocation(line: 0, scope: !63)
!112 = !DILocation(line: 65, column: 27, scope: !63)
!113 = !DILocation(line: 67, column: 21, scope: !69)
!114 = !DILocation(line: 67, column: 11, scope: !63)
!115 = !DILocation(line: 68, column: 29, scope: !68)
!116 = !DILocation(line: 68, column: 37, scope: !68)
!117 = !DILocation(line: 69, column: 24, scope: !68)
!118 = !DILocation(line: 70, column: 11, scope: !68)
!119 = !DILocation(line: 70, column: 9, scope: !68)
!120 = !DILocation(line: 71, column: 9, scope: !121)
!121 = distinct !DILexicalBlock(scope: !68, file: !1, line: 71, column: 9)
!122 = !DILocation(line: 72, column: 7, scope: !68)
!123 = !DILocation(line: 63, column: 51, scope: !64)
!124 = distinct !{!124, !106, !125}
!125 = !DILocation(line: 73, column: 5, scope: !65)
!126 = !DILocation(line: 56, column: 49, scope: !59)
!127 = !DILocation(line: 56, column: 34, scope: !59)
!128 = distinct !{!128, !91, !129}
!129 = !DILocation(line: 74, column: 3, scope: !60)
!130 = !DILocation(line: 85, column: 1, scope: !7)
