; ModuleID = 'bfs.c'
source_filename = "bfs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.node_t_struct = type { i64, i64 }
%struct.edge_t_struct = type { i64 }

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @bfs(%struct.node_t_struct* nocapture readonly %host_nodes, %struct.edge_t_struct* nocapture readonly %host_edges, i8* nocapture %host_level, i64* nocapture %host_level_counts, %struct.node_t_struct* nocapture readnone %nodes, %struct.edge_t_struct* nocapture readnone %edges, i8* nocapture readnone %level, i64* nocapture readnone %level_counts, i64 %starting_node) local_unnamed_addr #0 {
entry:
  %host_level_counts90 = bitcast i64* %host_level_counts to i8*
  %arrayidx = getelementptr inbounds i8, i8* %host_level, i64 %starting_node
  store i8 0, i8* %arrayidx, align 1, !tbaa !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %host_level_counts90, i8 0, i64 80, i1 false)
  store i64 1, i64* %host_level_counts, align 8, !tbaa !5
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.end38, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.end38 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %for.body10

for.body10:                                       ; preds = %for.inc36, %for.cond7.preheader
  %cnt.081 = phi i64 [ 0, %for.cond7.preheader ], [ %cnt.3, %for.inc36 ]
  %n.079 = phi i64 [ 0, %for.cond7.preheader ], [ %inc37, %for.inc36 ]
  %arrayidx11 = getelementptr inbounds i8, i8* %host_level, i64 %n.079
  %0 = load i8, i8* %arrayidx11, align 1, !tbaa !2
  %1 = zext i8 %0 to i64
  %cmp14 = icmp eq i64 %indvars.iv, %1
  br i1 %cmp14, label %if.then, label %for.inc36

if.then:                                          ; preds = %for.body10
  %edge_begin = getelementptr inbounds %struct.node_t_struct, %struct.node_t_struct* %host_nodes, i64 %n.079, i32 0
  %2 = load i64, i64* %edge_begin, align 8, !tbaa !7
  %edge_end = getelementptr inbounds %struct.node_t_struct, %struct.node_t_struct* %host_nodes, i64 %n.079, i32 1
  %3 = load i64, i64* %edge_end, align 8, !tbaa !9
  %cmp1976 = icmp ult i64 %2, %3
  br i1 %cmp1976, label %for.body21, label %for.inc36

for.body21:                                       ; preds = %if.then, %if.end
  %cnt.178 = phi i64 [ %cnt.2, %if.end ], [ %cnt.081, %if.then ]
  %e.077 = phi i64 [ %inc33, %if.end ], [ %2, %if.then ]
  %dst = getelementptr inbounds %struct.edge_t_struct, %struct.edge_t_struct* %host_edges, i64 %e.077, i32 0
  %4 = load i64, i64* %dst, align 8, !tbaa !10
  %arrayidx23 = getelementptr inbounds i8, i8* %host_level, i64 %4
  %5 = load i8, i8* %arrayidx23, align 1, !tbaa !2
  %cmp25 = icmp eq i8 %5, 127
  br i1 %cmp25, label %if.then27, label %if.end

if.then27:                                        ; preds = %for.body21
  %6 = trunc i64 %indvars.iv.next to i8
  store i8 %6, i8* %arrayidx23, align 1, !tbaa !2
  %inc31 = add i64 %cnt.178, 1
  br label %if.end

if.end:                                           ; preds = %if.then27, %for.body21
  %cnt.2 = phi i64 [ %inc31, %if.then27 ], [ %cnt.178, %for.body21 ]
  %inc33 = add nuw i64 %e.077, 1
  %exitcond = icmp eq i64 %inc33, %3
  br i1 %exitcond, label %for.inc36, label %for.body21

for.inc36:                                        ; preds = %if.end, %if.then, %for.body10
  %cnt.3 = phi i64 [ %cnt.081, %for.body10 ], [ %cnt.081, %if.then ], [ %cnt.2, %if.end ]
  %inc37 = add nuw nsw i64 %n.079, 1
  %exitcond85 = icmp eq i64 %inc37, 256
  br i1 %exitcond85, label %for.end38, label %for.body10

for.end38:                                        ; preds = %for.inc36
  %add40 = add nuw nsw i64 %indvars.iv, 1
  %arrayidx42 = getelementptr inbounds i64, i64* %host_level_counts, i64 %add40
  store i64 %cnt.3, i64* %arrayidx42, align 8, !tbaa !5
  %cmp43 = icmp eq i64 %cnt.3, 0
  %exitcond86 = icmp eq i64 %indvars.iv.next, 10
  %or.cond = or i1 %cmp43, %exitcond86
  br i1 %or.cond, label %for.end49, label %for.cond7.preheader

for.end49:                                        ; preds = %for.end38
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"long", !3, i64 0}
!7 = !{!8, !6, i64 0}
!8 = !{!"node_t_struct", !6, i64 0, !6, i64 8}
!9 = !{!8, !6, i64 8}
!10 = !{!11, !6, i64 0}
!11 = !{!"edge_t_struct", !6, i64 0}
