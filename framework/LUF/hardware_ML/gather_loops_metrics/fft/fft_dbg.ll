; ModuleID = 'fft.c'
source_filename = "fft.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.sin_64 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000], align 16
@__const.main.sin_512 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFA91F70E0000000, float 0xBF992146A0000000, float 0xBFB2D527E0000000, float 0xBF89221000000000, float 0xBFAF657760000000, float 0xBFA2D85E00000000, float 0xBFB5F6CAC0000000, float 0xBFB917A460000000, float 0xBFA91F70E0000000, float 0xBFC2C80C80000000, float 0xBF992146A0000000, float 0xBFBF5653C0000000, float 0xBFB2D527E0000000, float 0xBFC5E21540000000, float 0xBFC2C80C80000000, float 0xBFB2D527E0000000, float 0xBFCC0B8060000000, float 0xBFA2D85E00000000, float 0xBFC76DDAC0000000, float 0xBFBC378240000000, float 0xBFD04FB980000000, float 0xBFC8F8B580000000, float 0xBFB917A460000000, float 0xBFD2940780000000, float 0xBFA91F70E0000000, float 0xBFCF19F800000000, float 0xBFC2C80C80000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFBF5653C0000000, float 0xBFD7088500000000, float 0xBFAF657760000000, float 0xBFD3541100000000, float 0xBFC76DDAC0000000, float 0xBFDAA6CA00000000, float 0xBFD2940780000000, float 0xBFC2C80C80000000, float 0xBFDB5D0FA0000000, float 0xBFB2D527E0000000, float 0xBFD7088500000000, float 0xBFCC0B8060000000, float 0xBFDF8BA400000000, float 0xBFD58F9B20000000, float 0xBFC5E21540000000, float 0xBFDF8BA400000000, float 0xBFB5F6CAC0000000, float 0xBFDAA6CA00000000, float 0xBFD04FB980000000, float 0xBFE21A7A00000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFDB5D0FA0000000, float 0xBFCC0B8060000000, float 0xBFE3AFFB00000000, float 0xBFBC378240000000, float 0xBFE0C97100000000, float 0xBFD4D1E100000000, float 0xBFE65918A0000000, float 0xBFDE2B5E60000000, float 0xBFCF19F800000000, float 0xBFE57D6940000000, float 0xBFBF5653C0000000, float 0xBFE26D04E0000000, float 0xBFD7088500000000, float 0xBFE83B0E60000000, float 0xBFE0738820000000, float 0xBFD111D360000000, float 0xBFE72D0800000000, float 0xBFC139F340000000, float 0xBFE3FED840000000, float 0xBFD9372A40000000, float 0xBFE9EF4380000000, float 0xBFE1C73AC0000000, float 0xBFD2940780000000, float 0xBFE8BC7F80000000, float 0xBFC2C80C80000000, float 0xBFE57D6940000000, float 0xBFDB5D0FA0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0xBFD4135DA0000000, float 0xBFEA29A800000000, float 0xBFC4557580000000, float 0xBFE6E744C0000000, float 0xBFDD7978A0000000, float 0xBFECC1F000000000, float 0xBFE44CF280000000, float 0xBFD58F9B20000000, float 0xBFEB728420000000, float 0xBFC5E21540000000, float 0xBFE83B0E60000000, float 0xBFDF8BA400000000, float 0xBFEDDB1420000000, float 0xBFE57D6940000000, float 0xBFD7088500000000, float 0xBFEC954A80000000, float 0xBFC76DDAC0000000, float 0xBFE9777F20000000, float 0xBFE0C97100000000, float 0xBFEEBBD9C0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFE7B5DEE0000000, float 0xBFD9EF7800000000, float 0xBFEE628880000000, float 0xBFCA829D00000000, float 0xBFEBA5AAC0000000, float 0xBFE2BEDB80000000, float 0xBFEFCE1600000000, float 0xBFE8BC7F80000000, float 0xBFDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0xBFCC0B8060000000, float 0xBFEC954A80000000, float 0xBFE3AFFB00000000, float 0xBFEFFD88C0000000, float 0xBFE9B3E140000000, float 0xBFDCC66D40000000, float 0xBFEF8765C0000000, float 0xBFCD934F00000000, float 0xBFED6961C0000000, float 0xBFE49A45A0000000, float 0xBFEFF09520000000, float 0xBFEA9B6700000000, float 0xBFDE2B5E60000000, float 0xBFEFD88E40000000, float 0xBFCF19F800000000, float 0xBFEE2120E0000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFDF8BA400000000, float 0xBFEFFD88C0000000, float 0xBFD04FB980000000, float 0xBFEEBBD9C0000000, float 0xBFE65918A0000000, float 0xBFEF225320000000, float 0xBFEC38B260000000, float 0xBFE0738820000000, float 0xBFEFF620E0000000, float 0xBFD111D360000000, float 0xBFEF38F360000000, float 0xBFE72D0800000000, float 0xBFEE628880000000, float 0xBFECED7A60000000, float 0xBFE11EB420000000, float 0xBFEFC26560000000, float 0xBFD1D34580000000, float 0xBFEF97F840000000, float 0xBFE7F8EC00000000, float 0xBFED6961C0000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0xBFEE2120E0000000, float 0xBFE26D04E0000000, float 0xBFEED740C0000000, float 0xBFD3541100000000, float 0xBFEFFA7220000000, float 0xBFE9777F20000000, float 0xBFEAD2BD40000000, float 0xBFEE9F40A0000000, float 0xBFE30FF760000000, float 0xBFEE2120E0000000, float 0xBFD4135DA0000000, float 0xBFEFFD88C0000000, float 0xBFEA29A800000000, float 0xBFE93A2160000000, float 0xBFEF0A7E80000000, float 0xBFE3AFFB00000000, float 0xBFED413560000000, float 0xBFD4D1E100000000, float 0xBFEFE1CBC0000000, float 0xBFEAD2BD40000000, float 0xBFE771E6C0000000, float 0xBFEF629740000000, float 0xBFE44CF280000000, float 0xBFEC38B260000000, float 0xBFD58F9B20000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFE4E6CB20000000, float 0xBFEB090B40000000, float 0xBFD64C7F40000000, float 0xBFEF4E5F80000000, float 0xBFEC08C400000000, float 0xBFE36058A0000000, float 0xBFEFD88E40000000, float 0xBFE57D6940000000, float 0xBFE9B3E140000000, float 0xBFD7088500000000, float 0xBFEED740C0000000, float 0xBFEC954A80000000, float 0xBFE11EB420000000, float 0xBFEFF620E0000000, float 0xBFE610B840000000, float 0xBFE83B0E60000000, float 0xBFD7C3A860000000, float 0xBFEE4269A0000000, float 0xBFED17E780000000, float 0xBFDD7978A0000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEFF620E0000000, float 0xBFE72D0800000000, float 0xBFE4E6CB20000000, float 0xBFD9372A40000000, float 0xBFECC1F000000000, float 0xBFEDFEAE60000000, float 0xBFD3541100000000, float 0xBFEFD88E40000000, float 0xBFE7B5DEE0000000, float 0xBFE30FF760000000, float 0xBFD9EF7800000000, float 0xBFEBD7C0C0000000, float 0xBFEE628880000000, float 0xBFCC0B8060000000, float 0xBFEFA75680000000, float 0xBFE83B0E60000000, float 0xBFE11EB420000000, float 0xBFDAA6CA00000000, float 0xBFEAD2BD40000000, float 0xBFEEBBD9C0000000, float 0xBFC139F340000000, float 0xBFEF629740000000, float 0xBFE8BC7F80000000, float 0xBFDE2B5E60000000, float 0xBFDB5D0FA0000000, float 0xBFE9B3E140000000, float 0xBFEF0A7E80000000, float 0xBFA91F70E0000000, float 0xBFEF0A7E80000000, float 0xBFE93A2160000000, float 0xBFD9EF7800000000, float 0xBFDC1248E0000000, float 0xBFE87C3F80000000, float 0xBFEF4E5F80000000, float 0x3FA2D85E00000000, float 0xBFEE9F40A0000000, float 0xBFE9B3E140000000, float 0xBFD58F9B20000000, float 0xBFDCC66D40000000, float 0xBFE72D0800000000, float 0xBFEF8765C0000000, float 0x3FBF5653C0000000, float 0xBFEE2120E0000000, float 0xBFEA29A800000000, float 0xBFD111D360000000, float 0xBFDD7978A0000000, float 0xBFE5C77BC0000000, float 0xBFEFB57A40000000, float 0x3FCA829D00000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFECED7A60000000, float 0xBFEB090B40000000, float 0xBFBF5653C0000000, float 0xBFDEDC1A40000000, float 0xBFE2BEDB80000000, float 0xBFEFF09520000000, float 0x3FD7C3A860000000, float 0xBFEC38B260000000, float 0xBFEB728420000000, float 0xBFA91F70E0000000, float 0xBFDF8BA400000000, float 0xBFE11EB420000000, float 0xBFEFFD88C0000000, float 0x3FDCC66D40000000, float 0xBFEB728420000000, float 0xBFEBD7C0C0000000, float 0x3F992146A0000000, float 0xBFE01CFBC0000000, float 0xBFDEDC1A40000000, float 0xBFEFFF62C0000000, float 0x3FE0C97100000000, float 0xBFEA9B6700000000, float 0xBFEC38B260000000, float 0x3FB917A460000000, float 0xBFE0738820000000, float 0xBFDB5D0FA0000000, float 0xBFEFF620E0000000, float 0x3FE30FF760000000, float 0xBFE9B3E140000000, float 0xBFEC954A80000000, float 0x3FC5E21540000000, float 0xBFE0C97100000000, float 0xBFD7C3A860000000, float 0xBFEFE1CBC0000000, float 0x3FE5328300000000, float 0xBFE8BC7F80000000, float 0xBFECED7A60000000, float 0x3FCF19F800000000, float 0xBFE11EB420000000, float 0xBFD4135DA0000000, float 0xBFEFC26560000000, float 0x3FE72D0800000000, float 0xBFE7B5DEE0000000, float 0xBFED413560000000, float 0x3FD4135DA0000000, float 0xBFE1734D60000000, float 0xBFD04FB980000000, float 0xBFEF97F840000000, float 0x3FE8FBCC20000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE57D6940000000, float 0xBFEDDB1420000000, float 0x3FDCC66D40000000, float 0xBFE21A7A00000000, float 0xBFC139F340000000, float 0xBFEF225320000000, float 0x3FEC08C400000000, float 0xBFE44CF280000000, float 0xBFEE2120E0000000, float 0x3FE0738820000000, float 0xBFE26D04E0000000, float 0xBFB2D527E0000000, float 0xBFEED740C0000000, float 0x3FED413560000000, float 0xBFE30FF760000000, float 0xBFEE628880000000, float 0x3FE26D04E0000000, float 0xBFE2BEDB80000000, float 0xBF89221000000000, float 0xBFEE817BA0000000, float 0x3FEE4269A0000000, float 0xBFE1C73AC0000000, float 0xBFEE9F40A0000000, float 0x3FE44CF280000000, float 0xBFE30FF760000000, float 0x3FA91F70E0000000, float 0xBFEE2120E0000000, float 0x3FEF0A7E80000000, float 0xBFE0738820000000, float 0xBFEED740C0000000, float 0x3FE610B840000000, float 0xBFE36058A0000000, float 0x3FBC378240000000, float 0xBFEDB65240000000, float 0x3FEF97F840000000, float 0xBFDE2B5E60000000, float 0xBFEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0xBFE3AFFB00000000, float 0x3FC5E21540000000, float 0xBFED413560000000, float 0x3FEFE9CCC0000000, float 0xBFDB5D0FA0000000, float 0xBFEF38F360000000, float 0x3FE93A2160000000, float 0xBFE3FED840000000, float 0x3FCD934F00000000, float 0xBFECC1F000000000, float 0x3FEFFF62C0000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFD58F9B20000000, float 0xBFEF8765C0000000, float 0x3FEBD7C0C0000000, float 0xBFE49A45A0000000, float 0x3FD64C7F40000000, float 0xBFEBA5AAC0000000, float 0x3FEF7598A0000000, float 0xBFD2940780000000, float 0xBFEFA75680000000, float 0x3FECED7A60000000, float 0xBFE4E6CB20000000, float 0x3FD9EF7800000000, float 0xBFEB090B40000000, float 0x3FEED740C0000000, float 0xBFCF19F800000000, float 0xBFEFC26560000000, float 0x3FEDDB1420000000, float 0xBFE5328300000000, float 0x3FDD7978A0000000, float 0xBFEA630880000000, float 0x3FEDFEAE60000000, float 0xBFC8F8B580000000, float 0xBFEFD88E40000000, float 0x3FEE9F40A0000000, float 0xBFE57D6940000000, float 0x3FE0738820000000, float 0xBFE9B3E140000000, float 0x3FECED7A60000000, float 0xBFC2C80C80000000, float 0xBFEFE9CCC0000000, float 0x3FEF38F360000000, float 0xBFE5C77BC0000000, float 0x3FE21A7A00000000, float 0xBFE8FBCC20000000, float 0x3FEBA5AAC0000000, float 0xBFB917A460000000, float 0xBFEFF620E0000000, float 0x3FEFA75680000000, float 0xBFE610B840000000, float 0x3FE3AFFB00000000, float 0xBFE83B0E60000000, float 0x3FEA29A800000000, float 0xBFA91F70E0000000, float 0xBFEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0xBFE65918A0000000, float 0x3FE5328300000000, float 0xBFE771E6C0000000, float 0x3FE87C3F80000000], align 16
@__const.main.cos_64 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000], align 16
@__const.main.cos_512 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEFF620E0000000, float 0x3FEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0x3FEFFF62C0000000, float 0x3FEFF09520000000, float 0x3FEFFA7220000000, float 0x3FEFE1CBC0000000, float 0x3FEFD88E40000000, float 0x3FEFF620E0000000, float 0x3FEFA75680000000, float 0x3FEFFD88C0000000, float 0x3FEFC26560000000, float 0x3FEFE9CCC0000000, float 0x3FEF8765C0000000, float 0x3FEFA75680000000, float 0x3FEFE9CCC0000000, float 0x3FEF38F360000000, float 0x3FEFFA7220000000, float 0x3FEF7598A0000000, float 0x3FEFCE1600000000, float 0x3FEEF177A0000000, float 0x3FEF629740000000, float 0x3FEFD88E40000000, float 0x3FEE9F40A0000000, float 0x3FEFF620E0000000, float 0x3FEF0A7E80000000, float 0x3FEFA75680000000, float 0x3FEE2120E0000000, float 0x3FEF0A7E80000000, float 0x3FEFC26560000000, float 0x3FEDDB1420000000, float 0x3FEFF09520000000, float 0x3FEE817BA0000000, float 0x3FEF7598A0000000, float 0x3FED17E780000000, float 0x3FEE9F40A0000000, float 0x3FEFA75680000000, float 0x3FECED7A60000000, float 0x3FEFE9CCC0000000, float 0x3FEDDB1420000000, float 0x3FEF38F360000000, float 0x3FEBD7C0C0000000, float 0x3FEE2120E0000000, float 0x3FEF8765C0000000, float 0x3FEBD7C0C0000000, float 0x3FEFE1CBC0000000, float 0x3FED17E780000000, float 0x3FEEF177A0000000, float 0x3FEA630880000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FECED7A60000000, float 0x3FEF38F360000000, float 0x3FE93A2160000000, float 0x3FEFCE1600000000, float 0x3FEB3E4CE0000000, float 0x3FEE4269A0000000, float 0x3FE6E744C0000000, float 0x3FEC38B260000000, float 0x3FEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0x3FEFC26560000000, float 0x3FEA29A800000000, float 0x3FEDDB1420000000, float 0x3FE4E6CB20000000, float 0x3FEB728420000000, float 0x3FEED740C0000000, float 0x3FE610B840000000, float 0x3FEFB57A40000000, float 0x3FE8FBCC20000000, float 0x3FED6961C0000000, float 0x3FE2BEDB80000000, float 0x3FEA9B6700000000, float 0x3FEE9F40A0000000, float 0x3FE44CF280000000, float 0x3FEFA75680000000, float 0x3FE7B5DEE0000000, float 0x3FECED7A60000000, float 0x3FE0738820000000, float 0x3FE9B3E140000000, float 0x3FEE628880000000, float 0x3FE26D04E0000000, float 0x3FEF97F840000000, float 0x3FE65918A0000000, float 0x3FEC678C00000000, float 0x3FDC1248E0000000, float 0x3FE8BC7F80000000, float 0x3FEE2120E0000000, float 0x3FE0738820000000, float 0x3FEF8765C0000000, float 0x3FE4E6CB20000000, float 0x3FEBD7C0C0000000, float 0x3FD7088500000000, float 0x3FE7B5DEE0000000, float 0x3FEDDB1420000000, float 0x3FDCC66D40000000, float 0x3FEF7598A0000000, float 0x3FE36058A0000000, float 0x3FEB3E4CE0000000, float 0x3FD1D34580000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FE57D6940000000, float 0x3FED413560000000, float 0x3FD4135DA0000000, float 0x3FEF4E5F80000000, float 0x3FE01CFBC0000000, float 0x3FE9EF4380000000, float 0x3FBC378240000000, float 0x3FE44CF280000000, float 0x3FECED7A60000000, float 0x3FCF19F800000000, float 0x3FEF38F360000000, float 0x3FDCC66D40000000, float 0x3FE93A2160000000, float 0x3F992146A0000000, float 0x3FE30FF760000000, float 0x3FEC954A80000000, float 0x3FC5E21540000000, float 0x3FEF225320000000, float 0x3FD9372A40000000, float 0x3FE87C3F80000000, float 0xBFAF657760000000, float 0x3FE1C73AC0000000, float 0x3FEC38B260000000, float 0x3FB917A460000000, float 0x3FEF0A7E80000000, float 0x3FD58F9B20000000, float 0x3FE7B5DEE0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0x3FEBD7C0C0000000, float 0x3F992146A0000000, float 0x3FEEF177A0000000, float 0x3FD1D34580000000, float 0x3FE6E744C0000000, float 0xBFCD934F00000000, float 0x3FDE2B5E60000000, float 0x3FEB728420000000, float 0xBFA91F70E0000000, float 0x3FEED740C0000000, float 0x3FCC0B8060000000, float 0x3FE610B840000000, float 0xBFD4135DA0000000, float 0x3FDB5D0FA0000000, float 0x3FEB090B40000000, float 0xBFBF5653C0000000, float 0x3FEEBBD9C0000000, float 0x3FC4557580000000, float 0x3FE5328300000000, float 0xBFD9372A40000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FD58F9B20000000, float 0x3FEA29A800000000, float 0xBFD111D360000000, float 0x3FEE817BA0000000, float 0x3FA2D85E00000000, float 0x3FE36058A0000000, float 0xBFE1734D60000000, float 0x3FD2940780000000, float 0x3FE9B3E140000000, float 0xBFD58F9B20000000, float 0x3FEE628880000000, float 0xBF992146A0000000, float 0x3FE26D04E0000000, float 0xBFE3AFFB00000000, float 0x3FCF19F800000000, float 0x3FE93A2160000000, float 0xBFD9EF7800000000, float 0x3FEE4269A0000000, float 0xBFB5F6CAC0000000, float 0x3FE1734D60000000, float 0xBFE5C77BC0000000, float 0x3FC8F8B580000000, float 0x3FE8BC7F80000000, float 0xBFDE2B5E60000000, float 0x3FEE2120E0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0xBFE7B5DEE0000000, float 0x3FC2C80C80000000, float 0x3FE83B0E60000000, float 0xBFE11EB420000000, float 0x3FEDFEAE60000000, float 0xBFCA829D00000000, float 0x3FDEDC1A40000000, float 0xBFE9777F20000000, float 0x3FB917A460000000, float 0x3FE7B5DEE0000000, float 0xBFE30FF760000000, float 0x3FEDDB1420000000, float 0xBFD111D360000000, float 0x3FDCC66D40000000, float 0xBFEB090B40000000, float 0x3FA91F70E0000000, float 0x3FE72D0800000000, float 0xBFE4E6CB20000000, float 0x3FEDB65240000000, float 0xBFD4D1E100000000, float 0x3FDAA6CA00000000, float 0xBFEC678C00000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFA91F70E0000000, float 0x3FE610B840000000, float 0xBFE83B0E60000000, float 0x3FED6961C0000000, float 0xBFDC1248E0000000, float 0x3FD64C7F40000000, float 0xBFEE817BA0000000, float 0xBFB917A460000000, float 0x3FE57D6940000000, float 0xBFE9B3E140000000, float 0x3FED413560000000, float 0xBFDF8BA400000000, float 0x3FD4135DA0000000, float 0xBFEF38F360000000, float 0xBFC2C80C80000000, float 0x3FE4E6CB20000000, float 0xBFEB090B40000000, float 0x3FED17E780000000, float 0xBFE1734D60000000, float 0x3FD1D34580000000, float 0xBFEFB57A40000000, float 0xBFC8F8B580000000, float 0x3FE44CF280000000, float 0xBFEC38B260000000, float 0x3FECED7A60000000, float 0xBFE30FF760000000, float 0x3FCF19F800000000, float 0xBFEFF620E0000000, float 0xBFCF19F800000000, float 0x3FE3AFFB00000000, float 0xBFED413560000000, float 0x3FECC1F000000000, float 0xBFE49A45A0000000, float 0x3FCA829D00000000, float 0xBFEFFA7220000000, float 0xBFD2940780000000, float 0x3FE30FF760000000, float 0xBFEE2120E0000000, float 0x3FEC954A80000000, float 0xBFE610B840000000, float 0x3FC5E21540000000, float 0xBFEFC26560000000, float 0xBFD58F9B20000000, float 0x3FE26D04E0000000, float 0xBFEED740C0000000, float 0x3FEC678C00000000, float 0xBFE771E6C0000000, float 0x3FC139F340000000, float 0xBFEF4E5F80000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFDB5D0FA0000000, float 0x3FE11EB420000000, float 0xBFEFC26560000000, float 0x3FEC08C400000000, float 0xBFE9EF4380000000, float 0x3FAF657760000000, float 0xBFEDB65240000000, float 0xBFDE2B5E60000000, float 0x3FE0738820000000, float 0xBFEFF620E0000000, float 0x3FEBD7C0C0000000, float 0xBFEB090B40000000, float 0x3F992146A0000000, float 0xBFEC954A80000000, float 0xBFE0738820000000, float 0x3FDF8BA400000000, float 0xBFEFFD88C0000000, float 0x3FEBA5AAC0000000, float 0xBFEC08C400000000, float 0xBF89221000000000, float 0xBFEB3E4CE0000000, float 0xBFE1C73AC0000000, float 0x3FDE2B5E60000000, float 0xBFEFD88E40000000, float 0x3FEB728420000000, float 0xBFECED7A60000000, float 0xBFA91F70E0000000, float 0xBFE9B3E140000000, float 0xBFE30FF760000000, float 0x3FDCC66D40000000, float 0xBFEF8765C0000000, float 0x3FEB3E4CE0000000, float 0xBFEDB65240000000, float 0xBFB5F6CAC0000000, float 0xBFE7F8EC00000000, float 0xBFE44CF280000000, float 0x3FDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0x3FEB090B40000000, float 0xBFEE628880000000, float 0xBFBF5653C0000000, float 0xBFE610B840000000, float 0xBFE57D6940000000, float 0x3FD9EF7800000000, float 0xBFEE628880000000, float 0x3FEAD2BD40000000, float 0xBFEEF177A0000000, float 0xBFC4557580000000, float 0xBFE3FED840000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE7B5DEE0000000, float 0x3FD7088500000000, float 0xBFEC954A80000000, float 0x3FEA630880000000, float 0xBFEFB57A40000000, float 0xBFCD934F00000000, float 0xBFDEDC1A40000000, float 0xBFE8BC7F80000000, float 0x3FD58F9B20000000, float 0xBFEB728420000000, float 0x3FEA29A800000000, float 0xBFEFE9CCC0000000, float 0xBFD111D360000000, float 0xBFD9EF7800000000, float 0xBFE9B3E140000000, float 0x3FD4135DA0000000, float 0xBFEA29A800000000, float 0x3FE9EF4380000000, float 0xBFEFFF62C0000000, float 0xBFD3541100000000, float 0xBFD4D1E100000000, float 0xBFEA9B6700000000, float 0x3FD2940780000000, float 0xBFE8BC7F80000000, float 0x3FE9B3E140000000, float 0xBFEFF620E0000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFEB728420000000, float 0x3FD111D360000000, float 0xBFE72D0800000000, float 0x3FE9777F20000000, float 0xBFEFCE1600000000, float 0xBFD7C3A860000000, float 0xBFC4557580000000, float 0xBFEC38B260000000, float 0x3FCF19F800000000, float 0xBFE57D6940000000, float 0x3FE93A2160000000, float 0xBFEF8765C0000000, float 0xBFD9EF7800000000, float 0xBFB2D527E0000000, float 0xBFECED7A60000000, float 0x3FCC0B8060000000, float 0xBFE3AFFB00000000, float 0x3FE8FBCC20000000, float 0xBFEF225320000000, float 0xBFDC1248E0000000, float 0x3F89221000000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFEE2120E0000000, float 0x3FC5E21540000000, float 0xBFDF8BA400000000, float 0x3FE87C3F80000000, float 0xBFEDFEAE60000000, float 0xBFE01CFBC0000000, float 0x3FC76DDAC0000000, float 0xBFEE9F40A0000000, float 0x3FC2C80C80000000, float 0xBFDB5D0FA0000000, float 0x3FE83B0E60000000, float 0xBFED413560000000, float 0xBFE11EB420000000, float 0x3FD111D360000000, float 0xBFEF0A7E80000000, float 0x3FBF5653C0000000, float 0xBFD7088500000000, float 0x3FE7F8EC00000000, float 0xBFEC678C00000000, float 0xBFE21A7A00000000, float 0x3FD64C7F40000000, float 0xBFEF629740000000, float 0x3FB917A460000000, float 0xBFD2940780000000, float 0x3FE7B5DEE0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0x3FDB5D0FA0000000, float 0xBFEFA75680000000, float 0x3FB2D527E0000000, float 0xBFCC0B8060000000, float 0x3FE771E6C0000000, float 0xBFEA630880000000, float 0xBFE3FED840000000, float 0x3FE01CFBC0000000, float 0xBFEFD88E40000000, float 0x3FA91F70E0000000, float 0xBFC2C80C80000000, float 0x3FE72D0800000000, float 0xBFE93A2160000000, float 0xBFE4E6CB20000000, float 0x3FE26D04E0000000, float 0xBFEFF620E0000000, float 0x3F992146A0000000, float 0xBFB2D527E0000000, float 0x3FE6E744C0000000, float 0xBFE7F8EC00000000, float 0xBFE5C77BC0000000, float 0x3FE49A45A0000000], align 16
@__const.main.reversed = private unnamed_addr constant [8 x i32] [i32 0, i32 4, i32 2, i32 6, i32 1, i32 5, i32 3, i32 7], align 16
@.str = private unnamed_addr constant [16 x i8] c"x = %i y = %i \0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !7 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  %exp_1_8_x = alloca i32, align 4
  %exp_1_4_x = alloca i32, align 4
  %exp_3_8_x = alloca i32, align 4
  %exp_1_8_y = alloca i32, align 4
  %exp_1_4_y = alloca i32, align 4
  %exp_3_8_y = alloca i32, align 4
  %tmp_1 = alloca i32, align 4
  %tmp_2 = alloca i32, align 4
  %c0_x = alloca i32, align 4
  %c0_y = alloca i32, align 4
  %c0_x25 = alloca i32, align 4
  %c0_y27 = alloca i32, align 4
  %c0_x41 = alloca i32, align 4
  %c0_y43 = alloca i32, align 4
  %c0_x57 = alloca i32, align 4
  %c0_y59 = alloca i32, align 4
  %exp_1_44_x = alloca i32, align 4
  %exp_1_44_y = alloca i32, align 4
  %tmp = alloca i32, align 4
  %c0_x120 = alloca i32, align 4
  %c0_y122 = alloca i32, align 4
  %c0_x136 = alloca i32, align 4
  %c0_y138 = alloca i32, align 4
  %c0_x164 = alloca i32, align 4
  %c0_y166 = alloca i32, align 4
  %c0_x180 = alloca i32, align 4
  %c0_y182 = alloca i32, align 4
  %exp_1_44_x196 = alloca i32, align 4
  %exp_1_44_y197 = alloca i32, align 4
  %tmp198 = alloca i32, align 4
  %c0_x199 = alloca i32, align 4
  %c0_y201 = alloca i32, align 4
  %c0_x215 = alloca i32, align 4
  %c0_y217 = alloca i32, align 4
  %c0_x243 = alloca i32, align 4
  %c0_y245 = alloca i32, align 4
  %c0_x259 = alloca i32, align 4
  %c0_y261 = alloca i32, align 4
  %A_x = alloca i32, align 4
  %A_y = alloca i32, align 4
  %tmp279 = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !14, metadata !DIExpression()), !dbg !15
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !16, metadata !DIExpression()), !dbg !17
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !24, metadata !DIExpression()), !dbg !25
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !26, metadata !DIExpression()), !dbg !27
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !28, metadata !DIExpression()), !dbg !29
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !30, metadata !DIExpression()), !dbg !31
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !32, metadata !DIExpression()), !dbg !33
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !34, metadata !DIExpression()), !dbg !35
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !36, metadata !DIExpression()), !dbg !37
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !38, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !40, metadata !DIExpression()), !dbg !41
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !42, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.declare(metadata i32* %i, metadata !44, metadata !DIExpression()), !dbg !45
  call void @llvm.dbg.declare(metadata i32* %j, metadata !46, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !48, metadata !DIExpression()), !dbg !49
  store i32 64, i32* %stride, align 4, !dbg !50
  br label %outer, !dbg !51

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !52), !dbg !53
  store i32 0, i32* %tid, align 4, !dbg !54
  br label %for.cond, !dbg !56

for.cond:                                         ; preds = %for.inc332, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !57
  %cmp = icmp slt i32 %0, 64, !dbg !59
  br i1 %cmp, label %for.body, label %for.end334, !dbg !60

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !61

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !62), !dbg !64
  store i32 0, i32* %i, align 4, !dbg !65
  br label %for.cond1, !dbg !67

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !68
  %cmp2 = icmp slt i32 %1, 8, !dbg !70
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !71

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %work_x.addr, align 8, !dbg !72
  %3 = load i32, i32* %i, align 4, !dbg !74
  %4 = load i32, i32* %stride, align 4, !dbg !75
  %mul = mul nsw i32 %3, %4, !dbg !76
  %5 = load i32, i32* %tid, align 4, !dbg !77
  %add = add nsw i32 %mul, %5, !dbg !78
  %idxprom = sext i32 %add to i64, !dbg !72
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !72
  %6 = load i32, i32* %arrayidx, align 4, !dbg !72
  %7 = load i32*, i32** %data_x.addr, align 8, !dbg !79
  %8 = load i32, i32* %i, align 4, !dbg !80
  %idxprom4 = sext i32 %8 to i64, !dbg !79
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom4, !dbg !79
  store i32 %6, i32* %arrayidx5, align 4, !dbg !81
  %9 = load i32*, i32** %work_y.addr, align 8, !dbg !82
  %10 = load i32, i32* %i, align 4, !dbg !83
  %11 = load i32, i32* %stride, align 4, !dbg !84
  %mul6 = mul nsw i32 %10, %11, !dbg !85
  %12 = load i32, i32* %tid, align 4, !dbg !86
  %add7 = add nsw i32 %mul6, %12, !dbg !87
  %idxprom8 = sext i32 %add7 to i64, !dbg !82
  %arrayidx9 = getelementptr inbounds i32, i32* %9, i64 %idxprom8, !dbg !82
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !82
  %14 = load i32*, i32** %data_y.addr, align 8, !dbg !88
  %15 = load i32, i32* %i, align 4, !dbg !89
  %idxprom10 = sext i32 %15 to i64, !dbg !88
  %arrayidx11 = getelementptr inbounds i32, i32* %14, i64 %idxprom10, !dbg !88
  store i32 %13, i32* %arrayidx11, align 4, !dbg !90
  br label %for.inc, !dbg !91

for.inc:                                          ; preds = %for.body3
  %16 = load i32, i32* %i, align 4, !dbg !92
  %inc = add nsw i32 %16, 1, !dbg !92
  store i32 %inc, i32* %i, align 4, !dbg !92
  br label %for.cond1, !dbg !93, !llvm.loop !94

for.end:                                          ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %exp_1_8_x, metadata !96, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %exp_1_4_x, metadata !99, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %exp_3_8_x, metadata !100, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %exp_1_8_y, metadata !101, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %exp_1_4_y, metadata !102, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %exp_3_8_y, metadata !103, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %tmp_1, metadata !104, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %tmp_2, metadata !105, metadata !DIExpression()), !dbg !98
  store i32 1, i32* %exp_1_8_x, align 4, !dbg !98
  store i32 -1, i32* %exp_1_8_y, align 4, !dbg !98
  store i32 0, i32* %exp_1_4_x, align 4, !dbg !98
  store i32 -1, i32* %exp_1_4_y, align 4, !dbg !98
  store i32 -1, i32* %exp_3_8_x, align 4, !dbg !98
  store i32 -1, i32* %exp_3_8_y, align 4, !dbg !98
  call void @llvm.dbg.declare(metadata i32* %c0_x, metadata !106, metadata !DIExpression()), !dbg !108
  %17 = load i32*, i32** %data_x.addr, align 8, !dbg !108
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !108
  %18 = load i32, i32* %arrayidx12, align 4, !dbg !108
  store i32 %18, i32* %c0_x, align 4, !dbg !108
  call void @llvm.dbg.declare(metadata i32* %c0_y, metadata !109, metadata !DIExpression()), !dbg !108
  %19 = load i32*, i32** %data_y.addr, align 8, !dbg !108
  %arrayidx13 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !108
  %20 = load i32, i32* %arrayidx13, align 4, !dbg !108
  store i32 %20, i32* %c0_y, align 4, !dbg !108
  %21 = load i32, i32* %c0_x, align 4, !dbg !108
  %22 = load i32*, i32** %data_x.addr, align 8, !dbg !108
  %arrayidx14 = getelementptr inbounds i32, i32* %22, i64 4, !dbg !108
  %23 = load i32, i32* %arrayidx14, align 4, !dbg !108
  %add15 = add nsw i32 %21, %23, !dbg !108
  %24 = load i32*, i32** %data_x.addr, align 8, !dbg !108
  %arrayidx16 = getelementptr inbounds i32, i32* %24, i64 0, !dbg !108
  store i32 %add15, i32* %arrayidx16, align 4, !dbg !108
  %25 = load i32, i32* %c0_y, align 4, !dbg !108
  %26 = load i32*, i32** %data_y.addr, align 8, !dbg !108
  %arrayidx17 = getelementptr inbounds i32, i32* %26, i64 4, !dbg !108
  %27 = load i32, i32* %arrayidx17, align 4, !dbg !108
  %add18 = add nsw i32 %25, %27, !dbg !108
  %28 = load i32*, i32** %data_y.addr, align 8, !dbg !108
  %arrayidx19 = getelementptr inbounds i32, i32* %28, i64 0, !dbg !108
  store i32 %add18, i32* %arrayidx19, align 4, !dbg !108
  %29 = load i32, i32* %c0_x, align 4, !dbg !108
  %30 = load i32*, i32** %data_x.addr, align 8, !dbg !108
  %arrayidx20 = getelementptr inbounds i32, i32* %30, i64 4, !dbg !108
  %31 = load i32, i32* %arrayidx20, align 4, !dbg !108
  %sub = sub nsw i32 %29, %31, !dbg !108
  %32 = load i32*, i32** %data_x.addr, align 8, !dbg !108
  %arrayidx21 = getelementptr inbounds i32, i32* %32, i64 4, !dbg !108
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !108
  %33 = load i32, i32* %c0_y, align 4, !dbg !108
  %34 = load i32*, i32** %data_y.addr, align 8, !dbg !108
  %arrayidx22 = getelementptr inbounds i32, i32* %34, i64 4, !dbg !108
  %35 = load i32, i32* %arrayidx22, align 4, !dbg !108
  %sub23 = sub nsw i32 %33, %35, !dbg !108
  %36 = load i32*, i32** %data_y.addr, align 8, !dbg !108
  %arrayidx24 = getelementptr inbounds i32, i32* %36, i64 4, !dbg !108
  store i32 %sub23, i32* %arrayidx24, align 4, !dbg !108
  call void @llvm.dbg.declare(metadata i32* %c0_x25, metadata !110, metadata !DIExpression()), !dbg !112
  %37 = load i32*, i32** %data_x.addr, align 8, !dbg !112
  %arrayidx26 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !112
  %38 = load i32, i32* %arrayidx26, align 4, !dbg !112
  store i32 %38, i32* %c0_x25, align 4, !dbg !112
  call void @llvm.dbg.declare(metadata i32* %c0_y27, metadata !113, metadata !DIExpression()), !dbg !112
  %39 = load i32*, i32** %data_y.addr, align 8, !dbg !112
  %arrayidx28 = getelementptr inbounds i32, i32* %39, i64 1, !dbg !112
  %40 = load i32, i32* %arrayidx28, align 4, !dbg !112
  store i32 %40, i32* %c0_y27, align 4, !dbg !112
  %41 = load i32, i32* %c0_x25, align 4, !dbg !112
  %42 = load i32*, i32** %data_x.addr, align 8, !dbg !112
  %arrayidx29 = getelementptr inbounds i32, i32* %42, i64 5, !dbg !112
  %43 = load i32, i32* %arrayidx29, align 4, !dbg !112
  %add30 = add nsw i32 %41, %43, !dbg !112
  %44 = load i32*, i32** %data_x.addr, align 8, !dbg !112
  %arrayidx31 = getelementptr inbounds i32, i32* %44, i64 1, !dbg !112
  store i32 %add30, i32* %arrayidx31, align 4, !dbg !112
  %45 = load i32, i32* %c0_y27, align 4, !dbg !112
  %46 = load i32*, i32** %data_y.addr, align 8, !dbg !112
  %arrayidx32 = getelementptr inbounds i32, i32* %46, i64 5, !dbg !112
  %47 = load i32, i32* %arrayidx32, align 4, !dbg !112
  %add33 = add nsw i32 %45, %47, !dbg !112
  %48 = load i32*, i32** %data_y.addr, align 8, !dbg !112
  %arrayidx34 = getelementptr inbounds i32, i32* %48, i64 1, !dbg !112
  store i32 %add33, i32* %arrayidx34, align 4, !dbg !112
  %49 = load i32, i32* %c0_x25, align 4, !dbg !112
  %50 = load i32*, i32** %data_x.addr, align 8, !dbg !112
  %arrayidx35 = getelementptr inbounds i32, i32* %50, i64 5, !dbg !112
  %51 = load i32, i32* %arrayidx35, align 4, !dbg !112
  %sub36 = sub nsw i32 %49, %51, !dbg !112
  %52 = load i32*, i32** %data_x.addr, align 8, !dbg !112
  %arrayidx37 = getelementptr inbounds i32, i32* %52, i64 5, !dbg !112
  store i32 %sub36, i32* %arrayidx37, align 4, !dbg !112
  %53 = load i32, i32* %c0_y27, align 4, !dbg !112
  %54 = load i32*, i32** %data_y.addr, align 8, !dbg !112
  %arrayidx38 = getelementptr inbounds i32, i32* %54, i64 5, !dbg !112
  %55 = load i32, i32* %arrayidx38, align 4, !dbg !112
  %sub39 = sub nsw i32 %53, %55, !dbg !112
  %56 = load i32*, i32** %data_y.addr, align 8, !dbg !112
  %arrayidx40 = getelementptr inbounds i32, i32* %56, i64 5, !dbg !112
  store i32 %sub39, i32* %arrayidx40, align 4, !dbg !112
  call void @llvm.dbg.declare(metadata i32* %c0_x41, metadata !114, metadata !DIExpression()), !dbg !116
  %57 = load i32*, i32** %data_x.addr, align 8, !dbg !116
  %arrayidx42 = getelementptr inbounds i32, i32* %57, i64 2, !dbg !116
  %58 = load i32, i32* %arrayidx42, align 4, !dbg !116
  store i32 %58, i32* %c0_x41, align 4, !dbg !116
  call void @llvm.dbg.declare(metadata i32* %c0_y43, metadata !117, metadata !DIExpression()), !dbg !116
  %59 = load i32*, i32** %data_y.addr, align 8, !dbg !116
  %arrayidx44 = getelementptr inbounds i32, i32* %59, i64 2, !dbg !116
  %60 = load i32, i32* %arrayidx44, align 4, !dbg !116
  store i32 %60, i32* %c0_y43, align 4, !dbg !116
  %61 = load i32, i32* %c0_x41, align 4, !dbg !116
  %62 = load i32*, i32** %data_x.addr, align 8, !dbg !116
  %arrayidx45 = getelementptr inbounds i32, i32* %62, i64 6, !dbg !116
  %63 = load i32, i32* %arrayidx45, align 4, !dbg !116
  %add46 = add nsw i32 %61, %63, !dbg !116
  %64 = load i32*, i32** %data_x.addr, align 8, !dbg !116
  %arrayidx47 = getelementptr inbounds i32, i32* %64, i64 2, !dbg !116
  store i32 %add46, i32* %arrayidx47, align 4, !dbg !116
  %65 = load i32, i32* %c0_y43, align 4, !dbg !116
  %66 = load i32*, i32** %data_y.addr, align 8, !dbg !116
  %arrayidx48 = getelementptr inbounds i32, i32* %66, i64 6, !dbg !116
  %67 = load i32, i32* %arrayidx48, align 4, !dbg !116
  %add49 = add nsw i32 %65, %67, !dbg !116
  %68 = load i32*, i32** %data_y.addr, align 8, !dbg !116
  %arrayidx50 = getelementptr inbounds i32, i32* %68, i64 2, !dbg !116
  store i32 %add49, i32* %arrayidx50, align 4, !dbg !116
  %69 = load i32, i32* %c0_x41, align 4, !dbg !116
  %70 = load i32*, i32** %data_x.addr, align 8, !dbg !116
  %arrayidx51 = getelementptr inbounds i32, i32* %70, i64 6, !dbg !116
  %71 = load i32, i32* %arrayidx51, align 4, !dbg !116
  %sub52 = sub nsw i32 %69, %71, !dbg !116
  %72 = load i32*, i32** %data_x.addr, align 8, !dbg !116
  %arrayidx53 = getelementptr inbounds i32, i32* %72, i64 6, !dbg !116
  store i32 %sub52, i32* %arrayidx53, align 4, !dbg !116
  %73 = load i32, i32* %c0_y43, align 4, !dbg !116
  %74 = load i32*, i32** %data_y.addr, align 8, !dbg !116
  %arrayidx54 = getelementptr inbounds i32, i32* %74, i64 6, !dbg !116
  %75 = load i32, i32* %arrayidx54, align 4, !dbg !116
  %sub55 = sub nsw i32 %73, %75, !dbg !116
  %76 = load i32*, i32** %data_y.addr, align 8, !dbg !116
  %arrayidx56 = getelementptr inbounds i32, i32* %76, i64 6, !dbg !116
  store i32 %sub55, i32* %arrayidx56, align 4, !dbg !116
  call void @llvm.dbg.declare(metadata i32* %c0_x57, metadata !118, metadata !DIExpression()), !dbg !120
  %77 = load i32*, i32** %data_x.addr, align 8, !dbg !120
  %arrayidx58 = getelementptr inbounds i32, i32* %77, i64 3, !dbg !120
  %78 = load i32, i32* %arrayidx58, align 4, !dbg !120
  store i32 %78, i32* %c0_x57, align 4, !dbg !120
  call void @llvm.dbg.declare(metadata i32* %c0_y59, metadata !121, metadata !DIExpression()), !dbg !120
  %79 = load i32*, i32** %data_y.addr, align 8, !dbg !120
  %arrayidx60 = getelementptr inbounds i32, i32* %79, i64 3, !dbg !120
  %80 = load i32, i32* %arrayidx60, align 4, !dbg !120
  store i32 %80, i32* %c0_y59, align 4, !dbg !120
  %81 = load i32, i32* %c0_x57, align 4, !dbg !120
  %82 = load i32*, i32** %data_x.addr, align 8, !dbg !120
  %arrayidx61 = getelementptr inbounds i32, i32* %82, i64 7, !dbg !120
  %83 = load i32, i32* %arrayidx61, align 4, !dbg !120
  %add62 = add nsw i32 %81, %83, !dbg !120
  %84 = load i32*, i32** %data_x.addr, align 8, !dbg !120
  %arrayidx63 = getelementptr inbounds i32, i32* %84, i64 3, !dbg !120
  store i32 %add62, i32* %arrayidx63, align 4, !dbg !120
  %85 = load i32, i32* %c0_y59, align 4, !dbg !120
  %86 = load i32*, i32** %data_y.addr, align 8, !dbg !120
  %arrayidx64 = getelementptr inbounds i32, i32* %86, i64 7, !dbg !120
  %87 = load i32, i32* %arrayidx64, align 4, !dbg !120
  %add65 = add nsw i32 %85, %87, !dbg !120
  %88 = load i32*, i32** %data_y.addr, align 8, !dbg !120
  %arrayidx66 = getelementptr inbounds i32, i32* %88, i64 3, !dbg !120
  store i32 %add65, i32* %arrayidx66, align 4, !dbg !120
  %89 = load i32, i32* %c0_x57, align 4, !dbg !120
  %90 = load i32*, i32** %data_x.addr, align 8, !dbg !120
  %arrayidx67 = getelementptr inbounds i32, i32* %90, i64 7, !dbg !120
  %91 = load i32, i32* %arrayidx67, align 4, !dbg !120
  %sub68 = sub nsw i32 %89, %91, !dbg !120
  %92 = load i32*, i32** %data_x.addr, align 8, !dbg !120
  %arrayidx69 = getelementptr inbounds i32, i32* %92, i64 7, !dbg !120
  store i32 %sub68, i32* %arrayidx69, align 4, !dbg !120
  %93 = load i32, i32* %c0_y59, align 4, !dbg !120
  %94 = load i32*, i32** %data_y.addr, align 8, !dbg !120
  %arrayidx70 = getelementptr inbounds i32, i32* %94, i64 7, !dbg !120
  %95 = load i32, i32* %arrayidx70, align 4, !dbg !120
  %sub71 = sub nsw i32 %93, %95, !dbg !120
  %96 = load i32*, i32** %data_y.addr, align 8, !dbg !120
  %arrayidx72 = getelementptr inbounds i32, i32* %96, i64 7, !dbg !120
  store i32 %sub71, i32* %arrayidx72, align 4, !dbg !120
  %97 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx73 = getelementptr inbounds i32, i32* %97, i64 5, !dbg !98
  %98 = load i32, i32* %arrayidx73, align 4, !dbg !98
  store i32 %98, i32* %tmp_1, align 4, !dbg !98
  %99 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx74 = getelementptr inbounds i32, i32* %99, i64 5, !dbg !98
  %100 = load i32, i32* %arrayidx74, align 4, !dbg !98
  %101 = load i32, i32* %exp_1_8_x, align 4, !dbg !98
  %mul75 = mul nsw i32 %100, %101, !dbg !98
  %102 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx76 = getelementptr inbounds i32, i32* %102, i64 5, !dbg !98
  %103 = load i32, i32* %arrayidx76, align 4, !dbg !98
  %104 = load i32, i32* %exp_1_8_y, align 4, !dbg !98
  %mul77 = mul nsw i32 %103, %104, !dbg !98
  %sub78 = sub nsw i32 %mul75, %mul77, !dbg !98
  %conv = sitofp i32 %sub78 to float, !dbg !98
  %mul79 = fmul float 0x3FE6A09E60000000, %conv, !dbg !98
  %conv80 = fptosi float %mul79 to i32, !dbg !98
  %105 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx81 = getelementptr inbounds i32, i32* %105, i64 5, !dbg !98
  store i32 %conv80, i32* %arrayidx81, align 4, !dbg !98
  %106 = load i32, i32* %tmp_1, align 4, !dbg !98
  %107 = load i32, i32* %exp_1_8_y, align 4, !dbg !98
  %mul82 = mul nsw i32 %106, %107, !dbg !98
  %108 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx83 = getelementptr inbounds i32, i32* %108, i64 5, !dbg !98
  %109 = load i32, i32* %arrayidx83, align 4, !dbg !98
  %110 = load i32, i32* %exp_1_8_x, align 4, !dbg !98
  %mul84 = mul nsw i32 %109, %110, !dbg !98
  %add85 = add nsw i32 %mul82, %mul84, !dbg !98
  %conv86 = sitofp i32 %add85 to float, !dbg !98
  %mul87 = fmul float 0x3FE6A09E60000000, %conv86, !dbg !98
  %conv88 = fptosi float %mul87 to i32, !dbg !98
  %111 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx89 = getelementptr inbounds i32, i32* %111, i64 5, !dbg !98
  store i32 %conv88, i32* %arrayidx89, align 4, !dbg !98
  %112 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx90 = getelementptr inbounds i32, i32* %112, i64 6, !dbg !98
  %113 = load i32, i32* %arrayidx90, align 4, !dbg !98
  store i32 %113, i32* %tmp_1, align 4, !dbg !98
  %114 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx91 = getelementptr inbounds i32, i32* %114, i64 6, !dbg !98
  %115 = load i32, i32* %arrayidx91, align 4, !dbg !98
  %116 = load i32, i32* %exp_1_4_x, align 4, !dbg !98
  %mul92 = mul nsw i32 %115, %116, !dbg !98
  %117 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx93 = getelementptr inbounds i32, i32* %117, i64 6, !dbg !98
  %118 = load i32, i32* %arrayidx93, align 4, !dbg !98
  %119 = load i32, i32* %exp_1_4_y, align 4, !dbg !98
  %mul94 = mul nsw i32 %118, %119, !dbg !98
  %sub95 = sub nsw i32 %mul92, %mul94, !dbg !98
  %120 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx96 = getelementptr inbounds i32, i32* %120, i64 6, !dbg !98
  store i32 %sub95, i32* %arrayidx96, align 4, !dbg !98
  %121 = load i32, i32* %tmp_1, align 4, !dbg !98
  %122 = load i32, i32* %exp_1_4_y, align 4, !dbg !98
  %mul97 = mul nsw i32 %121, %122, !dbg !98
  %123 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx98 = getelementptr inbounds i32, i32* %123, i64 6, !dbg !98
  %124 = load i32, i32* %arrayidx98, align 4, !dbg !98
  %125 = load i32, i32* %exp_1_4_x, align 4, !dbg !98
  %mul99 = mul nsw i32 %124, %125, !dbg !98
  %add100 = add nsw i32 %mul97, %mul99, !dbg !98
  %126 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx101 = getelementptr inbounds i32, i32* %126, i64 6, !dbg !98
  store i32 %add100, i32* %arrayidx101, align 4, !dbg !98
  %127 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx102 = getelementptr inbounds i32, i32* %127, i64 7, !dbg !98
  %128 = load i32, i32* %arrayidx102, align 4, !dbg !98
  store i32 %128, i32* %tmp_1, align 4, !dbg !98
  %129 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx103 = getelementptr inbounds i32, i32* %129, i64 7, !dbg !98
  %130 = load i32, i32* %arrayidx103, align 4, !dbg !98
  %131 = load i32, i32* %exp_3_8_x, align 4, !dbg !98
  %mul104 = mul nsw i32 %130, %131, !dbg !98
  %132 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx105 = getelementptr inbounds i32, i32* %132, i64 7, !dbg !98
  %133 = load i32, i32* %arrayidx105, align 4, !dbg !98
  %134 = load i32, i32* %exp_3_8_y, align 4, !dbg !98
  %mul106 = mul nsw i32 %133, %134, !dbg !98
  %sub107 = sub nsw i32 %mul104, %mul106, !dbg !98
  %conv108 = sitofp i32 %sub107 to float, !dbg !98
  %mul109 = fmul float 0x3FE6A09E60000000, %conv108, !dbg !98
  %conv110 = fptosi float %mul109 to i32, !dbg !98
  %135 = load i32*, i32** %data_x.addr, align 8, !dbg !98
  %arrayidx111 = getelementptr inbounds i32, i32* %135, i64 7, !dbg !98
  store i32 %conv110, i32* %arrayidx111, align 4, !dbg !98
  %136 = load i32, i32* %tmp_1, align 4, !dbg !98
  %137 = load i32, i32* %exp_3_8_y, align 4, !dbg !98
  %mul112 = mul nsw i32 %136, %137, !dbg !98
  %138 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx113 = getelementptr inbounds i32, i32* %138, i64 7, !dbg !98
  %139 = load i32, i32* %arrayidx113, align 4, !dbg !98
  %140 = load i32, i32* %exp_3_8_x, align 4, !dbg !98
  %mul114 = mul nsw i32 %139, %140, !dbg !98
  %add115 = add nsw i32 %mul112, %mul114, !dbg !98
  %conv116 = sitofp i32 %add115 to float, !dbg !98
  %mul117 = fmul float 0x3FE6A09E60000000, %conv116, !dbg !98
  %conv118 = fptosi float %mul117 to i32, !dbg !98
  %141 = load i32*, i32** %data_y.addr, align 8, !dbg !98
  %arrayidx119 = getelementptr inbounds i32, i32* %141, i64 7, !dbg !98
  store i32 %conv118, i32* %arrayidx119, align 4, !dbg !98
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_x, metadata !122, metadata !DIExpression()), !dbg !124
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_y, metadata !125, metadata !DIExpression()), !dbg !124
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !126, metadata !DIExpression()), !dbg !124
  store i32 0, i32* %exp_1_44_x, align 4, !dbg !124
  store i32 -1, i32* %exp_1_44_y, align 4, !dbg !124
  call void @llvm.dbg.declare(metadata i32* %c0_x120, metadata !127, metadata !DIExpression()), !dbg !129
  %142 = load i32*, i32** %data_x.addr, align 8, !dbg !129
  %arrayidx121 = getelementptr inbounds i32, i32* %142, i64 0, !dbg !129
  %143 = load i32, i32* %arrayidx121, align 4, !dbg !129
  store i32 %143, i32* %c0_x120, align 4, !dbg !129
  call void @llvm.dbg.declare(metadata i32* %c0_y122, metadata !130, metadata !DIExpression()), !dbg !129
  %144 = load i32*, i32** %data_y.addr, align 8, !dbg !129
  %arrayidx123 = getelementptr inbounds i32, i32* %144, i64 0, !dbg !129
  %145 = load i32, i32* %arrayidx123, align 4, !dbg !129
  store i32 %145, i32* %c0_y122, align 4, !dbg !129
  %146 = load i32, i32* %c0_x120, align 4, !dbg !129
  %147 = load i32*, i32** %data_x.addr, align 8, !dbg !129
  %arrayidx124 = getelementptr inbounds i32, i32* %147, i64 2, !dbg !129
  %148 = load i32, i32* %arrayidx124, align 4, !dbg !129
  %add125 = add nsw i32 %146, %148, !dbg !129
  %149 = load i32*, i32** %data_x.addr, align 8, !dbg !129
  %arrayidx126 = getelementptr inbounds i32, i32* %149, i64 0, !dbg !129
  store i32 %add125, i32* %arrayidx126, align 4, !dbg !129
  %150 = load i32, i32* %c0_y122, align 4, !dbg !129
  %151 = load i32*, i32** %data_y.addr, align 8, !dbg !129
  %arrayidx127 = getelementptr inbounds i32, i32* %151, i64 2, !dbg !129
  %152 = load i32, i32* %arrayidx127, align 4, !dbg !129
  %add128 = add nsw i32 %150, %152, !dbg !129
  %153 = load i32*, i32** %data_y.addr, align 8, !dbg !129
  %arrayidx129 = getelementptr inbounds i32, i32* %153, i64 0, !dbg !129
  store i32 %add128, i32* %arrayidx129, align 4, !dbg !129
  %154 = load i32, i32* %c0_x120, align 4, !dbg !129
  %155 = load i32*, i32** %data_x.addr, align 8, !dbg !129
  %arrayidx130 = getelementptr inbounds i32, i32* %155, i64 2, !dbg !129
  %156 = load i32, i32* %arrayidx130, align 4, !dbg !129
  %sub131 = sub nsw i32 %154, %156, !dbg !129
  %157 = load i32*, i32** %data_x.addr, align 8, !dbg !129
  %arrayidx132 = getelementptr inbounds i32, i32* %157, i64 2, !dbg !129
  store i32 %sub131, i32* %arrayidx132, align 4, !dbg !129
  %158 = load i32, i32* %c0_y122, align 4, !dbg !129
  %159 = load i32*, i32** %data_y.addr, align 8, !dbg !129
  %arrayidx133 = getelementptr inbounds i32, i32* %159, i64 2, !dbg !129
  %160 = load i32, i32* %arrayidx133, align 4, !dbg !129
  %sub134 = sub nsw i32 %158, %160, !dbg !129
  %161 = load i32*, i32** %data_y.addr, align 8, !dbg !129
  %arrayidx135 = getelementptr inbounds i32, i32* %161, i64 2, !dbg !129
  store i32 %sub134, i32* %arrayidx135, align 4, !dbg !129
  call void @llvm.dbg.declare(metadata i32* %c0_x136, metadata !131, metadata !DIExpression()), !dbg !133
  %162 = load i32*, i32** %data_x.addr, align 8, !dbg !133
  %arrayidx137 = getelementptr inbounds i32, i32* %162, i64 1, !dbg !133
  %163 = load i32, i32* %arrayidx137, align 4, !dbg !133
  store i32 %163, i32* %c0_x136, align 4, !dbg !133
  call void @llvm.dbg.declare(metadata i32* %c0_y138, metadata !134, metadata !DIExpression()), !dbg !133
  %164 = load i32*, i32** %data_y.addr, align 8, !dbg !133
  %arrayidx139 = getelementptr inbounds i32, i32* %164, i64 1, !dbg !133
  %165 = load i32, i32* %arrayidx139, align 4, !dbg !133
  store i32 %165, i32* %c0_y138, align 4, !dbg !133
  %166 = load i32, i32* %c0_x136, align 4, !dbg !133
  %167 = load i32*, i32** %data_x.addr, align 8, !dbg !133
  %arrayidx140 = getelementptr inbounds i32, i32* %167, i64 3, !dbg !133
  %168 = load i32, i32* %arrayidx140, align 4, !dbg !133
  %add141 = add nsw i32 %166, %168, !dbg !133
  %169 = load i32*, i32** %data_x.addr, align 8, !dbg !133
  %arrayidx142 = getelementptr inbounds i32, i32* %169, i64 1, !dbg !133
  store i32 %add141, i32* %arrayidx142, align 4, !dbg !133
  %170 = load i32, i32* %c0_y138, align 4, !dbg !133
  %171 = load i32*, i32** %data_y.addr, align 8, !dbg !133
  %arrayidx143 = getelementptr inbounds i32, i32* %171, i64 3, !dbg !133
  %172 = load i32, i32* %arrayidx143, align 4, !dbg !133
  %add144 = add nsw i32 %170, %172, !dbg !133
  %173 = load i32*, i32** %data_y.addr, align 8, !dbg !133
  %arrayidx145 = getelementptr inbounds i32, i32* %173, i64 1, !dbg !133
  store i32 %add144, i32* %arrayidx145, align 4, !dbg !133
  %174 = load i32, i32* %c0_x136, align 4, !dbg !133
  %175 = load i32*, i32** %data_x.addr, align 8, !dbg !133
  %arrayidx146 = getelementptr inbounds i32, i32* %175, i64 3, !dbg !133
  %176 = load i32, i32* %arrayidx146, align 4, !dbg !133
  %sub147 = sub nsw i32 %174, %176, !dbg !133
  %177 = load i32*, i32** %data_x.addr, align 8, !dbg !133
  %arrayidx148 = getelementptr inbounds i32, i32* %177, i64 3, !dbg !133
  store i32 %sub147, i32* %arrayidx148, align 4, !dbg !133
  %178 = load i32, i32* %c0_y138, align 4, !dbg !133
  %179 = load i32*, i32** %data_y.addr, align 8, !dbg !133
  %arrayidx149 = getelementptr inbounds i32, i32* %179, i64 3, !dbg !133
  %180 = load i32, i32* %arrayidx149, align 4, !dbg !133
  %sub150 = sub nsw i32 %178, %180, !dbg !133
  %181 = load i32*, i32** %data_y.addr, align 8, !dbg !133
  %arrayidx151 = getelementptr inbounds i32, i32* %181, i64 3, !dbg !133
  store i32 %sub150, i32* %arrayidx151, align 4, !dbg !133
  %182 = load i32*, i32** %data_x.addr, align 8, !dbg !124
  %arrayidx152 = getelementptr inbounds i32, i32* %182, i64 3, !dbg !124
  %183 = load i32, i32* %arrayidx152, align 4, !dbg !124
  store i32 %183, i32* %tmp, align 4, !dbg !124
  %184 = load i32*, i32** %data_x.addr, align 8, !dbg !124
  %arrayidx153 = getelementptr inbounds i32, i32* %184, i64 3, !dbg !124
  %185 = load i32, i32* %arrayidx153, align 4, !dbg !124
  %186 = load i32, i32* %exp_1_44_x, align 4, !dbg !124
  %mul154 = mul nsw i32 %185, %186, !dbg !124
  %187 = load i32*, i32** %data_y.addr, align 8, !dbg !124
  %arrayidx155 = getelementptr inbounds i32, i32* %187, i64 3, !dbg !124
  %188 = load i32, i32* %arrayidx155, align 4, !dbg !124
  %189 = load i32, i32* %exp_1_44_y, align 4, !dbg !124
  %mul156 = mul nsw i32 %188, %189, !dbg !124
  %sub157 = sub nsw i32 %mul154, %mul156, !dbg !124
  %190 = load i32*, i32** %data_x.addr, align 8, !dbg !124
  %arrayidx158 = getelementptr inbounds i32, i32* %190, i64 3, !dbg !124
  store i32 %sub157, i32* %arrayidx158, align 4, !dbg !124
  %191 = load i32, i32* %tmp, align 4, !dbg !124
  %192 = load i32, i32* %exp_1_44_y, align 4, !dbg !124
  %mul159 = mul nsw i32 %191, %192, !dbg !124
  %193 = load i32*, i32** %data_y.addr, align 8, !dbg !124
  %arrayidx160 = getelementptr inbounds i32, i32* %193, i64 3, !dbg !124
  %194 = load i32, i32* %arrayidx160, align 4, !dbg !124
  %195 = load i32, i32* %exp_1_44_x, align 4, !dbg !124
  %mul161 = mul nsw i32 %194, %195, !dbg !124
  %sub162 = sub nsw i32 %mul159, %mul161, !dbg !124
  %196 = load i32*, i32** %data_y.addr, align 8, !dbg !124
  %arrayidx163 = getelementptr inbounds i32, i32* %196, i64 3, !dbg !124
  store i32 %sub162, i32* %arrayidx163, align 4, !dbg !124
  call void @llvm.dbg.declare(metadata i32* %c0_x164, metadata !135, metadata !DIExpression()), !dbg !137
  %197 = load i32*, i32** %data_x.addr, align 8, !dbg !137
  %arrayidx165 = getelementptr inbounds i32, i32* %197, i64 0, !dbg !137
  %198 = load i32, i32* %arrayidx165, align 4, !dbg !137
  store i32 %198, i32* %c0_x164, align 4, !dbg !137
  call void @llvm.dbg.declare(metadata i32* %c0_y166, metadata !138, metadata !DIExpression()), !dbg !137
  %199 = load i32*, i32** %data_y.addr, align 8, !dbg !137
  %arrayidx167 = getelementptr inbounds i32, i32* %199, i64 0, !dbg !137
  %200 = load i32, i32* %arrayidx167, align 4, !dbg !137
  store i32 %200, i32* %c0_y166, align 4, !dbg !137
  %201 = load i32, i32* %c0_x164, align 4, !dbg !137
  %202 = load i32*, i32** %data_x.addr, align 8, !dbg !137
  %arrayidx168 = getelementptr inbounds i32, i32* %202, i64 1, !dbg !137
  %203 = load i32, i32* %arrayidx168, align 4, !dbg !137
  %add169 = add nsw i32 %201, %203, !dbg !137
  %204 = load i32*, i32** %data_x.addr, align 8, !dbg !137
  %arrayidx170 = getelementptr inbounds i32, i32* %204, i64 0, !dbg !137
  store i32 %add169, i32* %arrayidx170, align 4, !dbg !137
  %205 = load i32, i32* %c0_y166, align 4, !dbg !137
  %206 = load i32*, i32** %data_y.addr, align 8, !dbg !137
  %arrayidx171 = getelementptr inbounds i32, i32* %206, i64 1, !dbg !137
  %207 = load i32, i32* %arrayidx171, align 4, !dbg !137
  %add172 = add nsw i32 %205, %207, !dbg !137
  %208 = load i32*, i32** %data_y.addr, align 8, !dbg !137
  %arrayidx173 = getelementptr inbounds i32, i32* %208, i64 0, !dbg !137
  store i32 %add172, i32* %arrayidx173, align 4, !dbg !137
  %209 = load i32, i32* %c0_x164, align 4, !dbg !137
  %210 = load i32*, i32** %data_x.addr, align 8, !dbg !137
  %arrayidx174 = getelementptr inbounds i32, i32* %210, i64 1, !dbg !137
  %211 = load i32, i32* %arrayidx174, align 4, !dbg !137
  %sub175 = sub nsw i32 %209, %211, !dbg !137
  %212 = load i32*, i32** %data_x.addr, align 8, !dbg !137
  %arrayidx176 = getelementptr inbounds i32, i32* %212, i64 1, !dbg !137
  store i32 %sub175, i32* %arrayidx176, align 4, !dbg !137
  %213 = load i32, i32* %c0_y166, align 4, !dbg !137
  %214 = load i32*, i32** %data_y.addr, align 8, !dbg !137
  %arrayidx177 = getelementptr inbounds i32, i32* %214, i64 1, !dbg !137
  %215 = load i32, i32* %arrayidx177, align 4, !dbg !137
  %sub178 = sub nsw i32 %213, %215, !dbg !137
  %216 = load i32*, i32** %data_y.addr, align 8, !dbg !137
  %arrayidx179 = getelementptr inbounds i32, i32* %216, i64 1, !dbg !137
  store i32 %sub178, i32* %arrayidx179, align 4, !dbg !137
  call void @llvm.dbg.declare(metadata i32* %c0_x180, metadata !139, metadata !DIExpression()), !dbg !141
  %217 = load i32*, i32** %data_x.addr, align 8, !dbg !141
  %arrayidx181 = getelementptr inbounds i32, i32* %217, i64 2, !dbg !141
  %218 = load i32, i32* %arrayidx181, align 4, !dbg !141
  store i32 %218, i32* %c0_x180, align 4, !dbg !141
  call void @llvm.dbg.declare(metadata i32* %c0_y182, metadata !142, metadata !DIExpression()), !dbg !141
  %219 = load i32*, i32** %data_y.addr, align 8, !dbg !141
  %arrayidx183 = getelementptr inbounds i32, i32* %219, i64 2, !dbg !141
  %220 = load i32, i32* %arrayidx183, align 4, !dbg !141
  store i32 %220, i32* %c0_y182, align 4, !dbg !141
  %221 = load i32, i32* %c0_x180, align 4, !dbg !141
  %222 = load i32*, i32** %data_x.addr, align 8, !dbg !141
  %arrayidx184 = getelementptr inbounds i32, i32* %222, i64 3, !dbg !141
  %223 = load i32, i32* %arrayidx184, align 4, !dbg !141
  %add185 = add nsw i32 %221, %223, !dbg !141
  %224 = load i32*, i32** %data_x.addr, align 8, !dbg !141
  %arrayidx186 = getelementptr inbounds i32, i32* %224, i64 2, !dbg !141
  store i32 %add185, i32* %arrayidx186, align 4, !dbg !141
  %225 = load i32, i32* %c0_y182, align 4, !dbg !141
  %226 = load i32*, i32** %data_y.addr, align 8, !dbg !141
  %arrayidx187 = getelementptr inbounds i32, i32* %226, i64 3, !dbg !141
  %227 = load i32, i32* %arrayidx187, align 4, !dbg !141
  %add188 = add nsw i32 %225, %227, !dbg !141
  %228 = load i32*, i32** %data_y.addr, align 8, !dbg !141
  %arrayidx189 = getelementptr inbounds i32, i32* %228, i64 2, !dbg !141
  store i32 %add188, i32* %arrayidx189, align 4, !dbg !141
  %229 = load i32, i32* %c0_x180, align 4, !dbg !141
  %230 = load i32*, i32** %data_x.addr, align 8, !dbg !141
  %arrayidx190 = getelementptr inbounds i32, i32* %230, i64 3, !dbg !141
  %231 = load i32, i32* %arrayidx190, align 4, !dbg !141
  %sub191 = sub nsw i32 %229, %231, !dbg !141
  %232 = load i32*, i32** %data_x.addr, align 8, !dbg !141
  %arrayidx192 = getelementptr inbounds i32, i32* %232, i64 3, !dbg !141
  store i32 %sub191, i32* %arrayidx192, align 4, !dbg !141
  %233 = load i32, i32* %c0_y182, align 4, !dbg !141
  %234 = load i32*, i32** %data_y.addr, align 8, !dbg !141
  %arrayidx193 = getelementptr inbounds i32, i32* %234, i64 3, !dbg !141
  %235 = load i32, i32* %arrayidx193, align 4, !dbg !141
  %sub194 = sub nsw i32 %233, %235, !dbg !141
  %236 = load i32*, i32** %data_y.addr, align 8, !dbg !141
  %arrayidx195 = getelementptr inbounds i32, i32* %236, i64 3, !dbg !141
  store i32 %sub194, i32* %arrayidx195, align 4, !dbg !141
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_x196, metadata !143, metadata !DIExpression()), !dbg !145
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_y197, metadata !146, metadata !DIExpression()), !dbg !145
  call void @llvm.dbg.declare(metadata i32* %tmp198, metadata !147, metadata !DIExpression()), !dbg !145
  store i32 0, i32* %exp_1_44_x196, align 4, !dbg !145
  store i32 -1, i32* %exp_1_44_y197, align 4, !dbg !145
  call void @llvm.dbg.declare(metadata i32* %c0_x199, metadata !148, metadata !DIExpression()), !dbg !150
  %237 = load i32*, i32** %data_x.addr, align 8, !dbg !150
  %arrayidx200 = getelementptr inbounds i32, i32* %237, i64 4, !dbg !150
  %238 = load i32, i32* %arrayidx200, align 4, !dbg !150
  store i32 %238, i32* %c0_x199, align 4, !dbg !150
  call void @llvm.dbg.declare(metadata i32* %c0_y201, metadata !151, metadata !DIExpression()), !dbg !150
  %239 = load i32*, i32** %data_y.addr, align 8, !dbg !150
  %arrayidx202 = getelementptr inbounds i32, i32* %239, i64 4, !dbg !150
  %240 = load i32, i32* %arrayidx202, align 4, !dbg !150
  store i32 %240, i32* %c0_y201, align 4, !dbg !150
  %241 = load i32, i32* %c0_x199, align 4, !dbg !150
  %242 = load i32*, i32** %data_x.addr, align 8, !dbg !150
  %arrayidx203 = getelementptr inbounds i32, i32* %242, i64 6, !dbg !150
  %243 = load i32, i32* %arrayidx203, align 4, !dbg !150
  %add204 = add nsw i32 %241, %243, !dbg !150
  %244 = load i32*, i32** %data_x.addr, align 8, !dbg !150
  %arrayidx205 = getelementptr inbounds i32, i32* %244, i64 4, !dbg !150
  store i32 %add204, i32* %arrayidx205, align 4, !dbg !150
  %245 = load i32, i32* %c0_y201, align 4, !dbg !150
  %246 = load i32*, i32** %data_y.addr, align 8, !dbg !150
  %arrayidx206 = getelementptr inbounds i32, i32* %246, i64 6, !dbg !150
  %247 = load i32, i32* %arrayidx206, align 4, !dbg !150
  %add207 = add nsw i32 %245, %247, !dbg !150
  %248 = load i32*, i32** %data_y.addr, align 8, !dbg !150
  %arrayidx208 = getelementptr inbounds i32, i32* %248, i64 4, !dbg !150
  store i32 %add207, i32* %arrayidx208, align 4, !dbg !150
  %249 = load i32, i32* %c0_x199, align 4, !dbg !150
  %250 = load i32*, i32** %data_x.addr, align 8, !dbg !150
  %arrayidx209 = getelementptr inbounds i32, i32* %250, i64 6, !dbg !150
  %251 = load i32, i32* %arrayidx209, align 4, !dbg !150
  %sub210 = sub nsw i32 %249, %251, !dbg !150
  %252 = load i32*, i32** %data_x.addr, align 8, !dbg !150
  %arrayidx211 = getelementptr inbounds i32, i32* %252, i64 6, !dbg !150
  store i32 %sub210, i32* %arrayidx211, align 4, !dbg !150
  %253 = load i32, i32* %c0_y201, align 4, !dbg !150
  %254 = load i32*, i32** %data_y.addr, align 8, !dbg !150
  %arrayidx212 = getelementptr inbounds i32, i32* %254, i64 6, !dbg !150
  %255 = load i32, i32* %arrayidx212, align 4, !dbg !150
  %sub213 = sub nsw i32 %253, %255, !dbg !150
  %256 = load i32*, i32** %data_y.addr, align 8, !dbg !150
  %arrayidx214 = getelementptr inbounds i32, i32* %256, i64 6, !dbg !150
  store i32 %sub213, i32* %arrayidx214, align 4, !dbg !150
  call void @llvm.dbg.declare(metadata i32* %c0_x215, metadata !152, metadata !DIExpression()), !dbg !154
  %257 = load i32*, i32** %data_x.addr, align 8, !dbg !154
  %arrayidx216 = getelementptr inbounds i32, i32* %257, i64 5, !dbg !154
  %258 = load i32, i32* %arrayidx216, align 4, !dbg !154
  store i32 %258, i32* %c0_x215, align 4, !dbg !154
  call void @llvm.dbg.declare(metadata i32* %c0_y217, metadata !155, metadata !DIExpression()), !dbg !154
  %259 = load i32*, i32** %data_y.addr, align 8, !dbg !154
  %arrayidx218 = getelementptr inbounds i32, i32* %259, i64 5, !dbg !154
  %260 = load i32, i32* %arrayidx218, align 4, !dbg !154
  store i32 %260, i32* %c0_y217, align 4, !dbg !154
  %261 = load i32, i32* %c0_x215, align 4, !dbg !154
  %262 = load i32*, i32** %data_x.addr, align 8, !dbg !154
  %arrayidx219 = getelementptr inbounds i32, i32* %262, i64 7, !dbg !154
  %263 = load i32, i32* %arrayidx219, align 4, !dbg !154
  %add220 = add nsw i32 %261, %263, !dbg !154
  %264 = load i32*, i32** %data_x.addr, align 8, !dbg !154
  %arrayidx221 = getelementptr inbounds i32, i32* %264, i64 5, !dbg !154
  store i32 %add220, i32* %arrayidx221, align 4, !dbg !154
  %265 = load i32, i32* %c0_y217, align 4, !dbg !154
  %266 = load i32*, i32** %data_y.addr, align 8, !dbg !154
  %arrayidx222 = getelementptr inbounds i32, i32* %266, i64 7, !dbg !154
  %267 = load i32, i32* %arrayidx222, align 4, !dbg !154
  %add223 = add nsw i32 %265, %267, !dbg !154
  %268 = load i32*, i32** %data_y.addr, align 8, !dbg !154
  %arrayidx224 = getelementptr inbounds i32, i32* %268, i64 5, !dbg !154
  store i32 %add223, i32* %arrayidx224, align 4, !dbg !154
  %269 = load i32, i32* %c0_x215, align 4, !dbg !154
  %270 = load i32*, i32** %data_x.addr, align 8, !dbg !154
  %arrayidx225 = getelementptr inbounds i32, i32* %270, i64 7, !dbg !154
  %271 = load i32, i32* %arrayidx225, align 4, !dbg !154
  %sub226 = sub nsw i32 %269, %271, !dbg !154
  %272 = load i32*, i32** %data_x.addr, align 8, !dbg !154
  %arrayidx227 = getelementptr inbounds i32, i32* %272, i64 7, !dbg !154
  store i32 %sub226, i32* %arrayidx227, align 4, !dbg !154
  %273 = load i32, i32* %c0_y217, align 4, !dbg !154
  %274 = load i32*, i32** %data_y.addr, align 8, !dbg !154
  %arrayidx228 = getelementptr inbounds i32, i32* %274, i64 7, !dbg !154
  %275 = load i32, i32* %arrayidx228, align 4, !dbg !154
  %sub229 = sub nsw i32 %273, %275, !dbg !154
  %276 = load i32*, i32** %data_y.addr, align 8, !dbg !154
  %arrayidx230 = getelementptr inbounds i32, i32* %276, i64 7, !dbg !154
  store i32 %sub229, i32* %arrayidx230, align 4, !dbg !154
  %277 = load i32*, i32** %data_x.addr, align 8, !dbg !145
  %arrayidx231 = getelementptr inbounds i32, i32* %277, i64 7, !dbg !145
  %278 = load i32, i32* %arrayidx231, align 4, !dbg !145
  store i32 %278, i32* %tmp198, align 4, !dbg !145
  %279 = load i32*, i32** %data_x.addr, align 8, !dbg !145
  %arrayidx232 = getelementptr inbounds i32, i32* %279, i64 7, !dbg !145
  %280 = load i32, i32* %arrayidx232, align 4, !dbg !145
  %281 = load i32, i32* %exp_1_44_x196, align 4, !dbg !145
  %mul233 = mul nsw i32 %280, %281, !dbg !145
  %282 = load i32*, i32** %data_y.addr, align 8, !dbg !145
  %arrayidx234 = getelementptr inbounds i32, i32* %282, i64 7, !dbg !145
  %283 = load i32, i32* %arrayidx234, align 4, !dbg !145
  %284 = load i32, i32* %exp_1_44_y197, align 4, !dbg !145
  %mul235 = mul nsw i32 %283, %284, !dbg !145
  %sub236 = sub nsw i32 %mul233, %mul235, !dbg !145
  %285 = load i32*, i32** %data_x.addr, align 8, !dbg !145
  %arrayidx237 = getelementptr inbounds i32, i32* %285, i64 7, !dbg !145
  store i32 %sub236, i32* %arrayidx237, align 4, !dbg !145
  %286 = load i32, i32* %tmp198, align 4, !dbg !145
  %287 = load i32, i32* %exp_1_44_y197, align 4, !dbg !145
  %mul238 = mul nsw i32 %286, %287, !dbg !145
  %288 = load i32*, i32** %data_y.addr, align 8, !dbg !145
  %arrayidx239 = getelementptr inbounds i32, i32* %288, i64 7, !dbg !145
  %289 = load i32, i32* %arrayidx239, align 4, !dbg !145
  %290 = load i32, i32* %exp_1_44_x196, align 4, !dbg !145
  %mul240 = mul nsw i32 %289, %290, !dbg !145
  %sub241 = sub nsw i32 %mul238, %mul240, !dbg !145
  %291 = load i32*, i32** %data_y.addr, align 8, !dbg !145
  %arrayidx242 = getelementptr inbounds i32, i32* %291, i64 7, !dbg !145
  store i32 %sub241, i32* %arrayidx242, align 4, !dbg !145
  call void @llvm.dbg.declare(metadata i32* %c0_x243, metadata !156, metadata !DIExpression()), !dbg !158
  %292 = load i32*, i32** %data_x.addr, align 8, !dbg !158
  %arrayidx244 = getelementptr inbounds i32, i32* %292, i64 4, !dbg !158
  %293 = load i32, i32* %arrayidx244, align 4, !dbg !158
  store i32 %293, i32* %c0_x243, align 4, !dbg !158
  call void @llvm.dbg.declare(metadata i32* %c0_y245, metadata !159, metadata !DIExpression()), !dbg !158
  %294 = load i32*, i32** %data_y.addr, align 8, !dbg !158
  %arrayidx246 = getelementptr inbounds i32, i32* %294, i64 4, !dbg !158
  %295 = load i32, i32* %arrayidx246, align 4, !dbg !158
  store i32 %295, i32* %c0_y245, align 4, !dbg !158
  %296 = load i32, i32* %c0_x243, align 4, !dbg !158
  %297 = load i32*, i32** %data_x.addr, align 8, !dbg !158
  %arrayidx247 = getelementptr inbounds i32, i32* %297, i64 5, !dbg !158
  %298 = load i32, i32* %arrayidx247, align 4, !dbg !158
  %add248 = add nsw i32 %296, %298, !dbg !158
  %299 = load i32*, i32** %data_x.addr, align 8, !dbg !158
  %arrayidx249 = getelementptr inbounds i32, i32* %299, i64 4, !dbg !158
  store i32 %add248, i32* %arrayidx249, align 4, !dbg !158
  %300 = load i32, i32* %c0_y245, align 4, !dbg !158
  %301 = load i32*, i32** %data_y.addr, align 8, !dbg !158
  %arrayidx250 = getelementptr inbounds i32, i32* %301, i64 5, !dbg !158
  %302 = load i32, i32* %arrayidx250, align 4, !dbg !158
  %add251 = add nsw i32 %300, %302, !dbg !158
  %303 = load i32*, i32** %data_y.addr, align 8, !dbg !158
  %arrayidx252 = getelementptr inbounds i32, i32* %303, i64 4, !dbg !158
  store i32 %add251, i32* %arrayidx252, align 4, !dbg !158
  %304 = load i32, i32* %c0_x243, align 4, !dbg !158
  %305 = load i32*, i32** %data_x.addr, align 8, !dbg !158
  %arrayidx253 = getelementptr inbounds i32, i32* %305, i64 5, !dbg !158
  %306 = load i32, i32* %arrayidx253, align 4, !dbg !158
  %sub254 = sub nsw i32 %304, %306, !dbg !158
  %307 = load i32*, i32** %data_x.addr, align 8, !dbg !158
  %arrayidx255 = getelementptr inbounds i32, i32* %307, i64 5, !dbg !158
  store i32 %sub254, i32* %arrayidx255, align 4, !dbg !158
  %308 = load i32, i32* %c0_y245, align 4, !dbg !158
  %309 = load i32*, i32** %data_y.addr, align 8, !dbg !158
  %arrayidx256 = getelementptr inbounds i32, i32* %309, i64 5, !dbg !158
  %310 = load i32, i32* %arrayidx256, align 4, !dbg !158
  %sub257 = sub nsw i32 %308, %310, !dbg !158
  %311 = load i32*, i32** %data_y.addr, align 8, !dbg !158
  %arrayidx258 = getelementptr inbounds i32, i32* %311, i64 5, !dbg !158
  store i32 %sub257, i32* %arrayidx258, align 4, !dbg !158
  call void @llvm.dbg.declare(metadata i32* %c0_x259, metadata !160, metadata !DIExpression()), !dbg !162
  %312 = load i32*, i32** %data_x.addr, align 8, !dbg !162
  %arrayidx260 = getelementptr inbounds i32, i32* %312, i64 6, !dbg !162
  %313 = load i32, i32* %arrayidx260, align 4, !dbg !162
  store i32 %313, i32* %c0_x259, align 4, !dbg !162
  call void @llvm.dbg.declare(metadata i32* %c0_y261, metadata !163, metadata !DIExpression()), !dbg !162
  %314 = load i32*, i32** %data_y.addr, align 8, !dbg !162
  %arrayidx262 = getelementptr inbounds i32, i32* %314, i64 6, !dbg !162
  %315 = load i32, i32* %arrayidx262, align 4, !dbg !162
  store i32 %315, i32* %c0_y261, align 4, !dbg !162
  %316 = load i32, i32* %c0_x259, align 4, !dbg !162
  %317 = load i32*, i32** %data_x.addr, align 8, !dbg !162
  %arrayidx263 = getelementptr inbounds i32, i32* %317, i64 7, !dbg !162
  %318 = load i32, i32* %arrayidx263, align 4, !dbg !162
  %add264 = add nsw i32 %316, %318, !dbg !162
  %319 = load i32*, i32** %data_x.addr, align 8, !dbg !162
  %arrayidx265 = getelementptr inbounds i32, i32* %319, i64 6, !dbg !162
  store i32 %add264, i32* %arrayidx265, align 4, !dbg !162
  %320 = load i32, i32* %c0_y261, align 4, !dbg !162
  %321 = load i32*, i32** %data_y.addr, align 8, !dbg !162
  %arrayidx266 = getelementptr inbounds i32, i32* %321, i64 7, !dbg !162
  %322 = load i32, i32* %arrayidx266, align 4, !dbg !162
  %add267 = add nsw i32 %320, %322, !dbg !162
  %323 = load i32*, i32** %data_y.addr, align 8, !dbg !162
  %arrayidx268 = getelementptr inbounds i32, i32* %323, i64 6, !dbg !162
  store i32 %add267, i32* %arrayidx268, align 4, !dbg !162
  %324 = load i32, i32* %c0_x259, align 4, !dbg !162
  %325 = load i32*, i32** %data_x.addr, align 8, !dbg !162
  %arrayidx269 = getelementptr inbounds i32, i32* %325, i64 7, !dbg !162
  %326 = load i32, i32* %arrayidx269, align 4, !dbg !162
  %sub270 = sub nsw i32 %324, %326, !dbg !162
  %327 = load i32*, i32** %data_x.addr, align 8, !dbg !162
  %arrayidx271 = getelementptr inbounds i32, i32* %327, i64 7, !dbg !162
  store i32 %sub270, i32* %arrayidx271, align 4, !dbg !162
  %328 = load i32, i32* %c0_y261, align 4, !dbg !162
  %329 = load i32*, i32** %data_y.addr, align 8, !dbg !162
  %arrayidx272 = getelementptr inbounds i32, i32* %329, i64 7, !dbg !162
  %330 = load i32, i32* %arrayidx272, align 4, !dbg !162
  %sub273 = sub nsw i32 %328, %330, !dbg !162
  %331 = load i32*, i32** %data_y.addr, align 8, !dbg !162
  %arrayidx274 = getelementptr inbounds i32, i32* %331, i64 7, !dbg !162
  store i32 %sub273, i32* %arrayidx274, align 4, !dbg !162
  br label %twiddles, !dbg !98

twiddles:                                         ; preds = %for.end
  call void @llvm.dbg.label(metadata !164), !dbg !165
  store i32 1, i32* %j, align 4, !dbg !166
  br label %for.cond275, !dbg !168

for.cond275:                                      ; preds = %for.inc310, %twiddles
  %332 = load i32, i32* %j, align 4, !dbg !169
  %cmp276 = icmp slt i32 %332, 8, !dbg !171
  br i1 %cmp276, label %for.body278, label %for.end312, !dbg !172

for.body278:                                      ; preds = %for.cond275
  call void @llvm.dbg.declare(metadata i32* %A_x, metadata !173, metadata !DIExpression()), !dbg !175
  call void @llvm.dbg.declare(metadata i32* %A_y, metadata !176, metadata !DIExpression()), !dbg !177
  call void @llvm.dbg.declare(metadata i32* %tmp279, metadata !178, metadata !DIExpression()), !dbg !179
  %333 = load float*, float** %cos_512.addr, align 8, !dbg !180
  %334 = load i32, i32* %tid, align 4, !dbg !181
  %mul280 = mul nsw i32 %334, 7, !dbg !182
  %335 = load i32, i32* %j, align 4, !dbg !183
  %add281 = add nsw i32 %mul280, %335, !dbg !184
  %sub282 = sub nsw i32 %add281, 1, !dbg !185
  %idxprom283 = sext i32 %sub282 to i64, !dbg !180
  %arrayidx284 = getelementptr inbounds float, float* %333, i64 %idxprom283, !dbg !180
  %336 = load float, float* %arrayidx284, align 4, !dbg !180
  %conv285 = fptosi float %336 to i32, !dbg !180
  store i32 %conv285, i32* %A_x, align 4, !dbg !186
  %337 = load float*, float** %sin_512.addr, align 8, !dbg !187
  %338 = load i32, i32* %tid, align 4, !dbg !188
  %mul286 = mul nsw i32 %338, 7, !dbg !189
  %339 = load i32, i32* %j, align 4, !dbg !190
  %add287 = add nsw i32 %mul286, %339, !dbg !191
  %sub288 = sub nsw i32 %add287, 1, !dbg !192
  %idxprom289 = sext i32 %sub288 to i64, !dbg !187
  %arrayidx290 = getelementptr inbounds float, float* %337, i64 %idxprom289, !dbg !187
  %340 = load float, float* %arrayidx290, align 4, !dbg !187
  %conv291 = fptosi float %340 to i32, !dbg !187
  store i32 %conv291, i32* %A_y, align 4, !dbg !193
  %341 = load i32*, i32** %data_x.addr, align 8, !dbg !194
  %342 = load i32, i32* %j, align 4, !dbg !195
  %idxprom292 = sext i32 %342 to i64, !dbg !194
  %arrayidx293 = getelementptr inbounds i32, i32* %341, i64 %idxprom292, !dbg !194
  %343 = load i32, i32* %arrayidx293, align 4, !dbg !194
  store i32 %343, i32* %tmp279, align 4, !dbg !196
  %344 = load i32*, i32** %data_x.addr, align 8, !dbg !197
  %345 = load i32, i32* %j, align 4, !dbg !197
  %idxprom294 = sext i32 %345 to i64, !dbg !197
  %arrayidx295 = getelementptr inbounds i32, i32* %344, i64 %idxprom294, !dbg !197
  %346 = load i32, i32* %arrayidx295, align 4, !dbg !197
  %347 = load i32, i32* %A_x, align 4, !dbg !197
  %mul296 = mul nsw i32 %346, %347, !dbg !197
  %348 = load i32*, i32** %data_y.addr, align 8, !dbg !197
  %349 = load i32, i32* %j, align 4, !dbg !197
  %idxprom297 = sext i32 %349 to i64, !dbg !197
  %arrayidx298 = getelementptr inbounds i32, i32* %348, i64 %idxprom297, !dbg !197
  %350 = load i32, i32* %arrayidx298, align 4, !dbg !197
  %351 = load i32, i32* %A_y, align 4, !dbg !197
  %mul299 = mul nsw i32 %350, %351, !dbg !197
  %sub300 = sub nsw i32 %mul296, %mul299, !dbg !197
  %352 = load i32*, i32** %data_x.addr, align 8, !dbg !198
  %353 = load i32, i32* %j, align 4, !dbg !199
  %idxprom301 = sext i32 %353 to i64, !dbg !198
  %arrayidx302 = getelementptr inbounds i32, i32* %352, i64 %idxprom301, !dbg !198
  store i32 %sub300, i32* %arrayidx302, align 4, !dbg !200
  %354 = load i32, i32* %tmp279, align 4, !dbg !201
  %355 = load i32, i32* %A_y, align 4, !dbg !201
  %mul303 = mul nsw i32 %354, %355, !dbg !201
  %356 = load i32*, i32** %data_y.addr, align 8, !dbg !201
  %357 = load i32, i32* %j, align 4, !dbg !201
  %idxprom304 = sext i32 %357 to i64, !dbg !201
  %arrayidx305 = getelementptr inbounds i32, i32* %356, i64 %idxprom304, !dbg !201
  %358 = load i32, i32* %arrayidx305, align 4, !dbg !201
  %359 = load i32, i32* %A_x, align 4, !dbg !201
  %mul306 = mul nsw i32 %358, %359, !dbg !201
  %add307 = add nsw i32 %mul303, %mul306, !dbg !201
  %360 = load i32*, i32** %data_y.addr, align 8, !dbg !202
  %361 = load i32, i32* %j, align 4, !dbg !203
  %idxprom308 = sext i32 %361 to i64, !dbg !202
  %arrayidx309 = getelementptr inbounds i32, i32* %360, i64 %idxprom308, !dbg !202
  store i32 %add307, i32* %arrayidx309, align 4, !dbg !204
  br label %for.inc310, !dbg !205

for.inc310:                                       ; preds = %for.body278
  %362 = load i32, i32* %j, align 4, !dbg !206
  %inc311 = add nsw i32 %362, 1, !dbg !206
  store i32 %inc311, i32* %j, align 4, !dbg !206
  br label %for.cond275, !dbg !207, !llvm.loop !208

for.end312:                                       ; preds = %for.cond275
  br label %store, !dbg !209

store:                                            ; preds = %for.end312
  call void @llvm.dbg.label(metadata !210), !dbg !211
  store i32 0, i32* %i, align 4, !dbg !212
  br label %for.cond313, !dbg !214

for.cond313:                                      ; preds = %for.inc329, %store
  %363 = load i32, i32* %i, align 4, !dbg !215
  %cmp314 = icmp slt i32 %363, 8, !dbg !217
  br i1 %cmp314, label %for.body316, label %for.end331, !dbg !218

for.body316:                                      ; preds = %for.cond313
  %364 = load i32*, i32** %data_x.addr, align 8, !dbg !219
  %365 = load i32, i32* %i, align 4, !dbg !221
  %idxprom317 = sext i32 %365 to i64, !dbg !219
  %arrayidx318 = getelementptr inbounds i32, i32* %364, i64 %idxprom317, !dbg !219
  %366 = load i32, i32* %arrayidx318, align 4, !dbg !219
  %367 = load i32*, i32** %DATA_x.addr, align 8, !dbg !222
  %368 = load i32, i32* %tid, align 4, !dbg !223
  %mul319 = mul nsw i32 %368, 8, !dbg !224
  %369 = load i32, i32* %i, align 4, !dbg !225
  %add320 = add nsw i32 %mul319, %369, !dbg !226
  %idxprom321 = sext i32 %add320 to i64, !dbg !222
  %arrayidx322 = getelementptr inbounds i32, i32* %367, i64 %idxprom321, !dbg !222
  store i32 %366, i32* %arrayidx322, align 4, !dbg !227
  %370 = load i32*, i32** %data_y.addr, align 8, !dbg !228
  %371 = load i32, i32* %i, align 4, !dbg !229
  %idxprom323 = sext i32 %371 to i64, !dbg !228
  %arrayidx324 = getelementptr inbounds i32, i32* %370, i64 %idxprom323, !dbg !228
  %372 = load i32, i32* %arrayidx324, align 4, !dbg !228
  %373 = load i32*, i32** %DATA_y.addr, align 8, !dbg !230
  %374 = load i32, i32* %tid, align 4, !dbg !231
  %mul325 = mul nsw i32 %374, 8, !dbg !232
  %375 = load i32, i32* %i, align 4, !dbg !233
  %add326 = add nsw i32 %mul325, %375, !dbg !234
  %idxprom327 = sext i32 %add326 to i64, !dbg !230
  %arrayidx328 = getelementptr inbounds i32, i32* %373, i64 %idxprom327, !dbg !230
  store i32 %372, i32* %arrayidx328, align 4, !dbg !235
  br label %for.inc329, !dbg !236

for.inc329:                                       ; preds = %for.body316
  %376 = load i32, i32* %i, align 4, !dbg !237
  %inc330 = add nsw i32 %376, 1, !dbg !237
  store i32 %inc330, i32* %i, align 4, !dbg !237
  br label %for.cond313, !dbg !238, !llvm.loop !239

for.end331:                                       ; preds = %for.cond313
  br label %for.inc332, !dbg !241

for.inc332:                                       ; preds = %for.end331
  %377 = load i32, i32* %tid, align 4, !dbg !242
  %inc333 = add nsw i32 %377, 1, !dbg !242
  store i32 %inc333, i32* %tid, align 4, !dbg !242
  br label %for.cond, !dbg !243, !llvm.loop !244

for.end334:                                       ; preds = %for.cond
  ret void, !dbg !246
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @step2(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !247 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !248, metadata !DIExpression()), !dbg !249
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !250, metadata !DIExpression()), !dbg !251
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !252, metadata !DIExpression()), !dbg !253
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !254, metadata !DIExpression()), !dbg !255
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !256, metadata !DIExpression()), !dbg !257
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !258, metadata !DIExpression()), !dbg !259
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !260, metadata !DIExpression()), !dbg !261
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !262, metadata !DIExpression()), !dbg !263
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !264, metadata !DIExpression()), !dbg !265
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !266, metadata !DIExpression()), !dbg !267
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !268, metadata !DIExpression()), !dbg !269
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !270, metadata !DIExpression()), !dbg !271
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !272, metadata !DIExpression()), !dbg !273
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !274, metadata !DIExpression()), !dbg !275
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !276, metadata !DIExpression()), !dbg !277
  call void @llvm.dbg.declare(metadata i32* %i, metadata !278, metadata !DIExpression()), !dbg !279
  call void @llvm.dbg.declare(metadata i32* %j, metadata !280, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !282, metadata !DIExpression()), !dbg !283
  store i32 64, i32* %stride, align 4, !dbg !284
  br label %outer, !dbg !285

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !286), !dbg !287
  store i32 0, i32* %tid, align 4, !dbg !288
  br label %for.cond, !dbg !290

for.cond:                                         ; preds = %for.inc70, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !291
  %cmp = icmp slt i32 %0, 64, !dbg !293
  br i1 %cmp, label %for.body, label %for.end72, !dbg !294

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !295

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !296), !dbg !298
  store i32 0, i32* %i, align 4, !dbg !299
  br label %for.cond1, !dbg !301

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !302
  %cmp2 = icmp slt i32 %1, 8, !dbg !304
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !305

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !306
  %3 = load i32, i32* %tid, align 4, !dbg !308
  %mul = mul nsw i32 %3, 8, !dbg !309
  %4 = load i32, i32* %i, align 4, !dbg !310
  %add = add nsw i32 %mul, %4, !dbg !311
  %idxprom = sext i32 %add to i64, !dbg !306
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !306
  %5 = load i32, i32* %arrayidx, align 4, !dbg !306
  %6 = load i32*, i32** %data_x.addr, align 8, !dbg !312
  %7 = load i32, i32* %i, align 4, !dbg !313
  %idxprom4 = sext i32 %7 to i64, !dbg !312
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !312
  store i32 %5, i32* %arrayidx5, align 4, !dbg !314
  br label %for.inc, !dbg !315

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !316
  %inc = add nsw i32 %8, 1, !dbg !316
  store i32 %inc, i32* %i, align 4, !dbg !316
  br label %for.cond1, !dbg !317, !llvm.loop !318

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !320
  %shr = ashr i32 %9, 3, !dbg !321
  store i32 %shr, i32* %hi, align 4, !dbg !322
  %10 = load i32, i32* %tid, align 4, !dbg !323
  %and = and i32 %10, 7, !dbg !324
  store i32 %and, i32* %lo, align 4, !dbg !325
  %11 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %12 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !326
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !326
  %idxprom7 = sext i32 %13 to i64, !dbg !326
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 %idxprom7, !dbg !326
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !326
  %15 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %16 = load i32, i32* %hi, align 4, !dbg !326
  %mul9 = mul nsw i32 %16, 8, !dbg !326
  %add10 = add nsw i32 0, %mul9, !dbg !326
  %17 = load i32, i32* %lo, align 4, !dbg !326
  %add11 = add nsw i32 %add10, %17, !dbg !326
  %idxprom12 = sext i32 %add11 to i64, !dbg !326
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !326
  store i32 %14, i32* %arrayidx13, align 4, !dbg !326
  %18 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %19 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !326
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !326
  %idxprom15 = sext i32 %20 to i64, !dbg !326
  %arrayidx16 = getelementptr inbounds i32, i32* %18, i64 %idxprom15, !dbg !326
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !326
  %22 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %23 = load i32, i32* %hi, align 4, !dbg !326
  %mul17 = mul nsw i32 %23, 8, !dbg !326
  %add18 = add nsw i32 66, %mul17, !dbg !326
  %24 = load i32, i32* %lo, align 4, !dbg !326
  %add19 = add nsw i32 %add18, %24, !dbg !326
  %idxprom20 = sext i32 %add19 to i64, !dbg !326
  %arrayidx21 = getelementptr inbounds i32, i32* %22, i64 %idxprom20, !dbg !326
  store i32 %21, i32* %arrayidx21, align 4, !dbg !326
  %25 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %26 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 2, !dbg !326
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !326
  %idxprom23 = sext i32 %27 to i64, !dbg !326
  %arrayidx24 = getelementptr inbounds i32, i32* %25, i64 %idxprom23, !dbg !326
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !326
  %29 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %30 = load i32, i32* %hi, align 4, !dbg !326
  %mul25 = mul nsw i32 %30, 8, !dbg !326
  %add26 = add nsw i32 132, %mul25, !dbg !326
  %31 = load i32, i32* %lo, align 4, !dbg !326
  %add27 = add nsw i32 %add26, %31, !dbg !326
  %idxprom28 = sext i32 %add27 to i64, !dbg !326
  %arrayidx29 = getelementptr inbounds i32, i32* %29, i64 %idxprom28, !dbg !326
  store i32 %28, i32* %arrayidx29, align 4, !dbg !326
  %32 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %33 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 3, !dbg !326
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !326
  %idxprom31 = sext i32 %34 to i64, !dbg !326
  %arrayidx32 = getelementptr inbounds i32, i32* %32, i64 %idxprom31, !dbg !326
  %35 = load i32, i32* %arrayidx32, align 4, !dbg !326
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %37 = load i32, i32* %hi, align 4, !dbg !326
  %mul33 = mul nsw i32 %37, 8, !dbg !326
  %add34 = add nsw i32 198, %mul33, !dbg !326
  %38 = load i32, i32* %lo, align 4, !dbg !326
  %add35 = add nsw i32 %add34, %38, !dbg !326
  %idxprom36 = sext i32 %add35 to i64, !dbg !326
  %arrayidx37 = getelementptr inbounds i32, i32* %36, i64 %idxprom36, !dbg !326
  store i32 %35, i32* %arrayidx37, align 4, !dbg !326
  %39 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %40 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx38 = getelementptr inbounds i32, i32* %40, i64 4, !dbg !326
  %41 = load i32, i32* %arrayidx38, align 4, !dbg !326
  %idxprom39 = sext i32 %41 to i64, !dbg !326
  %arrayidx40 = getelementptr inbounds i32, i32* %39, i64 %idxprom39, !dbg !326
  %42 = load i32, i32* %arrayidx40, align 4, !dbg !326
  %43 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %44 = load i32, i32* %hi, align 4, !dbg !326
  %mul41 = mul nsw i32 %44, 8, !dbg !326
  %add42 = add nsw i32 264, %mul41, !dbg !326
  %45 = load i32, i32* %lo, align 4, !dbg !326
  %add43 = add nsw i32 %add42, %45, !dbg !326
  %idxprom44 = sext i32 %add43 to i64, !dbg !326
  %arrayidx45 = getelementptr inbounds i32, i32* %43, i64 %idxprom44, !dbg !326
  store i32 %42, i32* %arrayidx45, align 4, !dbg !326
  %46 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %47 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 5, !dbg !326
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !326
  %idxprom47 = sext i32 %48 to i64, !dbg !326
  %arrayidx48 = getelementptr inbounds i32, i32* %46, i64 %idxprom47, !dbg !326
  %49 = load i32, i32* %arrayidx48, align 4, !dbg !326
  %50 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %51 = load i32, i32* %hi, align 4, !dbg !326
  %mul49 = mul nsw i32 %51, 8, !dbg !326
  %add50 = add nsw i32 330, %mul49, !dbg !326
  %52 = load i32, i32* %lo, align 4, !dbg !326
  %add51 = add nsw i32 %add50, %52, !dbg !326
  %idxprom52 = sext i32 %add51 to i64, !dbg !326
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 %idxprom52, !dbg !326
  store i32 %49, i32* %arrayidx53, align 4, !dbg !326
  %53 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %54 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx54 = getelementptr inbounds i32, i32* %54, i64 6, !dbg !326
  %55 = load i32, i32* %arrayidx54, align 4, !dbg !326
  %idxprom55 = sext i32 %55 to i64, !dbg !326
  %arrayidx56 = getelementptr inbounds i32, i32* %53, i64 %idxprom55, !dbg !326
  %56 = load i32, i32* %arrayidx56, align 4, !dbg !326
  %57 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %58 = load i32, i32* %hi, align 4, !dbg !326
  %mul57 = mul nsw i32 %58, 8, !dbg !326
  %add58 = add nsw i32 396, %mul57, !dbg !326
  %59 = load i32, i32* %lo, align 4, !dbg !326
  %add59 = add nsw i32 %add58, %59, !dbg !326
  %idxprom60 = sext i32 %add59 to i64, !dbg !326
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !326
  store i32 %56, i32* %arrayidx61, align 4, !dbg !326
  %60 = load i32*, i32** %data_x.addr, align 8, !dbg !326
  %61 = load i32*, i32** %reversed.addr, align 8, !dbg !326
  %arrayidx62 = getelementptr inbounds i32, i32* %61, i64 7, !dbg !326
  %62 = load i32, i32* %arrayidx62, align 4, !dbg !326
  %idxprom63 = sext i32 %62 to i64, !dbg !326
  %arrayidx64 = getelementptr inbounds i32, i32* %60, i64 %idxprom63, !dbg !326
  %63 = load i32, i32* %arrayidx64, align 4, !dbg !326
  %64 = load i32*, i32** %smem.addr, align 8, !dbg !326
  %65 = load i32, i32* %hi, align 4, !dbg !326
  %mul65 = mul nsw i32 %65, 8, !dbg !326
  %add66 = add nsw i32 462, %mul65, !dbg !326
  %66 = load i32, i32* %lo, align 4, !dbg !326
  %add67 = add nsw i32 %add66, %66, !dbg !326
  %idxprom68 = sext i32 %add67 to i64, !dbg !326
  %arrayidx69 = getelementptr inbounds i32, i32* %64, i64 %idxprom68, !dbg !326
  store i32 %63, i32* %arrayidx69, align 4, !dbg !326
  br label %for.inc70, !dbg !328

for.inc70:                                        ; preds = %for.end
  %67 = load i32, i32* %tid, align 4, !dbg !329
  %inc71 = add nsw i32 %67, 1, !dbg !329
  store i32 %inc71, i32* %tid, align 4, !dbg !329
  br label %for.cond, !dbg !330, !llvm.loop !331

for.end72:                                        ; preds = %for.cond
  ret void, !dbg !333
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step3(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !334 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !335, metadata !DIExpression()), !dbg !336
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !337, metadata !DIExpression()), !dbg !338
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !339, metadata !DIExpression()), !dbg !340
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !341, metadata !DIExpression()), !dbg !342
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !343, metadata !DIExpression()), !dbg !344
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !345, metadata !DIExpression()), !dbg !346
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !347, metadata !DIExpression()), !dbg !348
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !349, metadata !DIExpression()), !dbg !350
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !351, metadata !DIExpression()), !dbg !352
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !353, metadata !DIExpression()), !dbg !354
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !355, metadata !DIExpression()), !dbg !356
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !357, metadata !DIExpression()), !dbg !358
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !359, metadata !DIExpression()), !dbg !360
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !361, metadata !DIExpression()), !dbg !362
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !363, metadata !DIExpression()), !dbg !364
  call void @llvm.dbg.declare(metadata i32* %i, metadata !365, metadata !DIExpression()), !dbg !366
  call void @llvm.dbg.declare(metadata i32* %j, metadata !367, metadata !DIExpression()), !dbg !368
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !369, metadata !DIExpression()), !dbg !370
  store i32 64, i32* %stride, align 4, !dbg !371
  br label %outer, !dbg !372

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !373), !dbg !374
  store i32 0, i32* %tid, align 4, !dbg !375
  br label %for.cond, !dbg !377

for.cond:                                         ; preds = %for.inc66, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !378
  %cmp = icmp slt i32 %0, 64, !dbg !380
  br i1 %cmp, label %for.body, label %for.end68, !dbg !381

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !382

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !383), !dbg !385
  store i32 0, i32* %i, align 4, !dbg !386
  br label %for.cond1, !dbg !388

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !389
  %cmp2 = icmp slt i32 %1, 8, !dbg !391
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !392

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !393
  %3 = load i32, i32* %tid, align 4, !dbg !395
  %mul = mul nsw i32 %3, 8, !dbg !396
  %4 = load i32, i32* %i, align 4, !dbg !397
  %add = add nsw i32 %mul, %4, !dbg !398
  %idxprom = sext i32 %add to i64, !dbg !393
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !393
  %5 = load i32, i32* %arrayidx, align 4, !dbg !393
  %6 = load i32*, i32** %data_x.addr, align 8, !dbg !399
  %7 = load i32, i32* %i, align 4, !dbg !400
  %idxprom4 = sext i32 %7 to i64, !dbg !399
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !399
  store i32 %5, i32* %arrayidx5, align 4, !dbg !401
  br label %for.inc, !dbg !402

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !403
  %inc = add nsw i32 %8, 1, !dbg !403
  store i32 %inc, i32* %i, align 4, !dbg !403
  br label %for.cond1, !dbg !404, !llvm.loop !405

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !407
  %shr = ashr i32 %9, 3, !dbg !408
  store i32 %shr, i32* %hi, align 4, !dbg !409
  %10 = load i32, i32* %tid, align 4, !dbg !410
  %and = and i32 %10, 7, !dbg !411
  store i32 %and, i32* %lo, align 4, !dbg !412
  %11 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %12 = load i32, i32* %lo, align 4, !dbg !413
  %mul6 = mul nsw i32 %12, 66, !dbg !413
  %add7 = add nsw i32 0, %mul6, !dbg !413
  %13 = load i32, i32* %hi, align 4, !dbg !413
  %add8 = add nsw i32 %add7, %13, !dbg !413
  %idxprom9 = sext i32 %add8 to i64, !dbg !413
  %arrayidx10 = getelementptr inbounds i32, i32* %11, i64 %idxprom9, !dbg !413
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !413
  %15 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !413
  store i32 %14, i32* %arrayidx11, align 4, !dbg !413
  %16 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %17 = load i32, i32* %lo, align 4, !dbg !413
  %mul12 = mul nsw i32 %17, 66, !dbg !413
  %add13 = add nsw i32 8, %mul12, !dbg !413
  %18 = load i32, i32* %hi, align 4, !dbg !413
  %add14 = add nsw i32 %add13, %18, !dbg !413
  %idxprom15 = sext i32 %add14 to i64, !dbg !413
  %arrayidx16 = getelementptr inbounds i32, i32* %16, i64 %idxprom15, !dbg !413
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !413
  %20 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx17 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !413
  store i32 %19, i32* %arrayidx17, align 4, !dbg !413
  %21 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %22 = load i32, i32* %lo, align 4, !dbg !413
  %mul18 = mul nsw i32 %22, 66, !dbg !413
  %add19 = add nsw i32 16, %mul18, !dbg !413
  %23 = load i32, i32* %hi, align 4, !dbg !413
  %add20 = add nsw i32 %add19, %23, !dbg !413
  %idxprom21 = sext i32 %add20 to i64, !dbg !413
  %arrayidx22 = getelementptr inbounds i32, i32* %21, i64 %idxprom21, !dbg !413
  %24 = load i32, i32* %arrayidx22, align 4, !dbg !413
  %25 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 2, !dbg !413
  store i32 %24, i32* %arrayidx23, align 4, !dbg !413
  %26 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %27 = load i32, i32* %lo, align 4, !dbg !413
  %mul24 = mul nsw i32 %27, 66, !dbg !413
  %add25 = add nsw i32 24, %mul24, !dbg !413
  %28 = load i32, i32* %hi, align 4, !dbg !413
  %add26 = add nsw i32 %add25, %28, !dbg !413
  %idxprom27 = sext i32 %add26 to i64, !dbg !413
  %arrayidx28 = getelementptr inbounds i32, i32* %26, i64 %idxprom27, !dbg !413
  %29 = load i32, i32* %arrayidx28, align 4, !dbg !413
  %30 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx29 = getelementptr inbounds i32, i32* %30, i64 3, !dbg !413
  store i32 %29, i32* %arrayidx29, align 4, !dbg !413
  %31 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %32 = load i32, i32* %lo, align 4, !dbg !413
  %mul30 = mul nsw i32 %32, 66, !dbg !413
  %add31 = add nsw i32 32, %mul30, !dbg !413
  %33 = load i32, i32* %hi, align 4, !dbg !413
  %add32 = add nsw i32 %add31, %33, !dbg !413
  %idxprom33 = sext i32 %add32 to i64, !dbg !413
  %arrayidx34 = getelementptr inbounds i32, i32* %31, i64 %idxprom33, !dbg !413
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !413
  %35 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx35 = getelementptr inbounds i32, i32* %35, i64 4, !dbg !413
  store i32 %34, i32* %arrayidx35, align 4, !dbg !413
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %37 = load i32, i32* %lo, align 4, !dbg !413
  %mul36 = mul nsw i32 %37, 66, !dbg !413
  %add37 = add nsw i32 40, %mul36, !dbg !413
  %38 = load i32, i32* %hi, align 4, !dbg !413
  %add38 = add nsw i32 %add37, %38, !dbg !413
  %idxprom39 = sext i32 %add38 to i64, !dbg !413
  %arrayidx40 = getelementptr inbounds i32, i32* %36, i64 %idxprom39, !dbg !413
  %39 = load i32, i32* %arrayidx40, align 4, !dbg !413
  %40 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx41 = getelementptr inbounds i32, i32* %40, i64 5, !dbg !413
  store i32 %39, i32* %arrayidx41, align 4, !dbg !413
  %41 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %42 = load i32, i32* %lo, align 4, !dbg !413
  %mul42 = mul nsw i32 %42, 66, !dbg !413
  %add43 = add nsw i32 48, %mul42, !dbg !413
  %43 = load i32, i32* %hi, align 4, !dbg !413
  %add44 = add nsw i32 %add43, %43, !dbg !413
  %idxprom45 = sext i32 %add44 to i64, !dbg !413
  %arrayidx46 = getelementptr inbounds i32, i32* %41, i64 %idxprom45, !dbg !413
  %44 = load i32, i32* %arrayidx46, align 4, !dbg !413
  %45 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 6, !dbg !413
  store i32 %44, i32* %arrayidx47, align 4, !dbg !413
  %46 = load i32*, i32** %smem.addr, align 8, !dbg !413
  %47 = load i32, i32* %lo, align 4, !dbg !413
  %mul48 = mul nsw i32 %47, 66, !dbg !413
  %add49 = add nsw i32 56, %mul48, !dbg !413
  %48 = load i32, i32* %hi, align 4, !dbg !413
  %add50 = add nsw i32 %add49, %48, !dbg !413
  %idxprom51 = sext i32 %add50 to i64, !dbg !413
  %arrayidx52 = getelementptr inbounds i32, i32* %46, i64 %idxprom51, !dbg !413
  %49 = load i32, i32* %arrayidx52, align 4, !dbg !413
  %50 = load i32*, i32** %data_x.addr, align 8, !dbg !413
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 7, !dbg !413
  store i32 %49, i32* %arrayidx53, align 4, !dbg !413
  br label %store, !dbg !413

store:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !415), !dbg !416
  store i32 0, i32* %i, align 4, !dbg !417
  br label %for.cond54, !dbg !419

for.cond54:                                       ; preds = %for.inc63, %store
  %51 = load i32, i32* %i, align 4, !dbg !420
  %cmp55 = icmp slt i32 %51, 8, !dbg !422
  br i1 %cmp55, label %for.body56, label %for.end65, !dbg !423

for.body56:                                       ; preds = %for.cond54
  %52 = load i32*, i32** %data_x.addr, align 8, !dbg !424
  %53 = load i32, i32* %i, align 4, !dbg !426
  %idxprom57 = sext i32 %53 to i64, !dbg !424
  %arrayidx58 = getelementptr inbounds i32, i32* %52, i64 %idxprom57, !dbg !424
  %54 = load i32, i32* %arrayidx58, align 4, !dbg !424
  %55 = load i32*, i32** %DATA_x.addr, align 8, !dbg !427
  %56 = load i32, i32* %tid, align 4, !dbg !428
  %mul59 = mul nsw i32 %56, 8, !dbg !429
  %57 = load i32, i32* %i, align 4, !dbg !430
  %add60 = add nsw i32 %mul59, %57, !dbg !431
  %idxprom61 = sext i32 %add60 to i64, !dbg !427
  %arrayidx62 = getelementptr inbounds i32, i32* %55, i64 %idxprom61, !dbg !427
  store i32 %54, i32* %arrayidx62, align 4, !dbg !432
  br label %for.inc63, !dbg !433

for.inc63:                                        ; preds = %for.body56
  %58 = load i32, i32* %i, align 4, !dbg !434
  %inc64 = add nsw i32 %58, 1, !dbg !434
  store i32 %inc64, i32* %i, align 4, !dbg !434
  br label %for.cond54, !dbg !435, !llvm.loop !436

for.end65:                                        ; preds = %for.cond54
  br label %for.inc66, !dbg !438

for.inc66:                                        ; preds = %for.end65
  %59 = load i32, i32* %tid, align 4, !dbg !439
  %inc67 = add nsw i32 %59, 1, !dbg !439
  store i32 %inc67, i32* %tid, align 4, !dbg !439
  br label %for.cond, !dbg !440, !llvm.loop !441

for.end68:                                        ; preds = %for.cond
  ret void, !dbg !443
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step4(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !444 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !445, metadata !DIExpression()), !dbg !446
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !447, metadata !DIExpression()), !dbg !448
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !449, metadata !DIExpression()), !dbg !450
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !451, metadata !DIExpression()), !dbg !452
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !453, metadata !DIExpression()), !dbg !454
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !455, metadata !DIExpression()), !dbg !456
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !457, metadata !DIExpression()), !dbg !458
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !459, metadata !DIExpression()), !dbg !460
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !461, metadata !DIExpression()), !dbg !462
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !463, metadata !DIExpression()), !dbg !464
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !465, metadata !DIExpression()), !dbg !466
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !467, metadata !DIExpression()), !dbg !468
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !469, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !473, metadata !DIExpression()), !dbg !474
  call void @llvm.dbg.declare(metadata i32* %i, metadata !475, metadata !DIExpression()), !dbg !476
  call void @llvm.dbg.declare(metadata i32* %j, metadata !477, metadata !DIExpression()), !dbg !478
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !479, metadata !DIExpression()), !dbg !480
  store i32 64, i32* %stride, align 4, !dbg !481
  br label %outer, !dbg !482

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !483), !dbg !484
  store i32 0, i32* %tid, align 4, !dbg !485
  br label %for.cond, !dbg !487

for.cond:                                         ; preds = %for.inc70, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !488
  %cmp = icmp slt i32 %0, 64, !dbg !490
  br i1 %cmp, label %for.body, label %for.end72, !dbg !491

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !492

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !493), !dbg !495
  store i32 0, i32* %i, align 4, !dbg !496
  br label %for.cond1, !dbg !498

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !499
  %cmp2 = icmp slt i32 %1, 8, !dbg !501
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !502

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_y.addr, align 8, !dbg !503
  %3 = load i32, i32* %tid, align 4, !dbg !505
  %mul = mul nsw i32 %3, 8, !dbg !506
  %4 = load i32, i32* %i, align 4, !dbg !507
  %add = add nsw i32 %mul, %4, !dbg !508
  %idxprom = sext i32 %add to i64, !dbg !503
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !503
  %5 = load i32, i32* %arrayidx, align 4, !dbg !503
  %6 = load i32*, i32** %data_y.addr, align 8, !dbg !509
  %7 = load i32, i32* %i, align 4, !dbg !510
  %idxprom4 = sext i32 %7 to i64, !dbg !509
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !509
  store i32 %5, i32* %arrayidx5, align 4, !dbg !511
  br label %for.inc, !dbg !512

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !513
  %inc = add nsw i32 %8, 1, !dbg !513
  store i32 %inc, i32* %i, align 4, !dbg !513
  br label %for.cond1, !dbg !514, !llvm.loop !515

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !517
  %shr = ashr i32 %9, 3, !dbg !518
  store i32 %shr, i32* %hi, align 4, !dbg !519
  %10 = load i32, i32* %tid, align 4, !dbg !520
  %and = and i32 %10, 7, !dbg !521
  store i32 %and, i32* %lo, align 4, !dbg !522
  %11 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %12 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !523
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !523
  %idxprom7 = sext i32 %13 to i64, !dbg !523
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 %idxprom7, !dbg !523
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !523
  %15 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %16 = load i32, i32* %hi, align 4, !dbg !523
  %mul9 = mul nsw i32 %16, 8, !dbg !523
  %add10 = add nsw i32 0, %mul9, !dbg !523
  %17 = load i32, i32* %lo, align 4, !dbg !523
  %add11 = add nsw i32 %add10, %17, !dbg !523
  %idxprom12 = sext i32 %add11 to i64, !dbg !523
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !523
  store i32 %14, i32* %arrayidx13, align 4, !dbg !523
  %18 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %19 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !523
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !523
  %idxprom15 = sext i32 %20 to i64, !dbg !523
  %arrayidx16 = getelementptr inbounds i32, i32* %18, i64 %idxprom15, !dbg !523
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !523
  %22 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %23 = load i32, i32* %hi, align 4, !dbg !523
  %mul17 = mul nsw i32 %23, 8, !dbg !523
  %add18 = add nsw i32 66, %mul17, !dbg !523
  %24 = load i32, i32* %lo, align 4, !dbg !523
  %add19 = add nsw i32 %add18, %24, !dbg !523
  %idxprom20 = sext i32 %add19 to i64, !dbg !523
  %arrayidx21 = getelementptr inbounds i32, i32* %22, i64 %idxprom20, !dbg !523
  store i32 %21, i32* %arrayidx21, align 4, !dbg !523
  %25 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %26 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 2, !dbg !523
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !523
  %idxprom23 = sext i32 %27 to i64, !dbg !523
  %arrayidx24 = getelementptr inbounds i32, i32* %25, i64 %idxprom23, !dbg !523
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !523
  %29 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %30 = load i32, i32* %hi, align 4, !dbg !523
  %mul25 = mul nsw i32 %30, 8, !dbg !523
  %add26 = add nsw i32 132, %mul25, !dbg !523
  %31 = load i32, i32* %lo, align 4, !dbg !523
  %add27 = add nsw i32 %add26, %31, !dbg !523
  %idxprom28 = sext i32 %add27 to i64, !dbg !523
  %arrayidx29 = getelementptr inbounds i32, i32* %29, i64 %idxprom28, !dbg !523
  store i32 %28, i32* %arrayidx29, align 4, !dbg !523
  %32 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %33 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 3, !dbg !523
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !523
  %idxprom31 = sext i32 %34 to i64, !dbg !523
  %arrayidx32 = getelementptr inbounds i32, i32* %32, i64 %idxprom31, !dbg !523
  %35 = load i32, i32* %arrayidx32, align 4, !dbg !523
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %37 = load i32, i32* %hi, align 4, !dbg !523
  %mul33 = mul nsw i32 %37, 8, !dbg !523
  %add34 = add nsw i32 198, %mul33, !dbg !523
  %38 = load i32, i32* %lo, align 4, !dbg !523
  %add35 = add nsw i32 %add34, %38, !dbg !523
  %idxprom36 = sext i32 %add35 to i64, !dbg !523
  %arrayidx37 = getelementptr inbounds i32, i32* %36, i64 %idxprom36, !dbg !523
  store i32 %35, i32* %arrayidx37, align 4, !dbg !523
  %39 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %40 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx38 = getelementptr inbounds i32, i32* %40, i64 4, !dbg !523
  %41 = load i32, i32* %arrayidx38, align 4, !dbg !523
  %idxprom39 = sext i32 %41 to i64, !dbg !523
  %arrayidx40 = getelementptr inbounds i32, i32* %39, i64 %idxprom39, !dbg !523
  %42 = load i32, i32* %arrayidx40, align 4, !dbg !523
  %43 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %44 = load i32, i32* %hi, align 4, !dbg !523
  %mul41 = mul nsw i32 %44, 8, !dbg !523
  %add42 = add nsw i32 264, %mul41, !dbg !523
  %45 = load i32, i32* %lo, align 4, !dbg !523
  %add43 = add nsw i32 %add42, %45, !dbg !523
  %idxprom44 = sext i32 %add43 to i64, !dbg !523
  %arrayidx45 = getelementptr inbounds i32, i32* %43, i64 %idxprom44, !dbg !523
  store i32 %42, i32* %arrayidx45, align 4, !dbg !523
  %46 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %47 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 5, !dbg !523
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !523
  %idxprom47 = sext i32 %48 to i64, !dbg !523
  %arrayidx48 = getelementptr inbounds i32, i32* %46, i64 %idxprom47, !dbg !523
  %49 = load i32, i32* %arrayidx48, align 4, !dbg !523
  %50 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %51 = load i32, i32* %hi, align 4, !dbg !523
  %mul49 = mul nsw i32 %51, 8, !dbg !523
  %add50 = add nsw i32 330, %mul49, !dbg !523
  %52 = load i32, i32* %lo, align 4, !dbg !523
  %add51 = add nsw i32 %add50, %52, !dbg !523
  %idxprom52 = sext i32 %add51 to i64, !dbg !523
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 %idxprom52, !dbg !523
  store i32 %49, i32* %arrayidx53, align 4, !dbg !523
  %53 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %54 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx54 = getelementptr inbounds i32, i32* %54, i64 6, !dbg !523
  %55 = load i32, i32* %arrayidx54, align 4, !dbg !523
  %idxprom55 = sext i32 %55 to i64, !dbg !523
  %arrayidx56 = getelementptr inbounds i32, i32* %53, i64 %idxprom55, !dbg !523
  %56 = load i32, i32* %arrayidx56, align 4, !dbg !523
  %57 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %58 = load i32, i32* %hi, align 4, !dbg !523
  %mul57 = mul nsw i32 %58, 8, !dbg !523
  %add58 = add nsw i32 396, %mul57, !dbg !523
  %59 = load i32, i32* %lo, align 4, !dbg !523
  %add59 = add nsw i32 %add58, %59, !dbg !523
  %idxprom60 = sext i32 %add59 to i64, !dbg !523
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !523
  store i32 %56, i32* %arrayidx61, align 4, !dbg !523
  %60 = load i32*, i32** %data_y.addr, align 8, !dbg !523
  %61 = load i32*, i32** %reversed.addr, align 8, !dbg !523
  %arrayidx62 = getelementptr inbounds i32, i32* %61, i64 7, !dbg !523
  %62 = load i32, i32* %arrayidx62, align 4, !dbg !523
  %idxprom63 = sext i32 %62 to i64, !dbg !523
  %arrayidx64 = getelementptr inbounds i32, i32* %60, i64 %idxprom63, !dbg !523
  %63 = load i32, i32* %arrayidx64, align 4, !dbg !523
  %64 = load i32*, i32** %smem.addr, align 8, !dbg !523
  %65 = load i32, i32* %hi, align 4, !dbg !523
  %mul65 = mul nsw i32 %65, 8, !dbg !523
  %add66 = add nsw i32 462, %mul65, !dbg !523
  %66 = load i32, i32* %lo, align 4, !dbg !523
  %add67 = add nsw i32 %add66, %66, !dbg !523
  %idxprom68 = sext i32 %add67 to i64, !dbg !523
  %arrayidx69 = getelementptr inbounds i32, i32* %64, i64 %idxprom68, !dbg !523
  store i32 %63, i32* %arrayidx69, align 4, !dbg !523
  br label %for.inc70, !dbg !525

for.inc70:                                        ; preds = %for.end
  %67 = load i32, i32* %tid, align 4, !dbg !526
  %inc71 = add nsw i32 %67, 1, !dbg !526
  store i32 %inc71, i32* %tid, align 4, !dbg !526
  br label %for.cond, !dbg !527, !llvm.loop !528

for.end72:                                        ; preds = %for.cond
  ret void, !dbg !530
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step5(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !531 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !532, metadata !DIExpression()), !dbg !533
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !534, metadata !DIExpression()), !dbg !535
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !536, metadata !DIExpression()), !dbg !537
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !538, metadata !DIExpression()), !dbg !539
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !540, metadata !DIExpression()), !dbg !541
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !542, metadata !DIExpression()), !dbg !543
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !544, metadata !DIExpression()), !dbg !545
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !546, metadata !DIExpression()), !dbg !547
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !548, metadata !DIExpression()), !dbg !549
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !550, metadata !DIExpression()), !dbg !551
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !552, metadata !DIExpression()), !dbg !553
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !554, metadata !DIExpression()), !dbg !555
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !556, metadata !DIExpression()), !dbg !557
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !558, metadata !DIExpression()), !dbg !559
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !560, metadata !DIExpression()), !dbg !561
  call void @llvm.dbg.declare(metadata i32* %i, metadata !562, metadata !DIExpression()), !dbg !563
  call void @llvm.dbg.declare(metadata i32* %j, metadata !564, metadata !DIExpression()), !dbg !565
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !566, metadata !DIExpression()), !dbg !567
  store i32 64, i32* %stride, align 4, !dbg !568
  br label %outer, !dbg !569

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !570), !dbg !571
  store i32 0, i32* %tid, align 4, !dbg !572
  br label %for.cond, !dbg !574

for.cond:                                         ; preds = %for.inc66, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !575
  %cmp = icmp slt i32 %0, 64, !dbg !577
  br i1 %cmp, label %for.body, label %for.end68, !dbg !578

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !579

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !580), !dbg !582
  store i32 0, i32* %i, align 4, !dbg !583
  br label %for.cond1, !dbg !585

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !586
  %cmp2 = icmp slt i32 %1, 8, !dbg !588
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !589

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_y.addr, align 8, !dbg !590
  %3 = load i32, i32* %tid, align 4, !dbg !592
  %mul = mul nsw i32 %3, 8, !dbg !593
  %4 = load i32, i32* %i, align 4, !dbg !594
  %add = add nsw i32 %mul, %4, !dbg !595
  %idxprom = sext i32 %add to i64, !dbg !590
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !590
  %5 = load i32, i32* %arrayidx, align 4, !dbg !590
  %6 = load i32*, i32** %data_y.addr, align 8, !dbg !596
  %7 = load i32, i32* %i, align 4, !dbg !597
  %idxprom4 = sext i32 %7 to i64, !dbg !596
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !596
  store i32 %5, i32* %arrayidx5, align 4, !dbg !598
  br label %for.inc, !dbg !599

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !600
  %inc = add nsw i32 %8, 1, !dbg !600
  store i32 %inc, i32* %i, align 4, !dbg !600
  br label %for.cond1, !dbg !601, !llvm.loop !602

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !604
  %shr = ashr i32 %9, 3, !dbg !605
  store i32 %shr, i32* %hi, align 4, !dbg !606
  %10 = load i32, i32* %tid, align 4, !dbg !607
  %and = and i32 %10, 7, !dbg !608
  store i32 %and, i32* %lo, align 4, !dbg !609
  %11 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %12 = load i32, i32* %lo, align 4, !dbg !610
  %mul6 = mul nsw i32 %12, 66, !dbg !610
  %add7 = add nsw i32 0, %mul6, !dbg !610
  %13 = load i32, i32* %hi, align 4, !dbg !610
  %add8 = add nsw i32 %add7, %13, !dbg !610
  %idxprom9 = sext i32 %add8 to i64, !dbg !610
  %arrayidx10 = getelementptr inbounds i32, i32* %11, i64 %idxprom9, !dbg !610
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !610
  %15 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !610
  store i32 %14, i32* %arrayidx11, align 4, !dbg !610
  %16 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %17 = load i32, i32* %lo, align 4, !dbg !610
  %mul12 = mul nsw i32 %17, 66, !dbg !610
  %add13 = add nsw i32 8, %mul12, !dbg !610
  %18 = load i32, i32* %hi, align 4, !dbg !610
  %add14 = add nsw i32 %add13, %18, !dbg !610
  %idxprom15 = sext i32 %add14 to i64, !dbg !610
  %arrayidx16 = getelementptr inbounds i32, i32* %16, i64 %idxprom15, !dbg !610
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !610
  %20 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx17 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !610
  store i32 %19, i32* %arrayidx17, align 4, !dbg !610
  %21 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %22 = load i32, i32* %lo, align 4, !dbg !610
  %mul18 = mul nsw i32 %22, 66, !dbg !610
  %add19 = add nsw i32 16, %mul18, !dbg !610
  %23 = load i32, i32* %hi, align 4, !dbg !610
  %add20 = add nsw i32 %add19, %23, !dbg !610
  %idxprom21 = sext i32 %add20 to i64, !dbg !610
  %arrayidx22 = getelementptr inbounds i32, i32* %21, i64 %idxprom21, !dbg !610
  %24 = load i32, i32* %arrayidx22, align 4, !dbg !610
  %25 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 2, !dbg !610
  store i32 %24, i32* %arrayidx23, align 4, !dbg !610
  %26 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %27 = load i32, i32* %lo, align 4, !dbg !610
  %mul24 = mul nsw i32 %27, 66, !dbg !610
  %add25 = add nsw i32 24, %mul24, !dbg !610
  %28 = load i32, i32* %hi, align 4, !dbg !610
  %add26 = add nsw i32 %add25, %28, !dbg !610
  %idxprom27 = sext i32 %add26 to i64, !dbg !610
  %arrayidx28 = getelementptr inbounds i32, i32* %26, i64 %idxprom27, !dbg !610
  %29 = load i32, i32* %arrayidx28, align 4, !dbg !610
  %30 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx29 = getelementptr inbounds i32, i32* %30, i64 3, !dbg !610
  store i32 %29, i32* %arrayidx29, align 4, !dbg !610
  %31 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %32 = load i32, i32* %lo, align 4, !dbg !610
  %mul30 = mul nsw i32 %32, 66, !dbg !610
  %add31 = add nsw i32 32, %mul30, !dbg !610
  %33 = load i32, i32* %hi, align 4, !dbg !610
  %add32 = add nsw i32 %add31, %33, !dbg !610
  %idxprom33 = sext i32 %add32 to i64, !dbg !610
  %arrayidx34 = getelementptr inbounds i32, i32* %31, i64 %idxprom33, !dbg !610
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !610
  %35 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx35 = getelementptr inbounds i32, i32* %35, i64 4, !dbg !610
  store i32 %34, i32* %arrayidx35, align 4, !dbg !610
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %37 = load i32, i32* %lo, align 4, !dbg !610
  %mul36 = mul nsw i32 %37, 66, !dbg !610
  %add37 = add nsw i32 40, %mul36, !dbg !610
  %38 = load i32, i32* %hi, align 4, !dbg !610
  %add38 = add nsw i32 %add37, %38, !dbg !610
  %idxprom39 = sext i32 %add38 to i64, !dbg !610
  %arrayidx40 = getelementptr inbounds i32, i32* %36, i64 %idxprom39, !dbg !610
  %39 = load i32, i32* %arrayidx40, align 4, !dbg !610
  %40 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx41 = getelementptr inbounds i32, i32* %40, i64 5, !dbg !610
  store i32 %39, i32* %arrayidx41, align 4, !dbg !610
  %41 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %42 = load i32, i32* %lo, align 4, !dbg !610
  %mul42 = mul nsw i32 %42, 66, !dbg !610
  %add43 = add nsw i32 48, %mul42, !dbg !610
  %43 = load i32, i32* %hi, align 4, !dbg !610
  %add44 = add nsw i32 %add43, %43, !dbg !610
  %idxprom45 = sext i32 %add44 to i64, !dbg !610
  %arrayidx46 = getelementptr inbounds i32, i32* %41, i64 %idxprom45, !dbg !610
  %44 = load i32, i32* %arrayidx46, align 4, !dbg !610
  %45 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 6, !dbg !610
  store i32 %44, i32* %arrayidx47, align 4, !dbg !610
  %46 = load i32*, i32** %smem.addr, align 8, !dbg !610
  %47 = load i32, i32* %lo, align 4, !dbg !610
  %mul48 = mul nsw i32 %47, 66, !dbg !610
  %add49 = add nsw i32 56, %mul48, !dbg !610
  %48 = load i32, i32* %hi, align 4, !dbg !610
  %add50 = add nsw i32 %add49, %48, !dbg !610
  %idxprom51 = sext i32 %add50 to i64, !dbg !610
  %arrayidx52 = getelementptr inbounds i32, i32* %46, i64 %idxprom51, !dbg !610
  %49 = load i32, i32* %arrayidx52, align 4, !dbg !610
  %50 = load i32*, i32** %data_y.addr, align 8, !dbg !610
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 7, !dbg !610
  store i32 %49, i32* %arrayidx53, align 4, !dbg !610
  br label %store, !dbg !610

store:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !612), !dbg !613
  store i32 0, i32* %i, align 4, !dbg !614
  br label %for.cond54, !dbg !616

for.cond54:                                       ; preds = %for.inc63, %store
  %51 = load i32, i32* %i, align 4, !dbg !617
  %cmp55 = icmp slt i32 %51, 8, !dbg !619
  br i1 %cmp55, label %for.body56, label %for.end65, !dbg !620

for.body56:                                       ; preds = %for.cond54
  %52 = load i32*, i32** %data_y.addr, align 8, !dbg !621
  %53 = load i32, i32* %i, align 4, !dbg !623
  %idxprom57 = sext i32 %53 to i64, !dbg !621
  %arrayidx58 = getelementptr inbounds i32, i32* %52, i64 %idxprom57, !dbg !621
  %54 = load i32, i32* %arrayidx58, align 4, !dbg !621
  %55 = load i32*, i32** %DATA_y.addr, align 8, !dbg !624
  %56 = load i32, i32* %tid, align 4, !dbg !625
  %mul59 = mul nsw i32 %56, 8, !dbg !626
  %57 = load i32, i32* %i, align 4, !dbg !627
  %add60 = add nsw i32 %mul59, %57, !dbg !628
  %idxprom61 = sext i32 %add60 to i64, !dbg !624
  %arrayidx62 = getelementptr inbounds i32, i32* %55, i64 %idxprom61, !dbg !624
  store i32 %54, i32* %arrayidx62, align 4, !dbg !629
  br label %for.inc63, !dbg !630

for.inc63:                                        ; preds = %for.body56
  %58 = load i32, i32* %i, align 4, !dbg !631
  %inc64 = add nsw i32 %58, 1, !dbg !631
  store i32 %inc64, i32* %i, align 4, !dbg !631
  br label %for.cond54, !dbg !632, !llvm.loop !633

for.end65:                                        ; preds = %for.cond54
  br label %for.inc66, !dbg !635

for.inc66:                                        ; preds = %for.end65
  %59 = load i32, i32* %tid, align 4, !dbg !636
  %inc67 = add nsw i32 %59, 1, !dbg !636
  store i32 %inc67, i32* %tid, align 4, !dbg !636
  br label %for.cond, !dbg !637, !llvm.loop !638

for.end68:                                        ; preds = %for.cond
  ret void, !dbg !640
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step6(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !641 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  %exp_1_8_x = alloca i32, align 4
  %exp_1_4_x = alloca i32, align 4
  %exp_3_8_x = alloca i32, align 4
  %exp_1_8_y = alloca i32, align 4
  %exp_1_4_y = alloca i32, align 4
  %exp_3_8_y = alloca i32, align 4
  %tmp_1 = alloca i32, align 4
  %tmp_2 = alloca i32, align 4
  %c0_x = alloca i32, align 4
  %c0_y = alloca i32, align 4
  %c0_x25 = alloca i32, align 4
  %c0_y27 = alloca i32, align 4
  %c0_x41 = alloca i32, align 4
  %c0_y43 = alloca i32, align 4
  %c0_x57 = alloca i32, align 4
  %c0_y59 = alloca i32, align 4
  %exp_1_44_x = alloca i32, align 4
  %exp_1_44_y = alloca i32, align 4
  %tmp = alloca i32, align 4
  %c0_x120 = alloca i32, align 4
  %c0_y122 = alloca i32, align 4
  %c0_x136 = alloca i32, align 4
  %c0_y138 = alloca i32, align 4
  %c0_x164 = alloca i32, align 4
  %c0_y166 = alloca i32, align 4
  %c0_x180 = alloca i32, align 4
  %c0_y182 = alloca i32, align 4
  %exp_1_44_x196 = alloca i32, align 4
  %exp_1_44_y197 = alloca i32, align 4
  %tmp198 = alloca i32, align 4
  %c0_x199 = alloca i32, align 4
  %c0_y201 = alloca i32, align 4
  %c0_x215 = alloca i32, align 4
  %c0_y217 = alloca i32, align 4
  %c0_x243 = alloca i32, align 4
  %c0_y245 = alloca i32, align 4
  %c0_x259 = alloca i32, align 4
  %c0_y261 = alloca i32, align 4
  %A_x = alloca i32, align 4
  %A_y = alloca i32, align 4
  %tmp279 = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !642, metadata !DIExpression()), !dbg !643
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !644, metadata !DIExpression()), !dbg !645
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !646, metadata !DIExpression()), !dbg !647
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !648, metadata !DIExpression()), !dbg !649
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !650, metadata !DIExpression()), !dbg !651
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !652, metadata !DIExpression()), !dbg !653
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !654, metadata !DIExpression()), !dbg !655
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !656, metadata !DIExpression()), !dbg !657
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !658, metadata !DIExpression()), !dbg !659
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !660, metadata !DIExpression()), !dbg !661
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !662, metadata !DIExpression()), !dbg !663
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !664, metadata !DIExpression()), !dbg !665
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !666, metadata !DIExpression()), !dbg !667
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !668, metadata !DIExpression()), !dbg !669
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !670, metadata !DIExpression()), !dbg !671
  call void @llvm.dbg.declare(metadata i32* %i, metadata !672, metadata !DIExpression()), !dbg !673
  call void @llvm.dbg.declare(metadata i32* %j, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !676, metadata !DIExpression()), !dbg !677
  store i32 64, i32* %stride, align 4, !dbg !678
  br label %outer, !dbg !679

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !680), !dbg !681
  store i32 0, i32* %tid, align 4, !dbg !682
  br label %for.cond, !dbg !684

for.cond:                                         ; preds = %for.inc332, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !685
  %cmp = icmp slt i32 %0, 64, !dbg !687
  br i1 %cmp, label %for.body, label %for.end334, !dbg !688

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !689

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !690), !dbg !692
  store i32 0, i32* %i, align 4, !dbg !693
  br label %for.cond1, !dbg !695

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !696
  %cmp2 = icmp slt i32 %1, 8, !dbg !698
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !699

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !700
  %3 = load i32, i32* %tid, align 4, !dbg !702
  %mul = mul nsw i32 %3, 8, !dbg !703
  %4 = load i32, i32* %i, align 4, !dbg !704
  %add = add nsw i32 %mul, %4, !dbg !705
  %idxprom = sext i32 %add to i64, !dbg !700
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !700
  %5 = load i32, i32* %arrayidx, align 4, !dbg !700
  %6 = load i32*, i32** %data_x.addr, align 8, !dbg !706
  %7 = load i32, i32* %i, align 4, !dbg !707
  %idxprom4 = sext i32 %7 to i64, !dbg !706
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !706
  store i32 %5, i32* %arrayidx5, align 4, !dbg !708
  %8 = load i32*, i32** %DATA_y.addr, align 8, !dbg !709
  %9 = load i32, i32* %tid, align 4, !dbg !710
  %mul6 = mul nsw i32 %9, 8, !dbg !711
  %10 = load i32, i32* %i, align 4, !dbg !712
  %add7 = add nsw i32 %mul6, %10, !dbg !713
  %idxprom8 = sext i32 %add7 to i64, !dbg !709
  %arrayidx9 = getelementptr inbounds i32, i32* %8, i64 %idxprom8, !dbg !709
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !709
  %12 = load i32*, i32** %data_y.addr, align 8, !dbg !714
  %13 = load i32, i32* %i, align 4, !dbg !715
  %idxprom10 = sext i32 %13 to i64, !dbg !714
  %arrayidx11 = getelementptr inbounds i32, i32* %12, i64 %idxprom10, !dbg !714
  store i32 %11, i32* %arrayidx11, align 4, !dbg !716
  br label %for.inc, !dbg !717

for.inc:                                          ; preds = %for.body3
  %14 = load i32, i32* %i, align 4, !dbg !718
  %inc = add nsw i32 %14, 1, !dbg !718
  store i32 %inc, i32* %i, align 4, !dbg !718
  br label %for.cond1, !dbg !719, !llvm.loop !720

for.end:                                          ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %exp_1_8_x, metadata !722, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %exp_1_4_x, metadata !725, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %exp_3_8_x, metadata !726, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %exp_1_8_y, metadata !727, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %exp_1_4_y, metadata !728, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %exp_3_8_y, metadata !729, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %tmp_1, metadata !730, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata i32* %tmp_2, metadata !731, metadata !DIExpression()), !dbg !724
  store i32 1, i32* %exp_1_8_x, align 4, !dbg !724
  store i32 -1, i32* %exp_1_8_y, align 4, !dbg !724
  store i32 0, i32* %exp_1_4_x, align 4, !dbg !724
  store i32 -1, i32* %exp_1_4_y, align 4, !dbg !724
  store i32 -1, i32* %exp_3_8_x, align 4, !dbg !724
  store i32 -1, i32* %exp_3_8_y, align 4, !dbg !724
  call void @llvm.dbg.declare(metadata i32* %c0_x, metadata !732, metadata !DIExpression()), !dbg !734
  %15 = load i32*, i32** %data_x.addr, align 8, !dbg !734
  %arrayidx12 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !734
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !734
  store i32 %16, i32* %c0_x, align 4, !dbg !734
  call void @llvm.dbg.declare(metadata i32* %c0_y, metadata !735, metadata !DIExpression()), !dbg !734
  %17 = load i32*, i32** %data_y.addr, align 8, !dbg !734
  %arrayidx13 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !734
  %18 = load i32, i32* %arrayidx13, align 4, !dbg !734
  store i32 %18, i32* %c0_y, align 4, !dbg !734
  %19 = load i32, i32* %c0_x, align 4, !dbg !734
  %20 = load i32*, i32** %data_x.addr, align 8, !dbg !734
  %arrayidx14 = getelementptr inbounds i32, i32* %20, i64 4, !dbg !734
  %21 = load i32, i32* %arrayidx14, align 4, !dbg !734
  %add15 = add nsw i32 %19, %21, !dbg !734
  %22 = load i32*, i32** %data_x.addr, align 8, !dbg !734
  %arrayidx16 = getelementptr inbounds i32, i32* %22, i64 0, !dbg !734
  store i32 %add15, i32* %arrayidx16, align 4, !dbg !734
  %23 = load i32, i32* %c0_y, align 4, !dbg !734
  %24 = load i32*, i32** %data_y.addr, align 8, !dbg !734
  %arrayidx17 = getelementptr inbounds i32, i32* %24, i64 4, !dbg !734
  %25 = load i32, i32* %arrayidx17, align 4, !dbg !734
  %add18 = add nsw i32 %23, %25, !dbg !734
  %26 = load i32*, i32** %data_y.addr, align 8, !dbg !734
  %arrayidx19 = getelementptr inbounds i32, i32* %26, i64 0, !dbg !734
  store i32 %add18, i32* %arrayidx19, align 4, !dbg !734
  %27 = load i32, i32* %c0_x, align 4, !dbg !734
  %28 = load i32*, i32** %data_x.addr, align 8, !dbg !734
  %arrayidx20 = getelementptr inbounds i32, i32* %28, i64 4, !dbg !734
  %29 = load i32, i32* %arrayidx20, align 4, !dbg !734
  %sub = sub nsw i32 %27, %29, !dbg !734
  %30 = load i32*, i32** %data_x.addr, align 8, !dbg !734
  %arrayidx21 = getelementptr inbounds i32, i32* %30, i64 4, !dbg !734
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !734
  %31 = load i32, i32* %c0_y, align 4, !dbg !734
  %32 = load i32*, i32** %data_y.addr, align 8, !dbg !734
  %arrayidx22 = getelementptr inbounds i32, i32* %32, i64 4, !dbg !734
  %33 = load i32, i32* %arrayidx22, align 4, !dbg !734
  %sub23 = sub nsw i32 %31, %33, !dbg !734
  %34 = load i32*, i32** %data_y.addr, align 8, !dbg !734
  %arrayidx24 = getelementptr inbounds i32, i32* %34, i64 4, !dbg !734
  store i32 %sub23, i32* %arrayidx24, align 4, !dbg !734
  call void @llvm.dbg.declare(metadata i32* %c0_x25, metadata !736, metadata !DIExpression()), !dbg !738
  %35 = load i32*, i32** %data_x.addr, align 8, !dbg !738
  %arrayidx26 = getelementptr inbounds i32, i32* %35, i64 1, !dbg !738
  %36 = load i32, i32* %arrayidx26, align 4, !dbg !738
  store i32 %36, i32* %c0_x25, align 4, !dbg !738
  call void @llvm.dbg.declare(metadata i32* %c0_y27, metadata !739, metadata !DIExpression()), !dbg !738
  %37 = load i32*, i32** %data_y.addr, align 8, !dbg !738
  %arrayidx28 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !738
  %38 = load i32, i32* %arrayidx28, align 4, !dbg !738
  store i32 %38, i32* %c0_y27, align 4, !dbg !738
  %39 = load i32, i32* %c0_x25, align 4, !dbg !738
  %40 = load i32*, i32** %data_x.addr, align 8, !dbg !738
  %arrayidx29 = getelementptr inbounds i32, i32* %40, i64 5, !dbg !738
  %41 = load i32, i32* %arrayidx29, align 4, !dbg !738
  %add30 = add nsw i32 %39, %41, !dbg !738
  %42 = load i32*, i32** %data_x.addr, align 8, !dbg !738
  %arrayidx31 = getelementptr inbounds i32, i32* %42, i64 1, !dbg !738
  store i32 %add30, i32* %arrayidx31, align 4, !dbg !738
  %43 = load i32, i32* %c0_y27, align 4, !dbg !738
  %44 = load i32*, i32** %data_y.addr, align 8, !dbg !738
  %arrayidx32 = getelementptr inbounds i32, i32* %44, i64 5, !dbg !738
  %45 = load i32, i32* %arrayidx32, align 4, !dbg !738
  %add33 = add nsw i32 %43, %45, !dbg !738
  %46 = load i32*, i32** %data_y.addr, align 8, !dbg !738
  %arrayidx34 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !738
  store i32 %add33, i32* %arrayidx34, align 4, !dbg !738
  %47 = load i32, i32* %c0_x25, align 4, !dbg !738
  %48 = load i32*, i32** %data_x.addr, align 8, !dbg !738
  %arrayidx35 = getelementptr inbounds i32, i32* %48, i64 5, !dbg !738
  %49 = load i32, i32* %arrayidx35, align 4, !dbg !738
  %sub36 = sub nsw i32 %47, %49, !dbg !738
  %50 = load i32*, i32** %data_x.addr, align 8, !dbg !738
  %arrayidx37 = getelementptr inbounds i32, i32* %50, i64 5, !dbg !738
  store i32 %sub36, i32* %arrayidx37, align 4, !dbg !738
  %51 = load i32, i32* %c0_y27, align 4, !dbg !738
  %52 = load i32*, i32** %data_y.addr, align 8, !dbg !738
  %arrayidx38 = getelementptr inbounds i32, i32* %52, i64 5, !dbg !738
  %53 = load i32, i32* %arrayidx38, align 4, !dbg !738
  %sub39 = sub nsw i32 %51, %53, !dbg !738
  %54 = load i32*, i32** %data_y.addr, align 8, !dbg !738
  %arrayidx40 = getelementptr inbounds i32, i32* %54, i64 5, !dbg !738
  store i32 %sub39, i32* %arrayidx40, align 4, !dbg !738
  call void @llvm.dbg.declare(metadata i32* %c0_x41, metadata !740, metadata !DIExpression()), !dbg !742
  %55 = load i32*, i32** %data_x.addr, align 8, !dbg !742
  %arrayidx42 = getelementptr inbounds i32, i32* %55, i64 2, !dbg !742
  %56 = load i32, i32* %arrayidx42, align 4, !dbg !742
  store i32 %56, i32* %c0_x41, align 4, !dbg !742
  call void @llvm.dbg.declare(metadata i32* %c0_y43, metadata !743, metadata !DIExpression()), !dbg !742
  %57 = load i32*, i32** %data_y.addr, align 8, !dbg !742
  %arrayidx44 = getelementptr inbounds i32, i32* %57, i64 2, !dbg !742
  %58 = load i32, i32* %arrayidx44, align 4, !dbg !742
  store i32 %58, i32* %c0_y43, align 4, !dbg !742
  %59 = load i32, i32* %c0_x41, align 4, !dbg !742
  %60 = load i32*, i32** %data_x.addr, align 8, !dbg !742
  %arrayidx45 = getelementptr inbounds i32, i32* %60, i64 6, !dbg !742
  %61 = load i32, i32* %arrayidx45, align 4, !dbg !742
  %add46 = add nsw i32 %59, %61, !dbg !742
  %62 = load i32*, i32** %data_x.addr, align 8, !dbg !742
  %arrayidx47 = getelementptr inbounds i32, i32* %62, i64 2, !dbg !742
  store i32 %add46, i32* %arrayidx47, align 4, !dbg !742
  %63 = load i32, i32* %c0_y43, align 4, !dbg !742
  %64 = load i32*, i32** %data_y.addr, align 8, !dbg !742
  %arrayidx48 = getelementptr inbounds i32, i32* %64, i64 6, !dbg !742
  %65 = load i32, i32* %arrayidx48, align 4, !dbg !742
  %add49 = add nsw i32 %63, %65, !dbg !742
  %66 = load i32*, i32** %data_y.addr, align 8, !dbg !742
  %arrayidx50 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !742
  store i32 %add49, i32* %arrayidx50, align 4, !dbg !742
  %67 = load i32, i32* %c0_x41, align 4, !dbg !742
  %68 = load i32*, i32** %data_x.addr, align 8, !dbg !742
  %arrayidx51 = getelementptr inbounds i32, i32* %68, i64 6, !dbg !742
  %69 = load i32, i32* %arrayidx51, align 4, !dbg !742
  %sub52 = sub nsw i32 %67, %69, !dbg !742
  %70 = load i32*, i32** %data_x.addr, align 8, !dbg !742
  %arrayidx53 = getelementptr inbounds i32, i32* %70, i64 6, !dbg !742
  store i32 %sub52, i32* %arrayidx53, align 4, !dbg !742
  %71 = load i32, i32* %c0_y43, align 4, !dbg !742
  %72 = load i32*, i32** %data_y.addr, align 8, !dbg !742
  %arrayidx54 = getelementptr inbounds i32, i32* %72, i64 6, !dbg !742
  %73 = load i32, i32* %arrayidx54, align 4, !dbg !742
  %sub55 = sub nsw i32 %71, %73, !dbg !742
  %74 = load i32*, i32** %data_y.addr, align 8, !dbg !742
  %arrayidx56 = getelementptr inbounds i32, i32* %74, i64 6, !dbg !742
  store i32 %sub55, i32* %arrayidx56, align 4, !dbg !742
  call void @llvm.dbg.declare(metadata i32* %c0_x57, metadata !744, metadata !DIExpression()), !dbg !746
  %75 = load i32*, i32** %data_x.addr, align 8, !dbg !746
  %arrayidx58 = getelementptr inbounds i32, i32* %75, i64 3, !dbg !746
  %76 = load i32, i32* %arrayidx58, align 4, !dbg !746
  store i32 %76, i32* %c0_x57, align 4, !dbg !746
  call void @llvm.dbg.declare(metadata i32* %c0_y59, metadata !747, metadata !DIExpression()), !dbg !746
  %77 = load i32*, i32** %data_y.addr, align 8, !dbg !746
  %arrayidx60 = getelementptr inbounds i32, i32* %77, i64 3, !dbg !746
  %78 = load i32, i32* %arrayidx60, align 4, !dbg !746
  store i32 %78, i32* %c0_y59, align 4, !dbg !746
  %79 = load i32, i32* %c0_x57, align 4, !dbg !746
  %80 = load i32*, i32** %data_x.addr, align 8, !dbg !746
  %arrayidx61 = getelementptr inbounds i32, i32* %80, i64 7, !dbg !746
  %81 = load i32, i32* %arrayidx61, align 4, !dbg !746
  %add62 = add nsw i32 %79, %81, !dbg !746
  %82 = load i32*, i32** %data_x.addr, align 8, !dbg !746
  %arrayidx63 = getelementptr inbounds i32, i32* %82, i64 3, !dbg !746
  store i32 %add62, i32* %arrayidx63, align 4, !dbg !746
  %83 = load i32, i32* %c0_y59, align 4, !dbg !746
  %84 = load i32*, i32** %data_y.addr, align 8, !dbg !746
  %arrayidx64 = getelementptr inbounds i32, i32* %84, i64 7, !dbg !746
  %85 = load i32, i32* %arrayidx64, align 4, !dbg !746
  %add65 = add nsw i32 %83, %85, !dbg !746
  %86 = load i32*, i32** %data_y.addr, align 8, !dbg !746
  %arrayidx66 = getelementptr inbounds i32, i32* %86, i64 3, !dbg !746
  store i32 %add65, i32* %arrayidx66, align 4, !dbg !746
  %87 = load i32, i32* %c0_x57, align 4, !dbg !746
  %88 = load i32*, i32** %data_x.addr, align 8, !dbg !746
  %arrayidx67 = getelementptr inbounds i32, i32* %88, i64 7, !dbg !746
  %89 = load i32, i32* %arrayidx67, align 4, !dbg !746
  %sub68 = sub nsw i32 %87, %89, !dbg !746
  %90 = load i32*, i32** %data_x.addr, align 8, !dbg !746
  %arrayidx69 = getelementptr inbounds i32, i32* %90, i64 7, !dbg !746
  store i32 %sub68, i32* %arrayidx69, align 4, !dbg !746
  %91 = load i32, i32* %c0_y59, align 4, !dbg !746
  %92 = load i32*, i32** %data_y.addr, align 8, !dbg !746
  %arrayidx70 = getelementptr inbounds i32, i32* %92, i64 7, !dbg !746
  %93 = load i32, i32* %arrayidx70, align 4, !dbg !746
  %sub71 = sub nsw i32 %91, %93, !dbg !746
  %94 = load i32*, i32** %data_y.addr, align 8, !dbg !746
  %arrayidx72 = getelementptr inbounds i32, i32* %94, i64 7, !dbg !746
  store i32 %sub71, i32* %arrayidx72, align 4, !dbg !746
  %95 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx73 = getelementptr inbounds i32, i32* %95, i64 5, !dbg !724
  %96 = load i32, i32* %arrayidx73, align 4, !dbg !724
  store i32 %96, i32* %tmp_1, align 4, !dbg !724
  %97 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx74 = getelementptr inbounds i32, i32* %97, i64 5, !dbg !724
  %98 = load i32, i32* %arrayidx74, align 4, !dbg !724
  %99 = load i32, i32* %exp_1_8_x, align 4, !dbg !724
  %mul75 = mul nsw i32 %98, %99, !dbg !724
  %100 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx76 = getelementptr inbounds i32, i32* %100, i64 5, !dbg !724
  %101 = load i32, i32* %arrayidx76, align 4, !dbg !724
  %102 = load i32, i32* %exp_1_8_y, align 4, !dbg !724
  %mul77 = mul nsw i32 %101, %102, !dbg !724
  %sub78 = sub nsw i32 %mul75, %mul77, !dbg !724
  %conv = sitofp i32 %sub78 to float, !dbg !724
  %mul79 = fmul float 0x3FE6A09E60000000, %conv, !dbg !724
  %conv80 = fptosi float %mul79 to i32, !dbg !724
  %103 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx81 = getelementptr inbounds i32, i32* %103, i64 5, !dbg !724
  store i32 %conv80, i32* %arrayidx81, align 4, !dbg !724
  %104 = load i32, i32* %tmp_1, align 4, !dbg !724
  %105 = load i32, i32* %exp_1_8_y, align 4, !dbg !724
  %mul82 = mul nsw i32 %104, %105, !dbg !724
  %106 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx83 = getelementptr inbounds i32, i32* %106, i64 5, !dbg !724
  %107 = load i32, i32* %arrayidx83, align 4, !dbg !724
  %108 = load i32, i32* %exp_1_8_x, align 4, !dbg !724
  %mul84 = mul nsw i32 %107, %108, !dbg !724
  %add85 = add nsw i32 %mul82, %mul84, !dbg !724
  %conv86 = sitofp i32 %add85 to float, !dbg !724
  %mul87 = fmul float 0x3FE6A09E60000000, %conv86, !dbg !724
  %conv88 = fptosi float %mul87 to i32, !dbg !724
  %109 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx89 = getelementptr inbounds i32, i32* %109, i64 5, !dbg !724
  store i32 %conv88, i32* %arrayidx89, align 4, !dbg !724
  %110 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx90 = getelementptr inbounds i32, i32* %110, i64 6, !dbg !724
  %111 = load i32, i32* %arrayidx90, align 4, !dbg !724
  store i32 %111, i32* %tmp_1, align 4, !dbg !724
  %112 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx91 = getelementptr inbounds i32, i32* %112, i64 6, !dbg !724
  %113 = load i32, i32* %arrayidx91, align 4, !dbg !724
  %114 = load i32, i32* %exp_1_4_x, align 4, !dbg !724
  %mul92 = mul nsw i32 %113, %114, !dbg !724
  %115 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx93 = getelementptr inbounds i32, i32* %115, i64 6, !dbg !724
  %116 = load i32, i32* %arrayidx93, align 4, !dbg !724
  %117 = load i32, i32* %exp_1_4_y, align 4, !dbg !724
  %mul94 = mul nsw i32 %116, %117, !dbg !724
  %sub95 = sub nsw i32 %mul92, %mul94, !dbg !724
  %118 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx96 = getelementptr inbounds i32, i32* %118, i64 6, !dbg !724
  store i32 %sub95, i32* %arrayidx96, align 4, !dbg !724
  %119 = load i32, i32* %tmp_1, align 4, !dbg !724
  %120 = load i32, i32* %exp_1_4_y, align 4, !dbg !724
  %mul97 = mul nsw i32 %119, %120, !dbg !724
  %121 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx98 = getelementptr inbounds i32, i32* %121, i64 6, !dbg !724
  %122 = load i32, i32* %arrayidx98, align 4, !dbg !724
  %123 = load i32, i32* %exp_1_4_x, align 4, !dbg !724
  %mul99 = mul nsw i32 %122, %123, !dbg !724
  %add100 = add nsw i32 %mul97, %mul99, !dbg !724
  %124 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx101 = getelementptr inbounds i32, i32* %124, i64 6, !dbg !724
  store i32 %add100, i32* %arrayidx101, align 4, !dbg !724
  %125 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx102 = getelementptr inbounds i32, i32* %125, i64 7, !dbg !724
  %126 = load i32, i32* %arrayidx102, align 4, !dbg !724
  store i32 %126, i32* %tmp_1, align 4, !dbg !724
  %127 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx103 = getelementptr inbounds i32, i32* %127, i64 7, !dbg !724
  %128 = load i32, i32* %arrayidx103, align 4, !dbg !724
  %129 = load i32, i32* %exp_3_8_x, align 4, !dbg !724
  %mul104 = mul nsw i32 %128, %129, !dbg !724
  %130 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx105 = getelementptr inbounds i32, i32* %130, i64 7, !dbg !724
  %131 = load i32, i32* %arrayidx105, align 4, !dbg !724
  %132 = load i32, i32* %exp_3_8_y, align 4, !dbg !724
  %mul106 = mul nsw i32 %131, %132, !dbg !724
  %sub107 = sub nsw i32 %mul104, %mul106, !dbg !724
  %conv108 = sitofp i32 %sub107 to float, !dbg !724
  %mul109 = fmul float 0x3FE6A09E60000000, %conv108, !dbg !724
  %conv110 = fptosi float %mul109 to i32, !dbg !724
  %133 = load i32*, i32** %data_x.addr, align 8, !dbg !724
  %arrayidx111 = getelementptr inbounds i32, i32* %133, i64 7, !dbg !724
  store i32 %conv110, i32* %arrayidx111, align 4, !dbg !724
  %134 = load i32, i32* %tmp_1, align 4, !dbg !724
  %135 = load i32, i32* %exp_3_8_y, align 4, !dbg !724
  %mul112 = mul nsw i32 %134, %135, !dbg !724
  %136 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx113 = getelementptr inbounds i32, i32* %136, i64 7, !dbg !724
  %137 = load i32, i32* %arrayidx113, align 4, !dbg !724
  %138 = load i32, i32* %exp_3_8_x, align 4, !dbg !724
  %mul114 = mul nsw i32 %137, %138, !dbg !724
  %add115 = add nsw i32 %mul112, %mul114, !dbg !724
  %conv116 = sitofp i32 %add115 to float, !dbg !724
  %mul117 = fmul float 0x3FE6A09E60000000, %conv116, !dbg !724
  %conv118 = fptosi float %mul117 to i32, !dbg !724
  %139 = load i32*, i32** %data_y.addr, align 8, !dbg !724
  %arrayidx119 = getelementptr inbounds i32, i32* %139, i64 7, !dbg !724
  store i32 %conv118, i32* %arrayidx119, align 4, !dbg !724
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_x, metadata !748, metadata !DIExpression()), !dbg !750
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_y, metadata !751, metadata !DIExpression()), !dbg !750
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !752, metadata !DIExpression()), !dbg !750
  store i32 0, i32* %exp_1_44_x, align 4, !dbg !750
  store i32 -1, i32* %exp_1_44_y, align 4, !dbg !750
  call void @llvm.dbg.declare(metadata i32* %c0_x120, metadata !753, metadata !DIExpression()), !dbg !755
  %140 = load i32*, i32** %data_x.addr, align 8, !dbg !755
  %arrayidx121 = getelementptr inbounds i32, i32* %140, i64 0, !dbg !755
  %141 = load i32, i32* %arrayidx121, align 4, !dbg !755
  store i32 %141, i32* %c0_x120, align 4, !dbg !755
  call void @llvm.dbg.declare(metadata i32* %c0_y122, metadata !756, metadata !DIExpression()), !dbg !755
  %142 = load i32*, i32** %data_y.addr, align 8, !dbg !755
  %arrayidx123 = getelementptr inbounds i32, i32* %142, i64 0, !dbg !755
  %143 = load i32, i32* %arrayidx123, align 4, !dbg !755
  store i32 %143, i32* %c0_y122, align 4, !dbg !755
  %144 = load i32, i32* %c0_x120, align 4, !dbg !755
  %145 = load i32*, i32** %data_x.addr, align 8, !dbg !755
  %arrayidx124 = getelementptr inbounds i32, i32* %145, i64 2, !dbg !755
  %146 = load i32, i32* %arrayidx124, align 4, !dbg !755
  %add125 = add nsw i32 %144, %146, !dbg !755
  %147 = load i32*, i32** %data_x.addr, align 8, !dbg !755
  %arrayidx126 = getelementptr inbounds i32, i32* %147, i64 0, !dbg !755
  store i32 %add125, i32* %arrayidx126, align 4, !dbg !755
  %148 = load i32, i32* %c0_y122, align 4, !dbg !755
  %149 = load i32*, i32** %data_y.addr, align 8, !dbg !755
  %arrayidx127 = getelementptr inbounds i32, i32* %149, i64 2, !dbg !755
  %150 = load i32, i32* %arrayidx127, align 4, !dbg !755
  %add128 = add nsw i32 %148, %150, !dbg !755
  %151 = load i32*, i32** %data_y.addr, align 8, !dbg !755
  %arrayidx129 = getelementptr inbounds i32, i32* %151, i64 0, !dbg !755
  store i32 %add128, i32* %arrayidx129, align 4, !dbg !755
  %152 = load i32, i32* %c0_x120, align 4, !dbg !755
  %153 = load i32*, i32** %data_x.addr, align 8, !dbg !755
  %arrayidx130 = getelementptr inbounds i32, i32* %153, i64 2, !dbg !755
  %154 = load i32, i32* %arrayidx130, align 4, !dbg !755
  %sub131 = sub nsw i32 %152, %154, !dbg !755
  %155 = load i32*, i32** %data_x.addr, align 8, !dbg !755
  %arrayidx132 = getelementptr inbounds i32, i32* %155, i64 2, !dbg !755
  store i32 %sub131, i32* %arrayidx132, align 4, !dbg !755
  %156 = load i32, i32* %c0_y122, align 4, !dbg !755
  %157 = load i32*, i32** %data_y.addr, align 8, !dbg !755
  %arrayidx133 = getelementptr inbounds i32, i32* %157, i64 2, !dbg !755
  %158 = load i32, i32* %arrayidx133, align 4, !dbg !755
  %sub134 = sub nsw i32 %156, %158, !dbg !755
  %159 = load i32*, i32** %data_y.addr, align 8, !dbg !755
  %arrayidx135 = getelementptr inbounds i32, i32* %159, i64 2, !dbg !755
  store i32 %sub134, i32* %arrayidx135, align 4, !dbg !755
  call void @llvm.dbg.declare(metadata i32* %c0_x136, metadata !757, metadata !DIExpression()), !dbg !759
  %160 = load i32*, i32** %data_x.addr, align 8, !dbg !759
  %arrayidx137 = getelementptr inbounds i32, i32* %160, i64 1, !dbg !759
  %161 = load i32, i32* %arrayidx137, align 4, !dbg !759
  store i32 %161, i32* %c0_x136, align 4, !dbg !759
  call void @llvm.dbg.declare(metadata i32* %c0_y138, metadata !760, metadata !DIExpression()), !dbg !759
  %162 = load i32*, i32** %data_y.addr, align 8, !dbg !759
  %arrayidx139 = getelementptr inbounds i32, i32* %162, i64 1, !dbg !759
  %163 = load i32, i32* %arrayidx139, align 4, !dbg !759
  store i32 %163, i32* %c0_y138, align 4, !dbg !759
  %164 = load i32, i32* %c0_x136, align 4, !dbg !759
  %165 = load i32*, i32** %data_x.addr, align 8, !dbg !759
  %arrayidx140 = getelementptr inbounds i32, i32* %165, i64 3, !dbg !759
  %166 = load i32, i32* %arrayidx140, align 4, !dbg !759
  %add141 = add nsw i32 %164, %166, !dbg !759
  %167 = load i32*, i32** %data_x.addr, align 8, !dbg !759
  %arrayidx142 = getelementptr inbounds i32, i32* %167, i64 1, !dbg !759
  store i32 %add141, i32* %arrayidx142, align 4, !dbg !759
  %168 = load i32, i32* %c0_y138, align 4, !dbg !759
  %169 = load i32*, i32** %data_y.addr, align 8, !dbg !759
  %arrayidx143 = getelementptr inbounds i32, i32* %169, i64 3, !dbg !759
  %170 = load i32, i32* %arrayidx143, align 4, !dbg !759
  %add144 = add nsw i32 %168, %170, !dbg !759
  %171 = load i32*, i32** %data_y.addr, align 8, !dbg !759
  %arrayidx145 = getelementptr inbounds i32, i32* %171, i64 1, !dbg !759
  store i32 %add144, i32* %arrayidx145, align 4, !dbg !759
  %172 = load i32, i32* %c0_x136, align 4, !dbg !759
  %173 = load i32*, i32** %data_x.addr, align 8, !dbg !759
  %arrayidx146 = getelementptr inbounds i32, i32* %173, i64 3, !dbg !759
  %174 = load i32, i32* %arrayidx146, align 4, !dbg !759
  %sub147 = sub nsw i32 %172, %174, !dbg !759
  %175 = load i32*, i32** %data_x.addr, align 8, !dbg !759
  %arrayidx148 = getelementptr inbounds i32, i32* %175, i64 3, !dbg !759
  store i32 %sub147, i32* %arrayidx148, align 4, !dbg !759
  %176 = load i32, i32* %c0_y138, align 4, !dbg !759
  %177 = load i32*, i32** %data_y.addr, align 8, !dbg !759
  %arrayidx149 = getelementptr inbounds i32, i32* %177, i64 3, !dbg !759
  %178 = load i32, i32* %arrayidx149, align 4, !dbg !759
  %sub150 = sub nsw i32 %176, %178, !dbg !759
  %179 = load i32*, i32** %data_y.addr, align 8, !dbg !759
  %arrayidx151 = getelementptr inbounds i32, i32* %179, i64 3, !dbg !759
  store i32 %sub150, i32* %arrayidx151, align 4, !dbg !759
  %180 = load i32*, i32** %data_x.addr, align 8, !dbg !750
  %arrayidx152 = getelementptr inbounds i32, i32* %180, i64 3, !dbg !750
  %181 = load i32, i32* %arrayidx152, align 4, !dbg !750
  store i32 %181, i32* %tmp, align 4, !dbg !750
  %182 = load i32*, i32** %data_x.addr, align 8, !dbg !750
  %arrayidx153 = getelementptr inbounds i32, i32* %182, i64 3, !dbg !750
  %183 = load i32, i32* %arrayidx153, align 4, !dbg !750
  %184 = load i32, i32* %exp_1_44_x, align 4, !dbg !750
  %mul154 = mul nsw i32 %183, %184, !dbg !750
  %185 = load i32*, i32** %data_y.addr, align 8, !dbg !750
  %arrayidx155 = getelementptr inbounds i32, i32* %185, i64 3, !dbg !750
  %186 = load i32, i32* %arrayidx155, align 4, !dbg !750
  %187 = load i32, i32* %exp_1_44_y, align 4, !dbg !750
  %mul156 = mul nsw i32 %186, %187, !dbg !750
  %sub157 = sub nsw i32 %mul154, %mul156, !dbg !750
  %188 = load i32*, i32** %data_x.addr, align 8, !dbg !750
  %arrayidx158 = getelementptr inbounds i32, i32* %188, i64 3, !dbg !750
  store i32 %sub157, i32* %arrayidx158, align 4, !dbg !750
  %189 = load i32, i32* %tmp, align 4, !dbg !750
  %190 = load i32, i32* %exp_1_44_y, align 4, !dbg !750
  %mul159 = mul nsw i32 %189, %190, !dbg !750
  %191 = load i32*, i32** %data_y.addr, align 8, !dbg !750
  %arrayidx160 = getelementptr inbounds i32, i32* %191, i64 3, !dbg !750
  %192 = load i32, i32* %arrayidx160, align 4, !dbg !750
  %193 = load i32, i32* %exp_1_44_x, align 4, !dbg !750
  %mul161 = mul nsw i32 %192, %193, !dbg !750
  %sub162 = sub nsw i32 %mul159, %mul161, !dbg !750
  %194 = load i32*, i32** %data_y.addr, align 8, !dbg !750
  %arrayidx163 = getelementptr inbounds i32, i32* %194, i64 3, !dbg !750
  store i32 %sub162, i32* %arrayidx163, align 4, !dbg !750
  call void @llvm.dbg.declare(metadata i32* %c0_x164, metadata !761, metadata !DIExpression()), !dbg !763
  %195 = load i32*, i32** %data_x.addr, align 8, !dbg !763
  %arrayidx165 = getelementptr inbounds i32, i32* %195, i64 0, !dbg !763
  %196 = load i32, i32* %arrayidx165, align 4, !dbg !763
  store i32 %196, i32* %c0_x164, align 4, !dbg !763
  call void @llvm.dbg.declare(metadata i32* %c0_y166, metadata !764, metadata !DIExpression()), !dbg !763
  %197 = load i32*, i32** %data_y.addr, align 8, !dbg !763
  %arrayidx167 = getelementptr inbounds i32, i32* %197, i64 0, !dbg !763
  %198 = load i32, i32* %arrayidx167, align 4, !dbg !763
  store i32 %198, i32* %c0_y166, align 4, !dbg !763
  %199 = load i32, i32* %c0_x164, align 4, !dbg !763
  %200 = load i32*, i32** %data_x.addr, align 8, !dbg !763
  %arrayidx168 = getelementptr inbounds i32, i32* %200, i64 1, !dbg !763
  %201 = load i32, i32* %arrayidx168, align 4, !dbg !763
  %add169 = add nsw i32 %199, %201, !dbg !763
  %202 = load i32*, i32** %data_x.addr, align 8, !dbg !763
  %arrayidx170 = getelementptr inbounds i32, i32* %202, i64 0, !dbg !763
  store i32 %add169, i32* %arrayidx170, align 4, !dbg !763
  %203 = load i32, i32* %c0_y166, align 4, !dbg !763
  %204 = load i32*, i32** %data_y.addr, align 8, !dbg !763
  %arrayidx171 = getelementptr inbounds i32, i32* %204, i64 1, !dbg !763
  %205 = load i32, i32* %arrayidx171, align 4, !dbg !763
  %add172 = add nsw i32 %203, %205, !dbg !763
  %206 = load i32*, i32** %data_y.addr, align 8, !dbg !763
  %arrayidx173 = getelementptr inbounds i32, i32* %206, i64 0, !dbg !763
  store i32 %add172, i32* %arrayidx173, align 4, !dbg !763
  %207 = load i32, i32* %c0_x164, align 4, !dbg !763
  %208 = load i32*, i32** %data_x.addr, align 8, !dbg !763
  %arrayidx174 = getelementptr inbounds i32, i32* %208, i64 1, !dbg !763
  %209 = load i32, i32* %arrayidx174, align 4, !dbg !763
  %sub175 = sub nsw i32 %207, %209, !dbg !763
  %210 = load i32*, i32** %data_x.addr, align 8, !dbg !763
  %arrayidx176 = getelementptr inbounds i32, i32* %210, i64 1, !dbg !763
  store i32 %sub175, i32* %arrayidx176, align 4, !dbg !763
  %211 = load i32, i32* %c0_y166, align 4, !dbg !763
  %212 = load i32*, i32** %data_y.addr, align 8, !dbg !763
  %arrayidx177 = getelementptr inbounds i32, i32* %212, i64 1, !dbg !763
  %213 = load i32, i32* %arrayidx177, align 4, !dbg !763
  %sub178 = sub nsw i32 %211, %213, !dbg !763
  %214 = load i32*, i32** %data_y.addr, align 8, !dbg !763
  %arrayidx179 = getelementptr inbounds i32, i32* %214, i64 1, !dbg !763
  store i32 %sub178, i32* %arrayidx179, align 4, !dbg !763
  call void @llvm.dbg.declare(metadata i32* %c0_x180, metadata !765, metadata !DIExpression()), !dbg !767
  %215 = load i32*, i32** %data_x.addr, align 8, !dbg !767
  %arrayidx181 = getelementptr inbounds i32, i32* %215, i64 2, !dbg !767
  %216 = load i32, i32* %arrayidx181, align 4, !dbg !767
  store i32 %216, i32* %c0_x180, align 4, !dbg !767
  call void @llvm.dbg.declare(metadata i32* %c0_y182, metadata !768, metadata !DIExpression()), !dbg !767
  %217 = load i32*, i32** %data_y.addr, align 8, !dbg !767
  %arrayidx183 = getelementptr inbounds i32, i32* %217, i64 2, !dbg !767
  %218 = load i32, i32* %arrayidx183, align 4, !dbg !767
  store i32 %218, i32* %c0_y182, align 4, !dbg !767
  %219 = load i32, i32* %c0_x180, align 4, !dbg !767
  %220 = load i32*, i32** %data_x.addr, align 8, !dbg !767
  %arrayidx184 = getelementptr inbounds i32, i32* %220, i64 3, !dbg !767
  %221 = load i32, i32* %arrayidx184, align 4, !dbg !767
  %add185 = add nsw i32 %219, %221, !dbg !767
  %222 = load i32*, i32** %data_x.addr, align 8, !dbg !767
  %arrayidx186 = getelementptr inbounds i32, i32* %222, i64 2, !dbg !767
  store i32 %add185, i32* %arrayidx186, align 4, !dbg !767
  %223 = load i32, i32* %c0_y182, align 4, !dbg !767
  %224 = load i32*, i32** %data_y.addr, align 8, !dbg !767
  %arrayidx187 = getelementptr inbounds i32, i32* %224, i64 3, !dbg !767
  %225 = load i32, i32* %arrayidx187, align 4, !dbg !767
  %add188 = add nsw i32 %223, %225, !dbg !767
  %226 = load i32*, i32** %data_y.addr, align 8, !dbg !767
  %arrayidx189 = getelementptr inbounds i32, i32* %226, i64 2, !dbg !767
  store i32 %add188, i32* %arrayidx189, align 4, !dbg !767
  %227 = load i32, i32* %c0_x180, align 4, !dbg !767
  %228 = load i32*, i32** %data_x.addr, align 8, !dbg !767
  %arrayidx190 = getelementptr inbounds i32, i32* %228, i64 3, !dbg !767
  %229 = load i32, i32* %arrayidx190, align 4, !dbg !767
  %sub191 = sub nsw i32 %227, %229, !dbg !767
  %230 = load i32*, i32** %data_x.addr, align 8, !dbg !767
  %arrayidx192 = getelementptr inbounds i32, i32* %230, i64 3, !dbg !767
  store i32 %sub191, i32* %arrayidx192, align 4, !dbg !767
  %231 = load i32, i32* %c0_y182, align 4, !dbg !767
  %232 = load i32*, i32** %data_y.addr, align 8, !dbg !767
  %arrayidx193 = getelementptr inbounds i32, i32* %232, i64 3, !dbg !767
  %233 = load i32, i32* %arrayidx193, align 4, !dbg !767
  %sub194 = sub nsw i32 %231, %233, !dbg !767
  %234 = load i32*, i32** %data_y.addr, align 8, !dbg !767
  %arrayidx195 = getelementptr inbounds i32, i32* %234, i64 3, !dbg !767
  store i32 %sub194, i32* %arrayidx195, align 4, !dbg !767
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_x196, metadata !769, metadata !DIExpression()), !dbg !771
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_y197, metadata !772, metadata !DIExpression()), !dbg !771
  call void @llvm.dbg.declare(metadata i32* %tmp198, metadata !773, metadata !DIExpression()), !dbg !771
  store i32 0, i32* %exp_1_44_x196, align 4, !dbg !771
  store i32 -1, i32* %exp_1_44_y197, align 4, !dbg !771
  call void @llvm.dbg.declare(metadata i32* %c0_x199, metadata !774, metadata !DIExpression()), !dbg !776
  %235 = load i32*, i32** %data_x.addr, align 8, !dbg !776
  %arrayidx200 = getelementptr inbounds i32, i32* %235, i64 4, !dbg !776
  %236 = load i32, i32* %arrayidx200, align 4, !dbg !776
  store i32 %236, i32* %c0_x199, align 4, !dbg !776
  call void @llvm.dbg.declare(metadata i32* %c0_y201, metadata !777, metadata !DIExpression()), !dbg !776
  %237 = load i32*, i32** %data_y.addr, align 8, !dbg !776
  %arrayidx202 = getelementptr inbounds i32, i32* %237, i64 4, !dbg !776
  %238 = load i32, i32* %arrayidx202, align 4, !dbg !776
  store i32 %238, i32* %c0_y201, align 4, !dbg !776
  %239 = load i32, i32* %c0_x199, align 4, !dbg !776
  %240 = load i32*, i32** %data_x.addr, align 8, !dbg !776
  %arrayidx203 = getelementptr inbounds i32, i32* %240, i64 6, !dbg !776
  %241 = load i32, i32* %arrayidx203, align 4, !dbg !776
  %add204 = add nsw i32 %239, %241, !dbg !776
  %242 = load i32*, i32** %data_x.addr, align 8, !dbg !776
  %arrayidx205 = getelementptr inbounds i32, i32* %242, i64 4, !dbg !776
  store i32 %add204, i32* %arrayidx205, align 4, !dbg !776
  %243 = load i32, i32* %c0_y201, align 4, !dbg !776
  %244 = load i32*, i32** %data_y.addr, align 8, !dbg !776
  %arrayidx206 = getelementptr inbounds i32, i32* %244, i64 6, !dbg !776
  %245 = load i32, i32* %arrayidx206, align 4, !dbg !776
  %add207 = add nsw i32 %243, %245, !dbg !776
  %246 = load i32*, i32** %data_y.addr, align 8, !dbg !776
  %arrayidx208 = getelementptr inbounds i32, i32* %246, i64 4, !dbg !776
  store i32 %add207, i32* %arrayidx208, align 4, !dbg !776
  %247 = load i32, i32* %c0_x199, align 4, !dbg !776
  %248 = load i32*, i32** %data_x.addr, align 8, !dbg !776
  %arrayidx209 = getelementptr inbounds i32, i32* %248, i64 6, !dbg !776
  %249 = load i32, i32* %arrayidx209, align 4, !dbg !776
  %sub210 = sub nsw i32 %247, %249, !dbg !776
  %250 = load i32*, i32** %data_x.addr, align 8, !dbg !776
  %arrayidx211 = getelementptr inbounds i32, i32* %250, i64 6, !dbg !776
  store i32 %sub210, i32* %arrayidx211, align 4, !dbg !776
  %251 = load i32, i32* %c0_y201, align 4, !dbg !776
  %252 = load i32*, i32** %data_y.addr, align 8, !dbg !776
  %arrayidx212 = getelementptr inbounds i32, i32* %252, i64 6, !dbg !776
  %253 = load i32, i32* %arrayidx212, align 4, !dbg !776
  %sub213 = sub nsw i32 %251, %253, !dbg !776
  %254 = load i32*, i32** %data_y.addr, align 8, !dbg !776
  %arrayidx214 = getelementptr inbounds i32, i32* %254, i64 6, !dbg !776
  store i32 %sub213, i32* %arrayidx214, align 4, !dbg !776
  call void @llvm.dbg.declare(metadata i32* %c0_x215, metadata !778, metadata !DIExpression()), !dbg !780
  %255 = load i32*, i32** %data_x.addr, align 8, !dbg !780
  %arrayidx216 = getelementptr inbounds i32, i32* %255, i64 5, !dbg !780
  %256 = load i32, i32* %arrayidx216, align 4, !dbg !780
  store i32 %256, i32* %c0_x215, align 4, !dbg !780
  call void @llvm.dbg.declare(metadata i32* %c0_y217, metadata !781, metadata !DIExpression()), !dbg !780
  %257 = load i32*, i32** %data_y.addr, align 8, !dbg !780
  %arrayidx218 = getelementptr inbounds i32, i32* %257, i64 5, !dbg !780
  %258 = load i32, i32* %arrayidx218, align 4, !dbg !780
  store i32 %258, i32* %c0_y217, align 4, !dbg !780
  %259 = load i32, i32* %c0_x215, align 4, !dbg !780
  %260 = load i32*, i32** %data_x.addr, align 8, !dbg !780
  %arrayidx219 = getelementptr inbounds i32, i32* %260, i64 7, !dbg !780
  %261 = load i32, i32* %arrayidx219, align 4, !dbg !780
  %add220 = add nsw i32 %259, %261, !dbg !780
  %262 = load i32*, i32** %data_x.addr, align 8, !dbg !780
  %arrayidx221 = getelementptr inbounds i32, i32* %262, i64 5, !dbg !780
  store i32 %add220, i32* %arrayidx221, align 4, !dbg !780
  %263 = load i32, i32* %c0_y217, align 4, !dbg !780
  %264 = load i32*, i32** %data_y.addr, align 8, !dbg !780
  %arrayidx222 = getelementptr inbounds i32, i32* %264, i64 7, !dbg !780
  %265 = load i32, i32* %arrayidx222, align 4, !dbg !780
  %add223 = add nsw i32 %263, %265, !dbg !780
  %266 = load i32*, i32** %data_y.addr, align 8, !dbg !780
  %arrayidx224 = getelementptr inbounds i32, i32* %266, i64 5, !dbg !780
  store i32 %add223, i32* %arrayidx224, align 4, !dbg !780
  %267 = load i32, i32* %c0_x215, align 4, !dbg !780
  %268 = load i32*, i32** %data_x.addr, align 8, !dbg !780
  %arrayidx225 = getelementptr inbounds i32, i32* %268, i64 7, !dbg !780
  %269 = load i32, i32* %arrayidx225, align 4, !dbg !780
  %sub226 = sub nsw i32 %267, %269, !dbg !780
  %270 = load i32*, i32** %data_x.addr, align 8, !dbg !780
  %arrayidx227 = getelementptr inbounds i32, i32* %270, i64 7, !dbg !780
  store i32 %sub226, i32* %arrayidx227, align 4, !dbg !780
  %271 = load i32, i32* %c0_y217, align 4, !dbg !780
  %272 = load i32*, i32** %data_y.addr, align 8, !dbg !780
  %arrayidx228 = getelementptr inbounds i32, i32* %272, i64 7, !dbg !780
  %273 = load i32, i32* %arrayidx228, align 4, !dbg !780
  %sub229 = sub nsw i32 %271, %273, !dbg !780
  %274 = load i32*, i32** %data_y.addr, align 8, !dbg !780
  %arrayidx230 = getelementptr inbounds i32, i32* %274, i64 7, !dbg !780
  store i32 %sub229, i32* %arrayidx230, align 4, !dbg !780
  %275 = load i32*, i32** %data_x.addr, align 8, !dbg !771
  %arrayidx231 = getelementptr inbounds i32, i32* %275, i64 7, !dbg !771
  %276 = load i32, i32* %arrayidx231, align 4, !dbg !771
  store i32 %276, i32* %tmp198, align 4, !dbg !771
  %277 = load i32*, i32** %data_x.addr, align 8, !dbg !771
  %arrayidx232 = getelementptr inbounds i32, i32* %277, i64 7, !dbg !771
  %278 = load i32, i32* %arrayidx232, align 4, !dbg !771
  %279 = load i32, i32* %exp_1_44_x196, align 4, !dbg !771
  %mul233 = mul nsw i32 %278, %279, !dbg !771
  %280 = load i32*, i32** %data_y.addr, align 8, !dbg !771
  %arrayidx234 = getelementptr inbounds i32, i32* %280, i64 7, !dbg !771
  %281 = load i32, i32* %arrayidx234, align 4, !dbg !771
  %282 = load i32, i32* %exp_1_44_y197, align 4, !dbg !771
  %mul235 = mul nsw i32 %281, %282, !dbg !771
  %sub236 = sub nsw i32 %mul233, %mul235, !dbg !771
  %283 = load i32*, i32** %data_x.addr, align 8, !dbg !771
  %arrayidx237 = getelementptr inbounds i32, i32* %283, i64 7, !dbg !771
  store i32 %sub236, i32* %arrayidx237, align 4, !dbg !771
  %284 = load i32, i32* %tmp198, align 4, !dbg !771
  %285 = load i32, i32* %exp_1_44_y197, align 4, !dbg !771
  %mul238 = mul nsw i32 %284, %285, !dbg !771
  %286 = load i32*, i32** %data_y.addr, align 8, !dbg !771
  %arrayidx239 = getelementptr inbounds i32, i32* %286, i64 7, !dbg !771
  %287 = load i32, i32* %arrayidx239, align 4, !dbg !771
  %288 = load i32, i32* %exp_1_44_x196, align 4, !dbg !771
  %mul240 = mul nsw i32 %287, %288, !dbg !771
  %sub241 = sub nsw i32 %mul238, %mul240, !dbg !771
  %289 = load i32*, i32** %data_y.addr, align 8, !dbg !771
  %arrayidx242 = getelementptr inbounds i32, i32* %289, i64 7, !dbg !771
  store i32 %sub241, i32* %arrayidx242, align 4, !dbg !771
  call void @llvm.dbg.declare(metadata i32* %c0_x243, metadata !782, metadata !DIExpression()), !dbg !784
  %290 = load i32*, i32** %data_x.addr, align 8, !dbg !784
  %arrayidx244 = getelementptr inbounds i32, i32* %290, i64 4, !dbg !784
  %291 = load i32, i32* %arrayidx244, align 4, !dbg !784
  store i32 %291, i32* %c0_x243, align 4, !dbg !784
  call void @llvm.dbg.declare(metadata i32* %c0_y245, metadata !785, metadata !DIExpression()), !dbg !784
  %292 = load i32*, i32** %data_y.addr, align 8, !dbg !784
  %arrayidx246 = getelementptr inbounds i32, i32* %292, i64 4, !dbg !784
  %293 = load i32, i32* %arrayidx246, align 4, !dbg !784
  store i32 %293, i32* %c0_y245, align 4, !dbg !784
  %294 = load i32, i32* %c0_x243, align 4, !dbg !784
  %295 = load i32*, i32** %data_x.addr, align 8, !dbg !784
  %arrayidx247 = getelementptr inbounds i32, i32* %295, i64 5, !dbg !784
  %296 = load i32, i32* %arrayidx247, align 4, !dbg !784
  %add248 = add nsw i32 %294, %296, !dbg !784
  %297 = load i32*, i32** %data_x.addr, align 8, !dbg !784
  %arrayidx249 = getelementptr inbounds i32, i32* %297, i64 4, !dbg !784
  store i32 %add248, i32* %arrayidx249, align 4, !dbg !784
  %298 = load i32, i32* %c0_y245, align 4, !dbg !784
  %299 = load i32*, i32** %data_y.addr, align 8, !dbg !784
  %arrayidx250 = getelementptr inbounds i32, i32* %299, i64 5, !dbg !784
  %300 = load i32, i32* %arrayidx250, align 4, !dbg !784
  %add251 = add nsw i32 %298, %300, !dbg !784
  %301 = load i32*, i32** %data_y.addr, align 8, !dbg !784
  %arrayidx252 = getelementptr inbounds i32, i32* %301, i64 4, !dbg !784
  store i32 %add251, i32* %arrayidx252, align 4, !dbg !784
  %302 = load i32, i32* %c0_x243, align 4, !dbg !784
  %303 = load i32*, i32** %data_x.addr, align 8, !dbg !784
  %arrayidx253 = getelementptr inbounds i32, i32* %303, i64 5, !dbg !784
  %304 = load i32, i32* %arrayidx253, align 4, !dbg !784
  %sub254 = sub nsw i32 %302, %304, !dbg !784
  %305 = load i32*, i32** %data_x.addr, align 8, !dbg !784
  %arrayidx255 = getelementptr inbounds i32, i32* %305, i64 5, !dbg !784
  store i32 %sub254, i32* %arrayidx255, align 4, !dbg !784
  %306 = load i32, i32* %c0_y245, align 4, !dbg !784
  %307 = load i32*, i32** %data_y.addr, align 8, !dbg !784
  %arrayidx256 = getelementptr inbounds i32, i32* %307, i64 5, !dbg !784
  %308 = load i32, i32* %arrayidx256, align 4, !dbg !784
  %sub257 = sub nsw i32 %306, %308, !dbg !784
  %309 = load i32*, i32** %data_y.addr, align 8, !dbg !784
  %arrayidx258 = getelementptr inbounds i32, i32* %309, i64 5, !dbg !784
  store i32 %sub257, i32* %arrayidx258, align 4, !dbg !784
  call void @llvm.dbg.declare(metadata i32* %c0_x259, metadata !786, metadata !DIExpression()), !dbg !788
  %310 = load i32*, i32** %data_x.addr, align 8, !dbg !788
  %arrayidx260 = getelementptr inbounds i32, i32* %310, i64 6, !dbg !788
  %311 = load i32, i32* %arrayidx260, align 4, !dbg !788
  store i32 %311, i32* %c0_x259, align 4, !dbg !788
  call void @llvm.dbg.declare(metadata i32* %c0_y261, metadata !789, metadata !DIExpression()), !dbg !788
  %312 = load i32*, i32** %data_y.addr, align 8, !dbg !788
  %arrayidx262 = getelementptr inbounds i32, i32* %312, i64 6, !dbg !788
  %313 = load i32, i32* %arrayidx262, align 4, !dbg !788
  store i32 %313, i32* %c0_y261, align 4, !dbg !788
  %314 = load i32, i32* %c0_x259, align 4, !dbg !788
  %315 = load i32*, i32** %data_x.addr, align 8, !dbg !788
  %arrayidx263 = getelementptr inbounds i32, i32* %315, i64 7, !dbg !788
  %316 = load i32, i32* %arrayidx263, align 4, !dbg !788
  %add264 = add nsw i32 %314, %316, !dbg !788
  %317 = load i32*, i32** %data_x.addr, align 8, !dbg !788
  %arrayidx265 = getelementptr inbounds i32, i32* %317, i64 6, !dbg !788
  store i32 %add264, i32* %arrayidx265, align 4, !dbg !788
  %318 = load i32, i32* %c0_y261, align 4, !dbg !788
  %319 = load i32*, i32** %data_y.addr, align 8, !dbg !788
  %arrayidx266 = getelementptr inbounds i32, i32* %319, i64 7, !dbg !788
  %320 = load i32, i32* %arrayidx266, align 4, !dbg !788
  %add267 = add nsw i32 %318, %320, !dbg !788
  %321 = load i32*, i32** %data_y.addr, align 8, !dbg !788
  %arrayidx268 = getelementptr inbounds i32, i32* %321, i64 6, !dbg !788
  store i32 %add267, i32* %arrayidx268, align 4, !dbg !788
  %322 = load i32, i32* %c0_x259, align 4, !dbg !788
  %323 = load i32*, i32** %data_x.addr, align 8, !dbg !788
  %arrayidx269 = getelementptr inbounds i32, i32* %323, i64 7, !dbg !788
  %324 = load i32, i32* %arrayidx269, align 4, !dbg !788
  %sub270 = sub nsw i32 %322, %324, !dbg !788
  %325 = load i32*, i32** %data_x.addr, align 8, !dbg !788
  %arrayidx271 = getelementptr inbounds i32, i32* %325, i64 7, !dbg !788
  store i32 %sub270, i32* %arrayidx271, align 4, !dbg !788
  %326 = load i32, i32* %c0_y261, align 4, !dbg !788
  %327 = load i32*, i32** %data_y.addr, align 8, !dbg !788
  %arrayidx272 = getelementptr inbounds i32, i32* %327, i64 7, !dbg !788
  %328 = load i32, i32* %arrayidx272, align 4, !dbg !788
  %sub273 = sub nsw i32 %326, %328, !dbg !788
  %329 = load i32*, i32** %data_y.addr, align 8, !dbg !788
  %arrayidx274 = getelementptr inbounds i32, i32* %329, i64 7, !dbg !788
  store i32 %sub273, i32* %arrayidx274, align 4, !dbg !788
  %330 = load i32, i32* %tid, align 4, !dbg !790
  %shr = ashr i32 %330, 3, !dbg !791
  store i32 %shr, i32* %hi, align 4, !dbg !792
  br label %twiddles, !dbg !793

twiddles:                                         ; preds = %for.end
  call void @llvm.dbg.label(metadata !794), !dbg !795
  store i32 1, i32* %j, align 4, !dbg !796
  br label %for.cond275, !dbg !798

for.cond275:                                      ; preds = %for.inc310, %twiddles
  %331 = load i32, i32* %j, align 4, !dbg !799
  %cmp276 = icmp slt i32 %331, 8, !dbg !801
  br i1 %cmp276, label %for.body278, label %for.end312, !dbg !802

for.body278:                                      ; preds = %for.cond275
  call void @llvm.dbg.declare(metadata i32* %A_x, metadata !803, metadata !DIExpression()), !dbg !805
  call void @llvm.dbg.declare(metadata i32* %A_y, metadata !806, metadata !DIExpression()), !dbg !807
  call void @llvm.dbg.declare(metadata i32* %tmp279, metadata !808, metadata !DIExpression()), !dbg !809
  %332 = load float*, float** %cos_64.addr, align 8, !dbg !810
  %333 = load i32, i32* %hi, align 4, !dbg !811
  %mul280 = mul nsw i32 %333, 7, !dbg !812
  %334 = load i32, i32* %j, align 4, !dbg !813
  %add281 = add nsw i32 %mul280, %334, !dbg !814
  %sub282 = sub nsw i32 %add281, 1, !dbg !815
  %idxprom283 = sext i32 %sub282 to i64, !dbg !810
  %arrayidx284 = getelementptr inbounds float, float* %332, i64 %idxprom283, !dbg !810
  %335 = load float, float* %arrayidx284, align 4, !dbg !810
  %conv285 = fptosi float %335 to i32, !dbg !810
  store i32 %conv285, i32* %A_x, align 4, !dbg !816
  %336 = load float*, float** %sin_64.addr, align 8, !dbg !817
  %337 = load i32, i32* %hi, align 4, !dbg !818
  %mul286 = mul nsw i32 %337, 7, !dbg !819
  %338 = load i32, i32* %j, align 4, !dbg !820
  %add287 = add nsw i32 %mul286, %338, !dbg !821
  %sub288 = sub nsw i32 %add287, 1, !dbg !822
  %idxprom289 = sext i32 %sub288 to i64, !dbg !817
  %arrayidx290 = getelementptr inbounds float, float* %336, i64 %idxprom289, !dbg !817
  %339 = load float, float* %arrayidx290, align 4, !dbg !817
  %conv291 = fptosi float %339 to i32, !dbg !817
  store i32 %conv291, i32* %A_y, align 4, !dbg !823
  %340 = load i32*, i32** %data_x.addr, align 8, !dbg !824
  %341 = load i32, i32* %j, align 4, !dbg !825
  %idxprom292 = sext i32 %341 to i64, !dbg !824
  %arrayidx293 = getelementptr inbounds i32, i32* %340, i64 %idxprom292, !dbg !824
  %342 = load i32, i32* %arrayidx293, align 4, !dbg !824
  store i32 %342, i32* %tmp279, align 4, !dbg !826
  %343 = load i32*, i32** %data_x.addr, align 8, !dbg !827
  %344 = load i32, i32* %j, align 4, !dbg !827
  %idxprom294 = sext i32 %344 to i64, !dbg !827
  %arrayidx295 = getelementptr inbounds i32, i32* %343, i64 %idxprom294, !dbg !827
  %345 = load i32, i32* %arrayidx295, align 4, !dbg !827
  %346 = load i32, i32* %A_x, align 4, !dbg !827
  %mul296 = mul nsw i32 %345, %346, !dbg !827
  %347 = load i32*, i32** %data_y.addr, align 8, !dbg !827
  %348 = load i32, i32* %j, align 4, !dbg !827
  %idxprom297 = sext i32 %348 to i64, !dbg !827
  %arrayidx298 = getelementptr inbounds i32, i32* %347, i64 %idxprom297, !dbg !827
  %349 = load i32, i32* %arrayidx298, align 4, !dbg !827
  %350 = load i32, i32* %A_y, align 4, !dbg !827
  %mul299 = mul nsw i32 %349, %350, !dbg !827
  %sub300 = sub nsw i32 %mul296, %mul299, !dbg !827
  %351 = load i32*, i32** %data_x.addr, align 8, !dbg !828
  %352 = load i32, i32* %j, align 4, !dbg !829
  %idxprom301 = sext i32 %352 to i64, !dbg !828
  %arrayidx302 = getelementptr inbounds i32, i32* %351, i64 %idxprom301, !dbg !828
  store i32 %sub300, i32* %arrayidx302, align 4, !dbg !830
  %353 = load i32, i32* %tmp279, align 4, !dbg !831
  %354 = load i32, i32* %A_y, align 4, !dbg !831
  %mul303 = mul nsw i32 %353, %354, !dbg !831
  %355 = load i32*, i32** %data_y.addr, align 8, !dbg !831
  %356 = load i32, i32* %j, align 4, !dbg !831
  %idxprom304 = sext i32 %356 to i64, !dbg !831
  %arrayidx305 = getelementptr inbounds i32, i32* %355, i64 %idxprom304, !dbg !831
  %357 = load i32, i32* %arrayidx305, align 4, !dbg !831
  %358 = load i32, i32* %A_x, align 4, !dbg !831
  %mul306 = mul nsw i32 %357, %358, !dbg !831
  %add307 = add nsw i32 %mul303, %mul306, !dbg !831
  %359 = load i32*, i32** %data_y.addr, align 8, !dbg !832
  %360 = load i32, i32* %j, align 4, !dbg !833
  %idxprom308 = sext i32 %360 to i64, !dbg !832
  %arrayidx309 = getelementptr inbounds i32, i32* %359, i64 %idxprom308, !dbg !832
  store i32 %add307, i32* %arrayidx309, align 4, !dbg !834
  br label %for.inc310, !dbg !835

for.inc310:                                       ; preds = %for.body278
  %361 = load i32, i32* %j, align 4, !dbg !836
  %inc311 = add nsw i32 %361, 1, !dbg !836
  store i32 %inc311, i32* %j, align 4, !dbg !836
  br label %for.cond275, !dbg !837, !llvm.loop !838

for.end312:                                       ; preds = %for.cond275
  br label %save, !dbg !839

save:                                             ; preds = %for.end312
  call void @llvm.dbg.label(metadata !840), !dbg !841
  store i32 0, i32* %i, align 4, !dbg !842
  br label %for.cond313, !dbg !844

for.cond313:                                      ; preds = %for.inc329, %save
  %362 = load i32, i32* %i, align 4, !dbg !845
  %cmp314 = icmp slt i32 %362, 8, !dbg !847
  br i1 %cmp314, label %for.body316, label %for.end331, !dbg !848

for.body316:                                      ; preds = %for.cond313
  %363 = load i32*, i32** %data_x.addr, align 8, !dbg !849
  %364 = load i32, i32* %i, align 4, !dbg !851
  %idxprom317 = sext i32 %364 to i64, !dbg !849
  %arrayidx318 = getelementptr inbounds i32, i32* %363, i64 %idxprom317, !dbg !849
  %365 = load i32, i32* %arrayidx318, align 4, !dbg !849
  %366 = load i32*, i32** %DATA_x.addr, align 8, !dbg !852
  %367 = load i32, i32* %tid, align 4, !dbg !853
  %mul319 = mul nsw i32 %367, 8, !dbg !854
  %368 = load i32, i32* %i, align 4, !dbg !855
  %add320 = add nsw i32 %mul319, %368, !dbg !856
  %idxprom321 = sext i32 %add320 to i64, !dbg !852
  %arrayidx322 = getelementptr inbounds i32, i32* %366, i64 %idxprom321, !dbg !852
  store i32 %365, i32* %arrayidx322, align 4, !dbg !857
  %369 = load i32*, i32** %data_y.addr, align 8, !dbg !858
  %370 = load i32, i32* %i, align 4, !dbg !859
  %idxprom323 = sext i32 %370 to i64, !dbg !858
  %arrayidx324 = getelementptr inbounds i32, i32* %369, i64 %idxprom323, !dbg !858
  %371 = load i32, i32* %arrayidx324, align 4, !dbg !858
  %372 = load i32*, i32** %DATA_y.addr, align 8, !dbg !860
  %373 = load i32, i32* %tid, align 4, !dbg !861
  %mul325 = mul nsw i32 %373, 8, !dbg !862
  %374 = load i32, i32* %i, align 4, !dbg !863
  %add326 = add nsw i32 %mul325, %374, !dbg !864
  %idxprom327 = sext i32 %add326 to i64, !dbg !860
  %arrayidx328 = getelementptr inbounds i32, i32* %372, i64 %idxprom327, !dbg !860
  store i32 %371, i32* %arrayidx328, align 4, !dbg !865
  br label %for.inc329, !dbg !866

for.inc329:                                       ; preds = %for.body316
  %375 = load i32, i32* %i, align 4, !dbg !867
  %inc330 = add nsw i32 %375, 1, !dbg !867
  store i32 %inc330, i32* %i, align 4, !dbg !867
  br label %for.cond313, !dbg !868, !llvm.loop !869

for.end331:                                       ; preds = %for.cond313
  br label %for.inc332, !dbg !871

for.inc332:                                       ; preds = %for.end331
  %376 = load i32, i32* %tid, align 4, !dbg !872
  %inc333 = add nsw i32 %376, 1, !dbg !872
  store i32 %inc333, i32* %tid, align 4, !dbg !872
  br label %for.cond, !dbg !873, !llvm.loop !874

for.end334:                                       ; preds = %for.cond
  ret void, !dbg !876
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step7(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !877 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !878, metadata !DIExpression()), !dbg !879
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !880, metadata !DIExpression()), !dbg !881
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !882, metadata !DIExpression()), !dbg !883
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !884, metadata !DIExpression()), !dbg !885
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !886, metadata !DIExpression()), !dbg !887
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !888, metadata !DIExpression()), !dbg !889
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !890, metadata !DIExpression()), !dbg !891
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !892, metadata !DIExpression()), !dbg !893
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !894, metadata !DIExpression()), !dbg !895
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !896, metadata !DIExpression()), !dbg !897
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !898, metadata !DIExpression()), !dbg !899
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !900, metadata !DIExpression()), !dbg !901
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !902, metadata !DIExpression()), !dbg !903
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !904, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !906, metadata !DIExpression()), !dbg !907
  call void @llvm.dbg.declare(metadata i32* %i, metadata !908, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.declare(metadata i32* %j, metadata !910, metadata !DIExpression()), !dbg !911
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !912, metadata !DIExpression()), !dbg !913
  store i32 64, i32* %stride, align 4, !dbg !914
  br label %outer, !dbg !915

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !916), !dbg !917
  store i32 0, i32* %tid, align 4, !dbg !918
  br label %for.cond, !dbg !920

for.cond:                                         ; preds = %for.inc70, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !921
  %cmp = icmp slt i32 %0, 64, !dbg !923
  br i1 %cmp, label %for.body, label %for.end72, !dbg !924

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !925

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !926), !dbg !928
  store i32 0, i32* %i, align 4, !dbg !929
  br label %for.cond1, !dbg !931

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !932
  %cmp2 = icmp slt i32 %1, 8, !dbg !934
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !935

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !936
  %3 = load i32, i32* %tid, align 4, !dbg !938
  %mul = mul nsw i32 %3, 8, !dbg !939
  %4 = load i32, i32* %i, align 4, !dbg !940
  %add = add nsw i32 %mul, %4, !dbg !941
  %idxprom = sext i32 %add to i64, !dbg !936
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !936
  %5 = load i32, i32* %arrayidx, align 4, !dbg !936
  %6 = load i32*, i32** %data_x.addr, align 8, !dbg !942
  %7 = load i32, i32* %i, align 4, !dbg !943
  %idxprom4 = sext i32 %7 to i64, !dbg !942
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !942
  store i32 %5, i32* %arrayidx5, align 4, !dbg !944
  br label %for.inc, !dbg !945

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !946
  %inc = add nsw i32 %8, 1, !dbg !946
  store i32 %inc, i32* %i, align 4, !dbg !946
  br label %for.cond1, !dbg !947, !llvm.loop !948

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !950
  %shr = ashr i32 %9, 3, !dbg !951
  store i32 %shr, i32* %hi, align 4, !dbg !952
  %10 = load i32, i32* %tid, align 4, !dbg !953
  %and = and i32 %10, 7, !dbg !954
  store i32 %and, i32* %lo, align 4, !dbg !955
  %11 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %12 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !956
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !956
  %idxprom7 = sext i32 %13 to i64, !dbg !956
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 %idxprom7, !dbg !956
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !956
  %15 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %16 = load i32, i32* %hi, align 4, !dbg !956
  %mul9 = mul nsw i32 %16, 8, !dbg !956
  %add10 = add nsw i32 0, %mul9, !dbg !956
  %17 = load i32, i32* %lo, align 4, !dbg !956
  %add11 = add nsw i32 %add10, %17, !dbg !956
  %idxprom12 = sext i32 %add11 to i64, !dbg !956
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !956
  store i32 %14, i32* %arrayidx13, align 4, !dbg !956
  %18 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %19 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !956
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !956
  %idxprom15 = sext i32 %20 to i64, !dbg !956
  %arrayidx16 = getelementptr inbounds i32, i32* %18, i64 %idxprom15, !dbg !956
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !956
  %22 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %23 = load i32, i32* %hi, align 4, !dbg !956
  %mul17 = mul nsw i32 %23, 8, !dbg !956
  %add18 = add nsw i32 72, %mul17, !dbg !956
  %24 = load i32, i32* %lo, align 4, !dbg !956
  %add19 = add nsw i32 %add18, %24, !dbg !956
  %idxprom20 = sext i32 %add19 to i64, !dbg !956
  %arrayidx21 = getelementptr inbounds i32, i32* %22, i64 %idxprom20, !dbg !956
  store i32 %21, i32* %arrayidx21, align 4, !dbg !956
  %25 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %26 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 2, !dbg !956
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !956
  %idxprom23 = sext i32 %27 to i64, !dbg !956
  %arrayidx24 = getelementptr inbounds i32, i32* %25, i64 %idxprom23, !dbg !956
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !956
  %29 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %30 = load i32, i32* %hi, align 4, !dbg !956
  %mul25 = mul nsw i32 %30, 8, !dbg !956
  %add26 = add nsw i32 144, %mul25, !dbg !956
  %31 = load i32, i32* %lo, align 4, !dbg !956
  %add27 = add nsw i32 %add26, %31, !dbg !956
  %idxprom28 = sext i32 %add27 to i64, !dbg !956
  %arrayidx29 = getelementptr inbounds i32, i32* %29, i64 %idxprom28, !dbg !956
  store i32 %28, i32* %arrayidx29, align 4, !dbg !956
  %32 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %33 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 3, !dbg !956
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !956
  %idxprom31 = sext i32 %34 to i64, !dbg !956
  %arrayidx32 = getelementptr inbounds i32, i32* %32, i64 %idxprom31, !dbg !956
  %35 = load i32, i32* %arrayidx32, align 4, !dbg !956
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %37 = load i32, i32* %hi, align 4, !dbg !956
  %mul33 = mul nsw i32 %37, 8, !dbg !956
  %add34 = add nsw i32 216, %mul33, !dbg !956
  %38 = load i32, i32* %lo, align 4, !dbg !956
  %add35 = add nsw i32 %add34, %38, !dbg !956
  %idxprom36 = sext i32 %add35 to i64, !dbg !956
  %arrayidx37 = getelementptr inbounds i32, i32* %36, i64 %idxprom36, !dbg !956
  store i32 %35, i32* %arrayidx37, align 4, !dbg !956
  %39 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %40 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx38 = getelementptr inbounds i32, i32* %40, i64 4, !dbg !956
  %41 = load i32, i32* %arrayidx38, align 4, !dbg !956
  %idxprom39 = sext i32 %41 to i64, !dbg !956
  %arrayidx40 = getelementptr inbounds i32, i32* %39, i64 %idxprom39, !dbg !956
  %42 = load i32, i32* %arrayidx40, align 4, !dbg !956
  %43 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %44 = load i32, i32* %hi, align 4, !dbg !956
  %mul41 = mul nsw i32 %44, 8, !dbg !956
  %add42 = add nsw i32 288, %mul41, !dbg !956
  %45 = load i32, i32* %lo, align 4, !dbg !956
  %add43 = add nsw i32 %add42, %45, !dbg !956
  %idxprom44 = sext i32 %add43 to i64, !dbg !956
  %arrayidx45 = getelementptr inbounds i32, i32* %43, i64 %idxprom44, !dbg !956
  store i32 %42, i32* %arrayidx45, align 4, !dbg !956
  %46 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %47 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 5, !dbg !956
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !956
  %idxprom47 = sext i32 %48 to i64, !dbg !956
  %arrayidx48 = getelementptr inbounds i32, i32* %46, i64 %idxprom47, !dbg !956
  %49 = load i32, i32* %arrayidx48, align 4, !dbg !956
  %50 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %51 = load i32, i32* %hi, align 4, !dbg !956
  %mul49 = mul nsw i32 %51, 8, !dbg !956
  %add50 = add nsw i32 360, %mul49, !dbg !956
  %52 = load i32, i32* %lo, align 4, !dbg !956
  %add51 = add nsw i32 %add50, %52, !dbg !956
  %idxprom52 = sext i32 %add51 to i64, !dbg !956
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 %idxprom52, !dbg !956
  store i32 %49, i32* %arrayidx53, align 4, !dbg !956
  %53 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %54 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx54 = getelementptr inbounds i32, i32* %54, i64 6, !dbg !956
  %55 = load i32, i32* %arrayidx54, align 4, !dbg !956
  %idxprom55 = sext i32 %55 to i64, !dbg !956
  %arrayidx56 = getelementptr inbounds i32, i32* %53, i64 %idxprom55, !dbg !956
  %56 = load i32, i32* %arrayidx56, align 4, !dbg !956
  %57 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %58 = load i32, i32* %hi, align 4, !dbg !956
  %mul57 = mul nsw i32 %58, 8, !dbg !956
  %add58 = add nsw i32 432, %mul57, !dbg !956
  %59 = load i32, i32* %lo, align 4, !dbg !956
  %add59 = add nsw i32 %add58, %59, !dbg !956
  %idxprom60 = sext i32 %add59 to i64, !dbg !956
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !956
  store i32 %56, i32* %arrayidx61, align 4, !dbg !956
  %60 = load i32*, i32** %data_x.addr, align 8, !dbg !956
  %61 = load i32*, i32** %reversed.addr, align 8, !dbg !956
  %arrayidx62 = getelementptr inbounds i32, i32* %61, i64 7, !dbg !956
  %62 = load i32, i32* %arrayidx62, align 4, !dbg !956
  %idxprom63 = sext i32 %62 to i64, !dbg !956
  %arrayidx64 = getelementptr inbounds i32, i32* %60, i64 %idxprom63, !dbg !956
  %63 = load i32, i32* %arrayidx64, align 4, !dbg !956
  %64 = load i32*, i32** %smem.addr, align 8, !dbg !956
  %65 = load i32, i32* %hi, align 4, !dbg !956
  %mul65 = mul nsw i32 %65, 8, !dbg !956
  %add66 = add nsw i32 504, %mul65, !dbg !956
  %66 = load i32, i32* %lo, align 4, !dbg !956
  %add67 = add nsw i32 %add66, %66, !dbg !956
  %idxprom68 = sext i32 %add67 to i64, !dbg !956
  %arrayidx69 = getelementptr inbounds i32, i32* %64, i64 %idxprom68, !dbg !956
  store i32 %63, i32* %arrayidx69, align 4, !dbg !956
  br label %for.inc70, !dbg !958

for.inc70:                                        ; preds = %for.end
  %67 = load i32, i32* %tid, align 4, !dbg !959
  %inc71 = add nsw i32 %67, 1, !dbg !959
  store i32 %inc71, i32* %tid, align 4, !dbg !959
  br label %for.cond, !dbg !960, !llvm.loop !961

for.end72:                                        ; preds = %for.cond
  ret void, !dbg !963
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step8(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !964 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !965, metadata !DIExpression()), !dbg !966
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !967, metadata !DIExpression()), !dbg !968
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !969, metadata !DIExpression()), !dbg !970
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !971, metadata !DIExpression()), !dbg !972
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !973, metadata !DIExpression()), !dbg !974
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !975, metadata !DIExpression()), !dbg !976
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !977, metadata !DIExpression()), !dbg !978
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !979, metadata !DIExpression()), !dbg !980
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !981, metadata !DIExpression()), !dbg !982
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !983, metadata !DIExpression()), !dbg !984
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !985, metadata !DIExpression()), !dbg !986
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !987, metadata !DIExpression()), !dbg !988
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !989, metadata !DIExpression()), !dbg !990
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !991, metadata !DIExpression()), !dbg !992
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !993, metadata !DIExpression()), !dbg !994
  call void @llvm.dbg.declare(metadata i32* %i, metadata !995, metadata !DIExpression()), !dbg !996
  call void @llvm.dbg.declare(metadata i32* %j, metadata !997, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !999, metadata !DIExpression()), !dbg !1000
  store i32 64, i32* %stride, align 4, !dbg !1001
  br label %outer, !dbg !1002

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !1003), !dbg !1004
  store i32 0, i32* %tid, align 4, !dbg !1005
  br label %for.cond, !dbg !1007

for.cond:                                         ; preds = %for.inc66, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !1008
  %cmp = icmp slt i32 %0, 64, !dbg !1010
  br i1 %cmp, label %for.body, label %for.end68, !dbg !1011

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !1012

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !1013), !dbg !1015
  store i32 0, i32* %i, align 4, !dbg !1016
  br label %for.cond1, !dbg !1018

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !1019
  %cmp2 = icmp slt i32 %1, 8, !dbg !1021
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1022

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1023
  %3 = load i32, i32* %tid, align 4, !dbg !1025
  %mul = mul nsw i32 %3, 8, !dbg !1026
  %4 = load i32, i32* %i, align 4, !dbg !1027
  %add = add nsw i32 %mul, %4, !dbg !1028
  %idxprom = sext i32 %add to i64, !dbg !1023
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !1023
  %5 = load i32, i32* %arrayidx, align 4, !dbg !1023
  %6 = load i32*, i32** %data_x.addr, align 8, !dbg !1029
  %7 = load i32, i32* %i, align 4, !dbg !1030
  %idxprom4 = sext i32 %7 to i64, !dbg !1029
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !1029
  store i32 %5, i32* %arrayidx5, align 4, !dbg !1031
  br label %for.inc, !dbg !1032

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !1033
  %inc = add nsw i32 %8, 1, !dbg !1033
  store i32 %inc, i32* %i, align 4, !dbg !1033
  br label %for.cond1, !dbg !1034, !llvm.loop !1035

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !1037
  %shr = ashr i32 %9, 3, !dbg !1038
  store i32 %shr, i32* %hi, align 4, !dbg !1039
  %10 = load i32, i32* %tid, align 4, !dbg !1040
  %and = and i32 %10, 7, !dbg !1041
  store i32 %and, i32* %lo, align 4, !dbg !1042
  %11 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %12 = load i32, i32* %hi, align 4, !dbg !1043
  %mul6 = mul nsw i32 %12, 72, !dbg !1043
  %add7 = add nsw i32 0, %mul6, !dbg !1043
  %13 = load i32, i32* %lo, align 4, !dbg !1043
  %add8 = add nsw i32 %add7, %13, !dbg !1043
  %idxprom9 = sext i32 %add8 to i64, !dbg !1043
  %arrayidx10 = getelementptr inbounds i32, i32* %11, i64 %idxprom9, !dbg !1043
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !1043
  %15 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !1043
  store i32 %14, i32* %arrayidx11, align 4, !dbg !1043
  %16 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %17 = load i32, i32* %hi, align 4, !dbg !1043
  %mul12 = mul nsw i32 %17, 72, !dbg !1043
  %add13 = add nsw i32 8, %mul12, !dbg !1043
  %18 = load i32, i32* %lo, align 4, !dbg !1043
  %add14 = add nsw i32 %add13, %18, !dbg !1043
  %idxprom15 = sext i32 %add14 to i64, !dbg !1043
  %arrayidx16 = getelementptr inbounds i32, i32* %16, i64 %idxprom15, !dbg !1043
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !1043
  %20 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx17 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !1043
  store i32 %19, i32* %arrayidx17, align 4, !dbg !1043
  %21 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %22 = load i32, i32* %hi, align 4, !dbg !1043
  %mul18 = mul nsw i32 %22, 72, !dbg !1043
  %add19 = add nsw i32 16, %mul18, !dbg !1043
  %23 = load i32, i32* %lo, align 4, !dbg !1043
  %add20 = add nsw i32 %add19, %23, !dbg !1043
  %idxprom21 = sext i32 %add20 to i64, !dbg !1043
  %arrayidx22 = getelementptr inbounds i32, i32* %21, i64 %idxprom21, !dbg !1043
  %24 = load i32, i32* %arrayidx22, align 4, !dbg !1043
  %25 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 2, !dbg !1043
  store i32 %24, i32* %arrayidx23, align 4, !dbg !1043
  %26 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %27 = load i32, i32* %hi, align 4, !dbg !1043
  %mul24 = mul nsw i32 %27, 72, !dbg !1043
  %add25 = add nsw i32 24, %mul24, !dbg !1043
  %28 = load i32, i32* %lo, align 4, !dbg !1043
  %add26 = add nsw i32 %add25, %28, !dbg !1043
  %idxprom27 = sext i32 %add26 to i64, !dbg !1043
  %arrayidx28 = getelementptr inbounds i32, i32* %26, i64 %idxprom27, !dbg !1043
  %29 = load i32, i32* %arrayidx28, align 4, !dbg !1043
  %30 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx29 = getelementptr inbounds i32, i32* %30, i64 3, !dbg !1043
  store i32 %29, i32* %arrayidx29, align 4, !dbg !1043
  %31 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %32 = load i32, i32* %hi, align 4, !dbg !1043
  %mul30 = mul nsw i32 %32, 72, !dbg !1043
  %add31 = add nsw i32 32, %mul30, !dbg !1043
  %33 = load i32, i32* %lo, align 4, !dbg !1043
  %add32 = add nsw i32 %add31, %33, !dbg !1043
  %idxprom33 = sext i32 %add32 to i64, !dbg !1043
  %arrayidx34 = getelementptr inbounds i32, i32* %31, i64 %idxprom33, !dbg !1043
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !1043
  %35 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx35 = getelementptr inbounds i32, i32* %35, i64 4, !dbg !1043
  store i32 %34, i32* %arrayidx35, align 4, !dbg !1043
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %37 = load i32, i32* %hi, align 4, !dbg !1043
  %mul36 = mul nsw i32 %37, 72, !dbg !1043
  %add37 = add nsw i32 40, %mul36, !dbg !1043
  %38 = load i32, i32* %lo, align 4, !dbg !1043
  %add38 = add nsw i32 %add37, %38, !dbg !1043
  %idxprom39 = sext i32 %add38 to i64, !dbg !1043
  %arrayidx40 = getelementptr inbounds i32, i32* %36, i64 %idxprom39, !dbg !1043
  %39 = load i32, i32* %arrayidx40, align 4, !dbg !1043
  %40 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx41 = getelementptr inbounds i32, i32* %40, i64 5, !dbg !1043
  store i32 %39, i32* %arrayidx41, align 4, !dbg !1043
  %41 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %42 = load i32, i32* %hi, align 4, !dbg !1043
  %mul42 = mul nsw i32 %42, 72, !dbg !1043
  %add43 = add nsw i32 48, %mul42, !dbg !1043
  %43 = load i32, i32* %lo, align 4, !dbg !1043
  %add44 = add nsw i32 %add43, %43, !dbg !1043
  %idxprom45 = sext i32 %add44 to i64, !dbg !1043
  %arrayidx46 = getelementptr inbounds i32, i32* %41, i64 %idxprom45, !dbg !1043
  %44 = load i32, i32* %arrayidx46, align 4, !dbg !1043
  %45 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 6, !dbg !1043
  store i32 %44, i32* %arrayidx47, align 4, !dbg !1043
  %46 = load i32*, i32** %smem.addr, align 8, !dbg !1043
  %47 = load i32, i32* %hi, align 4, !dbg !1043
  %mul48 = mul nsw i32 %47, 72, !dbg !1043
  %add49 = add nsw i32 56, %mul48, !dbg !1043
  %48 = load i32, i32* %lo, align 4, !dbg !1043
  %add50 = add nsw i32 %add49, %48, !dbg !1043
  %idxprom51 = sext i32 %add50 to i64, !dbg !1043
  %arrayidx52 = getelementptr inbounds i32, i32* %46, i64 %idxprom51, !dbg !1043
  %49 = load i32, i32* %arrayidx52, align 4, !dbg !1043
  %50 = load i32*, i32** %data_x.addr, align 8, !dbg !1043
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 7, !dbg !1043
  store i32 %49, i32* %arrayidx53, align 4, !dbg !1043
  br label %store, !dbg !1043

store:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !1045), !dbg !1046
  store i32 0, i32* %i, align 4, !dbg !1047
  br label %for.cond54, !dbg !1049

for.cond54:                                       ; preds = %for.inc63, %store
  %51 = load i32, i32* %i, align 4, !dbg !1050
  %cmp55 = icmp slt i32 %51, 8, !dbg !1052
  br i1 %cmp55, label %for.body56, label %for.end65, !dbg !1053

for.body56:                                       ; preds = %for.cond54
  %52 = load i32*, i32** %data_x.addr, align 8, !dbg !1054
  %53 = load i32, i32* %i, align 4, !dbg !1056
  %idxprom57 = sext i32 %53 to i64, !dbg !1054
  %arrayidx58 = getelementptr inbounds i32, i32* %52, i64 %idxprom57, !dbg !1054
  %54 = load i32, i32* %arrayidx58, align 4, !dbg !1054
  %55 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1057
  %56 = load i32, i32* %tid, align 4, !dbg !1058
  %mul59 = mul nsw i32 %56, 8, !dbg !1059
  %57 = load i32, i32* %i, align 4, !dbg !1060
  %add60 = add nsw i32 %mul59, %57, !dbg !1061
  %idxprom61 = sext i32 %add60 to i64, !dbg !1057
  %arrayidx62 = getelementptr inbounds i32, i32* %55, i64 %idxprom61, !dbg !1057
  store i32 %54, i32* %arrayidx62, align 4, !dbg !1062
  br label %for.inc63, !dbg !1063

for.inc63:                                        ; preds = %for.body56
  %58 = load i32, i32* %i, align 4, !dbg !1064
  %inc64 = add nsw i32 %58, 1, !dbg !1064
  store i32 %inc64, i32* %i, align 4, !dbg !1064
  br label %for.cond54, !dbg !1065, !llvm.loop !1066

for.end65:                                        ; preds = %for.cond54
  br label %for.inc66, !dbg !1068

for.inc66:                                        ; preds = %for.end65
  %59 = load i32, i32* %tid, align 4, !dbg !1069
  %inc67 = add nsw i32 %59, 1, !dbg !1069
  store i32 %inc67, i32* %tid, align 4, !dbg !1069
  br label %for.cond, !dbg !1070, !llvm.loop !1071

for.end68:                                        ; preds = %for.cond
  ret void, !dbg !1073
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step9(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !1074 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !1075, metadata !DIExpression()), !dbg !1076
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !1077, metadata !DIExpression()), !dbg !1078
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !1079, metadata !DIExpression()), !dbg !1080
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !1081, metadata !DIExpression()), !dbg !1082
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !1083, metadata !DIExpression()), !dbg !1084
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !1085, metadata !DIExpression()), !dbg !1086
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !1087, metadata !DIExpression()), !dbg !1088
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !1089, metadata !DIExpression()), !dbg !1090
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !1091, metadata !DIExpression()), !dbg !1092
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !1093, metadata !DIExpression()), !dbg !1094
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !1095, metadata !DIExpression()), !dbg !1096
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !1097, metadata !DIExpression()), !dbg !1098
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !1099, metadata !DIExpression()), !dbg !1100
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !1101, metadata !DIExpression()), !dbg !1102
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !1103, metadata !DIExpression()), !dbg !1104
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1105, metadata !DIExpression()), !dbg !1106
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1107, metadata !DIExpression()), !dbg !1108
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !1109, metadata !DIExpression()), !dbg !1110
  store i32 64, i32* %stride, align 4, !dbg !1111
  br label %outer, !dbg !1112

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !1113), !dbg !1114
  store i32 0, i32* %tid, align 4, !dbg !1115
  br label %for.cond, !dbg !1117

for.cond:                                         ; preds = %for.inc70, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !1118
  %cmp = icmp slt i32 %0, 64, !dbg !1120
  br i1 %cmp, label %for.body, label %for.end72, !dbg !1121

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !1122

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !1123), !dbg !1125
  store i32 0, i32* %i, align 4, !dbg !1126
  br label %for.cond1, !dbg !1128

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !1129
  %cmp2 = icmp slt i32 %1, 8, !dbg !1131
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1132

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1133
  %3 = load i32, i32* %tid, align 4, !dbg !1135
  %mul = mul nsw i32 %3, 8, !dbg !1136
  %4 = load i32, i32* %i, align 4, !dbg !1137
  %add = add nsw i32 %mul, %4, !dbg !1138
  %idxprom = sext i32 %add to i64, !dbg !1133
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !1133
  %5 = load i32, i32* %arrayidx, align 4, !dbg !1133
  %6 = load i32*, i32** %data_y.addr, align 8, !dbg !1139
  %7 = load i32, i32* %i, align 4, !dbg !1140
  %idxprom4 = sext i32 %7 to i64, !dbg !1139
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !1139
  store i32 %5, i32* %arrayidx5, align 4, !dbg !1141
  br label %for.inc, !dbg !1142

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !1143
  %inc = add nsw i32 %8, 1, !dbg !1143
  store i32 %inc, i32* %i, align 4, !dbg !1143
  br label %for.cond1, !dbg !1144, !llvm.loop !1145

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !1147
  %shr = ashr i32 %9, 3, !dbg !1148
  store i32 %shr, i32* %hi, align 4, !dbg !1149
  %10 = load i32, i32* %tid, align 4, !dbg !1150
  %and = and i32 %10, 7, !dbg !1151
  store i32 %and, i32* %lo, align 4, !dbg !1152
  %11 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %12 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !1153
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !1153
  %idxprom7 = sext i32 %13 to i64, !dbg !1153
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 %idxprom7, !dbg !1153
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !1153
  %15 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %16 = load i32, i32* %hi, align 4, !dbg !1153
  %mul9 = mul nsw i32 %16, 8, !dbg !1153
  %add10 = add nsw i32 0, %mul9, !dbg !1153
  %17 = load i32, i32* %lo, align 4, !dbg !1153
  %add11 = add nsw i32 %add10, %17, !dbg !1153
  %idxprom12 = sext i32 %add11 to i64, !dbg !1153
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom12, !dbg !1153
  store i32 %14, i32* %arrayidx13, align 4, !dbg !1153
  %18 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %19 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !1153
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !1153
  %idxprom15 = sext i32 %20 to i64, !dbg !1153
  %arrayidx16 = getelementptr inbounds i32, i32* %18, i64 %idxprom15, !dbg !1153
  %21 = load i32, i32* %arrayidx16, align 4, !dbg !1153
  %22 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %23 = load i32, i32* %hi, align 4, !dbg !1153
  %mul17 = mul nsw i32 %23, 8, !dbg !1153
  %add18 = add nsw i32 72, %mul17, !dbg !1153
  %24 = load i32, i32* %lo, align 4, !dbg !1153
  %add19 = add nsw i32 %add18, %24, !dbg !1153
  %idxprom20 = sext i32 %add19 to i64, !dbg !1153
  %arrayidx21 = getelementptr inbounds i32, i32* %22, i64 %idxprom20, !dbg !1153
  store i32 %21, i32* %arrayidx21, align 4, !dbg !1153
  %25 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %26 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 2, !dbg !1153
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !1153
  %idxprom23 = sext i32 %27 to i64, !dbg !1153
  %arrayidx24 = getelementptr inbounds i32, i32* %25, i64 %idxprom23, !dbg !1153
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !1153
  %29 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %30 = load i32, i32* %hi, align 4, !dbg !1153
  %mul25 = mul nsw i32 %30, 8, !dbg !1153
  %add26 = add nsw i32 144, %mul25, !dbg !1153
  %31 = load i32, i32* %lo, align 4, !dbg !1153
  %add27 = add nsw i32 %add26, %31, !dbg !1153
  %idxprom28 = sext i32 %add27 to i64, !dbg !1153
  %arrayidx29 = getelementptr inbounds i32, i32* %29, i64 %idxprom28, !dbg !1153
  store i32 %28, i32* %arrayidx29, align 4, !dbg !1153
  %32 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %33 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 3, !dbg !1153
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !1153
  %idxprom31 = sext i32 %34 to i64, !dbg !1153
  %arrayidx32 = getelementptr inbounds i32, i32* %32, i64 %idxprom31, !dbg !1153
  %35 = load i32, i32* %arrayidx32, align 4, !dbg !1153
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %37 = load i32, i32* %hi, align 4, !dbg !1153
  %mul33 = mul nsw i32 %37, 8, !dbg !1153
  %add34 = add nsw i32 216, %mul33, !dbg !1153
  %38 = load i32, i32* %lo, align 4, !dbg !1153
  %add35 = add nsw i32 %add34, %38, !dbg !1153
  %idxprom36 = sext i32 %add35 to i64, !dbg !1153
  %arrayidx37 = getelementptr inbounds i32, i32* %36, i64 %idxprom36, !dbg !1153
  store i32 %35, i32* %arrayidx37, align 4, !dbg !1153
  %39 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %40 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx38 = getelementptr inbounds i32, i32* %40, i64 4, !dbg !1153
  %41 = load i32, i32* %arrayidx38, align 4, !dbg !1153
  %idxprom39 = sext i32 %41 to i64, !dbg !1153
  %arrayidx40 = getelementptr inbounds i32, i32* %39, i64 %idxprom39, !dbg !1153
  %42 = load i32, i32* %arrayidx40, align 4, !dbg !1153
  %43 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %44 = load i32, i32* %hi, align 4, !dbg !1153
  %mul41 = mul nsw i32 %44, 8, !dbg !1153
  %add42 = add nsw i32 288, %mul41, !dbg !1153
  %45 = load i32, i32* %lo, align 4, !dbg !1153
  %add43 = add nsw i32 %add42, %45, !dbg !1153
  %idxprom44 = sext i32 %add43 to i64, !dbg !1153
  %arrayidx45 = getelementptr inbounds i32, i32* %43, i64 %idxprom44, !dbg !1153
  store i32 %42, i32* %arrayidx45, align 4, !dbg !1153
  %46 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %47 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 5, !dbg !1153
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !1153
  %idxprom47 = sext i32 %48 to i64, !dbg !1153
  %arrayidx48 = getelementptr inbounds i32, i32* %46, i64 %idxprom47, !dbg !1153
  %49 = load i32, i32* %arrayidx48, align 4, !dbg !1153
  %50 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %51 = load i32, i32* %hi, align 4, !dbg !1153
  %mul49 = mul nsw i32 %51, 8, !dbg !1153
  %add50 = add nsw i32 360, %mul49, !dbg !1153
  %52 = load i32, i32* %lo, align 4, !dbg !1153
  %add51 = add nsw i32 %add50, %52, !dbg !1153
  %idxprom52 = sext i32 %add51 to i64, !dbg !1153
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 %idxprom52, !dbg !1153
  store i32 %49, i32* %arrayidx53, align 4, !dbg !1153
  %53 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %54 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx54 = getelementptr inbounds i32, i32* %54, i64 6, !dbg !1153
  %55 = load i32, i32* %arrayidx54, align 4, !dbg !1153
  %idxprom55 = sext i32 %55 to i64, !dbg !1153
  %arrayidx56 = getelementptr inbounds i32, i32* %53, i64 %idxprom55, !dbg !1153
  %56 = load i32, i32* %arrayidx56, align 4, !dbg !1153
  %57 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %58 = load i32, i32* %hi, align 4, !dbg !1153
  %mul57 = mul nsw i32 %58, 8, !dbg !1153
  %add58 = add nsw i32 432, %mul57, !dbg !1153
  %59 = load i32, i32* %lo, align 4, !dbg !1153
  %add59 = add nsw i32 %add58, %59, !dbg !1153
  %idxprom60 = sext i32 %add59 to i64, !dbg !1153
  %arrayidx61 = getelementptr inbounds i32, i32* %57, i64 %idxprom60, !dbg !1153
  store i32 %56, i32* %arrayidx61, align 4, !dbg !1153
  %60 = load i32*, i32** %data_y.addr, align 8, !dbg !1153
  %61 = load i32*, i32** %reversed.addr, align 8, !dbg !1153
  %arrayidx62 = getelementptr inbounds i32, i32* %61, i64 7, !dbg !1153
  %62 = load i32, i32* %arrayidx62, align 4, !dbg !1153
  %idxprom63 = sext i32 %62 to i64, !dbg !1153
  %arrayidx64 = getelementptr inbounds i32, i32* %60, i64 %idxprom63, !dbg !1153
  %63 = load i32, i32* %arrayidx64, align 4, !dbg !1153
  %64 = load i32*, i32** %smem.addr, align 8, !dbg !1153
  %65 = load i32, i32* %hi, align 4, !dbg !1153
  %mul65 = mul nsw i32 %65, 8, !dbg !1153
  %add66 = add nsw i32 504, %mul65, !dbg !1153
  %66 = load i32, i32* %lo, align 4, !dbg !1153
  %add67 = add nsw i32 %add66, %66, !dbg !1153
  %idxprom68 = sext i32 %add67 to i64, !dbg !1153
  %arrayidx69 = getelementptr inbounds i32, i32* %64, i64 %idxprom68, !dbg !1153
  store i32 %63, i32* %arrayidx69, align 4, !dbg !1153
  br label %for.inc70, !dbg !1155

for.inc70:                                        ; preds = %for.end
  %67 = load i32, i32* %tid, align 4, !dbg !1156
  %inc71 = add nsw i32 %67, 1, !dbg !1156
  store i32 %inc71, i32* %tid, align 4, !dbg !1156
  br label %for.cond, !dbg !1157, !llvm.loop !1158

for.end72:                                        ; preds = %for.cond
  ret void, !dbg !1160
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step10(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !1161 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !1162, metadata !DIExpression()), !dbg !1163
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !1164, metadata !DIExpression()), !dbg !1165
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !1166, metadata !DIExpression()), !dbg !1167
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !1168, metadata !DIExpression()), !dbg !1169
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !1170, metadata !DIExpression()), !dbg !1171
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !1172, metadata !DIExpression()), !dbg !1173
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !1174, metadata !DIExpression()), !dbg !1175
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !1176, metadata !DIExpression()), !dbg !1177
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !1178, metadata !DIExpression()), !dbg !1179
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !1180, metadata !DIExpression()), !dbg !1181
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !1182, metadata !DIExpression()), !dbg !1183
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !1184, metadata !DIExpression()), !dbg !1185
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !1186, metadata !DIExpression()), !dbg !1187
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !1188, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !1190, metadata !DIExpression()), !dbg !1191
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1192, metadata !DIExpression()), !dbg !1193
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1194, metadata !DIExpression()), !dbg !1195
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !1196, metadata !DIExpression()), !dbg !1197
  store i32 64, i32* %stride, align 4, !dbg !1198
  br label %outer, !dbg !1199

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !1200), !dbg !1201
  store i32 0, i32* %tid, align 4, !dbg !1202
  br label %for.cond, !dbg !1204

for.cond:                                         ; preds = %for.inc66, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !1205
  %cmp = icmp slt i32 %0, 64, !dbg !1207
  br i1 %cmp, label %for.body, label %for.end68, !dbg !1208

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !1209

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !1210), !dbg !1212
  store i32 0, i32* %i, align 4, !dbg !1213
  br label %for.cond1, !dbg !1215

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !1216
  %cmp2 = icmp slt i32 %1, 8, !dbg !1218
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1219

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1220
  %3 = load i32, i32* %tid, align 4, !dbg !1222
  %mul = mul nsw i32 %3, 8, !dbg !1223
  %4 = load i32, i32* %i, align 4, !dbg !1224
  %add = add nsw i32 %mul, %4, !dbg !1225
  %idxprom = sext i32 %add to i64, !dbg !1220
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !1220
  %5 = load i32, i32* %arrayidx, align 4, !dbg !1220
  %6 = load i32*, i32** %data_y.addr, align 8, !dbg !1226
  %7 = load i32, i32* %i, align 4, !dbg !1227
  %idxprom4 = sext i32 %7 to i64, !dbg !1226
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !1226
  store i32 %5, i32* %arrayidx5, align 4, !dbg !1228
  br label %for.inc, !dbg !1229

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4, !dbg !1230
  %inc = add nsw i32 %8, 1, !dbg !1230
  store i32 %inc, i32* %i, align 4, !dbg !1230
  br label %for.cond1, !dbg !1231, !llvm.loop !1232

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %tid, align 4, !dbg !1234
  %shr = ashr i32 %9, 3, !dbg !1235
  store i32 %shr, i32* %hi, align 4, !dbg !1236
  %10 = load i32, i32* %tid, align 4, !dbg !1237
  %and = and i32 %10, 7, !dbg !1238
  store i32 %and, i32* %lo, align 4, !dbg !1239
  %11 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %12 = load i32, i32* %hi, align 4, !dbg !1240
  %mul6 = mul nsw i32 %12, 72, !dbg !1240
  %add7 = add nsw i32 0, %mul6, !dbg !1240
  %13 = load i32, i32* %lo, align 4, !dbg !1240
  %add8 = add nsw i32 %add7, %13, !dbg !1240
  %idxprom9 = sext i32 %add8 to i64, !dbg !1240
  %arrayidx10 = getelementptr inbounds i32, i32* %11, i64 %idxprom9, !dbg !1240
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !1240
  %15 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !1240
  store i32 %14, i32* %arrayidx11, align 4, !dbg !1240
  %16 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %17 = load i32, i32* %hi, align 4, !dbg !1240
  %mul12 = mul nsw i32 %17, 72, !dbg !1240
  %add13 = add nsw i32 8, %mul12, !dbg !1240
  %18 = load i32, i32* %lo, align 4, !dbg !1240
  %add14 = add nsw i32 %add13, %18, !dbg !1240
  %idxprom15 = sext i32 %add14 to i64, !dbg !1240
  %arrayidx16 = getelementptr inbounds i32, i32* %16, i64 %idxprom15, !dbg !1240
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !1240
  %20 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx17 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !1240
  store i32 %19, i32* %arrayidx17, align 4, !dbg !1240
  %21 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %22 = load i32, i32* %hi, align 4, !dbg !1240
  %mul18 = mul nsw i32 %22, 72, !dbg !1240
  %add19 = add nsw i32 16, %mul18, !dbg !1240
  %23 = load i32, i32* %lo, align 4, !dbg !1240
  %add20 = add nsw i32 %add19, %23, !dbg !1240
  %idxprom21 = sext i32 %add20 to i64, !dbg !1240
  %arrayidx22 = getelementptr inbounds i32, i32* %21, i64 %idxprom21, !dbg !1240
  %24 = load i32, i32* %arrayidx22, align 4, !dbg !1240
  %25 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 2, !dbg !1240
  store i32 %24, i32* %arrayidx23, align 4, !dbg !1240
  %26 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %27 = load i32, i32* %hi, align 4, !dbg !1240
  %mul24 = mul nsw i32 %27, 72, !dbg !1240
  %add25 = add nsw i32 24, %mul24, !dbg !1240
  %28 = load i32, i32* %lo, align 4, !dbg !1240
  %add26 = add nsw i32 %add25, %28, !dbg !1240
  %idxprom27 = sext i32 %add26 to i64, !dbg !1240
  %arrayidx28 = getelementptr inbounds i32, i32* %26, i64 %idxprom27, !dbg !1240
  %29 = load i32, i32* %arrayidx28, align 4, !dbg !1240
  %30 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx29 = getelementptr inbounds i32, i32* %30, i64 3, !dbg !1240
  store i32 %29, i32* %arrayidx29, align 4, !dbg !1240
  %31 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %32 = load i32, i32* %hi, align 4, !dbg !1240
  %mul30 = mul nsw i32 %32, 72, !dbg !1240
  %add31 = add nsw i32 32, %mul30, !dbg !1240
  %33 = load i32, i32* %lo, align 4, !dbg !1240
  %add32 = add nsw i32 %add31, %33, !dbg !1240
  %idxprom33 = sext i32 %add32 to i64, !dbg !1240
  %arrayidx34 = getelementptr inbounds i32, i32* %31, i64 %idxprom33, !dbg !1240
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !1240
  %35 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx35 = getelementptr inbounds i32, i32* %35, i64 4, !dbg !1240
  store i32 %34, i32* %arrayidx35, align 4, !dbg !1240
  %36 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %37 = load i32, i32* %hi, align 4, !dbg !1240
  %mul36 = mul nsw i32 %37, 72, !dbg !1240
  %add37 = add nsw i32 40, %mul36, !dbg !1240
  %38 = load i32, i32* %lo, align 4, !dbg !1240
  %add38 = add nsw i32 %add37, %38, !dbg !1240
  %idxprom39 = sext i32 %add38 to i64, !dbg !1240
  %arrayidx40 = getelementptr inbounds i32, i32* %36, i64 %idxprom39, !dbg !1240
  %39 = load i32, i32* %arrayidx40, align 4, !dbg !1240
  %40 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx41 = getelementptr inbounds i32, i32* %40, i64 5, !dbg !1240
  store i32 %39, i32* %arrayidx41, align 4, !dbg !1240
  %41 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %42 = load i32, i32* %hi, align 4, !dbg !1240
  %mul42 = mul nsw i32 %42, 72, !dbg !1240
  %add43 = add nsw i32 48, %mul42, !dbg !1240
  %43 = load i32, i32* %lo, align 4, !dbg !1240
  %add44 = add nsw i32 %add43, %43, !dbg !1240
  %idxprom45 = sext i32 %add44 to i64, !dbg !1240
  %arrayidx46 = getelementptr inbounds i32, i32* %41, i64 %idxprom45, !dbg !1240
  %44 = load i32, i32* %arrayidx46, align 4, !dbg !1240
  %45 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 6, !dbg !1240
  store i32 %44, i32* %arrayidx47, align 4, !dbg !1240
  %46 = load i32*, i32** %smem.addr, align 8, !dbg !1240
  %47 = load i32, i32* %hi, align 4, !dbg !1240
  %mul48 = mul nsw i32 %47, 72, !dbg !1240
  %add49 = add nsw i32 56, %mul48, !dbg !1240
  %48 = load i32, i32* %lo, align 4, !dbg !1240
  %add50 = add nsw i32 %add49, %48, !dbg !1240
  %idxprom51 = sext i32 %add50 to i64, !dbg !1240
  %arrayidx52 = getelementptr inbounds i32, i32* %46, i64 %idxprom51, !dbg !1240
  %49 = load i32, i32* %arrayidx52, align 4, !dbg !1240
  %50 = load i32*, i32** %data_y.addr, align 8, !dbg !1240
  %arrayidx53 = getelementptr inbounds i32, i32* %50, i64 7, !dbg !1240
  store i32 %49, i32* %arrayidx53, align 4, !dbg !1240
  br label %store, !dbg !1240

store:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !1242), !dbg !1243
  store i32 0, i32* %i, align 4, !dbg !1244
  br label %for.cond54, !dbg !1246

for.cond54:                                       ; preds = %for.inc63, %store
  %51 = load i32, i32* %i, align 4, !dbg !1247
  %cmp55 = icmp slt i32 %51, 8, !dbg !1249
  br i1 %cmp55, label %for.body56, label %for.end65, !dbg !1250

for.body56:                                       ; preds = %for.cond54
  %52 = load i32*, i32** %data_y.addr, align 8, !dbg !1251
  %53 = load i32, i32* %i, align 4, !dbg !1253
  %idxprom57 = sext i32 %53 to i64, !dbg !1251
  %arrayidx58 = getelementptr inbounds i32, i32* %52, i64 %idxprom57, !dbg !1251
  %54 = load i32, i32* %arrayidx58, align 4, !dbg !1251
  %55 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1254
  %56 = load i32, i32* %tid, align 4, !dbg !1255
  %mul59 = mul nsw i32 %56, 8, !dbg !1256
  %57 = load i32, i32* %i, align 4, !dbg !1257
  %add60 = add nsw i32 %mul59, %57, !dbg !1258
  %idxprom61 = sext i32 %add60 to i64, !dbg !1254
  %arrayidx62 = getelementptr inbounds i32, i32* %55, i64 %idxprom61, !dbg !1254
  store i32 %54, i32* %arrayidx62, align 4, !dbg !1259
  br label %for.inc63, !dbg !1260

for.inc63:                                        ; preds = %for.body56
  %58 = load i32, i32* %i, align 4, !dbg !1261
  %inc64 = add nsw i32 %58, 1, !dbg !1261
  store i32 %inc64, i32* %i, align 4, !dbg !1261
  br label %for.cond54, !dbg !1262, !llvm.loop !1263

for.end65:                                        ; preds = %for.cond54
  br label %for.inc66, !dbg !1265

for.inc66:                                        ; preds = %for.end65
  %59 = load i32, i32* %tid, align 4, !dbg !1266
  %inc67 = add nsw i32 %59, 1, !dbg !1266
  store i32 %inc67, i32* %tid, align 4, !dbg !1266
  br label %for.cond, !dbg !1267, !llvm.loop !1268

for.end68:                                        ; preds = %for.cond
  ret void, !dbg !1270
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !1271 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  %exp_1_8_x = alloca i32, align 4
  %exp_1_4_x = alloca i32, align 4
  %exp_3_8_x = alloca i32, align 4
  %exp_1_8_y = alloca i32, align 4
  %exp_1_4_y = alloca i32, align 4
  %exp_3_8_y = alloca i32, align 4
  %tmp_1 = alloca i32, align 4
  %tmp_2 = alloca i32, align 4
  %c0_x = alloca i32, align 4
  %c0_y = alloca i32, align 4
  %c0_x25 = alloca i32, align 4
  %c0_y27 = alloca i32, align 4
  %c0_x41 = alloca i32, align 4
  %c0_y43 = alloca i32, align 4
  %c0_x57 = alloca i32, align 4
  %c0_y59 = alloca i32, align 4
  %exp_1_44_x = alloca i32, align 4
  %exp_1_44_y = alloca i32, align 4
  %tmp = alloca i32, align 4
  %c0_x120 = alloca i32, align 4
  %c0_y122 = alloca i32, align 4
  %c0_x136 = alloca i32, align 4
  %c0_y138 = alloca i32, align 4
  %c0_x164 = alloca i32, align 4
  %c0_y166 = alloca i32, align 4
  %c0_x180 = alloca i32, align 4
  %c0_y182 = alloca i32, align 4
  %exp_1_44_x196 = alloca i32, align 4
  %exp_1_44_y197 = alloca i32, align 4
  %tmp198 = alloca i32, align 4
  %c0_x199 = alloca i32, align 4
  %c0_y201 = alloca i32, align 4
  %c0_x215 = alloca i32, align 4
  %c0_y217 = alloca i32, align 4
  %c0_x243 = alloca i32, align 4
  %c0_y245 = alloca i32, align 4
  %c0_x259 = alloca i32, align 4
  %c0_y261 = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !1272, metadata !DIExpression()), !dbg !1273
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !1274, metadata !DIExpression()), !dbg !1275
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !1276, metadata !DIExpression()), !dbg !1277
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !1278, metadata !DIExpression()), !dbg !1279
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !1280, metadata !DIExpression()), !dbg !1281
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !1282, metadata !DIExpression()), !dbg !1283
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !1284, metadata !DIExpression()), !dbg !1285
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !1286, metadata !DIExpression()), !dbg !1287
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !1288, metadata !DIExpression()), !dbg !1289
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !1290, metadata !DIExpression()), !dbg !1291
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !1292, metadata !DIExpression()), !dbg !1293
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !1294, metadata !DIExpression()), !dbg !1295
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !1296, metadata !DIExpression()), !dbg !1297
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !1298, metadata !DIExpression()), !dbg !1299
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !1300, metadata !DIExpression()), !dbg !1301
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1302, metadata !DIExpression()), !dbg !1303
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1304, metadata !DIExpression()), !dbg !1305
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !1306, metadata !DIExpression()), !dbg !1307
  store i32 64, i32* %stride, align 4, !dbg !1308
  br label %outer, !dbg !1309

outer:                                            ; preds = %entry
  call void @llvm.dbg.label(metadata !1310), !dbg !1311
  store i32 0, i32* %tid, align 4, !dbg !1312
  br label %for.cond, !dbg !1314

for.cond:                                         ; preds = %for.inc298, %outer
  %0 = load i32, i32* %tid, align 4, !dbg !1315
  %cmp = icmp slt i32 %0, 64, !dbg !1317
  br i1 %cmp, label %for.body, label %for.end300, !dbg !1318

for.body:                                         ; preds = %for.cond
  br label %load, !dbg !1319

load:                                             ; preds = %for.body
  call void @llvm.dbg.label(metadata !1320), !dbg !1322
  store i32 0, i32* %i, align 4, !dbg !1323
  br label %for.cond1, !dbg !1325

for.cond1:                                        ; preds = %for.inc, %load
  %1 = load i32, i32* %i, align 4, !dbg !1326
  %cmp2 = icmp slt i32 %1, 8, !dbg !1328
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1329

for.body3:                                        ; preds = %for.cond1
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1330
  %3 = load i32, i32* %tid, align 4, !dbg !1332
  %mul = mul nsw i32 %3, 8, !dbg !1333
  %4 = load i32, i32* %i, align 4, !dbg !1334
  %add = add nsw i32 %mul, %4, !dbg !1335
  %idxprom = sext i32 %add to i64, !dbg !1330
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !1330
  %5 = load i32, i32* %arrayidx, align 4, !dbg !1330
  %6 = load i32*, i32** %data_x.addr, align 8, !dbg !1336
  %7 = load i32, i32* %i, align 4, !dbg !1337
  %idxprom4 = sext i32 %7 to i64, !dbg !1336
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !1336
  store i32 %5, i32* %arrayidx5, align 4, !dbg !1338
  %8 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1339
  %9 = load i32, i32* %tid, align 4, !dbg !1340
  %mul6 = mul nsw i32 %9, 8, !dbg !1341
  %10 = load i32, i32* %i, align 4, !dbg !1342
  %add7 = add nsw i32 %mul6, %10, !dbg !1343
  %idxprom8 = sext i32 %add7 to i64, !dbg !1339
  %arrayidx9 = getelementptr inbounds i32, i32* %8, i64 %idxprom8, !dbg !1339
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !1339
  %12 = load i32*, i32** %data_y.addr, align 8, !dbg !1344
  %13 = load i32, i32* %i, align 4, !dbg !1345
  %idxprom10 = sext i32 %13 to i64, !dbg !1344
  %arrayidx11 = getelementptr inbounds i32, i32* %12, i64 %idxprom10, !dbg !1344
  store i32 %11, i32* %arrayidx11, align 4, !dbg !1346
  br label %for.inc, !dbg !1347

for.inc:                                          ; preds = %for.body3
  %14 = load i32, i32* %i, align 4, !dbg !1348
  %inc = add nsw i32 %14, 1, !dbg !1348
  store i32 %inc, i32* %i, align 4, !dbg !1348
  br label %for.cond1, !dbg !1349, !llvm.loop !1350

for.end:                                          ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %exp_1_8_x, metadata !1352, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %exp_1_4_x, metadata !1355, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %exp_3_8_x, metadata !1356, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %exp_1_8_y, metadata !1357, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %exp_1_4_y, metadata !1358, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %exp_3_8_y, metadata !1359, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %tmp_1, metadata !1360, metadata !DIExpression()), !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %tmp_2, metadata !1361, metadata !DIExpression()), !dbg !1354
  store i32 1, i32* %exp_1_8_x, align 4, !dbg !1354
  store i32 -1, i32* %exp_1_8_y, align 4, !dbg !1354
  store i32 0, i32* %exp_1_4_x, align 4, !dbg !1354
  store i32 -1, i32* %exp_1_4_y, align 4, !dbg !1354
  store i32 -1, i32* %exp_3_8_x, align 4, !dbg !1354
  store i32 -1, i32* %exp_3_8_y, align 4, !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %c0_x, metadata !1362, metadata !DIExpression()), !dbg !1364
  %15 = load i32*, i32** %data_x.addr, align 8, !dbg !1364
  %arrayidx12 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !1364
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !1364
  store i32 %16, i32* %c0_x, align 4, !dbg !1364
  call void @llvm.dbg.declare(metadata i32* %c0_y, metadata !1365, metadata !DIExpression()), !dbg !1364
  %17 = load i32*, i32** %data_y.addr, align 8, !dbg !1364
  %arrayidx13 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !1364
  %18 = load i32, i32* %arrayidx13, align 4, !dbg !1364
  store i32 %18, i32* %c0_y, align 4, !dbg !1364
  %19 = load i32, i32* %c0_x, align 4, !dbg !1364
  %20 = load i32*, i32** %data_x.addr, align 8, !dbg !1364
  %arrayidx14 = getelementptr inbounds i32, i32* %20, i64 4, !dbg !1364
  %21 = load i32, i32* %arrayidx14, align 4, !dbg !1364
  %add15 = add nsw i32 %19, %21, !dbg !1364
  %22 = load i32*, i32** %data_x.addr, align 8, !dbg !1364
  %arrayidx16 = getelementptr inbounds i32, i32* %22, i64 0, !dbg !1364
  store i32 %add15, i32* %arrayidx16, align 4, !dbg !1364
  %23 = load i32, i32* %c0_y, align 4, !dbg !1364
  %24 = load i32*, i32** %data_y.addr, align 8, !dbg !1364
  %arrayidx17 = getelementptr inbounds i32, i32* %24, i64 4, !dbg !1364
  %25 = load i32, i32* %arrayidx17, align 4, !dbg !1364
  %add18 = add nsw i32 %23, %25, !dbg !1364
  %26 = load i32*, i32** %data_y.addr, align 8, !dbg !1364
  %arrayidx19 = getelementptr inbounds i32, i32* %26, i64 0, !dbg !1364
  store i32 %add18, i32* %arrayidx19, align 4, !dbg !1364
  %27 = load i32, i32* %c0_x, align 4, !dbg !1364
  %28 = load i32*, i32** %data_x.addr, align 8, !dbg !1364
  %arrayidx20 = getelementptr inbounds i32, i32* %28, i64 4, !dbg !1364
  %29 = load i32, i32* %arrayidx20, align 4, !dbg !1364
  %sub = sub nsw i32 %27, %29, !dbg !1364
  %30 = load i32*, i32** %data_x.addr, align 8, !dbg !1364
  %arrayidx21 = getelementptr inbounds i32, i32* %30, i64 4, !dbg !1364
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !1364
  %31 = load i32, i32* %c0_y, align 4, !dbg !1364
  %32 = load i32*, i32** %data_y.addr, align 8, !dbg !1364
  %arrayidx22 = getelementptr inbounds i32, i32* %32, i64 4, !dbg !1364
  %33 = load i32, i32* %arrayidx22, align 4, !dbg !1364
  %sub23 = sub nsw i32 %31, %33, !dbg !1364
  %34 = load i32*, i32** %data_y.addr, align 8, !dbg !1364
  %arrayidx24 = getelementptr inbounds i32, i32* %34, i64 4, !dbg !1364
  store i32 %sub23, i32* %arrayidx24, align 4, !dbg !1364
  call void @llvm.dbg.declare(metadata i32* %c0_x25, metadata !1366, metadata !DIExpression()), !dbg !1368
  %35 = load i32*, i32** %data_x.addr, align 8, !dbg !1368
  %arrayidx26 = getelementptr inbounds i32, i32* %35, i64 1, !dbg !1368
  %36 = load i32, i32* %arrayidx26, align 4, !dbg !1368
  store i32 %36, i32* %c0_x25, align 4, !dbg !1368
  call void @llvm.dbg.declare(metadata i32* %c0_y27, metadata !1369, metadata !DIExpression()), !dbg !1368
  %37 = load i32*, i32** %data_y.addr, align 8, !dbg !1368
  %arrayidx28 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !1368
  %38 = load i32, i32* %arrayidx28, align 4, !dbg !1368
  store i32 %38, i32* %c0_y27, align 4, !dbg !1368
  %39 = load i32, i32* %c0_x25, align 4, !dbg !1368
  %40 = load i32*, i32** %data_x.addr, align 8, !dbg !1368
  %arrayidx29 = getelementptr inbounds i32, i32* %40, i64 5, !dbg !1368
  %41 = load i32, i32* %arrayidx29, align 4, !dbg !1368
  %add30 = add nsw i32 %39, %41, !dbg !1368
  %42 = load i32*, i32** %data_x.addr, align 8, !dbg !1368
  %arrayidx31 = getelementptr inbounds i32, i32* %42, i64 1, !dbg !1368
  store i32 %add30, i32* %arrayidx31, align 4, !dbg !1368
  %43 = load i32, i32* %c0_y27, align 4, !dbg !1368
  %44 = load i32*, i32** %data_y.addr, align 8, !dbg !1368
  %arrayidx32 = getelementptr inbounds i32, i32* %44, i64 5, !dbg !1368
  %45 = load i32, i32* %arrayidx32, align 4, !dbg !1368
  %add33 = add nsw i32 %43, %45, !dbg !1368
  %46 = load i32*, i32** %data_y.addr, align 8, !dbg !1368
  %arrayidx34 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !1368
  store i32 %add33, i32* %arrayidx34, align 4, !dbg !1368
  %47 = load i32, i32* %c0_x25, align 4, !dbg !1368
  %48 = load i32*, i32** %data_x.addr, align 8, !dbg !1368
  %arrayidx35 = getelementptr inbounds i32, i32* %48, i64 5, !dbg !1368
  %49 = load i32, i32* %arrayidx35, align 4, !dbg !1368
  %sub36 = sub nsw i32 %47, %49, !dbg !1368
  %50 = load i32*, i32** %data_x.addr, align 8, !dbg !1368
  %arrayidx37 = getelementptr inbounds i32, i32* %50, i64 5, !dbg !1368
  store i32 %sub36, i32* %arrayidx37, align 4, !dbg !1368
  %51 = load i32, i32* %c0_y27, align 4, !dbg !1368
  %52 = load i32*, i32** %data_y.addr, align 8, !dbg !1368
  %arrayidx38 = getelementptr inbounds i32, i32* %52, i64 5, !dbg !1368
  %53 = load i32, i32* %arrayidx38, align 4, !dbg !1368
  %sub39 = sub nsw i32 %51, %53, !dbg !1368
  %54 = load i32*, i32** %data_y.addr, align 8, !dbg !1368
  %arrayidx40 = getelementptr inbounds i32, i32* %54, i64 5, !dbg !1368
  store i32 %sub39, i32* %arrayidx40, align 4, !dbg !1368
  call void @llvm.dbg.declare(metadata i32* %c0_x41, metadata !1370, metadata !DIExpression()), !dbg !1372
  %55 = load i32*, i32** %data_x.addr, align 8, !dbg !1372
  %arrayidx42 = getelementptr inbounds i32, i32* %55, i64 2, !dbg !1372
  %56 = load i32, i32* %arrayidx42, align 4, !dbg !1372
  store i32 %56, i32* %c0_x41, align 4, !dbg !1372
  call void @llvm.dbg.declare(metadata i32* %c0_y43, metadata !1373, metadata !DIExpression()), !dbg !1372
  %57 = load i32*, i32** %data_y.addr, align 8, !dbg !1372
  %arrayidx44 = getelementptr inbounds i32, i32* %57, i64 2, !dbg !1372
  %58 = load i32, i32* %arrayidx44, align 4, !dbg !1372
  store i32 %58, i32* %c0_y43, align 4, !dbg !1372
  %59 = load i32, i32* %c0_x41, align 4, !dbg !1372
  %60 = load i32*, i32** %data_x.addr, align 8, !dbg !1372
  %arrayidx45 = getelementptr inbounds i32, i32* %60, i64 6, !dbg !1372
  %61 = load i32, i32* %arrayidx45, align 4, !dbg !1372
  %add46 = add nsw i32 %59, %61, !dbg !1372
  %62 = load i32*, i32** %data_x.addr, align 8, !dbg !1372
  %arrayidx47 = getelementptr inbounds i32, i32* %62, i64 2, !dbg !1372
  store i32 %add46, i32* %arrayidx47, align 4, !dbg !1372
  %63 = load i32, i32* %c0_y43, align 4, !dbg !1372
  %64 = load i32*, i32** %data_y.addr, align 8, !dbg !1372
  %arrayidx48 = getelementptr inbounds i32, i32* %64, i64 6, !dbg !1372
  %65 = load i32, i32* %arrayidx48, align 4, !dbg !1372
  %add49 = add nsw i32 %63, %65, !dbg !1372
  %66 = load i32*, i32** %data_y.addr, align 8, !dbg !1372
  %arrayidx50 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !1372
  store i32 %add49, i32* %arrayidx50, align 4, !dbg !1372
  %67 = load i32, i32* %c0_x41, align 4, !dbg !1372
  %68 = load i32*, i32** %data_x.addr, align 8, !dbg !1372
  %arrayidx51 = getelementptr inbounds i32, i32* %68, i64 6, !dbg !1372
  %69 = load i32, i32* %arrayidx51, align 4, !dbg !1372
  %sub52 = sub nsw i32 %67, %69, !dbg !1372
  %70 = load i32*, i32** %data_x.addr, align 8, !dbg !1372
  %arrayidx53 = getelementptr inbounds i32, i32* %70, i64 6, !dbg !1372
  store i32 %sub52, i32* %arrayidx53, align 4, !dbg !1372
  %71 = load i32, i32* %c0_y43, align 4, !dbg !1372
  %72 = load i32*, i32** %data_y.addr, align 8, !dbg !1372
  %arrayidx54 = getelementptr inbounds i32, i32* %72, i64 6, !dbg !1372
  %73 = load i32, i32* %arrayidx54, align 4, !dbg !1372
  %sub55 = sub nsw i32 %71, %73, !dbg !1372
  %74 = load i32*, i32** %data_y.addr, align 8, !dbg !1372
  %arrayidx56 = getelementptr inbounds i32, i32* %74, i64 6, !dbg !1372
  store i32 %sub55, i32* %arrayidx56, align 4, !dbg !1372
  call void @llvm.dbg.declare(metadata i32* %c0_x57, metadata !1374, metadata !DIExpression()), !dbg !1376
  %75 = load i32*, i32** %data_x.addr, align 8, !dbg !1376
  %arrayidx58 = getelementptr inbounds i32, i32* %75, i64 3, !dbg !1376
  %76 = load i32, i32* %arrayidx58, align 4, !dbg !1376
  store i32 %76, i32* %c0_x57, align 4, !dbg !1376
  call void @llvm.dbg.declare(metadata i32* %c0_y59, metadata !1377, metadata !DIExpression()), !dbg !1376
  %77 = load i32*, i32** %data_y.addr, align 8, !dbg !1376
  %arrayidx60 = getelementptr inbounds i32, i32* %77, i64 3, !dbg !1376
  %78 = load i32, i32* %arrayidx60, align 4, !dbg !1376
  store i32 %78, i32* %c0_y59, align 4, !dbg !1376
  %79 = load i32, i32* %c0_x57, align 4, !dbg !1376
  %80 = load i32*, i32** %data_x.addr, align 8, !dbg !1376
  %arrayidx61 = getelementptr inbounds i32, i32* %80, i64 7, !dbg !1376
  %81 = load i32, i32* %arrayidx61, align 4, !dbg !1376
  %add62 = add nsw i32 %79, %81, !dbg !1376
  %82 = load i32*, i32** %data_x.addr, align 8, !dbg !1376
  %arrayidx63 = getelementptr inbounds i32, i32* %82, i64 3, !dbg !1376
  store i32 %add62, i32* %arrayidx63, align 4, !dbg !1376
  %83 = load i32, i32* %c0_y59, align 4, !dbg !1376
  %84 = load i32*, i32** %data_y.addr, align 8, !dbg !1376
  %arrayidx64 = getelementptr inbounds i32, i32* %84, i64 7, !dbg !1376
  %85 = load i32, i32* %arrayidx64, align 4, !dbg !1376
  %add65 = add nsw i32 %83, %85, !dbg !1376
  %86 = load i32*, i32** %data_y.addr, align 8, !dbg !1376
  %arrayidx66 = getelementptr inbounds i32, i32* %86, i64 3, !dbg !1376
  store i32 %add65, i32* %arrayidx66, align 4, !dbg !1376
  %87 = load i32, i32* %c0_x57, align 4, !dbg !1376
  %88 = load i32*, i32** %data_x.addr, align 8, !dbg !1376
  %arrayidx67 = getelementptr inbounds i32, i32* %88, i64 7, !dbg !1376
  %89 = load i32, i32* %arrayidx67, align 4, !dbg !1376
  %sub68 = sub nsw i32 %87, %89, !dbg !1376
  %90 = load i32*, i32** %data_x.addr, align 8, !dbg !1376
  %arrayidx69 = getelementptr inbounds i32, i32* %90, i64 7, !dbg !1376
  store i32 %sub68, i32* %arrayidx69, align 4, !dbg !1376
  %91 = load i32, i32* %c0_y59, align 4, !dbg !1376
  %92 = load i32*, i32** %data_y.addr, align 8, !dbg !1376
  %arrayidx70 = getelementptr inbounds i32, i32* %92, i64 7, !dbg !1376
  %93 = load i32, i32* %arrayidx70, align 4, !dbg !1376
  %sub71 = sub nsw i32 %91, %93, !dbg !1376
  %94 = load i32*, i32** %data_y.addr, align 8, !dbg !1376
  %arrayidx72 = getelementptr inbounds i32, i32* %94, i64 7, !dbg !1376
  store i32 %sub71, i32* %arrayidx72, align 4, !dbg !1376
  %95 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx73 = getelementptr inbounds i32, i32* %95, i64 5, !dbg !1354
  %96 = load i32, i32* %arrayidx73, align 4, !dbg !1354
  store i32 %96, i32* %tmp_1, align 4, !dbg !1354
  %97 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx74 = getelementptr inbounds i32, i32* %97, i64 5, !dbg !1354
  %98 = load i32, i32* %arrayidx74, align 4, !dbg !1354
  %99 = load i32, i32* %exp_1_8_x, align 4, !dbg !1354
  %mul75 = mul nsw i32 %98, %99, !dbg !1354
  %100 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx76 = getelementptr inbounds i32, i32* %100, i64 5, !dbg !1354
  %101 = load i32, i32* %arrayidx76, align 4, !dbg !1354
  %102 = load i32, i32* %exp_1_8_y, align 4, !dbg !1354
  %mul77 = mul nsw i32 %101, %102, !dbg !1354
  %sub78 = sub nsw i32 %mul75, %mul77, !dbg !1354
  %conv = sitofp i32 %sub78 to float, !dbg !1354
  %mul79 = fmul float 0x3FE6A09E60000000, %conv, !dbg !1354
  %conv80 = fptosi float %mul79 to i32, !dbg !1354
  %103 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx81 = getelementptr inbounds i32, i32* %103, i64 5, !dbg !1354
  store i32 %conv80, i32* %arrayidx81, align 4, !dbg !1354
  %104 = load i32, i32* %tmp_1, align 4, !dbg !1354
  %105 = load i32, i32* %exp_1_8_y, align 4, !dbg !1354
  %mul82 = mul nsw i32 %104, %105, !dbg !1354
  %106 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx83 = getelementptr inbounds i32, i32* %106, i64 5, !dbg !1354
  %107 = load i32, i32* %arrayidx83, align 4, !dbg !1354
  %108 = load i32, i32* %exp_1_8_x, align 4, !dbg !1354
  %mul84 = mul nsw i32 %107, %108, !dbg !1354
  %add85 = add nsw i32 %mul82, %mul84, !dbg !1354
  %conv86 = sitofp i32 %add85 to float, !dbg !1354
  %mul87 = fmul float 0x3FE6A09E60000000, %conv86, !dbg !1354
  %conv88 = fptosi float %mul87 to i32, !dbg !1354
  %109 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx89 = getelementptr inbounds i32, i32* %109, i64 5, !dbg !1354
  store i32 %conv88, i32* %arrayidx89, align 4, !dbg !1354
  %110 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx90 = getelementptr inbounds i32, i32* %110, i64 6, !dbg !1354
  %111 = load i32, i32* %arrayidx90, align 4, !dbg !1354
  store i32 %111, i32* %tmp_1, align 4, !dbg !1354
  %112 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx91 = getelementptr inbounds i32, i32* %112, i64 6, !dbg !1354
  %113 = load i32, i32* %arrayidx91, align 4, !dbg !1354
  %114 = load i32, i32* %exp_1_4_x, align 4, !dbg !1354
  %mul92 = mul nsw i32 %113, %114, !dbg !1354
  %115 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx93 = getelementptr inbounds i32, i32* %115, i64 6, !dbg !1354
  %116 = load i32, i32* %arrayidx93, align 4, !dbg !1354
  %117 = load i32, i32* %exp_1_4_y, align 4, !dbg !1354
  %mul94 = mul nsw i32 %116, %117, !dbg !1354
  %sub95 = sub nsw i32 %mul92, %mul94, !dbg !1354
  %118 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx96 = getelementptr inbounds i32, i32* %118, i64 6, !dbg !1354
  store i32 %sub95, i32* %arrayidx96, align 4, !dbg !1354
  %119 = load i32, i32* %tmp_1, align 4, !dbg !1354
  %120 = load i32, i32* %exp_1_4_y, align 4, !dbg !1354
  %mul97 = mul nsw i32 %119, %120, !dbg !1354
  %121 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx98 = getelementptr inbounds i32, i32* %121, i64 6, !dbg !1354
  %122 = load i32, i32* %arrayidx98, align 4, !dbg !1354
  %123 = load i32, i32* %exp_1_4_x, align 4, !dbg !1354
  %mul99 = mul nsw i32 %122, %123, !dbg !1354
  %add100 = add nsw i32 %mul97, %mul99, !dbg !1354
  %124 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx101 = getelementptr inbounds i32, i32* %124, i64 6, !dbg !1354
  store i32 %add100, i32* %arrayidx101, align 4, !dbg !1354
  %125 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx102 = getelementptr inbounds i32, i32* %125, i64 7, !dbg !1354
  %126 = load i32, i32* %arrayidx102, align 4, !dbg !1354
  store i32 %126, i32* %tmp_1, align 4, !dbg !1354
  %127 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx103 = getelementptr inbounds i32, i32* %127, i64 7, !dbg !1354
  %128 = load i32, i32* %arrayidx103, align 4, !dbg !1354
  %129 = load i32, i32* %exp_3_8_x, align 4, !dbg !1354
  %mul104 = mul nsw i32 %128, %129, !dbg !1354
  %130 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx105 = getelementptr inbounds i32, i32* %130, i64 7, !dbg !1354
  %131 = load i32, i32* %arrayidx105, align 4, !dbg !1354
  %132 = load i32, i32* %exp_3_8_y, align 4, !dbg !1354
  %mul106 = mul nsw i32 %131, %132, !dbg !1354
  %sub107 = sub nsw i32 %mul104, %mul106, !dbg !1354
  %conv108 = sitofp i32 %sub107 to float, !dbg !1354
  %mul109 = fmul float 0x3FE6A09E60000000, %conv108, !dbg !1354
  %conv110 = fptosi float %mul109 to i32, !dbg !1354
  %133 = load i32*, i32** %data_x.addr, align 8, !dbg !1354
  %arrayidx111 = getelementptr inbounds i32, i32* %133, i64 7, !dbg !1354
  store i32 %conv110, i32* %arrayidx111, align 4, !dbg !1354
  %134 = load i32, i32* %tmp_1, align 4, !dbg !1354
  %135 = load i32, i32* %exp_3_8_y, align 4, !dbg !1354
  %mul112 = mul nsw i32 %134, %135, !dbg !1354
  %136 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx113 = getelementptr inbounds i32, i32* %136, i64 7, !dbg !1354
  %137 = load i32, i32* %arrayidx113, align 4, !dbg !1354
  %138 = load i32, i32* %exp_3_8_x, align 4, !dbg !1354
  %mul114 = mul nsw i32 %137, %138, !dbg !1354
  %add115 = add nsw i32 %mul112, %mul114, !dbg !1354
  %conv116 = sitofp i32 %add115 to float, !dbg !1354
  %mul117 = fmul float 0x3FE6A09E60000000, %conv116, !dbg !1354
  %conv118 = fptosi float %mul117 to i32, !dbg !1354
  %139 = load i32*, i32** %data_y.addr, align 8, !dbg !1354
  %arrayidx119 = getelementptr inbounds i32, i32* %139, i64 7, !dbg !1354
  store i32 %conv118, i32* %arrayidx119, align 4, !dbg !1354
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_x, metadata !1378, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_y, metadata !1381, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !1382, metadata !DIExpression()), !dbg !1380
  store i32 0, i32* %exp_1_44_x, align 4, !dbg !1380
  store i32 -1, i32* %exp_1_44_y, align 4, !dbg !1380
  call void @llvm.dbg.declare(metadata i32* %c0_x120, metadata !1383, metadata !DIExpression()), !dbg !1385
  %140 = load i32*, i32** %data_x.addr, align 8, !dbg !1385
  %arrayidx121 = getelementptr inbounds i32, i32* %140, i64 0, !dbg !1385
  %141 = load i32, i32* %arrayidx121, align 4, !dbg !1385
  store i32 %141, i32* %c0_x120, align 4, !dbg !1385
  call void @llvm.dbg.declare(metadata i32* %c0_y122, metadata !1386, metadata !DIExpression()), !dbg !1385
  %142 = load i32*, i32** %data_y.addr, align 8, !dbg !1385
  %arrayidx123 = getelementptr inbounds i32, i32* %142, i64 0, !dbg !1385
  %143 = load i32, i32* %arrayidx123, align 4, !dbg !1385
  store i32 %143, i32* %c0_y122, align 4, !dbg !1385
  %144 = load i32, i32* %c0_x120, align 4, !dbg !1385
  %145 = load i32*, i32** %data_x.addr, align 8, !dbg !1385
  %arrayidx124 = getelementptr inbounds i32, i32* %145, i64 2, !dbg !1385
  %146 = load i32, i32* %arrayidx124, align 4, !dbg !1385
  %add125 = add nsw i32 %144, %146, !dbg !1385
  %147 = load i32*, i32** %data_x.addr, align 8, !dbg !1385
  %arrayidx126 = getelementptr inbounds i32, i32* %147, i64 0, !dbg !1385
  store i32 %add125, i32* %arrayidx126, align 4, !dbg !1385
  %148 = load i32, i32* %c0_y122, align 4, !dbg !1385
  %149 = load i32*, i32** %data_y.addr, align 8, !dbg !1385
  %arrayidx127 = getelementptr inbounds i32, i32* %149, i64 2, !dbg !1385
  %150 = load i32, i32* %arrayidx127, align 4, !dbg !1385
  %add128 = add nsw i32 %148, %150, !dbg !1385
  %151 = load i32*, i32** %data_y.addr, align 8, !dbg !1385
  %arrayidx129 = getelementptr inbounds i32, i32* %151, i64 0, !dbg !1385
  store i32 %add128, i32* %arrayidx129, align 4, !dbg !1385
  %152 = load i32, i32* %c0_x120, align 4, !dbg !1385
  %153 = load i32*, i32** %data_x.addr, align 8, !dbg !1385
  %arrayidx130 = getelementptr inbounds i32, i32* %153, i64 2, !dbg !1385
  %154 = load i32, i32* %arrayidx130, align 4, !dbg !1385
  %sub131 = sub nsw i32 %152, %154, !dbg !1385
  %155 = load i32*, i32** %data_x.addr, align 8, !dbg !1385
  %arrayidx132 = getelementptr inbounds i32, i32* %155, i64 2, !dbg !1385
  store i32 %sub131, i32* %arrayidx132, align 4, !dbg !1385
  %156 = load i32, i32* %c0_y122, align 4, !dbg !1385
  %157 = load i32*, i32** %data_y.addr, align 8, !dbg !1385
  %arrayidx133 = getelementptr inbounds i32, i32* %157, i64 2, !dbg !1385
  %158 = load i32, i32* %arrayidx133, align 4, !dbg !1385
  %sub134 = sub nsw i32 %156, %158, !dbg !1385
  %159 = load i32*, i32** %data_y.addr, align 8, !dbg !1385
  %arrayidx135 = getelementptr inbounds i32, i32* %159, i64 2, !dbg !1385
  store i32 %sub134, i32* %arrayidx135, align 4, !dbg !1385
  call void @llvm.dbg.declare(metadata i32* %c0_x136, metadata !1387, metadata !DIExpression()), !dbg !1389
  %160 = load i32*, i32** %data_x.addr, align 8, !dbg !1389
  %arrayidx137 = getelementptr inbounds i32, i32* %160, i64 1, !dbg !1389
  %161 = load i32, i32* %arrayidx137, align 4, !dbg !1389
  store i32 %161, i32* %c0_x136, align 4, !dbg !1389
  call void @llvm.dbg.declare(metadata i32* %c0_y138, metadata !1390, metadata !DIExpression()), !dbg !1389
  %162 = load i32*, i32** %data_y.addr, align 8, !dbg !1389
  %arrayidx139 = getelementptr inbounds i32, i32* %162, i64 1, !dbg !1389
  %163 = load i32, i32* %arrayidx139, align 4, !dbg !1389
  store i32 %163, i32* %c0_y138, align 4, !dbg !1389
  %164 = load i32, i32* %c0_x136, align 4, !dbg !1389
  %165 = load i32*, i32** %data_x.addr, align 8, !dbg !1389
  %arrayidx140 = getelementptr inbounds i32, i32* %165, i64 3, !dbg !1389
  %166 = load i32, i32* %arrayidx140, align 4, !dbg !1389
  %add141 = add nsw i32 %164, %166, !dbg !1389
  %167 = load i32*, i32** %data_x.addr, align 8, !dbg !1389
  %arrayidx142 = getelementptr inbounds i32, i32* %167, i64 1, !dbg !1389
  store i32 %add141, i32* %arrayidx142, align 4, !dbg !1389
  %168 = load i32, i32* %c0_y138, align 4, !dbg !1389
  %169 = load i32*, i32** %data_y.addr, align 8, !dbg !1389
  %arrayidx143 = getelementptr inbounds i32, i32* %169, i64 3, !dbg !1389
  %170 = load i32, i32* %arrayidx143, align 4, !dbg !1389
  %add144 = add nsw i32 %168, %170, !dbg !1389
  %171 = load i32*, i32** %data_y.addr, align 8, !dbg !1389
  %arrayidx145 = getelementptr inbounds i32, i32* %171, i64 1, !dbg !1389
  store i32 %add144, i32* %arrayidx145, align 4, !dbg !1389
  %172 = load i32, i32* %c0_x136, align 4, !dbg !1389
  %173 = load i32*, i32** %data_x.addr, align 8, !dbg !1389
  %arrayidx146 = getelementptr inbounds i32, i32* %173, i64 3, !dbg !1389
  %174 = load i32, i32* %arrayidx146, align 4, !dbg !1389
  %sub147 = sub nsw i32 %172, %174, !dbg !1389
  %175 = load i32*, i32** %data_x.addr, align 8, !dbg !1389
  %arrayidx148 = getelementptr inbounds i32, i32* %175, i64 3, !dbg !1389
  store i32 %sub147, i32* %arrayidx148, align 4, !dbg !1389
  %176 = load i32, i32* %c0_y138, align 4, !dbg !1389
  %177 = load i32*, i32** %data_y.addr, align 8, !dbg !1389
  %arrayidx149 = getelementptr inbounds i32, i32* %177, i64 3, !dbg !1389
  %178 = load i32, i32* %arrayidx149, align 4, !dbg !1389
  %sub150 = sub nsw i32 %176, %178, !dbg !1389
  %179 = load i32*, i32** %data_y.addr, align 8, !dbg !1389
  %arrayidx151 = getelementptr inbounds i32, i32* %179, i64 3, !dbg !1389
  store i32 %sub150, i32* %arrayidx151, align 4, !dbg !1389
  %180 = load i32*, i32** %data_x.addr, align 8, !dbg !1380
  %arrayidx152 = getelementptr inbounds i32, i32* %180, i64 3, !dbg !1380
  %181 = load i32, i32* %arrayidx152, align 4, !dbg !1380
  store i32 %181, i32* %tmp, align 4, !dbg !1380
  %182 = load i32*, i32** %data_x.addr, align 8, !dbg !1380
  %arrayidx153 = getelementptr inbounds i32, i32* %182, i64 3, !dbg !1380
  %183 = load i32, i32* %arrayidx153, align 4, !dbg !1380
  %184 = load i32, i32* %exp_1_44_x, align 4, !dbg !1380
  %mul154 = mul nsw i32 %183, %184, !dbg !1380
  %185 = load i32*, i32** %data_y.addr, align 8, !dbg !1380
  %arrayidx155 = getelementptr inbounds i32, i32* %185, i64 3, !dbg !1380
  %186 = load i32, i32* %arrayidx155, align 4, !dbg !1380
  %187 = load i32, i32* %exp_1_44_y, align 4, !dbg !1380
  %mul156 = mul nsw i32 %186, %187, !dbg !1380
  %sub157 = sub nsw i32 %mul154, %mul156, !dbg !1380
  %188 = load i32*, i32** %data_x.addr, align 8, !dbg !1380
  %arrayidx158 = getelementptr inbounds i32, i32* %188, i64 3, !dbg !1380
  store i32 %sub157, i32* %arrayidx158, align 4, !dbg !1380
  %189 = load i32, i32* %tmp, align 4, !dbg !1380
  %190 = load i32, i32* %exp_1_44_y, align 4, !dbg !1380
  %mul159 = mul nsw i32 %189, %190, !dbg !1380
  %191 = load i32*, i32** %data_y.addr, align 8, !dbg !1380
  %arrayidx160 = getelementptr inbounds i32, i32* %191, i64 3, !dbg !1380
  %192 = load i32, i32* %arrayidx160, align 4, !dbg !1380
  %193 = load i32, i32* %exp_1_44_x, align 4, !dbg !1380
  %mul161 = mul nsw i32 %192, %193, !dbg !1380
  %sub162 = sub nsw i32 %mul159, %mul161, !dbg !1380
  %194 = load i32*, i32** %data_y.addr, align 8, !dbg !1380
  %arrayidx163 = getelementptr inbounds i32, i32* %194, i64 3, !dbg !1380
  store i32 %sub162, i32* %arrayidx163, align 4, !dbg !1380
  call void @llvm.dbg.declare(metadata i32* %c0_x164, metadata !1391, metadata !DIExpression()), !dbg !1393
  %195 = load i32*, i32** %data_x.addr, align 8, !dbg !1393
  %arrayidx165 = getelementptr inbounds i32, i32* %195, i64 0, !dbg !1393
  %196 = load i32, i32* %arrayidx165, align 4, !dbg !1393
  store i32 %196, i32* %c0_x164, align 4, !dbg !1393
  call void @llvm.dbg.declare(metadata i32* %c0_y166, metadata !1394, metadata !DIExpression()), !dbg !1393
  %197 = load i32*, i32** %data_y.addr, align 8, !dbg !1393
  %arrayidx167 = getelementptr inbounds i32, i32* %197, i64 0, !dbg !1393
  %198 = load i32, i32* %arrayidx167, align 4, !dbg !1393
  store i32 %198, i32* %c0_y166, align 4, !dbg !1393
  %199 = load i32, i32* %c0_x164, align 4, !dbg !1393
  %200 = load i32*, i32** %data_x.addr, align 8, !dbg !1393
  %arrayidx168 = getelementptr inbounds i32, i32* %200, i64 1, !dbg !1393
  %201 = load i32, i32* %arrayidx168, align 4, !dbg !1393
  %add169 = add nsw i32 %199, %201, !dbg !1393
  %202 = load i32*, i32** %data_x.addr, align 8, !dbg !1393
  %arrayidx170 = getelementptr inbounds i32, i32* %202, i64 0, !dbg !1393
  store i32 %add169, i32* %arrayidx170, align 4, !dbg !1393
  %203 = load i32, i32* %c0_y166, align 4, !dbg !1393
  %204 = load i32*, i32** %data_y.addr, align 8, !dbg !1393
  %arrayidx171 = getelementptr inbounds i32, i32* %204, i64 1, !dbg !1393
  %205 = load i32, i32* %arrayidx171, align 4, !dbg !1393
  %add172 = add nsw i32 %203, %205, !dbg !1393
  %206 = load i32*, i32** %data_y.addr, align 8, !dbg !1393
  %arrayidx173 = getelementptr inbounds i32, i32* %206, i64 0, !dbg !1393
  store i32 %add172, i32* %arrayidx173, align 4, !dbg !1393
  %207 = load i32, i32* %c0_x164, align 4, !dbg !1393
  %208 = load i32*, i32** %data_x.addr, align 8, !dbg !1393
  %arrayidx174 = getelementptr inbounds i32, i32* %208, i64 1, !dbg !1393
  %209 = load i32, i32* %arrayidx174, align 4, !dbg !1393
  %sub175 = sub nsw i32 %207, %209, !dbg !1393
  %210 = load i32*, i32** %data_x.addr, align 8, !dbg !1393
  %arrayidx176 = getelementptr inbounds i32, i32* %210, i64 1, !dbg !1393
  store i32 %sub175, i32* %arrayidx176, align 4, !dbg !1393
  %211 = load i32, i32* %c0_y166, align 4, !dbg !1393
  %212 = load i32*, i32** %data_y.addr, align 8, !dbg !1393
  %arrayidx177 = getelementptr inbounds i32, i32* %212, i64 1, !dbg !1393
  %213 = load i32, i32* %arrayidx177, align 4, !dbg !1393
  %sub178 = sub nsw i32 %211, %213, !dbg !1393
  %214 = load i32*, i32** %data_y.addr, align 8, !dbg !1393
  %arrayidx179 = getelementptr inbounds i32, i32* %214, i64 1, !dbg !1393
  store i32 %sub178, i32* %arrayidx179, align 4, !dbg !1393
  call void @llvm.dbg.declare(metadata i32* %c0_x180, metadata !1395, metadata !DIExpression()), !dbg !1397
  %215 = load i32*, i32** %data_x.addr, align 8, !dbg !1397
  %arrayidx181 = getelementptr inbounds i32, i32* %215, i64 2, !dbg !1397
  %216 = load i32, i32* %arrayidx181, align 4, !dbg !1397
  store i32 %216, i32* %c0_x180, align 4, !dbg !1397
  call void @llvm.dbg.declare(metadata i32* %c0_y182, metadata !1398, metadata !DIExpression()), !dbg !1397
  %217 = load i32*, i32** %data_y.addr, align 8, !dbg !1397
  %arrayidx183 = getelementptr inbounds i32, i32* %217, i64 2, !dbg !1397
  %218 = load i32, i32* %arrayidx183, align 4, !dbg !1397
  store i32 %218, i32* %c0_y182, align 4, !dbg !1397
  %219 = load i32, i32* %c0_x180, align 4, !dbg !1397
  %220 = load i32*, i32** %data_x.addr, align 8, !dbg !1397
  %arrayidx184 = getelementptr inbounds i32, i32* %220, i64 3, !dbg !1397
  %221 = load i32, i32* %arrayidx184, align 4, !dbg !1397
  %add185 = add nsw i32 %219, %221, !dbg !1397
  %222 = load i32*, i32** %data_x.addr, align 8, !dbg !1397
  %arrayidx186 = getelementptr inbounds i32, i32* %222, i64 2, !dbg !1397
  store i32 %add185, i32* %arrayidx186, align 4, !dbg !1397
  %223 = load i32, i32* %c0_y182, align 4, !dbg !1397
  %224 = load i32*, i32** %data_y.addr, align 8, !dbg !1397
  %arrayidx187 = getelementptr inbounds i32, i32* %224, i64 3, !dbg !1397
  %225 = load i32, i32* %arrayidx187, align 4, !dbg !1397
  %add188 = add nsw i32 %223, %225, !dbg !1397
  %226 = load i32*, i32** %data_y.addr, align 8, !dbg !1397
  %arrayidx189 = getelementptr inbounds i32, i32* %226, i64 2, !dbg !1397
  store i32 %add188, i32* %arrayidx189, align 4, !dbg !1397
  %227 = load i32, i32* %c0_x180, align 4, !dbg !1397
  %228 = load i32*, i32** %data_x.addr, align 8, !dbg !1397
  %arrayidx190 = getelementptr inbounds i32, i32* %228, i64 3, !dbg !1397
  %229 = load i32, i32* %arrayidx190, align 4, !dbg !1397
  %sub191 = sub nsw i32 %227, %229, !dbg !1397
  %230 = load i32*, i32** %data_x.addr, align 8, !dbg !1397
  %arrayidx192 = getelementptr inbounds i32, i32* %230, i64 3, !dbg !1397
  store i32 %sub191, i32* %arrayidx192, align 4, !dbg !1397
  %231 = load i32, i32* %c0_y182, align 4, !dbg !1397
  %232 = load i32*, i32** %data_y.addr, align 8, !dbg !1397
  %arrayidx193 = getelementptr inbounds i32, i32* %232, i64 3, !dbg !1397
  %233 = load i32, i32* %arrayidx193, align 4, !dbg !1397
  %sub194 = sub nsw i32 %231, %233, !dbg !1397
  %234 = load i32*, i32** %data_y.addr, align 8, !dbg !1397
  %arrayidx195 = getelementptr inbounds i32, i32* %234, i64 3, !dbg !1397
  store i32 %sub194, i32* %arrayidx195, align 4, !dbg !1397
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_x196, metadata !1399, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i32* %exp_1_44_y197, metadata !1402, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i32* %tmp198, metadata !1403, metadata !DIExpression()), !dbg !1401
  store i32 0, i32* %exp_1_44_x196, align 4, !dbg !1401
  store i32 -1, i32* %exp_1_44_y197, align 4, !dbg !1401
  call void @llvm.dbg.declare(metadata i32* %c0_x199, metadata !1404, metadata !DIExpression()), !dbg !1406
  %235 = load i32*, i32** %data_x.addr, align 8, !dbg !1406
  %arrayidx200 = getelementptr inbounds i32, i32* %235, i64 4, !dbg !1406
  %236 = load i32, i32* %arrayidx200, align 4, !dbg !1406
  store i32 %236, i32* %c0_x199, align 4, !dbg !1406
  call void @llvm.dbg.declare(metadata i32* %c0_y201, metadata !1407, metadata !DIExpression()), !dbg !1406
  %237 = load i32*, i32** %data_y.addr, align 8, !dbg !1406
  %arrayidx202 = getelementptr inbounds i32, i32* %237, i64 4, !dbg !1406
  %238 = load i32, i32* %arrayidx202, align 4, !dbg !1406
  store i32 %238, i32* %c0_y201, align 4, !dbg !1406
  %239 = load i32, i32* %c0_x199, align 4, !dbg !1406
  %240 = load i32*, i32** %data_x.addr, align 8, !dbg !1406
  %arrayidx203 = getelementptr inbounds i32, i32* %240, i64 6, !dbg !1406
  %241 = load i32, i32* %arrayidx203, align 4, !dbg !1406
  %add204 = add nsw i32 %239, %241, !dbg !1406
  %242 = load i32*, i32** %data_x.addr, align 8, !dbg !1406
  %arrayidx205 = getelementptr inbounds i32, i32* %242, i64 4, !dbg !1406
  store i32 %add204, i32* %arrayidx205, align 4, !dbg !1406
  %243 = load i32, i32* %c0_y201, align 4, !dbg !1406
  %244 = load i32*, i32** %data_y.addr, align 8, !dbg !1406
  %arrayidx206 = getelementptr inbounds i32, i32* %244, i64 6, !dbg !1406
  %245 = load i32, i32* %arrayidx206, align 4, !dbg !1406
  %add207 = add nsw i32 %243, %245, !dbg !1406
  %246 = load i32*, i32** %data_y.addr, align 8, !dbg !1406
  %arrayidx208 = getelementptr inbounds i32, i32* %246, i64 4, !dbg !1406
  store i32 %add207, i32* %arrayidx208, align 4, !dbg !1406
  %247 = load i32, i32* %c0_x199, align 4, !dbg !1406
  %248 = load i32*, i32** %data_x.addr, align 8, !dbg !1406
  %arrayidx209 = getelementptr inbounds i32, i32* %248, i64 6, !dbg !1406
  %249 = load i32, i32* %arrayidx209, align 4, !dbg !1406
  %sub210 = sub nsw i32 %247, %249, !dbg !1406
  %250 = load i32*, i32** %data_x.addr, align 8, !dbg !1406
  %arrayidx211 = getelementptr inbounds i32, i32* %250, i64 6, !dbg !1406
  store i32 %sub210, i32* %arrayidx211, align 4, !dbg !1406
  %251 = load i32, i32* %c0_y201, align 4, !dbg !1406
  %252 = load i32*, i32** %data_y.addr, align 8, !dbg !1406
  %arrayidx212 = getelementptr inbounds i32, i32* %252, i64 6, !dbg !1406
  %253 = load i32, i32* %arrayidx212, align 4, !dbg !1406
  %sub213 = sub nsw i32 %251, %253, !dbg !1406
  %254 = load i32*, i32** %data_y.addr, align 8, !dbg !1406
  %arrayidx214 = getelementptr inbounds i32, i32* %254, i64 6, !dbg !1406
  store i32 %sub213, i32* %arrayidx214, align 4, !dbg !1406
  call void @llvm.dbg.declare(metadata i32* %c0_x215, metadata !1408, metadata !DIExpression()), !dbg !1410
  %255 = load i32*, i32** %data_x.addr, align 8, !dbg !1410
  %arrayidx216 = getelementptr inbounds i32, i32* %255, i64 5, !dbg !1410
  %256 = load i32, i32* %arrayidx216, align 4, !dbg !1410
  store i32 %256, i32* %c0_x215, align 4, !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %c0_y217, metadata !1411, metadata !DIExpression()), !dbg !1410
  %257 = load i32*, i32** %data_y.addr, align 8, !dbg !1410
  %arrayidx218 = getelementptr inbounds i32, i32* %257, i64 5, !dbg !1410
  %258 = load i32, i32* %arrayidx218, align 4, !dbg !1410
  store i32 %258, i32* %c0_y217, align 4, !dbg !1410
  %259 = load i32, i32* %c0_x215, align 4, !dbg !1410
  %260 = load i32*, i32** %data_x.addr, align 8, !dbg !1410
  %arrayidx219 = getelementptr inbounds i32, i32* %260, i64 7, !dbg !1410
  %261 = load i32, i32* %arrayidx219, align 4, !dbg !1410
  %add220 = add nsw i32 %259, %261, !dbg !1410
  %262 = load i32*, i32** %data_x.addr, align 8, !dbg !1410
  %arrayidx221 = getelementptr inbounds i32, i32* %262, i64 5, !dbg !1410
  store i32 %add220, i32* %arrayidx221, align 4, !dbg !1410
  %263 = load i32, i32* %c0_y217, align 4, !dbg !1410
  %264 = load i32*, i32** %data_y.addr, align 8, !dbg !1410
  %arrayidx222 = getelementptr inbounds i32, i32* %264, i64 7, !dbg !1410
  %265 = load i32, i32* %arrayidx222, align 4, !dbg !1410
  %add223 = add nsw i32 %263, %265, !dbg !1410
  %266 = load i32*, i32** %data_y.addr, align 8, !dbg !1410
  %arrayidx224 = getelementptr inbounds i32, i32* %266, i64 5, !dbg !1410
  store i32 %add223, i32* %arrayidx224, align 4, !dbg !1410
  %267 = load i32, i32* %c0_x215, align 4, !dbg !1410
  %268 = load i32*, i32** %data_x.addr, align 8, !dbg !1410
  %arrayidx225 = getelementptr inbounds i32, i32* %268, i64 7, !dbg !1410
  %269 = load i32, i32* %arrayidx225, align 4, !dbg !1410
  %sub226 = sub nsw i32 %267, %269, !dbg !1410
  %270 = load i32*, i32** %data_x.addr, align 8, !dbg !1410
  %arrayidx227 = getelementptr inbounds i32, i32* %270, i64 7, !dbg !1410
  store i32 %sub226, i32* %arrayidx227, align 4, !dbg !1410
  %271 = load i32, i32* %c0_y217, align 4, !dbg !1410
  %272 = load i32*, i32** %data_y.addr, align 8, !dbg !1410
  %arrayidx228 = getelementptr inbounds i32, i32* %272, i64 7, !dbg !1410
  %273 = load i32, i32* %arrayidx228, align 4, !dbg !1410
  %sub229 = sub nsw i32 %271, %273, !dbg !1410
  %274 = load i32*, i32** %data_y.addr, align 8, !dbg !1410
  %arrayidx230 = getelementptr inbounds i32, i32* %274, i64 7, !dbg !1410
  store i32 %sub229, i32* %arrayidx230, align 4, !dbg !1410
  %275 = load i32*, i32** %data_x.addr, align 8, !dbg !1401
  %arrayidx231 = getelementptr inbounds i32, i32* %275, i64 7, !dbg !1401
  %276 = load i32, i32* %arrayidx231, align 4, !dbg !1401
  store i32 %276, i32* %tmp198, align 4, !dbg !1401
  %277 = load i32*, i32** %data_x.addr, align 8, !dbg !1401
  %arrayidx232 = getelementptr inbounds i32, i32* %277, i64 7, !dbg !1401
  %278 = load i32, i32* %arrayidx232, align 4, !dbg !1401
  %279 = load i32, i32* %exp_1_44_x196, align 4, !dbg !1401
  %mul233 = mul nsw i32 %278, %279, !dbg !1401
  %280 = load i32*, i32** %data_y.addr, align 8, !dbg !1401
  %arrayidx234 = getelementptr inbounds i32, i32* %280, i64 7, !dbg !1401
  %281 = load i32, i32* %arrayidx234, align 4, !dbg !1401
  %282 = load i32, i32* %exp_1_44_y197, align 4, !dbg !1401
  %mul235 = mul nsw i32 %281, %282, !dbg !1401
  %sub236 = sub nsw i32 %mul233, %mul235, !dbg !1401
  %283 = load i32*, i32** %data_x.addr, align 8, !dbg !1401
  %arrayidx237 = getelementptr inbounds i32, i32* %283, i64 7, !dbg !1401
  store i32 %sub236, i32* %arrayidx237, align 4, !dbg !1401
  %284 = load i32, i32* %tmp198, align 4, !dbg !1401
  %285 = load i32, i32* %exp_1_44_y197, align 4, !dbg !1401
  %mul238 = mul nsw i32 %284, %285, !dbg !1401
  %286 = load i32*, i32** %data_y.addr, align 8, !dbg !1401
  %arrayidx239 = getelementptr inbounds i32, i32* %286, i64 7, !dbg !1401
  %287 = load i32, i32* %arrayidx239, align 4, !dbg !1401
  %288 = load i32, i32* %exp_1_44_x196, align 4, !dbg !1401
  %mul240 = mul nsw i32 %287, %288, !dbg !1401
  %sub241 = sub nsw i32 %mul238, %mul240, !dbg !1401
  %289 = load i32*, i32** %data_y.addr, align 8, !dbg !1401
  %arrayidx242 = getelementptr inbounds i32, i32* %289, i64 7, !dbg !1401
  store i32 %sub241, i32* %arrayidx242, align 4, !dbg !1401
  call void @llvm.dbg.declare(metadata i32* %c0_x243, metadata !1412, metadata !DIExpression()), !dbg !1414
  %290 = load i32*, i32** %data_x.addr, align 8, !dbg !1414
  %arrayidx244 = getelementptr inbounds i32, i32* %290, i64 4, !dbg !1414
  %291 = load i32, i32* %arrayidx244, align 4, !dbg !1414
  store i32 %291, i32* %c0_x243, align 4, !dbg !1414
  call void @llvm.dbg.declare(metadata i32* %c0_y245, metadata !1415, metadata !DIExpression()), !dbg !1414
  %292 = load i32*, i32** %data_y.addr, align 8, !dbg !1414
  %arrayidx246 = getelementptr inbounds i32, i32* %292, i64 4, !dbg !1414
  %293 = load i32, i32* %arrayidx246, align 4, !dbg !1414
  store i32 %293, i32* %c0_y245, align 4, !dbg !1414
  %294 = load i32, i32* %c0_x243, align 4, !dbg !1414
  %295 = load i32*, i32** %data_x.addr, align 8, !dbg !1414
  %arrayidx247 = getelementptr inbounds i32, i32* %295, i64 5, !dbg !1414
  %296 = load i32, i32* %arrayidx247, align 4, !dbg !1414
  %add248 = add nsw i32 %294, %296, !dbg !1414
  %297 = load i32*, i32** %data_x.addr, align 8, !dbg !1414
  %arrayidx249 = getelementptr inbounds i32, i32* %297, i64 4, !dbg !1414
  store i32 %add248, i32* %arrayidx249, align 4, !dbg !1414
  %298 = load i32, i32* %c0_y245, align 4, !dbg !1414
  %299 = load i32*, i32** %data_y.addr, align 8, !dbg !1414
  %arrayidx250 = getelementptr inbounds i32, i32* %299, i64 5, !dbg !1414
  %300 = load i32, i32* %arrayidx250, align 4, !dbg !1414
  %add251 = add nsw i32 %298, %300, !dbg !1414
  %301 = load i32*, i32** %data_y.addr, align 8, !dbg !1414
  %arrayidx252 = getelementptr inbounds i32, i32* %301, i64 4, !dbg !1414
  store i32 %add251, i32* %arrayidx252, align 4, !dbg !1414
  %302 = load i32, i32* %c0_x243, align 4, !dbg !1414
  %303 = load i32*, i32** %data_x.addr, align 8, !dbg !1414
  %arrayidx253 = getelementptr inbounds i32, i32* %303, i64 5, !dbg !1414
  %304 = load i32, i32* %arrayidx253, align 4, !dbg !1414
  %sub254 = sub nsw i32 %302, %304, !dbg !1414
  %305 = load i32*, i32** %data_x.addr, align 8, !dbg !1414
  %arrayidx255 = getelementptr inbounds i32, i32* %305, i64 5, !dbg !1414
  store i32 %sub254, i32* %arrayidx255, align 4, !dbg !1414
  %306 = load i32, i32* %c0_y245, align 4, !dbg !1414
  %307 = load i32*, i32** %data_y.addr, align 8, !dbg !1414
  %arrayidx256 = getelementptr inbounds i32, i32* %307, i64 5, !dbg !1414
  %308 = load i32, i32* %arrayidx256, align 4, !dbg !1414
  %sub257 = sub nsw i32 %306, %308, !dbg !1414
  %309 = load i32*, i32** %data_y.addr, align 8, !dbg !1414
  %arrayidx258 = getelementptr inbounds i32, i32* %309, i64 5, !dbg !1414
  store i32 %sub257, i32* %arrayidx258, align 4, !dbg !1414
  call void @llvm.dbg.declare(metadata i32* %c0_x259, metadata !1416, metadata !DIExpression()), !dbg !1418
  %310 = load i32*, i32** %data_x.addr, align 8, !dbg !1418
  %arrayidx260 = getelementptr inbounds i32, i32* %310, i64 6, !dbg !1418
  %311 = load i32, i32* %arrayidx260, align 4, !dbg !1418
  store i32 %311, i32* %c0_x259, align 4, !dbg !1418
  call void @llvm.dbg.declare(metadata i32* %c0_y261, metadata !1419, metadata !DIExpression()), !dbg !1418
  %312 = load i32*, i32** %data_y.addr, align 8, !dbg !1418
  %arrayidx262 = getelementptr inbounds i32, i32* %312, i64 6, !dbg !1418
  %313 = load i32, i32* %arrayidx262, align 4, !dbg !1418
  store i32 %313, i32* %c0_y261, align 4, !dbg !1418
  %314 = load i32, i32* %c0_x259, align 4, !dbg !1418
  %315 = load i32*, i32** %data_x.addr, align 8, !dbg !1418
  %arrayidx263 = getelementptr inbounds i32, i32* %315, i64 7, !dbg !1418
  %316 = load i32, i32* %arrayidx263, align 4, !dbg !1418
  %add264 = add nsw i32 %314, %316, !dbg !1418
  %317 = load i32*, i32** %data_x.addr, align 8, !dbg !1418
  %arrayidx265 = getelementptr inbounds i32, i32* %317, i64 6, !dbg !1418
  store i32 %add264, i32* %arrayidx265, align 4, !dbg !1418
  %318 = load i32, i32* %c0_y261, align 4, !dbg !1418
  %319 = load i32*, i32** %data_y.addr, align 8, !dbg !1418
  %arrayidx266 = getelementptr inbounds i32, i32* %319, i64 7, !dbg !1418
  %320 = load i32, i32* %arrayidx266, align 4, !dbg !1418
  %add267 = add nsw i32 %318, %320, !dbg !1418
  %321 = load i32*, i32** %data_y.addr, align 8, !dbg !1418
  %arrayidx268 = getelementptr inbounds i32, i32* %321, i64 6, !dbg !1418
  store i32 %add267, i32* %arrayidx268, align 4, !dbg !1418
  %322 = load i32, i32* %c0_x259, align 4, !dbg !1418
  %323 = load i32*, i32** %data_x.addr, align 8, !dbg !1418
  %arrayidx269 = getelementptr inbounds i32, i32* %323, i64 7, !dbg !1418
  %324 = load i32, i32* %arrayidx269, align 4, !dbg !1418
  %sub270 = sub nsw i32 %322, %324, !dbg !1418
  %325 = load i32*, i32** %data_x.addr, align 8, !dbg !1418
  %arrayidx271 = getelementptr inbounds i32, i32* %325, i64 7, !dbg !1418
  store i32 %sub270, i32* %arrayidx271, align 4, !dbg !1418
  %326 = load i32, i32* %c0_y261, align 4, !dbg !1418
  %327 = load i32*, i32** %data_y.addr, align 8, !dbg !1418
  %arrayidx272 = getelementptr inbounds i32, i32* %327, i64 7, !dbg !1418
  %328 = load i32, i32* %arrayidx272, align 4, !dbg !1418
  %sub273 = sub nsw i32 %326, %328, !dbg !1418
  %329 = load i32*, i32** %data_y.addr, align 8, !dbg !1418
  %arrayidx274 = getelementptr inbounds i32, i32* %329, i64 7, !dbg !1418
  store i32 %sub273, i32* %arrayidx274, align 4, !dbg !1418
  br label %store, !dbg !1354

store:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !1420), !dbg !1421
  store i32 0, i32* %i, align 4, !dbg !1422
  br label %for.cond275, !dbg !1424

for.cond275:                                      ; preds = %for.inc295, %store
  %330 = load i32, i32* %i, align 4, !dbg !1425
  %cmp276 = icmp slt i32 %330, 8, !dbg !1427
  br i1 %cmp276, label %for.body278, label %for.end297, !dbg !1428

for.body278:                                      ; preds = %for.cond275
  %331 = load i32*, i32** %data_x.addr, align 8, !dbg !1429
  %332 = load i32*, i32** %reversed.addr, align 8, !dbg !1431
  %333 = load i32, i32* %i, align 4, !dbg !1432
  %idxprom279 = sext i32 %333 to i64, !dbg !1431
  %arrayidx280 = getelementptr inbounds i32, i32* %332, i64 %idxprom279, !dbg !1431
  %334 = load i32, i32* %arrayidx280, align 4, !dbg !1431
  %idxprom281 = sext i32 %334 to i64, !dbg !1429
  %arrayidx282 = getelementptr inbounds i32, i32* %331, i64 %idxprom281, !dbg !1429
  %335 = load i32, i32* %arrayidx282, align 4, !dbg !1429
  %336 = load i32*, i32** %work_x.addr, align 8, !dbg !1433
  %337 = load i32, i32* %i, align 4, !dbg !1434
  %338 = load i32, i32* %stride, align 4, !dbg !1435
  %mul283 = mul nsw i32 %337, %338, !dbg !1436
  %339 = load i32, i32* %tid, align 4, !dbg !1437
  %add284 = add nsw i32 %mul283, %339, !dbg !1438
  %idxprom285 = sext i32 %add284 to i64, !dbg !1433
  %arrayidx286 = getelementptr inbounds i32, i32* %336, i64 %idxprom285, !dbg !1433
  store i32 %335, i32* %arrayidx286, align 4, !dbg !1439
  %340 = load i32*, i32** %data_y.addr, align 8, !dbg !1440
  %341 = load i32*, i32** %reversed.addr, align 8, !dbg !1441
  %342 = load i32, i32* %i, align 4, !dbg !1442
  %idxprom287 = sext i32 %342 to i64, !dbg !1441
  %arrayidx288 = getelementptr inbounds i32, i32* %341, i64 %idxprom287, !dbg !1441
  %343 = load i32, i32* %arrayidx288, align 4, !dbg !1441
  %idxprom289 = sext i32 %343 to i64, !dbg !1440
  %arrayidx290 = getelementptr inbounds i32, i32* %340, i64 %idxprom289, !dbg !1440
  %344 = load i32, i32* %arrayidx290, align 4, !dbg !1440
  %345 = load i32*, i32** %work_y.addr, align 8, !dbg !1443
  %346 = load i32, i32* %i, align 4, !dbg !1444
  %347 = load i32, i32* %stride, align 4, !dbg !1445
  %mul291 = mul nsw i32 %346, %347, !dbg !1446
  %348 = load i32, i32* %tid, align 4, !dbg !1447
  %add292 = add nsw i32 %mul291, %348, !dbg !1448
  %idxprom293 = sext i32 %add292 to i64, !dbg !1443
  %arrayidx294 = getelementptr inbounds i32, i32* %345, i64 %idxprom293, !dbg !1443
  store i32 %344, i32* %arrayidx294, align 4, !dbg !1449
  br label %for.inc295, !dbg !1450

for.inc295:                                       ; preds = %for.body278
  %349 = load i32, i32* %i, align 4, !dbg !1451
  %inc296 = add nsw i32 %349, 1, !dbg !1451
  store i32 %inc296, i32* %i, align 4, !dbg !1451
  br label %for.cond275, !dbg !1452, !llvm.loop !1453

for.end297:                                       ; preds = %for.cond275
  br label %for.inc298, !dbg !1455

for.inc298:                                       ; preds = %for.end297
  %350 = load i32, i32* %tid, align 4, !dbg !1456
  %inc299 = add nsw i32 %350, 1, !dbg !1456
  store i32 %inc299, i32* %tid, align 4, !dbg !1456
  br label %for.cond, !dbg !1457, !llvm.loop !1458

for.end300:                                       ; preds = %for.cond
  ret void, !dbg !1460
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fft1D_512(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 !dbg !1461 {
entry:
  %work_x.addr = alloca i32*, align 8
  %work_y.addr = alloca i32*, align 8
  %DATA_x.addr = alloca i32*, align 8
  %DATA_y.addr = alloca i32*, align 8
  %data_x.addr = alloca i32*, align 8
  %data_y.addr = alloca i32*, align 8
  %smem.addr = alloca i32*, align 8
  %reversed.addr = alloca i32*, align 8
  %sin_64.addr = alloca float*, align 8
  %cos_64.addr = alloca float*, align 8
  %sin_512.addr = alloca float*, align 8
  %cos_512.addr = alloca float*, align 8
  %tid = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stride = alloca i32, align 4
  store i32* %work_x, i32** %work_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_x.addr, metadata !1462, metadata !DIExpression()), !dbg !1463
  store i32* %work_y, i32** %work_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %work_y.addr, metadata !1464, metadata !DIExpression()), !dbg !1465
  store i32* %DATA_x, i32** %DATA_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_x.addr, metadata !1466, metadata !DIExpression()), !dbg !1467
  store i32* %DATA_y, i32** %DATA_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %DATA_y.addr, metadata !1468, metadata !DIExpression()), !dbg !1469
  store i32* %data_x, i32** %data_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_x.addr, metadata !1470, metadata !DIExpression()), !dbg !1471
  store i32* %data_y, i32** %data_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data_y.addr, metadata !1472, metadata !DIExpression()), !dbg !1473
  store i32* %smem, i32** %smem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smem.addr, metadata !1474, metadata !DIExpression()), !dbg !1475
  store i32* %reversed, i32** %reversed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reversed.addr, metadata !1476, metadata !DIExpression()), !dbg !1477
  store float* %sin_64, float** %sin_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_64.addr, metadata !1478, metadata !DIExpression()), !dbg !1479
  store float* %cos_64, float** %cos_64.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_64.addr, metadata !1480, metadata !DIExpression()), !dbg !1481
  store float* %sin_512, float** %sin_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sin_512.addr, metadata !1482, metadata !DIExpression()), !dbg !1483
  store float* %cos_512, float** %cos_512.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cos_512.addr, metadata !1484, metadata !DIExpression()), !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !1486, metadata !DIExpression()), !dbg !1487
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !1488, metadata !DIExpression()), !dbg !1489
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !1490, metadata !DIExpression()), !dbg !1491
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1492, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1494, metadata !DIExpression()), !dbg !1495
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !1496, metadata !DIExpression()), !dbg !1497
  store i32 64, i32* %stride, align 4, !dbg !1498
  %0 = load i32*, i32** %work_x.addr, align 8, !dbg !1499
  %1 = load i32*, i32** %work_y.addr, align 8, !dbg !1500
  %2 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1501
  %3 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1502
  %4 = load i32*, i32** %data_x.addr, align 8, !dbg !1503
  %5 = load i32*, i32** %data_y.addr, align 8, !dbg !1504
  %6 = load i32*, i32** %smem.addr, align 8, !dbg !1505
  %7 = load i32*, i32** %reversed.addr, align 8, !dbg !1506
  %8 = load float*, float** %sin_64.addr, align 8, !dbg !1507
  %9 = load float*, float** %cos_64.addr, align 8, !dbg !1508
  %10 = load float*, float** %sin_512.addr, align 8, !dbg !1509
  %11 = load float*, float** %cos_512.addr, align 8, !dbg !1510
  call void @step1(i32* %0, i32* %1, i32* %2, i32* %3, i32* %4, i32* %5, i32* %6, i32* %7, float* %8, float* %9, float* %10, float* %11), !dbg !1511
  %12 = load i32*, i32** %work_x.addr, align 8, !dbg !1512
  %13 = load i32*, i32** %work_y.addr, align 8, !dbg !1513
  %14 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1514
  %15 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1515
  %16 = load i32*, i32** %data_x.addr, align 8, !dbg !1516
  %17 = load i32*, i32** %data_y.addr, align 8, !dbg !1517
  %18 = load i32*, i32** %smem.addr, align 8, !dbg !1518
  %19 = load i32*, i32** %reversed.addr, align 8, !dbg !1519
  %20 = load float*, float** %sin_64.addr, align 8, !dbg !1520
  %21 = load float*, float** %cos_64.addr, align 8, !dbg !1521
  %22 = load float*, float** %sin_512.addr, align 8, !dbg !1522
  %23 = load float*, float** %cos_512.addr, align 8, !dbg !1523
  call void @step2(i32* %12, i32* %13, i32* %14, i32* %15, i32* %16, i32* %17, i32* %18, i32* %19, float* %20, float* %21, float* %22, float* %23), !dbg !1524
  %24 = load i32*, i32** %work_x.addr, align 8, !dbg !1525
  %25 = load i32*, i32** %work_y.addr, align 8, !dbg !1526
  %26 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1527
  %27 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1528
  %28 = load i32*, i32** %data_x.addr, align 8, !dbg !1529
  %29 = load i32*, i32** %data_y.addr, align 8, !dbg !1530
  %30 = load i32*, i32** %smem.addr, align 8, !dbg !1531
  %31 = load i32*, i32** %reversed.addr, align 8, !dbg !1532
  %32 = load float*, float** %sin_64.addr, align 8, !dbg !1533
  %33 = load float*, float** %cos_64.addr, align 8, !dbg !1534
  %34 = load float*, float** %sin_512.addr, align 8, !dbg !1535
  %35 = load float*, float** %cos_512.addr, align 8, !dbg !1536
  call void @step3(i32* %24, i32* %25, i32* %26, i32* %27, i32* %28, i32* %29, i32* %30, i32* %31, float* %32, float* %33, float* %34, float* %35), !dbg !1537
  %36 = load i32*, i32** %work_x.addr, align 8, !dbg !1538
  %37 = load i32*, i32** %work_y.addr, align 8, !dbg !1539
  %38 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1540
  %39 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1541
  %40 = load i32*, i32** %data_x.addr, align 8, !dbg !1542
  %41 = load i32*, i32** %data_y.addr, align 8, !dbg !1543
  %42 = load i32*, i32** %smem.addr, align 8, !dbg !1544
  %43 = load i32*, i32** %reversed.addr, align 8, !dbg !1545
  %44 = load float*, float** %sin_64.addr, align 8, !dbg !1546
  %45 = load float*, float** %cos_64.addr, align 8, !dbg !1547
  %46 = load float*, float** %sin_512.addr, align 8, !dbg !1548
  %47 = load float*, float** %cos_512.addr, align 8, !dbg !1549
  call void @step4(i32* %36, i32* %37, i32* %38, i32* %39, i32* %40, i32* %41, i32* %42, i32* %43, float* %44, float* %45, float* %46, float* %47), !dbg !1550
  %48 = load i32*, i32** %work_x.addr, align 8, !dbg !1551
  %49 = load i32*, i32** %work_y.addr, align 8, !dbg !1552
  %50 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1553
  %51 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1554
  %52 = load i32*, i32** %data_x.addr, align 8, !dbg !1555
  %53 = load i32*, i32** %data_y.addr, align 8, !dbg !1556
  %54 = load i32*, i32** %smem.addr, align 8, !dbg !1557
  %55 = load i32*, i32** %reversed.addr, align 8, !dbg !1558
  %56 = load float*, float** %sin_64.addr, align 8, !dbg !1559
  %57 = load float*, float** %cos_64.addr, align 8, !dbg !1560
  %58 = load float*, float** %sin_512.addr, align 8, !dbg !1561
  %59 = load float*, float** %cos_512.addr, align 8, !dbg !1562
  call void @step5(i32* %48, i32* %49, i32* %50, i32* %51, i32* %52, i32* %53, i32* %54, i32* %55, float* %56, float* %57, float* %58, float* %59), !dbg !1563
  %60 = load i32*, i32** %work_x.addr, align 8, !dbg !1564
  %61 = load i32*, i32** %work_y.addr, align 8, !dbg !1565
  %62 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1566
  %63 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1567
  %64 = load i32*, i32** %data_x.addr, align 8, !dbg !1568
  %65 = load i32*, i32** %data_y.addr, align 8, !dbg !1569
  %66 = load i32*, i32** %smem.addr, align 8, !dbg !1570
  %67 = load i32*, i32** %reversed.addr, align 8, !dbg !1571
  %68 = load float*, float** %sin_64.addr, align 8, !dbg !1572
  %69 = load float*, float** %cos_64.addr, align 8, !dbg !1573
  %70 = load float*, float** %sin_512.addr, align 8, !dbg !1574
  %71 = load float*, float** %cos_512.addr, align 8, !dbg !1575
  call void @step6(i32* %60, i32* %61, i32* %62, i32* %63, i32* %64, i32* %65, i32* %66, i32* %67, float* %68, float* %69, float* %70, float* %71), !dbg !1576
  %72 = load i32*, i32** %work_x.addr, align 8, !dbg !1577
  %73 = load i32*, i32** %work_y.addr, align 8, !dbg !1578
  %74 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1579
  %75 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1580
  %76 = load i32*, i32** %data_x.addr, align 8, !dbg !1581
  %77 = load i32*, i32** %data_y.addr, align 8, !dbg !1582
  %78 = load i32*, i32** %smem.addr, align 8, !dbg !1583
  %79 = load i32*, i32** %reversed.addr, align 8, !dbg !1584
  %80 = load float*, float** %sin_64.addr, align 8, !dbg !1585
  %81 = load float*, float** %cos_64.addr, align 8, !dbg !1586
  %82 = load float*, float** %sin_512.addr, align 8, !dbg !1587
  %83 = load float*, float** %cos_512.addr, align 8, !dbg !1588
  call void @step7(i32* %72, i32* %73, i32* %74, i32* %75, i32* %76, i32* %77, i32* %78, i32* %79, float* %80, float* %81, float* %82, float* %83), !dbg !1589
  %84 = load i32*, i32** %work_x.addr, align 8, !dbg !1590
  %85 = load i32*, i32** %work_y.addr, align 8, !dbg !1591
  %86 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1592
  %87 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1593
  %88 = load i32*, i32** %data_x.addr, align 8, !dbg !1594
  %89 = load i32*, i32** %data_y.addr, align 8, !dbg !1595
  %90 = load i32*, i32** %smem.addr, align 8, !dbg !1596
  %91 = load i32*, i32** %reversed.addr, align 8, !dbg !1597
  %92 = load float*, float** %sin_64.addr, align 8, !dbg !1598
  %93 = load float*, float** %cos_64.addr, align 8, !dbg !1599
  %94 = load float*, float** %sin_512.addr, align 8, !dbg !1600
  %95 = load float*, float** %cos_512.addr, align 8, !dbg !1601
  call void @step8(i32* %84, i32* %85, i32* %86, i32* %87, i32* %88, i32* %89, i32* %90, i32* %91, float* %92, float* %93, float* %94, float* %95), !dbg !1602
  %96 = load i32*, i32** %work_x.addr, align 8, !dbg !1603
  %97 = load i32*, i32** %work_y.addr, align 8, !dbg !1604
  %98 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1605
  %99 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1606
  %100 = load i32*, i32** %data_x.addr, align 8, !dbg !1607
  %101 = load i32*, i32** %data_y.addr, align 8, !dbg !1608
  %102 = load i32*, i32** %smem.addr, align 8, !dbg !1609
  %103 = load i32*, i32** %reversed.addr, align 8, !dbg !1610
  %104 = load float*, float** %sin_64.addr, align 8, !dbg !1611
  %105 = load float*, float** %cos_64.addr, align 8, !dbg !1612
  %106 = load float*, float** %sin_512.addr, align 8, !dbg !1613
  %107 = load float*, float** %cos_512.addr, align 8, !dbg !1614
  call void @step9(i32* %96, i32* %97, i32* %98, i32* %99, i32* %100, i32* %101, i32* %102, i32* %103, float* %104, float* %105, float* %106, float* %107), !dbg !1615
  %108 = load i32*, i32** %work_x.addr, align 8, !dbg !1616
  %109 = load i32*, i32** %work_y.addr, align 8, !dbg !1617
  %110 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1618
  %111 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1619
  %112 = load i32*, i32** %data_x.addr, align 8, !dbg !1620
  %113 = load i32*, i32** %data_y.addr, align 8, !dbg !1621
  %114 = load i32*, i32** %smem.addr, align 8, !dbg !1622
  %115 = load i32*, i32** %reversed.addr, align 8, !dbg !1623
  %116 = load float*, float** %sin_64.addr, align 8, !dbg !1624
  %117 = load float*, float** %cos_64.addr, align 8, !dbg !1625
  %118 = load float*, float** %sin_512.addr, align 8, !dbg !1626
  %119 = load float*, float** %cos_512.addr, align 8, !dbg !1627
  call void @step10(i32* %108, i32* %109, i32* %110, i32* %111, i32* %112, i32* %113, i32* %114, i32* %115, float* %116, float* %117, float* %118, float* %119), !dbg !1628
  %120 = load i32*, i32** %work_x.addr, align 8, !dbg !1629
  %121 = load i32*, i32** %work_y.addr, align 8, !dbg !1630
  %122 = load i32*, i32** %DATA_x.addr, align 8, !dbg !1631
  %123 = load i32*, i32** %DATA_y.addr, align 8, !dbg !1632
  %124 = load i32*, i32** %data_x.addr, align 8, !dbg !1633
  %125 = load i32*, i32** %data_y.addr, align 8, !dbg !1634
  %126 = load i32*, i32** %smem.addr, align 8, !dbg !1635
  %127 = load i32*, i32** %reversed.addr, align 8, !dbg !1636
  %128 = load float*, float** %sin_64.addr, align 8, !dbg !1637
  %129 = load float*, float** %cos_64.addr, align 8, !dbg !1638
  %130 = load float*, float** %sin_512.addr, align 8, !dbg !1639
  %131 = load float*, float** %cos_512.addr, align 8, !dbg !1640
  call void @step11(i32* %120, i32* %121, i32* %122, i32* %123, i32* %124, i32* %125, i32* %126, i32* %127, float* %128, float* %129, float* %130, float* %131), !dbg !1641
  ret void, !dbg !1642
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 !dbg !1643 {
entry:
  %retval = alloca i32, align 4
  %a_x = alloca [512 x i32], align 16
  %a_y = alloca [512 x i32], align 16
  %i = alloca i32, align 4
  %sin_64 = alloca [448 x float], align 16
  %sin_512 = alloca [448 x float], align 16
  %cos_64 = alloca [448 x float], align 16
  %cos_512 = alloca [448 x float], align 16
  %DATA_x = alloca [512 x i32], align 16
  %DATA_y = alloca [512 x i32], align 16
  %data_x = alloca [8 x i32], align 16
  %data_y = alloca [8 x i32], align 16
  %smem = alloca [576 x i32], align 16
  %reversed = alloca [8 x i32], align 16
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata [512 x i32]* %a_x, metadata !1646, metadata !DIExpression()), !dbg !1650
  call void @llvm.dbg.declare(metadata [512 x i32]* %a_y, metadata !1651, metadata !DIExpression()), !dbg !1652
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1653, metadata !DIExpression()), !dbg !1654
  store i32 0, i32* %i, align 4, !dbg !1655
  br label %for.cond, !dbg !1657

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1658
  %cmp = icmp slt i32 %0, 512, !dbg !1660
  br i1 %cmp, label %for.body, label %for.end, !dbg !1661

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1662
  %2 = load i32, i32* %i, align 4, !dbg !1664
  %idxprom = sext i32 %2 to i64, !dbg !1665
  %arrayidx = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %idxprom, !dbg !1665
  store i32 %1, i32* %arrayidx, align 4, !dbg !1666
  %3 = load i32, i32* %i, align 4, !dbg !1667
  %idxprom1 = sext i32 %3 to i64, !dbg !1668
  %arrayidx2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %idxprom1, !dbg !1668
  store i32 0, i32* %arrayidx2, align 4, !dbg !1669
  br label %for.inc, !dbg !1670

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !1671
  %inc = add nsw i32 %4, 1, !dbg !1671
  store i32 %inc, i32* %i, align 4, !dbg !1671
  br label %for.cond, !dbg !1672, !llvm.loop !1673

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [448 x float]* %sin_64, metadata !1675, metadata !DIExpression()), !dbg !1679
  %5 = bitcast [448 x float]* %sin_64 to i8*, !dbg !1679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %5, i8* align 16 bitcast ([448 x float]* @__const.main.sin_64 to i8*), i64 1792, i1 false), !dbg !1679
  call void @llvm.dbg.declare(metadata [448 x float]* %sin_512, metadata !1680, metadata !DIExpression()), !dbg !1681
  %6 = bitcast [448 x float]* %sin_512 to i8*, !dbg !1681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 bitcast ([448 x float]* @__const.main.sin_512 to i8*), i64 1792, i1 false), !dbg !1681
  call void @llvm.dbg.declare(metadata [448 x float]* %cos_64, metadata !1682, metadata !DIExpression()), !dbg !1683
  %7 = bitcast [448 x float]* %cos_64 to i8*, !dbg !1683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([448 x float]* @__const.main.cos_64 to i8*), i64 1792, i1 false), !dbg !1683
  call void @llvm.dbg.declare(metadata [448 x float]* %cos_512, metadata !1684, metadata !DIExpression()), !dbg !1685
  %8 = bitcast [448 x float]* %cos_512 to i8*, !dbg !1685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %8, i8* align 16 bitcast ([448 x float]* @__const.main.cos_512 to i8*), i64 1792, i1 false), !dbg !1685
  call void @llvm.dbg.declare(metadata [512 x i32]* %DATA_x, metadata !1686, metadata !DIExpression()), !dbg !1687
  call void @llvm.dbg.declare(metadata [512 x i32]* %DATA_y, metadata !1688, metadata !DIExpression()), !dbg !1689
  call void @llvm.dbg.declare(metadata [8 x i32]* %data_x, metadata !1690, metadata !DIExpression()), !dbg !1694
  call void @llvm.dbg.declare(metadata [8 x i32]* %data_y, metadata !1695, metadata !DIExpression()), !dbg !1696
  call void @llvm.dbg.declare(metadata [576 x i32]* %smem, metadata !1697, metadata !DIExpression()), !dbg !1701
  call void @llvm.dbg.declare(metadata [8 x i32]* %reversed, metadata !1702, metadata !DIExpression()), !dbg !1703
  %9 = bitcast [8 x i32]* %reversed to i8*, !dbg !1703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 16 bitcast ([8 x i32]* @__const.main.reversed to i8*), i64 32, i1 false), !dbg !1703
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0, !dbg !1704
  %arraydecay3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0, !dbg !1705
  %arraydecay4 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_x, i64 0, i64 0, !dbg !1706
  %arraydecay5 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_y, i64 0, i64 0, !dbg !1707
  %arraydecay6 = getelementptr inbounds [8 x i32], [8 x i32]* %data_x, i64 0, i64 0, !dbg !1708
  %arraydecay7 = getelementptr inbounds [8 x i32], [8 x i32]* %data_y, i64 0, i64 0, !dbg !1709
  %arraydecay8 = getelementptr inbounds [576 x i32], [576 x i32]* %smem, i64 0, i64 0, !dbg !1710
  %arraydecay9 = getelementptr inbounds [8 x i32], [8 x i32]* %reversed, i64 0, i64 0, !dbg !1711
  %arraydecay10 = getelementptr inbounds [448 x float], [448 x float]* %sin_64, i64 0, i64 0, !dbg !1712
  %arraydecay11 = getelementptr inbounds [448 x float], [448 x float]* %sin_512, i64 0, i64 0, !dbg !1713
  %arraydecay12 = getelementptr inbounds [448 x float], [448 x float]* %cos_64, i64 0, i64 0, !dbg !1714
  %arraydecay13 = getelementptr inbounds [448 x float], [448 x float]* %cos_512, i64 0, i64 0, !dbg !1715
  call void @fft1D_512(i32* %arraydecay, i32* %arraydecay3, i32* %arraydecay4, i32* %arraydecay5, i32* %arraydecay6, i32* %arraydecay7, i32* %arraydecay8, i32* %arraydecay9, float* %arraydecay10, float* %arraydecay11, float* %arraydecay12, float* %arraydecay13), !dbg !1716
  store i32 0, i32* %i, align 4, !dbg !1717
  br label %for.cond14, !dbg !1719

for.cond14:                                       ; preds = %for.inc21, %for.end
  %10 = load i32, i32* %i, align 4, !dbg !1720
  %cmp15 = icmp slt i32 %10, 2, !dbg !1722
  br i1 %cmp15, label %for.body16, label %for.end23, !dbg !1723

for.body16:                                       ; preds = %for.cond14
  %11 = load i32, i32* %i, align 4, !dbg !1724
  %idxprom17 = sext i32 %11 to i64, !dbg !1726
  %arrayidx18 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %idxprom17, !dbg !1726
  %12 = load i32, i32* %arrayidx18, align 4, !dbg !1726
  %13 = load i32, i32* %i, align 4, !dbg !1727
  %idxprom19 = sext i32 %13 to i64, !dbg !1728
  %arrayidx20 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %idxprom19, !dbg !1728
  %14 = load i32, i32* %arrayidx20, align 4, !dbg !1728
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %12, i32 %14), !dbg !1729
  br label %for.inc21, !dbg !1730

for.inc21:                                        ; preds = %for.body16
  %15 = load i32, i32* %i, align 4, !dbg !1731
  %inc22 = add nsw i32 %15, 1, !dbg !1731
  store i32 %inc22, i32* %i, align 4, !dbg !1731
  br label %for.cond14, !dbg !1732, !llvm.loop !1733

for.end23:                                        ; preds = %for.cond14
  ret i32 0, !dbg !1735
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @printf(i8*, ...) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "fft.c", directory: "/home/coco/work/LUF/hardware_ML/gather_loops_metrics/fft")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.1 "}
!7 = distinct !DISubprogram(name: "step1", scope: !1, file: !1, line: 8, type: !8, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10, !10, !10, !10, !12, !12, !12, !12}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!14 = !DILocalVariable(name: "work_x", arg: 1, scope: !7, file: !1, line: 8, type: !10)
!15 = !DILocation(line: 8, column: 17, scope: !7)
!16 = !DILocalVariable(name: "work_y", arg: 2, scope: !7, file: !1, line: 8, type: !10)
!17 = !DILocation(line: 8, column: 32, scope: !7)
!18 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !7, file: !1, line: 8, type: !10)
!19 = !DILocation(line: 8, column: 47, scope: !7)
!20 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !7, file: !1, line: 9, type: !10)
!21 = !DILocation(line: 9, column: 8, scope: !7)
!22 = !DILocalVariable(name: "data_x", arg: 5, scope: !7, file: !1, line: 9, type: !10)
!23 = !DILocation(line: 9, column: 23, scope: !7)
!24 = !DILocalVariable(name: "data_y", arg: 6, scope: !7, file: !1, line: 9, type: !10)
!25 = !DILocation(line: 9, column: 38, scope: !7)
!26 = !DILocalVariable(name: "smem", arg: 7, scope: !7, file: !1, line: 9, type: !10)
!27 = !DILocation(line: 9, column: 54, scope: !7)
!28 = !DILocalVariable(name: "reversed", arg: 8, scope: !7, file: !1, line: 10, type: !10)
!29 = !DILocation(line: 10, column: 7, scope: !7)
!30 = !DILocalVariable(name: "sin_64", arg: 9, scope: !7, file: !1, line: 11, type: !12)
!31 = !DILocation(line: 11, column: 9, scope: !7)
!32 = !DILocalVariable(name: "cos_64", arg: 10, scope: !7, file: !1, line: 12, type: !12)
!33 = !DILocation(line: 12, column: 9, scope: !7)
!34 = !DILocalVariable(name: "sin_512", arg: 11, scope: !7, file: !1, line: 13, type: !12)
!35 = !DILocation(line: 13, column: 9, scope: !7)
!36 = !DILocalVariable(name: "cos_512", arg: 12, scope: !7, file: !1, line: 14, type: !12)
!37 = !DILocation(line: 14, column: 9, scope: !7)
!38 = !DILocalVariable(name: "tid", scope: !7, file: !1, line: 17, type: !11)
!39 = !DILocation(line: 17, column: 6, scope: !7)
!40 = !DILocalVariable(name: "hi", scope: !7, file: !1, line: 17, type: !11)
!41 = !DILocation(line: 17, column: 11, scope: !7)
!42 = !DILocalVariable(name: "lo", scope: !7, file: !1, line: 17, type: !11)
!43 = !DILocation(line: 17, column: 15, scope: !7)
!44 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 17, type: !11)
!45 = !DILocation(line: 17, column: 19, scope: !7)
!46 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 17, type: !11)
!47 = !DILocation(line: 17, column: 22, scope: !7)
!48 = !DILocalVariable(name: "stride", scope: !7, file: !1, line: 17, type: !11)
!49 = !DILocation(line: 17, column: 25, scope: !7)
!50 = !DILocation(line: 18, column: 9, scope: !7)
!51 = !DILocation(line: 18, column: 2, scope: !7)
!52 = !DILabel(scope: !7, name: "outer", file: !1, line: 20)
!53 = !DILocation(line: 20, column: 3, scope: !7)
!54 = !DILocation(line: 20, column: 17, scope: !55)
!55 = distinct !DILexicalBlock(scope: !7, file: !1, line: 20, column: 9)
!56 = !DILocation(line: 20, column: 13, scope: !55)
!57 = !DILocation(line: 20, column: 22, scope: !58)
!58 = distinct !DILexicalBlock(scope: !55, file: !1, line: 20, column: 9)
!59 = !DILocation(line: 20, column: 26, scope: !58)
!60 = !DILocation(line: 20, column: 9, scope: !55)
!61 = !DILocation(line: 20, column: 43, scope: !58)
!62 = !DILabel(scope: !63, name: "load", file: !1, line: 22)
!63 = distinct !DILexicalBlock(scope: !58, file: !1, line: 20, column: 43)
!64 = !DILocation(line: 22, column: 5, scope: !63)
!65 = !DILocation(line: 22, column: 16, scope: !66)
!66 = distinct !DILexicalBlock(scope: !63, file: !1, line: 22, column: 10)
!67 = !DILocation(line: 22, column: 14, scope: !66)
!68 = !DILocation(line: 22, column: 21, scope: !69)
!69 = distinct !DILexicalBlock(scope: !66, file: !1, line: 22, column: 10)
!70 = !DILocation(line: 22, column: 22, scope: !69)
!71 = !DILocation(line: 22, column: 10, scope: !66)
!72 = !DILocation(line: 23, column: 16, scope: !73)
!73 = distinct !DILexicalBlock(scope: !69, file: !1, line: 22, column: 29)
!74 = !DILocation(line: 23, column: 23, scope: !73)
!75 = !DILocation(line: 23, column: 25, scope: !73)
!76 = !DILocation(line: 23, column: 24, scope: !73)
!77 = !DILocation(line: 23, column: 32, scope: !73)
!78 = !DILocation(line: 23, column: 31, scope: !73)
!79 = !DILocation(line: 23, column: 4, scope: !73)
!80 = !DILocation(line: 23, column: 11, scope: !73)
!81 = !DILocation(line: 23, column: 14, scope: !73)
!82 = !DILocation(line: 24, column: 16, scope: !73)
!83 = !DILocation(line: 24, column: 23, scope: !73)
!84 = !DILocation(line: 24, column: 25, scope: !73)
!85 = !DILocation(line: 24, column: 24, scope: !73)
!86 = !DILocation(line: 24, column: 32, scope: !73)
!87 = !DILocation(line: 24, column: 31, scope: !73)
!88 = !DILocation(line: 24, column: 4, scope: !73)
!89 = !DILocation(line: 24, column: 11, scope: !73)
!90 = !DILocation(line: 24, column: 14, scope: !73)
!91 = !DILocation(line: 25, column: 3, scope: !73)
!92 = !DILocation(line: 22, column: 26, scope: !69)
!93 = !DILocation(line: 22, column: 10, scope: !69)
!94 = distinct !{!94, !71, !95}
!95 = !DILocation(line: 25, column: 3, scope: !66)
!96 = !DILocalVariable(name: "exp_1_8_x", scope: !97, file: !1, line: 26, type: !11)
!97 = distinct !DILexicalBlock(scope: !63, file: !1, line: 26, column: 3)
!98 = !DILocation(line: 26, column: 3, scope: !97)
!99 = !DILocalVariable(name: "exp_1_4_x", scope: !97, file: !1, line: 26, type: !11)
!100 = !DILocalVariable(name: "exp_3_8_x", scope: !97, file: !1, line: 26, type: !11)
!101 = !DILocalVariable(name: "exp_1_8_y", scope: !97, file: !1, line: 26, type: !11)
!102 = !DILocalVariable(name: "exp_1_4_y", scope: !97, file: !1, line: 26, type: !11)
!103 = !DILocalVariable(name: "exp_3_8_y", scope: !97, file: !1, line: 26, type: !11)
!104 = !DILocalVariable(name: "tmp_1", scope: !97, file: !1, line: 26, type: !11)
!105 = !DILocalVariable(name: "tmp_2", scope: !97, file: !1, line: 26, type: !11)
!106 = !DILocalVariable(name: "c0_x", scope: !107, file: !1, line: 26, type: !11)
!107 = distinct !DILexicalBlock(scope: !97, file: !1, line: 26, column: 3)
!108 = !DILocation(line: 26, column: 3, scope: !107)
!109 = !DILocalVariable(name: "c0_y", scope: !107, file: !1, line: 26, type: !11)
!110 = !DILocalVariable(name: "c0_x", scope: !111, file: !1, line: 26, type: !11)
!111 = distinct !DILexicalBlock(scope: !97, file: !1, line: 26, column: 3)
!112 = !DILocation(line: 26, column: 3, scope: !111)
!113 = !DILocalVariable(name: "c0_y", scope: !111, file: !1, line: 26, type: !11)
!114 = !DILocalVariable(name: "c0_x", scope: !115, file: !1, line: 26, type: !11)
!115 = distinct !DILexicalBlock(scope: !97, file: !1, line: 26, column: 3)
!116 = !DILocation(line: 26, column: 3, scope: !115)
!117 = !DILocalVariable(name: "c0_y", scope: !115, file: !1, line: 26, type: !11)
!118 = !DILocalVariable(name: "c0_x", scope: !119, file: !1, line: 26, type: !11)
!119 = distinct !DILexicalBlock(scope: !97, file: !1, line: 26, column: 3)
!120 = !DILocation(line: 26, column: 3, scope: !119)
!121 = !DILocalVariable(name: "c0_y", scope: !119, file: !1, line: 26, type: !11)
!122 = !DILocalVariable(name: "exp_1_44_x", scope: !123, file: !1, line: 26, type: !11)
!123 = distinct !DILexicalBlock(scope: !97, file: !1, line: 26, column: 3)
!124 = !DILocation(line: 26, column: 3, scope: !123)
!125 = !DILocalVariable(name: "exp_1_44_y", scope: !123, file: !1, line: 26, type: !11)
!126 = !DILocalVariable(name: "tmp", scope: !123, file: !1, line: 26, type: !11)
!127 = !DILocalVariable(name: "c0_x", scope: !128, file: !1, line: 26, type: !11)
!128 = distinct !DILexicalBlock(scope: !123, file: !1, line: 26, column: 3)
!129 = !DILocation(line: 26, column: 3, scope: !128)
!130 = !DILocalVariable(name: "c0_y", scope: !128, file: !1, line: 26, type: !11)
!131 = !DILocalVariable(name: "c0_x", scope: !132, file: !1, line: 26, type: !11)
!132 = distinct !DILexicalBlock(scope: !123, file: !1, line: 26, column: 3)
!133 = !DILocation(line: 26, column: 3, scope: !132)
!134 = !DILocalVariable(name: "c0_y", scope: !132, file: !1, line: 26, type: !11)
!135 = !DILocalVariable(name: "c0_x", scope: !136, file: !1, line: 26, type: !11)
!136 = distinct !DILexicalBlock(scope: !123, file: !1, line: 26, column: 3)
!137 = !DILocation(line: 26, column: 3, scope: !136)
!138 = !DILocalVariable(name: "c0_y", scope: !136, file: !1, line: 26, type: !11)
!139 = !DILocalVariable(name: "c0_x", scope: !140, file: !1, line: 26, type: !11)
!140 = distinct !DILexicalBlock(scope: !123, file: !1, line: 26, column: 3)
!141 = !DILocation(line: 26, column: 3, scope: !140)
!142 = !DILocalVariable(name: "c0_y", scope: !140, file: !1, line: 26, type: !11)
!143 = !DILocalVariable(name: "exp_1_44_x", scope: !144, file: !1, line: 26, type: !11)
!144 = distinct !DILexicalBlock(scope: !97, file: !1, line: 26, column: 3)
!145 = !DILocation(line: 26, column: 3, scope: !144)
!146 = !DILocalVariable(name: "exp_1_44_y", scope: !144, file: !1, line: 26, type: !11)
!147 = !DILocalVariable(name: "tmp", scope: !144, file: !1, line: 26, type: !11)
!148 = !DILocalVariable(name: "c0_x", scope: !149, file: !1, line: 26, type: !11)
!149 = distinct !DILexicalBlock(scope: !144, file: !1, line: 26, column: 3)
!150 = !DILocation(line: 26, column: 3, scope: !149)
!151 = !DILocalVariable(name: "c0_y", scope: !149, file: !1, line: 26, type: !11)
!152 = !DILocalVariable(name: "c0_x", scope: !153, file: !1, line: 26, type: !11)
!153 = distinct !DILexicalBlock(scope: !144, file: !1, line: 26, column: 3)
!154 = !DILocation(line: 26, column: 3, scope: !153)
!155 = !DILocalVariable(name: "c0_y", scope: !153, file: !1, line: 26, type: !11)
!156 = !DILocalVariable(name: "c0_x", scope: !157, file: !1, line: 26, type: !11)
!157 = distinct !DILexicalBlock(scope: !144, file: !1, line: 26, column: 3)
!158 = !DILocation(line: 26, column: 3, scope: !157)
!159 = !DILocalVariable(name: "c0_y", scope: !157, file: !1, line: 26, type: !11)
!160 = !DILocalVariable(name: "c0_x", scope: !161, file: !1, line: 26, type: !11)
!161 = distinct !DILexicalBlock(scope: !144, file: !1, line: 26, column: 3)
!162 = !DILocation(line: 26, column: 3, scope: !161)
!163 = !DILocalVariable(name: "c0_y", scope: !161, file: !1, line: 26, type: !11)
!164 = !DILabel(scope: !63, name: "twiddles", file: !1, line: 30)
!165 = !DILocation(line: 30, column: 5, scope: !63)
!166 = !DILocation(line: 30, column: 20, scope: !167)
!167 = distinct !DILexicalBlock(scope: !63, file: !1, line: 30, column: 14)
!168 = !DILocation(line: 30, column: 18, scope: !167)
!169 = !DILocation(line: 30, column: 25, scope: !170)
!170 = distinct !DILexicalBlock(scope: !167, file: !1, line: 30, column: 14)
!171 = !DILocation(line: 30, column: 27, scope: !170)
!172 = !DILocation(line: 30, column: 14, scope: !167)
!173 = !DILocalVariable(name: "A_x", scope: !174, file: !1, line: 31, type: !11)
!174 = distinct !DILexicalBlock(scope: !170, file: !1, line: 30, column: 36)
!175 = !DILocation(line: 31, column: 18, scope: !174)
!176 = !DILocalVariable(name: "A_y", scope: !174, file: !1, line: 31, type: !11)
!177 = !DILocation(line: 31, column: 23, scope: !174)
!178 = !DILocalVariable(name: "tmp", scope: !174, file: !1, line: 31, type: !11)
!179 = !DILocation(line: 31, column: 28, scope: !174)
!180 = !DILocation(line: 32, column: 19, scope: !174)
!181 = !DILocation(line: 32, column: 27, scope: !174)
!182 = !DILocation(line: 32, column: 30, scope: !174)
!183 = !DILocation(line: 32, column: 33, scope: !174)
!184 = !DILocation(line: 32, column: 32, scope: !174)
!185 = !DILocation(line: 32, column: 34, scope: !174)
!186 = !DILocation(line: 32, column: 17, scope: !174)
!187 = !DILocation(line: 33, column: 19, scope: !174)
!188 = !DILocation(line: 33, column: 27, scope: !174)
!189 = !DILocation(line: 33, column: 30, scope: !174)
!190 = !DILocation(line: 33, column: 33, scope: !174)
!191 = !DILocation(line: 33, column: 32, scope: !174)
!192 = !DILocation(line: 33, column: 34, scope: !174)
!193 = !DILocation(line: 33, column: 17, scope: !174)
!194 = !DILocation(line: 34, column: 19, scope: !174)
!195 = !DILocation(line: 34, column: 26, scope: !174)
!196 = !DILocation(line: 34, column: 17, scope: !174)
!197 = !DILocation(line: 35, column: 25, scope: !174)
!198 = !DILocation(line: 35, column: 13, scope: !174)
!199 = !DILocation(line: 35, column: 20, scope: !174)
!200 = !DILocation(line: 35, column: 23, scope: !174)
!201 = !DILocation(line: 36, column: 25, scope: !174)
!202 = !DILocation(line: 36, column: 13, scope: !174)
!203 = !DILocation(line: 36, column: 20, scope: !174)
!204 = !DILocation(line: 36, column: 23, scope: !174)
!205 = !DILocation(line: 37, column: 5, scope: !174)
!206 = !DILocation(line: 30, column: 33, scope: !170)
!207 = !DILocation(line: 30, column: 14, scope: !170)
!208 = distinct !{!208, !172, !209}
!209 = !DILocation(line: 37, column: 5, scope: !167)
!210 = !DILabel(scope: !63, name: "store", file: !1, line: 40)
!211 = !DILocation(line: 40, column: 5, scope: !63)
!212 = !DILocation(line: 40, column: 17, scope: !213)
!213 = distinct !DILexicalBlock(scope: !63, file: !1, line: 40, column: 11)
!214 = !DILocation(line: 40, column: 15, scope: !213)
!215 = !DILocation(line: 40, column: 22, scope: !216)
!216 = distinct !DILexicalBlock(scope: !213, file: !1, line: 40, column: 11)
!217 = !DILocation(line: 40, column: 24, scope: !216)
!218 = !DILocation(line: 40, column: 11, scope: !213)
!219 = !DILocation(line: 41, column: 24, scope: !220)
!220 = distinct !DILexicalBlock(scope: !216, file: !1, line: 40, column: 34)
!221 = !DILocation(line: 41, column: 31, scope: !220)
!222 = !DILocation(line: 41, column: 4, scope: !220)
!223 = !DILocation(line: 41, column: 11, scope: !220)
!224 = !DILocation(line: 41, column: 14, scope: !220)
!225 = !DILocation(line: 41, column: 19, scope: !220)
!226 = !DILocation(line: 41, column: 17, scope: !220)
!227 = !DILocation(line: 41, column: 22, scope: !220)
!228 = !DILocation(line: 42, column: 24, scope: !220)
!229 = !DILocation(line: 42, column: 31, scope: !220)
!230 = !DILocation(line: 42, column: 4, scope: !220)
!231 = !DILocation(line: 42, column: 11, scope: !220)
!232 = !DILocation(line: 42, column: 14, scope: !220)
!233 = !DILocation(line: 42, column: 19, scope: !220)
!234 = !DILocation(line: 42, column: 17, scope: !220)
!235 = !DILocation(line: 42, column: 22, scope: !220)
!236 = !DILocation(line: 43, column: 3, scope: !220)
!237 = !DILocation(line: 40, column: 31, scope: !216)
!238 = !DILocation(line: 40, column: 11, scope: !216)
!239 = distinct !{!239, !218, !240}
!240 = !DILocation(line: 43, column: 3, scope: !213)
!241 = !DILocation(line: 44, column: 2, scope: !63)
!242 = !DILocation(line: 20, column: 40, scope: !58)
!243 = !DILocation(line: 20, column: 9, scope: !58)
!244 = distinct !{!244, !60, !245}
!245 = !DILocation(line: 44, column: 2, scope: !55)
!246 = !DILocation(line: 45, column: 1, scope: !7)
!247 = distinct !DISubprogram(name: "step2", scope: !1, file: !1, line: 46, type: !8, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!248 = !DILocalVariable(name: "work_x", arg: 1, scope: !247, file: !1, line: 46, type: !10)
!249 = !DILocation(line: 46, column: 17, scope: !247)
!250 = !DILocalVariable(name: "work_y", arg: 2, scope: !247, file: !1, line: 46, type: !10)
!251 = !DILocation(line: 46, column: 32, scope: !247)
!252 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !247, file: !1, line: 46, type: !10)
!253 = !DILocation(line: 46, column: 47, scope: !247)
!254 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !247, file: !1, line: 47, type: !10)
!255 = !DILocation(line: 47, column: 8, scope: !247)
!256 = !DILocalVariable(name: "data_x", arg: 5, scope: !247, file: !1, line: 47, type: !10)
!257 = !DILocation(line: 47, column: 23, scope: !247)
!258 = !DILocalVariable(name: "data_y", arg: 6, scope: !247, file: !1, line: 47, type: !10)
!259 = !DILocation(line: 47, column: 38, scope: !247)
!260 = !DILocalVariable(name: "smem", arg: 7, scope: !247, file: !1, line: 47, type: !10)
!261 = !DILocation(line: 47, column: 54, scope: !247)
!262 = !DILocalVariable(name: "reversed", arg: 8, scope: !247, file: !1, line: 48, type: !10)
!263 = !DILocation(line: 48, column: 7, scope: !247)
!264 = !DILocalVariable(name: "sin_64", arg: 9, scope: !247, file: !1, line: 49, type: !12)
!265 = !DILocation(line: 49, column: 9, scope: !247)
!266 = !DILocalVariable(name: "cos_64", arg: 10, scope: !247, file: !1, line: 50, type: !12)
!267 = !DILocation(line: 50, column: 9, scope: !247)
!268 = !DILocalVariable(name: "sin_512", arg: 11, scope: !247, file: !1, line: 51, type: !12)
!269 = !DILocation(line: 51, column: 9, scope: !247)
!270 = !DILocalVariable(name: "cos_512", arg: 12, scope: !247, file: !1, line: 52, type: !12)
!271 = !DILocation(line: 52, column: 9, scope: !247)
!272 = !DILocalVariable(name: "tid", scope: !247, file: !1, line: 55, type: !11)
!273 = !DILocation(line: 55, column: 6, scope: !247)
!274 = !DILocalVariable(name: "hi", scope: !247, file: !1, line: 55, type: !11)
!275 = !DILocation(line: 55, column: 11, scope: !247)
!276 = !DILocalVariable(name: "lo", scope: !247, file: !1, line: 55, type: !11)
!277 = !DILocation(line: 55, column: 15, scope: !247)
!278 = !DILocalVariable(name: "i", scope: !247, file: !1, line: 55, type: !11)
!279 = !DILocation(line: 55, column: 19, scope: !247)
!280 = !DILocalVariable(name: "j", scope: !247, file: !1, line: 55, type: !11)
!281 = !DILocation(line: 55, column: 22, scope: !247)
!282 = !DILocalVariable(name: "stride", scope: !247, file: !1, line: 55, type: !11)
!283 = !DILocation(line: 55, column: 25, scope: !247)
!284 = !DILocation(line: 56, column: 9, scope: !247)
!285 = !DILocation(line: 56, column: 2, scope: !247)
!286 = !DILabel(scope: !247, name: "outer", file: !1, line: 57)
!287 = !DILocation(line: 57, column: 3, scope: !247)
!288 = !DILocation(line: 57, column: 17, scope: !289)
!289 = distinct !DILexicalBlock(scope: !247, file: !1, line: 57, column: 9)
!290 = !DILocation(line: 57, column: 13, scope: !289)
!291 = !DILocation(line: 57, column: 22, scope: !292)
!292 = distinct !DILexicalBlock(scope: !289, file: !1, line: 57, column: 9)
!293 = !DILocation(line: 57, column: 26, scope: !292)
!294 = !DILocation(line: 57, column: 9, scope: !289)
!295 = !DILocation(line: 57, column: 38, scope: !292)
!296 = !DILabel(scope: !297, name: "load", file: !1, line: 58)
!297 = distinct !DILexicalBlock(scope: !292, file: !1, line: 57, column: 38)
!298 = !DILocation(line: 58, column: 5, scope: !297)
!299 = !DILocation(line: 58, column: 16, scope: !300)
!300 = distinct !DILexicalBlock(scope: !297, file: !1, line: 58, column: 10)
!301 = !DILocation(line: 58, column: 14, scope: !300)
!302 = !DILocation(line: 58, column: 21, scope: !303)
!303 = distinct !DILexicalBlock(scope: !300, file: !1, line: 58, column: 10)
!304 = !DILocation(line: 58, column: 23, scope: !303)
!305 = !DILocation(line: 58, column: 10, scope: !300)
!306 = !DILocation(line: 59, column: 16, scope: !307)
!307 = distinct !DILexicalBlock(scope: !303, file: !1, line: 58, column: 33)
!308 = !DILocation(line: 59, column: 23, scope: !307)
!309 = !DILocation(line: 59, column: 26, scope: !307)
!310 = !DILocation(line: 59, column: 31, scope: !307)
!311 = !DILocation(line: 59, column: 29, scope: !307)
!312 = !DILocation(line: 59, column: 4, scope: !307)
!313 = !DILocation(line: 59, column: 11, scope: !307)
!314 = !DILocation(line: 59, column: 14, scope: !307)
!315 = !DILocation(line: 61, column: 3, scope: !307)
!316 = !DILocation(line: 58, column: 30, scope: !303)
!317 = !DILocation(line: 58, column: 10, scope: !303)
!318 = distinct !{!318, !305, !319}
!319 = !DILocation(line: 61, column: 3, scope: !300)
!320 = !DILocation(line: 62, column: 8, scope: !297)
!321 = !DILocation(line: 62, column: 11, scope: !297)
!322 = !DILocation(line: 62, column: 6, scope: !297)
!323 = !DILocation(line: 63, column: 8, scope: !297)
!324 = !DILocation(line: 63, column: 11, scope: !297)
!325 = !DILocation(line: 63, column: 6, scope: !297)
!326 = !DILocation(line: 64, column: 3, scope: !327)
!327 = distinct !DILexicalBlock(scope: !297, file: !1, line: 64, column: 3)
!328 = !DILocation(line: 65, column: 2, scope: !297)
!329 = !DILocation(line: 57, column: 35, scope: !292)
!330 = !DILocation(line: 57, column: 9, scope: !292)
!331 = distinct !{!331, !294, !332}
!332 = !DILocation(line: 65, column: 2, scope: !289)
!333 = !DILocation(line: 67, column: 1, scope: !247)
!334 = distinct !DISubprogram(name: "step3", scope: !1, file: !1, line: 68, type: !8, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!335 = !DILocalVariable(name: "work_x", arg: 1, scope: !334, file: !1, line: 68, type: !10)
!336 = !DILocation(line: 68, column: 17, scope: !334)
!337 = !DILocalVariable(name: "work_y", arg: 2, scope: !334, file: !1, line: 68, type: !10)
!338 = !DILocation(line: 68, column: 32, scope: !334)
!339 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !334, file: !1, line: 68, type: !10)
!340 = !DILocation(line: 68, column: 47, scope: !334)
!341 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !334, file: !1, line: 69, type: !10)
!342 = !DILocation(line: 69, column: 8, scope: !334)
!343 = !DILocalVariable(name: "data_x", arg: 5, scope: !334, file: !1, line: 69, type: !10)
!344 = !DILocation(line: 69, column: 23, scope: !334)
!345 = !DILocalVariable(name: "data_y", arg: 6, scope: !334, file: !1, line: 69, type: !10)
!346 = !DILocation(line: 69, column: 38, scope: !334)
!347 = !DILocalVariable(name: "smem", arg: 7, scope: !334, file: !1, line: 69, type: !10)
!348 = !DILocation(line: 69, column: 54, scope: !334)
!349 = !DILocalVariable(name: "reversed", arg: 8, scope: !334, file: !1, line: 70, type: !10)
!350 = !DILocation(line: 70, column: 7, scope: !334)
!351 = !DILocalVariable(name: "sin_64", arg: 9, scope: !334, file: !1, line: 71, type: !12)
!352 = !DILocation(line: 71, column: 9, scope: !334)
!353 = !DILocalVariable(name: "cos_64", arg: 10, scope: !334, file: !1, line: 72, type: !12)
!354 = !DILocation(line: 72, column: 9, scope: !334)
!355 = !DILocalVariable(name: "sin_512", arg: 11, scope: !334, file: !1, line: 73, type: !12)
!356 = !DILocation(line: 73, column: 9, scope: !334)
!357 = !DILocalVariable(name: "cos_512", arg: 12, scope: !334, file: !1, line: 74, type: !12)
!358 = !DILocation(line: 74, column: 9, scope: !334)
!359 = !DILocalVariable(name: "tid", scope: !334, file: !1, line: 77, type: !11)
!360 = !DILocation(line: 77, column: 6, scope: !334)
!361 = !DILocalVariable(name: "hi", scope: !334, file: !1, line: 77, type: !11)
!362 = !DILocation(line: 77, column: 11, scope: !334)
!363 = !DILocalVariable(name: "lo", scope: !334, file: !1, line: 77, type: !11)
!364 = !DILocation(line: 77, column: 15, scope: !334)
!365 = !DILocalVariable(name: "i", scope: !334, file: !1, line: 77, type: !11)
!366 = !DILocation(line: 77, column: 19, scope: !334)
!367 = !DILocalVariable(name: "j", scope: !334, file: !1, line: 77, type: !11)
!368 = !DILocation(line: 77, column: 22, scope: !334)
!369 = !DILocalVariable(name: "stride", scope: !334, file: !1, line: 77, type: !11)
!370 = !DILocation(line: 77, column: 25, scope: !334)
!371 = !DILocation(line: 78, column: 9, scope: !334)
!372 = !DILocation(line: 78, column: 2, scope: !334)
!373 = !DILabel(scope: !334, name: "outer", file: !1, line: 79)
!374 = !DILocation(line: 79, column: 3, scope: !334)
!375 = !DILocation(line: 79, column: 17, scope: !376)
!376 = distinct !DILexicalBlock(scope: !334, file: !1, line: 79, column: 9)
!377 = !DILocation(line: 79, column: 13, scope: !376)
!378 = !DILocation(line: 79, column: 22, scope: !379)
!379 = distinct !DILexicalBlock(scope: !376, file: !1, line: 79, column: 9)
!380 = !DILocation(line: 79, column: 26, scope: !379)
!381 = !DILocation(line: 79, column: 9, scope: !376)
!382 = !DILocation(line: 79, column: 38, scope: !379)
!383 = !DILabel(scope: !384, name: "load", file: !1, line: 80)
!384 = distinct !DILexicalBlock(scope: !379, file: !1, line: 79, column: 38)
!385 = !DILocation(line: 80, column: 5, scope: !384)
!386 = !DILocation(line: 80, column: 16, scope: !387)
!387 = distinct !DILexicalBlock(scope: !384, file: !1, line: 80, column: 10)
!388 = !DILocation(line: 80, column: 14, scope: !387)
!389 = !DILocation(line: 80, column: 21, scope: !390)
!390 = distinct !DILexicalBlock(scope: !387, file: !1, line: 80, column: 10)
!391 = !DILocation(line: 80, column: 23, scope: !390)
!392 = !DILocation(line: 80, column: 10, scope: !387)
!393 = !DILocation(line: 81, column: 16, scope: !394)
!394 = distinct !DILexicalBlock(scope: !390, file: !1, line: 80, column: 33)
!395 = !DILocation(line: 81, column: 23, scope: !394)
!396 = !DILocation(line: 81, column: 26, scope: !394)
!397 = !DILocation(line: 81, column: 31, scope: !394)
!398 = !DILocation(line: 81, column: 29, scope: !394)
!399 = !DILocation(line: 81, column: 4, scope: !394)
!400 = !DILocation(line: 81, column: 11, scope: !394)
!401 = !DILocation(line: 81, column: 14, scope: !394)
!402 = !DILocation(line: 83, column: 3, scope: !394)
!403 = !DILocation(line: 80, column: 30, scope: !390)
!404 = !DILocation(line: 80, column: 10, scope: !390)
!405 = distinct !{!405, !392, !406}
!406 = !DILocation(line: 83, column: 3, scope: !387)
!407 = !DILocation(line: 84, column: 8, scope: !384)
!408 = !DILocation(line: 84, column: 11, scope: !384)
!409 = !DILocation(line: 84, column: 6, scope: !384)
!410 = !DILocation(line: 85, column: 8, scope: !384)
!411 = !DILocation(line: 85, column: 11, scope: !384)
!412 = !DILocation(line: 85, column: 6, scope: !384)
!413 = !DILocation(line: 86, column: 3, scope: !414)
!414 = distinct !DILexicalBlock(scope: !384, file: !1, line: 86, column: 3)
!415 = !DILabel(scope: !384, name: "store", file: !1, line: 87)
!416 = !DILocation(line: 87, column: 5, scope: !384)
!417 = !DILocation(line: 87, column: 17, scope: !418)
!418 = distinct !DILexicalBlock(scope: !384, file: !1, line: 87, column: 11)
!419 = !DILocation(line: 87, column: 15, scope: !418)
!420 = !DILocation(line: 87, column: 22, scope: !421)
!421 = distinct !DILexicalBlock(scope: !418, file: !1, line: 87, column: 11)
!422 = !DILocation(line: 87, column: 24, scope: !421)
!423 = !DILocation(line: 87, column: 11, scope: !418)
!424 = !DILocation(line: 88, column: 24, scope: !425)
!425 = distinct !DILexicalBlock(scope: !421, file: !1, line: 87, column: 34)
!426 = !DILocation(line: 88, column: 31, scope: !425)
!427 = !DILocation(line: 88, column: 4, scope: !425)
!428 = !DILocation(line: 88, column: 11, scope: !425)
!429 = !DILocation(line: 88, column: 14, scope: !425)
!430 = !DILocation(line: 88, column: 19, scope: !425)
!431 = !DILocation(line: 88, column: 17, scope: !425)
!432 = !DILocation(line: 88, column: 22, scope: !425)
!433 = !DILocation(line: 90, column: 3, scope: !425)
!434 = !DILocation(line: 87, column: 31, scope: !421)
!435 = !DILocation(line: 87, column: 11, scope: !421)
!436 = distinct !{!436, !423, !437}
!437 = !DILocation(line: 90, column: 3, scope: !418)
!438 = !DILocation(line: 91, column: 2, scope: !384)
!439 = !DILocation(line: 79, column: 35, scope: !379)
!440 = !DILocation(line: 79, column: 9, scope: !379)
!441 = distinct !{!441, !381, !442}
!442 = !DILocation(line: 91, column: 2, scope: !376)
!443 = !DILocation(line: 92, column: 1, scope: !334)
!444 = distinct !DISubprogram(name: "step4", scope: !1, file: !1, line: 93, type: !8, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!445 = !DILocalVariable(name: "work_x", arg: 1, scope: !444, file: !1, line: 93, type: !10)
!446 = !DILocation(line: 93, column: 17, scope: !444)
!447 = !DILocalVariable(name: "work_y", arg: 2, scope: !444, file: !1, line: 93, type: !10)
!448 = !DILocation(line: 93, column: 32, scope: !444)
!449 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !444, file: !1, line: 93, type: !10)
!450 = !DILocation(line: 93, column: 47, scope: !444)
!451 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !444, file: !1, line: 94, type: !10)
!452 = !DILocation(line: 94, column: 8, scope: !444)
!453 = !DILocalVariable(name: "data_x", arg: 5, scope: !444, file: !1, line: 94, type: !10)
!454 = !DILocation(line: 94, column: 23, scope: !444)
!455 = !DILocalVariable(name: "data_y", arg: 6, scope: !444, file: !1, line: 94, type: !10)
!456 = !DILocation(line: 94, column: 38, scope: !444)
!457 = !DILocalVariable(name: "smem", arg: 7, scope: !444, file: !1, line: 94, type: !10)
!458 = !DILocation(line: 94, column: 54, scope: !444)
!459 = !DILocalVariable(name: "reversed", arg: 8, scope: !444, file: !1, line: 95, type: !10)
!460 = !DILocation(line: 95, column: 7, scope: !444)
!461 = !DILocalVariable(name: "sin_64", arg: 9, scope: !444, file: !1, line: 96, type: !12)
!462 = !DILocation(line: 96, column: 9, scope: !444)
!463 = !DILocalVariable(name: "cos_64", arg: 10, scope: !444, file: !1, line: 97, type: !12)
!464 = !DILocation(line: 97, column: 9, scope: !444)
!465 = !DILocalVariable(name: "sin_512", arg: 11, scope: !444, file: !1, line: 98, type: !12)
!466 = !DILocation(line: 98, column: 9, scope: !444)
!467 = !DILocalVariable(name: "cos_512", arg: 12, scope: !444, file: !1, line: 99, type: !12)
!468 = !DILocation(line: 99, column: 9, scope: !444)
!469 = !DILocalVariable(name: "tid", scope: !444, file: !1, line: 102, type: !11)
!470 = !DILocation(line: 102, column: 6, scope: !444)
!471 = !DILocalVariable(name: "hi", scope: !444, file: !1, line: 102, type: !11)
!472 = !DILocation(line: 102, column: 11, scope: !444)
!473 = !DILocalVariable(name: "lo", scope: !444, file: !1, line: 102, type: !11)
!474 = !DILocation(line: 102, column: 15, scope: !444)
!475 = !DILocalVariable(name: "i", scope: !444, file: !1, line: 102, type: !11)
!476 = !DILocation(line: 102, column: 19, scope: !444)
!477 = !DILocalVariable(name: "j", scope: !444, file: !1, line: 102, type: !11)
!478 = !DILocation(line: 102, column: 22, scope: !444)
!479 = !DILocalVariable(name: "stride", scope: !444, file: !1, line: 102, type: !11)
!480 = !DILocation(line: 102, column: 25, scope: !444)
!481 = !DILocation(line: 103, column: 9, scope: !444)
!482 = !DILocation(line: 103, column: 2, scope: !444)
!483 = !DILabel(scope: !444, name: "outer", file: !1, line: 104)
!484 = !DILocation(line: 104, column: 3, scope: !444)
!485 = !DILocation(line: 104, column: 17, scope: !486)
!486 = distinct !DILexicalBlock(scope: !444, file: !1, line: 104, column: 9)
!487 = !DILocation(line: 104, column: 13, scope: !486)
!488 = !DILocation(line: 104, column: 22, scope: !489)
!489 = distinct !DILexicalBlock(scope: !486, file: !1, line: 104, column: 9)
!490 = !DILocation(line: 104, column: 26, scope: !489)
!491 = !DILocation(line: 104, column: 9, scope: !486)
!492 = !DILocation(line: 104, column: 38, scope: !489)
!493 = !DILabel(scope: !494, name: "load", file: !1, line: 105)
!494 = distinct !DILexicalBlock(scope: !489, file: !1, line: 104, column: 38)
!495 = !DILocation(line: 105, column: 5, scope: !494)
!496 = !DILocation(line: 105, column: 16, scope: !497)
!497 = distinct !DILexicalBlock(scope: !494, file: !1, line: 105, column: 10)
!498 = !DILocation(line: 105, column: 14, scope: !497)
!499 = !DILocation(line: 105, column: 21, scope: !500)
!500 = distinct !DILexicalBlock(scope: !497, file: !1, line: 105, column: 10)
!501 = !DILocation(line: 105, column: 23, scope: !500)
!502 = !DILocation(line: 105, column: 10, scope: !497)
!503 = !DILocation(line: 107, column: 16, scope: !504)
!504 = distinct !DILexicalBlock(scope: !500, file: !1, line: 105, column: 33)
!505 = !DILocation(line: 107, column: 23, scope: !504)
!506 = !DILocation(line: 107, column: 26, scope: !504)
!507 = !DILocation(line: 107, column: 31, scope: !504)
!508 = !DILocation(line: 107, column: 29, scope: !504)
!509 = !DILocation(line: 107, column: 4, scope: !504)
!510 = !DILocation(line: 107, column: 11, scope: !504)
!511 = !DILocation(line: 107, column: 14, scope: !504)
!512 = !DILocation(line: 108, column: 3, scope: !504)
!513 = !DILocation(line: 105, column: 30, scope: !500)
!514 = !DILocation(line: 105, column: 10, scope: !500)
!515 = distinct !{!515, !502, !516}
!516 = !DILocation(line: 108, column: 3, scope: !497)
!517 = !DILocation(line: 109, column: 8, scope: !494)
!518 = !DILocation(line: 109, column: 11, scope: !494)
!519 = !DILocation(line: 109, column: 6, scope: !494)
!520 = !DILocation(line: 110, column: 8, scope: !494)
!521 = !DILocation(line: 110, column: 11, scope: !494)
!522 = !DILocation(line: 110, column: 6, scope: !494)
!523 = !DILocation(line: 111, column: 3, scope: !524)
!524 = distinct !DILexicalBlock(scope: !494, file: !1, line: 111, column: 3)
!525 = !DILocation(line: 112, column: 2, scope: !494)
!526 = !DILocation(line: 104, column: 35, scope: !489)
!527 = !DILocation(line: 104, column: 9, scope: !489)
!528 = distinct !{!528, !491, !529}
!529 = !DILocation(line: 112, column: 2, scope: !486)
!530 = !DILocation(line: 113, column: 1, scope: !444)
!531 = distinct !DISubprogram(name: "step5", scope: !1, file: !1, line: 114, type: !8, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!532 = !DILocalVariable(name: "work_x", arg: 1, scope: !531, file: !1, line: 114, type: !10)
!533 = !DILocation(line: 114, column: 17, scope: !531)
!534 = !DILocalVariable(name: "work_y", arg: 2, scope: !531, file: !1, line: 114, type: !10)
!535 = !DILocation(line: 114, column: 32, scope: !531)
!536 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !531, file: !1, line: 114, type: !10)
!537 = !DILocation(line: 114, column: 47, scope: !531)
!538 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !531, file: !1, line: 115, type: !10)
!539 = !DILocation(line: 115, column: 8, scope: !531)
!540 = !DILocalVariable(name: "data_x", arg: 5, scope: !531, file: !1, line: 115, type: !10)
!541 = !DILocation(line: 115, column: 23, scope: !531)
!542 = !DILocalVariable(name: "data_y", arg: 6, scope: !531, file: !1, line: 115, type: !10)
!543 = !DILocation(line: 115, column: 38, scope: !531)
!544 = !DILocalVariable(name: "smem", arg: 7, scope: !531, file: !1, line: 115, type: !10)
!545 = !DILocation(line: 115, column: 54, scope: !531)
!546 = !DILocalVariable(name: "reversed", arg: 8, scope: !531, file: !1, line: 116, type: !10)
!547 = !DILocation(line: 116, column: 7, scope: !531)
!548 = !DILocalVariable(name: "sin_64", arg: 9, scope: !531, file: !1, line: 117, type: !12)
!549 = !DILocation(line: 117, column: 9, scope: !531)
!550 = !DILocalVariable(name: "cos_64", arg: 10, scope: !531, file: !1, line: 118, type: !12)
!551 = !DILocation(line: 118, column: 9, scope: !531)
!552 = !DILocalVariable(name: "sin_512", arg: 11, scope: !531, file: !1, line: 119, type: !12)
!553 = !DILocation(line: 119, column: 9, scope: !531)
!554 = !DILocalVariable(name: "cos_512", arg: 12, scope: !531, file: !1, line: 120, type: !12)
!555 = !DILocation(line: 120, column: 9, scope: !531)
!556 = !DILocalVariable(name: "tid", scope: !531, file: !1, line: 124, type: !11)
!557 = !DILocation(line: 124, column: 6, scope: !531)
!558 = !DILocalVariable(name: "hi", scope: !531, file: !1, line: 124, type: !11)
!559 = !DILocation(line: 124, column: 11, scope: !531)
!560 = !DILocalVariable(name: "lo", scope: !531, file: !1, line: 124, type: !11)
!561 = !DILocation(line: 124, column: 15, scope: !531)
!562 = !DILocalVariable(name: "i", scope: !531, file: !1, line: 124, type: !11)
!563 = !DILocation(line: 124, column: 19, scope: !531)
!564 = !DILocalVariable(name: "j", scope: !531, file: !1, line: 124, type: !11)
!565 = !DILocation(line: 124, column: 22, scope: !531)
!566 = !DILocalVariable(name: "stride", scope: !531, file: !1, line: 124, type: !11)
!567 = !DILocation(line: 124, column: 25, scope: !531)
!568 = !DILocation(line: 125, column: 9, scope: !531)
!569 = !DILocation(line: 125, column: 2, scope: !531)
!570 = !DILabel(scope: !531, name: "outer", file: !1, line: 126)
!571 = !DILocation(line: 126, column: 3, scope: !531)
!572 = !DILocation(line: 126, column: 17, scope: !573)
!573 = distinct !DILexicalBlock(scope: !531, file: !1, line: 126, column: 9)
!574 = !DILocation(line: 126, column: 13, scope: !573)
!575 = !DILocation(line: 126, column: 22, scope: !576)
!576 = distinct !DILexicalBlock(scope: !573, file: !1, line: 126, column: 9)
!577 = !DILocation(line: 126, column: 26, scope: !576)
!578 = !DILocation(line: 126, column: 9, scope: !573)
!579 = !DILocation(line: 126, column: 38, scope: !576)
!580 = !DILabel(scope: !581, name: "load", file: !1, line: 127)
!581 = distinct !DILexicalBlock(scope: !576, file: !1, line: 126, column: 38)
!582 = !DILocation(line: 127, column: 5, scope: !581)
!583 = !DILocation(line: 127, column: 16, scope: !584)
!584 = distinct !DILexicalBlock(scope: !581, file: !1, line: 127, column: 10)
!585 = !DILocation(line: 127, column: 14, scope: !584)
!586 = !DILocation(line: 127, column: 21, scope: !587)
!587 = distinct !DILexicalBlock(scope: !584, file: !1, line: 127, column: 10)
!588 = !DILocation(line: 127, column: 23, scope: !587)
!589 = !DILocation(line: 127, column: 10, scope: !584)
!590 = !DILocation(line: 129, column: 16, scope: !591)
!591 = distinct !DILexicalBlock(scope: !587, file: !1, line: 127, column: 33)
!592 = !DILocation(line: 129, column: 23, scope: !591)
!593 = !DILocation(line: 129, column: 26, scope: !591)
!594 = !DILocation(line: 129, column: 31, scope: !591)
!595 = !DILocation(line: 129, column: 29, scope: !591)
!596 = !DILocation(line: 129, column: 4, scope: !591)
!597 = !DILocation(line: 129, column: 11, scope: !591)
!598 = !DILocation(line: 129, column: 14, scope: !591)
!599 = !DILocation(line: 130, column: 3, scope: !591)
!600 = !DILocation(line: 127, column: 30, scope: !587)
!601 = !DILocation(line: 127, column: 10, scope: !587)
!602 = distinct !{!602, !589, !603}
!603 = !DILocation(line: 130, column: 3, scope: !584)
!604 = !DILocation(line: 131, column: 8, scope: !581)
!605 = !DILocation(line: 131, column: 11, scope: !581)
!606 = !DILocation(line: 131, column: 6, scope: !581)
!607 = !DILocation(line: 132, column: 8, scope: !581)
!608 = !DILocation(line: 132, column: 11, scope: !581)
!609 = !DILocation(line: 132, column: 6, scope: !581)
!610 = !DILocation(line: 133, column: 3, scope: !611)
!611 = distinct !DILexicalBlock(scope: !581, file: !1, line: 133, column: 3)
!612 = !DILabel(scope: !581, name: "store", file: !1, line: 134)
!613 = !DILocation(line: 134, column: 5, scope: !581)
!614 = !DILocation(line: 134, column: 17, scope: !615)
!615 = distinct !DILexicalBlock(scope: !581, file: !1, line: 134, column: 11)
!616 = !DILocation(line: 134, column: 15, scope: !615)
!617 = !DILocation(line: 134, column: 22, scope: !618)
!618 = distinct !DILexicalBlock(scope: !615, file: !1, line: 134, column: 11)
!619 = !DILocation(line: 134, column: 24, scope: !618)
!620 = !DILocation(line: 134, column: 11, scope: !615)
!621 = !DILocation(line: 136, column: 24, scope: !622)
!622 = distinct !DILexicalBlock(scope: !618, file: !1, line: 134, column: 34)
!623 = !DILocation(line: 136, column: 31, scope: !622)
!624 = !DILocation(line: 136, column: 4, scope: !622)
!625 = !DILocation(line: 136, column: 11, scope: !622)
!626 = !DILocation(line: 136, column: 14, scope: !622)
!627 = !DILocation(line: 136, column: 19, scope: !622)
!628 = !DILocation(line: 136, column: 17, scope: !622)
!629 = !DILocation(line: 136, column: 22, scope: !622)
!630 = !DILocation(line: 137, column: 3, scope: !622)
!631 = !DILocation(line: 134, column: 31, scope: !618)
!632 = !DILocation(line: 134, column: 11, scope: !618)
!633 = distinct !{!633, !620, !634}
!634 = !DILocation(line: 137, column: 3, scope: !615)
!635 = !DILocation(line: 138, column: 2, scope: !581)
!636 = !DILocation(line: 126, column: 35, scope: !576)
!637 = !DILocation(line: 126, column: 9, scope: !576)
!638 = distinct !{!638, !578, !639}
!639 = !DILocation(line: 138, column: 2, scope: !573)
!640 = !DILocation(line: 140, column: 1, scope: !531)
!641 = distinct !DISubprogram(name: "step6", scope: !1, file: !1, line: 141, type: !8, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!642 = !DILocalVariable(name: "work_x", arg: 1, scope: !641, file: !1, line: 141, type: !10)
!643 = !DILocation(line: 141, column: 17, scope: !641)
!644 = !DILocalVariable(name: "work_y", arg: 2, scope: !641, file: !1, line: 141, type: !10)
!645 = !DILocation(line: 141, column: 32, scope: !641)
!646 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !641, file: !1, line: 141, type: !10)
!647 = !DILocation(line: 141, column: 47, scope: !641)
!648 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !641, file: !1, line: 142, type: !10)
!649 = !DILocation(line: 142, column: 8, scope: !641)
!650 = !DILocalVariable(name: "data_x", arg: 5, scope: !641, file: !1, line: 142, type: !10)
!651 = !DILocation(line: 142, column: 23, scope: !641)
!652 = !DILocalVariable(name: "data_y", arg: 6, scope: !641, file: !1, line: 142, type: !10)
!653 = !DILocation(line: 142, column: 38, scope: !641)
!654 = !DILocalVariable(name: "smem", arg: 7, scope: !641, file: !1, line: 142, type: !10)
!655 = !DILocation(line: 142, column: 54, scope: !641)
!656 = !DILocalVariable(name: "reversed", arg: 8, scope: !641, file: !1, line: 143, type: !10)
!657 = !DILocation(line: 143, column: 7, scope: !641)
!658 = !DILocalVariable(name: "sin_64", arg: 9, scope: !641, file: !1, line: 144, type: !12)
!659 = !DILocation(line: 144, column: 9, scope: !641)
!660 = !DILocalVariable(name: "cos_64", arg: 10, scope: !641, file: !1, line: 145, type: !12)
!661 = !DILocation(line: 145, column: 9, scope: !641)
!662 = !DILocalVariable(name: "sin_512", arg: 11, scope: !641, file: !1, line: 146, type: !12)
!663 = !DILocation(line: 146, column: 9, scope: !641)
!664 = !DILocalVariable(name: "cos_512", arg: 12, scope: !641, file: !1, line: 147, type: !12)
!665 = !DILocation(line: 147, column: 9, scope: !641)
!666 = !DILocalVariable(name: "tid", scope: !641, file: !1, line: 150, type: !11)
!667 = !DILocation(line: 150, column: 6, scope: !641)
!668 = !DILocalVariable(name: "hi", scope: !641, file: !1, line: 150, type: !11)
!669 = !DILocation(line: 150, column: 11, scope: !641)
!670 = !DILocalVariable(name: "lo", scope: !641, file: !1, line: 150, type: !11)
!671 = !DILocation(line: 150, column: 15, scope: !641)
!672 = !DILocalVariable(name: "i", scope: !641, file: !1, line: 150, type: !11)
!673 = !DILocation(line: 150, column: 19, scope: !641)
!674 = !DILocalVariable(name: "j", scope: !641, file: !1, line: 150, type: !11)
!675 = !DILocation(line: 150, column: 22, scope: !641)
!676 = !DILocalVariable(name: "stride", scope: !641, file: !1, line: 150, type: !11)
!677 = !DILocation(line: 150, column: 25, scope: !641)
!678 = !DILocation(line: 151, column: 9, scope: !641)
!679 = !DILocation(line: 151, column: 2, scope: !641)
!680 = !DILabel(scope: !641, name: "outer", file: !1, line: 153)
!681 = !DILocation(line: 153, column: 3, scope: !641)
!682 = !DILocation(line: 153, column: 17, scope: !683)
!683 = distinct !DILexicalBlock(scope: !641, file: !1, line: 153, column: 9)
!684 = !DILocation(line: 153, column: 13, scope: !683)
!685 = !DILocation(line: 153, column: 22, scope: !686)
!686 = distinct !DILexicalBlock(scope: !683, file: !1, line: 153, column: 9)
!687 = !DILocation(line: 153, column: 26, scope: !686)
!688 = !DILocation(line: 153, column: 9, scope: !683)
!689 = !DILocation(line: 153, column: 38, scope: !686)
!690 = !DILabel(scope: !691, name: "load", file: !1, line: 155)
!691 = distinct !DILexicalBlock(scope: !686, file: !1, line: 153, column: 38)
!692 = !DILocation(line: 155, column: 5, scope: !691)
!693 = !DILocation(line: 155, column: 16, scope: !694)
!694 = distinct !DILexicalBlock(scope: !691, file: !1, line: 155, column: 10)
!695 = !DILocation(line: 155, column: 14, scope: !694)
!696 = !DILocation(line: 155, column: 21, scope: !697)
!697 = distinct !DILexicalBlock(scope: !694, file: !1, line: 155, column: 10)
!698 = !DILocation(line: 155, column: 23, scope: !697)
!699 = !DILocation(line: 155, column: 10, scope: !694)
!700 = !DILocation(line: 156, column: 16, scope: !701)
!701 = distinct !DILexicalBlock(scope: !697, file: !1, line: 155, column: 33)
!702 = !DILocation(line: 156, column: 23, scope: !701)
!703 = !DILocation(line: 156, column: 26, scope: !701)
!704 = !DILocation(line: 156, column: 31, scope: !701)
!705 = !DILocation(line: 156, column: 29, scope: !701)
!706 = !DILocation(line: 156, column: 4, scope: !701)
!707 = !DILocation(line: 156, column: 11, scope: !701)
!708 = !DILocation(line: 156, column: 14, scope: !701)
!709 = !DILocation(line: 157, column: 16, scope: !701)
!710 = !DILocation(line: 157, column: 23, scope: !701)
!711 = !DILocation(line: 157, column: 26, scope: !701)
!712 = !DILocation(line: 157, column: 31, scope: !701)
!713 = !DILocation(line: 157, column: 29, scope: !701)
!714 = !DILocation(line: 157, column: 4, scope: !701)
!715 = !DILocation(line: 157, column: 11, scope: !701)
!716 = !DILocation(line: 157, column: 14, scope: !701)
!717 = !DILocation(line: 158, column: 3, scope: !701)
!718 = !DILocation(line: 155, column: 30, scope: !697)
!719 = !DILocation(line: 155, column: 10, scope: !697)
!720 = distinct !{!720, !699, !721}
!721 = !DILocation(line: 158, column: 3, scope: !694)
!722 = !DILocalVariable(name: "exp_1_8_x", scope: !723, file: !1, line: 161, type: !11)
!723 = distinct !DILexicalBlock(scope: !691, file: !1, line: 161, column: 3)
!724 = !DILocation(line: 161, column: 3, scope: !723)
!725 = !DILocalVariable(name: "exp_1_4_x", scope: !723, file: !1, line: 161, type: !11)
!726 = !DILocalVariable(name: "exp_3_8_x", scope: !723, file: !1, line: 161, type: !11)
!727 = !DILocalVariable(name: "exp_1_8_y", scope: !723, file: !1, line: 161, type: !11)
!728 = !DILocalVariable(name: "exp_1_4_y", scope: !723, file: !1, line: 161, type: !11)
!729 = !DILocalVariable(name: "exp_3_8_y", scope: !723, file: !1, line: 161, type: !11)
!730 = !DILocalVariable(name: "tmp_1", scope: !723, file: !1, line: 161, type: !11)
!731 = !DILocalVariable(name: "tmp_2", scope: !723, file: !1, line: 161, type: !11)
!732 = !DILocalVariable(name: "c0_x", scope: !733, file: !1, line: 161, type: !11)
!733 = distinct !DILexicalBlock(scope: !723, file: !1, line: 161, column: 3)
!734 = !DILocation(line: 161, column: 3, scope: !733)
!735 = !DILocalVariable(name: "c0_y", scope: !733, file: !1, line: 161, type: !11)
!736 = !DILocalVariable(name: "c0_x", scope: !737, file: !1, line: 161, type: !11)
!737 = distinct !DILexicalBlock(scope: !723, file: !1, line: 161, column: 3)
!738 = !DILocation(line: 161, column: 3, scope: !737)
!739 = !DILocalVariable(name: "c0_y", scope: !737, file: !1, line: 161, type: !11)
!740 = !DILocalVariable(name: "c0_x", scope: !741, file: !1, line: 161, type: !11)
!741 = distinct !DILexicalBlock(scope: !723, file: !1, line: 161, column: 3)
!742 = !DILocation(line: 161, column: 3, scope: !741)
!743 = !DILocalVariable(name: "c0_y", scope: !741, file: !1, line: 161, type: !11)
!744 = !DILocalVariable(name: "c0_x", scope: !745, file: !1, line: 161, type: !11)
!745 = distinct !DILexicalBlock(scope: !723, file: !1, line: 161, column: 3)
!746 = !DILocation(line: 161, column: 3, scope: !745)
!747 = !DILocalVariable(name: "c0_y", scope: !745, file: !1, line: 161, type: !11)
!748 = !DILocalVariable(name: "exp_1_44_x", scope: !749, file: !1, line: 161, type: !11)
!749 = distinct !DILexicalBlock(scope: !723, file: !1, line: 161, column: 3)
!750 = !DILocation(line: 161, column: 3, scope: !749)
!751 = !DILocalVariable(name: "exp_1_44_y", scope: !749, file: !1, line: 161, type: !11)
!752 = !DILocalVariable(name: "tmp", scope: !749, file: !1, line: 161, type: !11)
!753 = !DILocalVariable(name: "c0_x", scope: !754, file: !1, line: 161, type: !11)
!754 = distinct !DILexicalBlock(scope: !749, file: !1, line: 161, column: 3)
!755 = !DILocation(line: 161, column: 3, scope: !754)
!756 = !DILocalVariable(name: "c0_y", scope: !754, file: !1, line: 161, type: !11)
!757 = !DILocalVariable(name: "c0_x", scope: !758, file: !1, line: 161, type: !11)
!758 = distinct !DILexicalBlock(scope: !749, file: !1, line: 161, column: 3)
!759 = !DILocation(line: 161, column: 3, scope: !758)
!760 = !DILocalVariable(name: "c0_y", scope: !758, file: !1, line: 161, type: !11)
!761 = !DILocalVariable(name: "c0_x", scope: !762, file: !1, line: 161, type: !11)
!762 = distinct !DILexicalBlock(scope: !749, file: !1, line: 161, column: 3)
!763 = !DILocation(line: 161, column: 3, scope: !762)
!764 = !DILocalVariable(name: "c0_y", scope: !762, file: !1, line: 161, type: !11)
!765 = !DILocalVariable(name: "c0_x", scope: !766, file: !1, line: 161, type: !11)
!766 = distinct !DILexicalBlock(scope: !749, file: !1, line: 161, column: 3)
!767 = !DILocation(line: 161, column: 3, scope: !766)
!768 = !DILocalVariable(name: "c0_y", scope: !766, file: !1, line: 161, type: !11)
!769 = !DILocalVariable(name: "exp_1_44_x", scope: !770, file: !1, line: 161, type: !11)
!770 = distinct !DILexicalBlock(scope: !723, file: !1, line: 161, column: 3)
!771 = !DILocation(line: 161, column: 3, scope: !770)
!772 = !DILocalVariable(name: "exp_1_44_y", scope: !770, file: !1, line: 161, type: !11)
!773 = !DILocalVariable(name: "tmp", scope: !770, file: !1, line: 161, type: !11)
!774 = !DILocalVariable(name: "c0_x", scope: !775, file: !1, line: 161, type: !11)
!775 = distinct !DILexicalBlock(scope: !770, file: !1, line: 161, column: 3)
!776 = !DILocation(line: 161, column: 3, scope: !775)
!777 = !DILocalVariable(name: "c0_y", scope: !775, file: !1, line: 161, type: !11)
!778 = !DILocalVariable(name: "c0_x", scope: !779, file: !1, line: 161, type: !11)
!779 = distinct !DILexicalBlock(scope: !770, file: !1, line: 161, column: 3)
!780 = !DILocation(line: 161, column: 3, scope: !779)
!781 = !DILocalVariable(name: "c0_y", scope: !779, file: !1, line: 161, type: !11)
!782 = !DILocalVariable(name: "c0_x", scope: !783, file: !1, line: 161, type: !11)
!783 = distinct !DILexicalBlock(scope: !770, file: !1, line: 161, column: 3)
!784 = !DILocation(line: 161, column: 3, scope: !783)
!785 = !DILocalVariable(name: "c0_y", scope: !783, file: !1, line: 161, type: !11)
!786 = !DILocalVariable(name: "c0_x", scope: !787, file: !1, line: 161, type: !11)
!787 = distinct !DILexicalBlock(scope: !770, file: !1, line: 161, column: 3)
!788 = !DILocation(line: 161, column: 3, scope: !787)
!789 = !DILocalVariable(name: "c0_y", scope: !787, file: !1, line: 161, type: !11)
!790 = !DILocation(line: 164, column: 8, scope: !691)
!791 = !DILocation(line: 164, column: 11, scope: !691)
!792 = !DILocation(line: 164, column: 6, scope: !691)
!793 = !DILocation(line: 164, column: 3, scope: !691)
!794 = !DILabel(scope: !691, name: "twiddles", file: !1, line: 168)
!795 = !DILocation(line: 168, column: 5, scope: !691)
!796 = !DILocation(line: 168, column: 21, scope: !797)
!797 = distinct !DILexicalBlock(scope: !691, file: !1, line: 168, column: 15)
!798 = !DILocation(line: 168, column: 19, scope: !797)
!799 = !DILocation(line: 168, column: 26, scope: !800)
!800 = distinct !DILexicalBlock(scope: !797, file: !1, line: 168, column: 15)
!801 = !DILocation(line: 168, column: 28, scope: !800)
!802 = !DILocation(line: 168, column: 15, scope: !797)
!803 = !DILocalVariable(name: "A_x", scope: !804, file: !1, line: 169, type: !11)
!804 = distinct !DILexicalBlock(scope: !800, file: !1, line: 168, column: 37)
!805 = !DILocation(line: 169, column: 18, scope: !804)
!806 = !DILocalVariable(name: "A_y", scope: !804, file: !1, line: 169, type: !11)
!807 = !DILocation(line: 169, column: 23, scope: !804)
!808 = !DILocalVariable(name: "tmp", scope: !804, file: !1, line: 169, type: !11)
!809 = !DILocation(line: 169, column: 28, scope: !804)
!810 = !DILocation(line: 170, column: 19, scope: !804)
!811 = !DILocation(line: 170, column: 26, scope: !804)
!812 = !DILocation(line: 170, column: 28, scope: !804)
!813 = !DILocation(line: 170, column: 31, scope: !804)
!814 = !DILocation(line: 170, column: 30, scope: !804)
!815 = !DILocation(line: 170, column: 32, scope: !804)
!816 = !DILocation(line: 170, column: 17, scope: !804)
!817 = !DILocation(line: 171, column: 19, scope: !804)
!818 = !DILocation(line: 171, column: 26, scope: !804)
!819 = !DILocation(line: 171, column: 28, scope: !804)
!820 = !DILocation(line: 171, column: 31, scope: !804)
!821 = !DILocation(line: 171, column: 30, scope: !804)
!822 = !DILocation(line: 171, column: 32, scope: !804)
!823 = !DILocation(line: 171, column: 17, scope: !804)
!824 = !DILocation(line: 172, column: 19, scope: !804)
!825 = !DILocation(line: 172, column: 26, scope: !804)
!826 = !DILocation(line: 172, column: 17, scope: !804)
!827 = !DILocation(line: 173, column: 25, scope: !804)
!828 = !DILocation(line: 173, column: 13, scope: !804)
!829 = !DILocation(line: 173, column: 20, scope: !804)
!830 = !DILocation(line: 173, column: 23, scope: !804)
!831 = !DILocation(line: 174, column: 25, scope: !804)
!832 = !DILocation(line: 174, column: 13, scope: !804)
!833 = !DILocation(line: 174, column: 20, scope: !804)
!834 = !DILocation(line: 174, column: 23, scope: !804)
!835 = !DILocation(line: 175, column: 5, scope: !804)
!836 = !DILocation(line: 168, column: 34, scope: !800)
!837 = !DILocation(line: 168, column: 15, scope: !800)
!838 = distinct !{!838, !802, !839}
!839 = !DILocation(line: 175, column: 5, scope: !797)
!840 = !DILabel(scope: !691, name: "save", file: !1, line: 178)
!841 = !DILocation(line: 178, column: 5, scope: !691)
!842 = !DILocation(line: 178, column: 16, scope: !843)
!843 = distinct !DILexicalBlock(scope: !691, file: !1, line: 178, column: 10)
!844 = !DILocation(line: 178, column: 14, scope: !843)
!845 = !DILocation(line: 178, column: 21, scope: !846)
!846 = distinct !DILexicalBlock(scope: !843, file: !1, line: 178, column: 10)
!847 = !DILocation(line: 178, column: 23, scope: !846)
!848 = !DILocation(line: 178, column: 10, scope: !843)
!849 = !DILocation(line: 179, column: 24, scope: !850)
!850 = distinct !DILexicalBlock(scope: !846, file: !1, line: 178, column: 33)
!851 = !DILocation(line: 179, column: 31, scope: !850)
!852 = !DILocation(line: 179, column: 4, scope: !850)
!853 = !DILocation(line: 179, column: 11, scope: !850)
!854 = !DILocation(line: 179, column: 14, scope: !850)
!855 = !DILocation(line: 179, column: 19, scope: !850)
!856 = !DILocation(line: 179, column: 17, scope: !850)
!857 = !DILocation(line: 179, column: 22, scope: !850)
!858 = !DILocation(line: 180, column: 24, scope: !850)
!859 = !DILocation(line: 180, column: 31, scope: !850)
!860 = !DILocation(line: 180, column: 4, scope: !850)
!861 = !DILocation(line: 180, column: 11, scope: !850)
!862 = !DILocation(line: 180, column: 14, scope: !850)
!863 = !DILocation(line: 180, column: 19, scope: !850)
!864 = !DILocation(line: 180, column: 17, scope: !850)
!865 = !DILocation(line: 180, column: 22, scope: !850)
!866 = !DILocation(line: 181, column: 3, scope: !850)
!867 = !DILocation(line: 178, column: 30, scope: !846)
!868 = !DILocation(line: 178, column: 10, scope: !846)
!869 = distinct !{!869, !848, !870}
!870 = !DILocation(line: 181, column: 3, scope: !843)
!871 = !DILocation(line: 182, column: 2, scope: !691)
!872 = !DILocation(line: 153, column: 35, scope: !686)
!873 = !DILocation(line: 153, column: 9, scope: !686)
!874 = distinct !{!874, !688, !875}
!875 = !DILocation(line: 182, column: 2, scope: !683)
!876 = !DILocation(line: 184, column: 1, scope: !641)
!877 = distinct !DISubprogram(name: "step7", scope: !1, file: !1, line: 185, type: !8, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!878 = !DILocalVariable(name: "work_x", arg: 1, scope: !877, file: !1, line: 185, type: !10)
!879 = !DILocation(line: 185, column: 17, scope: !877)
!880 = !DILocalVariable(name: "work_y", arg: 2, scope: !877, file: !1, line: 185, type: !10)
!881 = !DILocation(line: 185, column: 32, scope: !877)
!882 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !877, file: !1, line: 185, type: !10)
!883 = !DILocation(line: 185, column: 47, scope: !877)
!884 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !877, file: !1, line: 186, type: !10)
!885 = !DILocation(line: 186, column: 8, scope: !877)
!886 = !DILocalVariable(name: "data_x", arg: 5, scope: !877, file: !1, line: 186, type: !10)
!887 = !DILocation(line: 186, column: 23, scope: !877)
!888 = !DILocalVariable(name: "data_y", arg: 6, scope: !877, file: !1, line: 186, type: !10)
!889 = !DILocation(line: 186, column: 38, scope: !877)
!890 = !DILocalVariable(name: "smem", arg: 7, scope: !877, file: !1, line: 186, type: !10)
!891 = !DILocation(line: 186, column: 54, scope: !877)
!892 = !DILocalVariable(name: "reversed", arg: 8, scope: !877, file: !1, line: 187, type: !10)
!893 = !DILocation(line: 187, column: 7, scope: !877)
!894 = !DILocalVariable(name: "sin_64", arg: 9, scope: !877, file: !1, line: 188, type: !12)
!895 = !DILocation(line: 188, column: 9, scope: !877)
!896 = !DILocalVariable(name: "cos_64", arg: 10, scope: !877, file: !1, line: 189, type: !12)
!897 = !DILocation(line: 189, column: 9, scope: !877)
!898 = !DILocalVariable(name: "sin_512", arg: 11, scope: !877, file: !1, line: 190, type: !12)
!899 = !DILocation(line: 190, column: 9, scope: !877)
!900 = !DILocalVariable(name: "cos_512", arg: 12, scope: !877, file: !1, line: 191, type: !12)
!901 = !DILocation(line: 191, column: 9, scope: !877)
!902 = !DILocalVariable(name: "tid", scope: !877, file: !1, line: 194, type: !11)
!903 = !DILocation(line: 194, column: 6, scope: !877)
!904 = !DILocalVariable(name: "hi", scope: !877, file: !1, line: 194, type: !11)
!905 = !DILocation(line: 194, column: 11, scope: !877)
!906 = !DILocalVariable(name: "lo", scope: !877, file: !1, line: 194, type: !11)
!907 = !DILocation(line: 194, column: 15, scope: !877)
!908 = !DILocalVariable(name: "i", scope: !877, file: !1, line: 194, type: !11)
!909 = !DILocation(line: 194, column: 19, scope: !877)
!910 = !DILocalVariable(name: "j", scope: !877, file: !1, line: 194, type: !11)
!911 = !DILocation(line: 194, column: 22, scope: !877)
!912 = !DILocalVariable(name: "stride", scope: !877, file: !1, line: 194, type: !11)
!913 = !DILocation(line: 194, column: 25, scope: !877)
!914 = !DILocation(line: 195, column: 9, scope: !877)
!915 = !DILocation(line: 195, column: 2, scope: !877)
!916 = !DILabel(scope: !877, name: "outer", file: !1, line: 197)
!917 = !DILocation(line: 197, column: 3, scope: !877)
!918 = !DILocation(line: 197, column: 17, scope: !919)
!919 = distinct !DILexicalBlock(scope: !877, file: !1, line: 197, column: 9)
!920 = !DILocation(line: 197, column: 13, scope: !919)
!921 = !DILocation(line: 197, column: 22, scope: !922)
!922 = distinct !DILexicalBlock(scope: !919, file: !1, line: 197, column: 9)
!923 = !DILocation(line: 197, column: 26, scope: !922)
!924 = !DILocation(line: 197, column: 9, scope: !919)
!925 = !DILocation(line: 197, column: 38, scope: !922)
!926 = !DILabel(scope: !927, name: "load", file: !1, line: 198)
!927 = distinct !DILexicalBlock(scope: !922, file: !1, line: 197, column: 38)
!928 = !DILocation(line: 198, column: 5, scope: !927)
!929 = !DILocation(line: 198, column: 16, scope: !930)
!930 = distinct !DILexicalBlock(scope: !927, file: !1, line: 198, column: 10)
!931 = !DILocation(line: 198, column: 14, scope: !930)
!932 = !DILocation(line: 198, column: 21, scope: !933)
!933 = distinct !DILexicalBlock(scope: !930, file: !1, line: 198, column: 10)
!934 = !DILocation(line: 198, column: 23, scope: !933)
!935 = !DILocation(line: 198, column: 10, scope: !930)
!936 = !DILocation(line: 199, column: 16, scope: !937)
!937 = distinct !DILexicalBlock(scope: !933, file: !1, line: 198, column: 33)
!938 = !DILocation(line: 199, column: 23, scope: !937)
!939 = !DILocation(line: 199, column: 26, scope: !937)
!940 = !DILocation(line: 199, column: 31, scope: !937)
!941 = !DILocation(line: 199, column: 29, scope: !937)
!942 = !DILocation(line: 199, column: 4, scope: !937)
!943 = !DILocation(line: 199, column: 11, scope: !937)
!944 = !DILocation(line: 199, column: 14, scope: !937)
!945 = !DILocation(line: 201, column: 3, scope: !937)
!946 = !DILocation(line: 198, column: 30, scope: !933)
!947 = !DILocation(line: 198, column: 10, scope: !933)
!948 = distinct !{!948, !935, !949}
!949 = !DILocation(line: 201, column: 3, scope: !930)
!950 = !DILocation(line: 202, column: 8, scope: !927)
!951 = !DILocation(line: 202, column: 11, scope: !927)
!952 = !DILocation(line: 202, column: 6, scope: !927)
!953 = !DILocation(line: 203, column: 8, scope: !927)
!954 = !DILocation(line: 203, column: 11, scope: !927)
!955 = !DILocation(line: 203, column: 6, scope: !927)
!956 = !DILocation(line: 204, column: 3, scope: !957)
!957 = distinct !DILexicalBlock(scope: !927, file: !1, line: 204, column: 3)
!958 = !DILocation(line: 205, column: 2, scope: !927)
!959 = !DILocation(line: 197, column: 35, scope: !922)
!960 = !DILocation(line: 197, column: 9, scope: !922)
!961 = distinct !{!961, !924, !962}
!962 = !DILocation(line: 205, column: 2, scope: !919)
!963 = !DILocation(line: 207, column: 1, scope: !877)
!964 = distinct !DISubprogram(name: "step8", scope: !1, file: !1, line: 208, type: !8, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!965 = !DILocalVariable(name: "work_x", arg: 1, scope: !964, file: !1, line: 208, type: !10)
!966 = !DILocation(line: 208, column: 17, scope: !964)
!967 = !DILocalVariable(name: "work_y", arg: 2, scope: !964, file: !1, line: 208, type: !10)
!968 = !DILocation(line: 208, column: 32, scope: !964)
!969 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !964, file: !1, line: 208, type: !10)
!970 = !DILocation(line: 208, column: 47, scope: !964)
!971 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !964, file: !1, line: 209, type: !10)
!972 = !DILocation(line: 209, column: 8, scope: !964)
!973 = !DILocalVariable(name: "data_x", arg: 5, scope: !964, file: !1, line: 209, type: !10)
!974 = !DILocation(line: 209, column: 23, scope: !964)
!975 = !DILocalVariable(name: "data_y", arg: 6, scope: !964, file: !1, line: 209, type: !10)
!976 = !DILocation(line: 209, column: 38, scope: !964)
!977 = !DILocalVariable(name: "smem", arg: 7, scope: !964, file: !1, line: 209, type: !10)
!978 = !DILocation(line: 209, column: 54, scope: !964)
!979 = !DILocalVariable(name: "reversed", arg: 8, scope: !964, file: !1, line: 210, type: !10)
!980 = !DILocation(line: 210, column: 7, scope: !964)
!981 = !DILocalVariable(name: "sin_64", arg: 9, scope: !964, file: !1, line: 211, type: !12)
!982 = !DILocation(line: 211, column: 9, scope: !964)
!983 = !DILocalVariable(name: "cos_64", arg: 10, scope: !964, file: !1, line: 212, type: !12)
!984 = !DILocation(line: 212, column: 9, scope: !964)
!985 = !DILocalVariable(name: "sin_512", arg: 11, scope: !964, file: !1, line: 213, type: !12)
!986 = !DILocation(line: 213, column: 9, scope: !964)
!987 = !DILocalVariable(name: "cos_512", arg: 12, scope: !964, file: !1, line: 214, type: !12)
!988 = !DILocation(line: 214, column: 9, scope: !964)
!989 = !DILocalVariable(name: "tid", scope: !964, file: !1, line: 217, type: !11)
!990 = !DILocation(line: 217, column: 6, scope: !964)
!991 = !DILocalVariable(name: "hi", scope: !964, file: !1, line: 217, type: !11)
!992 = !DILocation(line: 217, column: 11, scope: !964)
!993 = !DILocalVariable(name: "lo", scope: !964, file: !1, line: 217, type: !11)
!994 = !DILocation(line: 217, column: 15, scope: !964)
!995 = !DILocalVariable(name: "i", scope: !964, file: !1, line: 217, type: !11)
!996 = !DILocation(line: 217, column: 19, scope: !964)
!997 = !DILocalVariable(name: "j", scope: !964, file: !1, line: 217, type: !11)
!998 = !DILocation(line: 217, column: 22, scope: !964)
!999 = !DILocalVariable(name: "stride", scope: !964, file: !1, line: 217, type: !11)
!1000 = !DILocation(line: 217, column: 25, scope: !964)
!1001 = !DILocation(line: 218, column: 9, scope: !964)
!1002 = !DILocation(line: 218, column: 2, scope: !964)
!1003 = !DILabel(scope: !964, name: "outer", file: !1, line: 220)
!1004 = !DILocation(line: 220, column: 3, scope: !964)
!1005 = !DILocation(line: 220, column: 17, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !964, file: !1, line: 220, column: 9)
!1007 = !DILocation(line: 220, column: 13, scope: !1006)
!1008 = !DILocation(line: 220, column: 22, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 220, column: 9)
!1010 = !DILocation(line: 220, column: 26, scope: !1009)
!1011 = !DILocation(line: 220, column: 9, scope: !1006)
!1012 = !DILocation(line: 220, column: 38, scope: !1009)
!1013 = !DILabel(scope: !1014, name: "load", file: !1, line: 221)
!1014 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 220, column: 38)
!1015 = !DILocation(line: 221, column: 5, scope: !1014)
!1016 = !DILocation(line: 221, column: 16, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !1014, file: !1, line: 221, column: 10)
!1018 = !DILocation(line: 221, column: 14, scope: !1017)
!1019 = !DILocation(line: 221, column: 21, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1017, file: !1, line: 221, column: 10)
!1021 = !DILocation(line: 221, column: 23, scope: !1020)
!1022 = !DILocation(line: 221, column: 10, scope: !1017)
!1023 = !DILocation(line: 222, column: 16, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 221, column: 33)
!1025 = !DILocation(line: 222, column: 23, scope: !1024)
!1026 = !DILocation(line: 222, column: 26, scope: !1024)
!1027 = !DILocation(line: 222, column: 31, scope: !1024)
!1028 = !DILocation(line: 222, column: 29, scope: !1024)
!1029 = !DILocation(line: 222, column: 4, scope: !1024)
!1030 = !DILocation(line: 222, column: 11, scope: !1024)
!1031 = !DILocation(line: 222, column: 14, scope: !1024)
!1032 = !DILocation(line: 224, column: 3, scope: !1024)
!1033 = !DILocation(line: 221, column: 30, scope: !1020)
!1034 = !DILocation(line: 221, column: 10, scope: !1020)
!1035 = distinct !{!1035, !1022, !1036}
!1036 = !DILocation(line: 224, column: 3, scope: !1017)
!1037 = !DILocation(line: 225, column: 8, scope: !1014)
!1038 = !DILocation(line: 225, column: 11, scope: !1014)
!1039 = !DILocation(line: 225, column: 6, scope: !1014)
!1040 = !DILocation(line: 226, column: 8, scope: !1014)
!1041 = !DILocation(line: 226, column: 11, scope: !1014)
!1042 = !DILocation(line: 226, column: 6, scope: !1014)
!1043 = !DILocation(line: 227, column: 3, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1014, file: !1, line: 227, column: 3)
!1045 = !DILabel(scope: !1014, name: "store", file: !1, line: 228)
!1046 = !DILocation(line: 228, column: 5, scope: !1014)
!1047 = !DILocation(line: 228, column: 17, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1014, file: !1, line: 228, column: 11)
!1049 = !DILocation(line: 228, column: 15, scope: !1048)
!1050 = !DILocation(line: 228, column: 22, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !1048, file: !1, line: 228, column: 11)
!1052 = !DILocation(line: 228, column: 24, scope: !1051)
!1053 = !DILocation(line: 228, column: 11, scope: !1048)
!1054 = !DILocation(line: 229, column: 24, scope: !1055)
!1055 = distinct !DILexicalBlock(scope: !1051, file: !1, line: 228, column: 34)
!1056 = !DILocation(line: 229, column: 31, scope: !1055)
!1057 = !DILocation(line: 229, column: 4, scope: !1055)
!1058 = !DILocation(line: 229, column: 11, scope: !1055)
!1059 = !DILocation(line: 229, column: 14, scope: !1055)
!1060 = !DILocation(line: 229, column: 19, scope: !1055)
!1061 = !DILocation(line: 229, column: 17, scope: !1055)
!1062 = !DILocation(line: 229, column: 22, scope: !1055)
!1063 = !DILocation(line: 231, column: 3, scope: !1055)
!1064 = !DILocation(line: 228, column: 31, scope: !1051)
!1065 = !DILocation(line: 228, column: 11, scope: !1051)
!1066 = distinct !{!1066, !1053, !1067}
!1067 = !DILocation(line: 231, column: 3, scope: !1048)
!1068 = !DILocation(line: 232, column: 2, scope: !1014)
!1069 = !DILocation(line: 220, column: 35, scope: !1009)
!1070 = !DILocation(line: 220, column: 9, scope: !1009)
!1071 = distinct !{!1071, !1011, !1072}
!1072 = !DILocation(line: 232, column: 2, scope: !1006)
!1073 = !DILocation(line: 234, column: 1, scope: !964)
!1074 = distinct !DISubprogram(name: "step9", scope: !1, file: !1, line: 235, type: !8, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1075 = !DILocalVariable(name: "work_x", arg: 1, scope: !1074, file: !1, line: 235, type: !10)
!1076 = !DILocation(line: 235, column: 17, scope: !1074)
!1077 = !DILocalVariable(name: "work_y", arg: 2, scope: !1074, file: !1, line: 235, type: !10)
!1078 = !DILocation(line: 235, column: 32, scope: !1074)
!1079 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !1074, file: !1, line: 235, type: !10)
!1080 = !DILocation(line: 235, column: 47, scope: !1074)
!1081 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !1074, file: !1, line: 236, type: !10)
!1082 = !DILocation(line: 236, column: 8, scope: !1074)
!1083 = !DILocalVariable(name: "data_x", arg: 5, scope: !1074, file: !1, line: 236, type: !10)
!1084 = !DILocation(line: 236, column: 23, scope: !1074)
!1085 = !DILocalVariable(name: "data_y", arg: 6, scope: !1074, file: !1, line: 236, type: !10)
!1086 = !DILocation(line: 236, column: 38, scope: !1074)
!1087 = !DILocalVariable(name: "smem", arg: 7, scope: !1074, file: !1, line: 236, type: !10)
!1088 = !DILocation(line: 236, column: 54, scope: !1074)
!1089 = !DILocalVariable(name: "reversed", arg: 8, scope: !1074, file: !1, line: 237, type: !10)
!1090 = !DILocation(line: 237, column: 7, scope: !1074)
!1091 = !DILocalVariable(name: "sin_64", arg: 9, scope: !1074, file: !1, line: 238, type: !12)
!1092 = !DILocation(line: 238, column: 9, scope: !1074)
!1093 = !DILocalVariable(name: "cos_64", arg: 10, scope: !1074, file: !1, line: 239, type: !12)
!1094 = !DILocation(line: 239, column: 9, scope: !1074)
!1095 = !DILocalVariable(name: "sin_512", arg: 11, scope: !1074, file: !1, line: 240, type: !12)
!1096 = !DILocation(line: 240, column: 9, scope: !1074)
!1097 = !DILocalVariable(name: "cos_512", arg: 12, scope: !1074, file: !1, line: 241, type: !12)
!1098 = !DILocation(line: 241, column: 9, scope: !1074)
!1099 = !DILocalVariable(name: "tid", scope: !1074, file: !1, line: 245, type: !11)
!1100 = !DILocation(line: 245, column: 6, scope: !1074)
!1101 = !DILocalVariable(name: "hi", scope: !1074, file: !1, line: 245, type: !11)
!1102 = !DILocation(line: 245, column: 11, scope: !1074)
!1103 = !DILocalVariable(name: "lo", scope: !1074, file: !1, line: 245, type: !11)
!1104 = !DILocation(line: 245, column: 15, scope: !1074)
!1105 = !DILocalVariable(name: "i", scope: !1074, file: !1, line: 245, type: !11)
!1106 = !DILocation(line: 245, column: 19, scope: !1074)
!1107 = !DILocalVariable(name: "j", scope: !1074, file: !1, line: 245, type: !11)
!1108 = !DILocation(line: 245, column: 22, scope: !1074)
!1109 = !DILocalVariable(name: "stride", scope: !1074, file: !1, line: 245, type: !11)
!1110 = !DILocation(line: 245, column: 25, scope: !1074)
!1111 = !DILocation(line: 246, column: 9, scope: !1074)
!1112 = !DILocation(line: 246, column: 2, scope: !1074)
!1113 = !DILabel(scope: !1074, name: "outer", file: !1, line: 247)
!1114 = !DILocation(line: 247, column: 3, scope: !1074)
!1115 = !DILocation(line: 247, column: 17, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1074, file: !1, line: 247, column: 9)
!1117 = !DILocation(line: 247, column: 13, scope: !1116)
!1118 = !DILocation(line: 247, column: 22, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1116, file: !1, line: 247, column: 9)
!1120 = !DILocation(line: 247, column: 26, scope: !1119)
!1121 = !DILocation(line: 247, column: 9, scope: !1116)
!1122 = !DILocation(line: 247, column: 38, scope: !1119)
!1123 = !DILabel(scope: !1124, name: "load", file: !1, line: 248)
!1124 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 247, column: 38)
!1125 = !DILocation(line: 248, column: 5, scope: !1124)
!1126 = !DILocation(line: 248, column: 16, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1124, file: !1, line: 248, column: 10)
!1128 = !DILocation(line: 248, column: 14, scope: !1127)
!1129 = !DILocation(line: 248, column: 21, scope: !1130)
!1130 = distinct !DILexicalBlock(scope: !1127, file: !1, line: 248, column: 10)
!1131 = !DILocation(line: 248, column: 23, scope: !1130)
!1132 = !DILocation(line: 248, column: 10, scope: !1127)
!1133 = !DILocation(line: 250, column: 16, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1130, file: !1, line: 248, column: 33)
!1135 = !DILocation(line: 250, column: 23, scope: !1134)
!1136 = !DILocation(line: 250, column: 26, scope: !1134)
!1137 = !DILocation(line: 250, column: 31, scope: !1134)
!1138 = !DILocation(line: 250, column: 29, scope: !1134)
!1139 = !DILocation(line: 250, column: 4, scope: !1134)
!1140 = !DILocation(line: 250, column: 11, scope: !1134)
!1141 = !DILocation(line: 250, column: 14, scope: !1134)
!1142 = !DILocation(line: 251, column: 3, scope: !1134)
!1143 = !DILocation(line: 248, column: 30, scope: !1130)
!1144 = !DILocation(line: 248, column: 10, scope: !1130)
!1145 = distinct !{!1145, !1132, !1146}
!1146 = !DILocation(line: 251, column: 3, scope: !1127)
!1147 = !DILocation(line: 252, column: 8, scope: !1124)
!1148 = !DILocation(line: 252, column: 11, scope: !1124)
!1149 = !DILocation(line: 252, column: 6, scope: !1124)
!1150 = !DILocation(line: 253, column: 8, scope: !1124)
!1151 = !DILocation(line: 253, column: 11, scope: !1124)
!1152 = !DILocation(line: 253, column: 6, scope: !1124)
!1153 = !DILocation(line: 254, column: 3, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1124, file: !1, line: 254, column: 3)
!1155 = !DILocation(line: 255, column: 2, scope: !1124)
!1156 = !DILocation(line: 247, column: 35, scope: !1119)
!1157 = !DILocation(line: 247, column: 9, scope: !1119)
!1158 = distinct !{!1158, !1121, !1159}
!1159 = !DILocation(line: 255, column: 2, scope: !1116)
!1160 = !DILocation(line: 257, column: 1, scope: !1074)
!1161 = distinct !DISubprogram(name: "step10", scope: !1, file: !1, line: 258, type: !8, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1162 = !DILocalVariable(name: "work_x", arg: 1, scope: !1161, file: !1, line: 258, type: !10)
!1163 = !DILocation(line: 258, column: 18, scope: !1161)
!1164 = !DILocalVariable(name: "work_y", arg: 2, scope: !1161, file: !1, line: 258, type: !10)
!1165 = !DILocation(line: 258, column: 33, scope: !1161)
!1166 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !1161, file: !1, line: 258, type: !10)
!1167 = !DILocation(line: 258, column: 48, scope: !1161)
!1168 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !1161, file: !1, line: 259, type: !10)
!1169 = !DILocation(line: 259, column: 8, scope: !1161)
!1170 = !DILocalVariable(name: "data_x", arg: 5, scope: !1161, file: !1, line: 259, type: !10)
!1171 = !DILocation(line: 259, column: 23, scope: !1161)
!1172 = !DILocalVariable(name: "data_y", arg: 6, scope: !1161, file: !1, line: 259, type: !10)
!1173 = !DILocation(line: 259, column: 38, scope: !1161)
!1174 = !DILocalVariable(name: "smem", arg: 7, scope: !1161, file: !1, line: 259, type: !10)
!1175 = !DILocation(line: 259, column: 54, scope: !1161)
!1176 = !DILocalVariable(name: "reversed", arg: 8, scope: !1161, file: !1, line: 260, type: !10)
!1177 = !DILocation(line: 260, column: 7, scope: !1161)
!1178 = !DILocalVariable(name: "sin_64", arg: 9, scope: !1161, file: !1, line: 261, type: !12)
!1179 = !DILocation(line: 261, column: 9, scope: !1161)
!1180 = !DILocalVariable(name: "cos_64", arg: 10, scope: !1161, file: !1, line: 262, type: !12)
!1181 = !DILocation(line: 262, column: 9, scope: !1161)
!1182 = !DILocalVariable(name: "sin_512", arg: 11, scope: !1161, file: !1, line: 263, type: !12)
!1183 = !DILocation(line: 263, column: 9, scope: !1161)
!1184 = !DILocalVariable(name: "cos_512", arg: 12, scope: !1161, file: !1, line: 264, type: !12)
!1185 = !DILocation(line: 264, column: 9, scope: !1161)
!1186 = !DILocalVariable(name: "tid", scope: !1161, file: !1, line: 268, type: !11)
!1187 = !DILocation(line: 268, column: 6, scope: !1161)
!1188 = !DILocalVariable(name: "hi", scope: !1161, file: !1, line: 268, type: !11)
!1189 = !DILocation(line: 268, column: 11, scope: !1161)
!1190 = !DILocalVariable(name: "lo", scope: !1161, file: !1, line: 268, type: !11)
!1191 = !DILocation(line: 268, column: 15, scope: !1161)
!1192 = !DILocalVariable(name: "i", scope: !1161, file: !1, line: 268, type: !11)
!1193 = !DILocation(line: 268, column: 19, scope: !1161)
!1194 = !DILocalVariable(name: "j", scope: !1161, file: !1, line: 268, type: !11)
!1195 = !DILocation(line: 268, column: 22, scope: !1161)
!1196 = !DILocalVariable(name: "stride", scope: !1161, file: !1, line: 268, type: !11)
!1197 = !DILocation(line: 268, column: 25, scope: !1161)
!1198 = !DILocation(line: 269, column: 9, scope: !1161)
!1199 = !DILocation(line: 269, column: 2, scope: !1161)
!1200 = !DILabel(scope: !1161, name: "outer", file: !1, line: 270)
!1201 = !DILocation(line: 270, column: 3, scope: !1161)
!1202 = !DILocation(line: 270, column: 17, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 270, column: 9)
!1204 = !DILocation(line: 270, column: 13, scope: !1203)
!1205 = !DILocation(line: 270, column: 22, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1203, file: !1, line: 270, column: 9)
!1207 = !DILocation(line: 270, column: 26, scope: !1206)
!1208 = !DILocation(line: 270, column: 9, scope: !1203)
!1209 = !DILocation(line: 270, column: 38, scope: !1206)
!1210 = !DILabel(scope: !1211, name: "load", file: !1, line: 271)
!1211 = distinct !DILexicalBlock(scope: !1206, file: !1, line: 270, column: 38)
!1212 = !DILocation(line: 271, column: 5, scope: !1211)
!1213 = !DILocation(line: 271, column: 16, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !1211, file: !1, line: 271, column: 10)
!1215 = !DILocation(line: 271, column: 14, scope: !1214)
!1216 = !DILocation(line: 271, column: 21, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1214, file: !1, line: 271, column: 10)
!1218 = !DILocation(line: 271, column: 23, scope: !1217)
!1219 = !DILocation(line: 271, column: 10, scope: !1214)
!1220 = !DILocation(line: 273, column: 16, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1217, file: !1, line: 271, column: 33)
!1222 = !DILocation(line: 273, column: 23, scope: !1221)
!1223 = !DILocation(line: 273, column: 26, scope: !1221)
!1224 = !DILocation(line: 273, column: 31, scope: !1221)
!1225 = !DILocation(line: 273, column: 29, scope: !1221)
!1226 = !DILocation(line: 273, column: 4, scope: !1221)
!1227 = !DILocation(line: 273, column: 11, scope: !1221)
!1228 = !DILocation(line: 273, column: 14, scope: !1221)
!1229 = !DILocation(line: 274, column: 3, scope: !1221)
!1230 = !DILocation(line: 271, column: 30, scope: !1217)
!1231 = !DILocation(line: 271, column: 10, scope: !1217)
!1232 = distinct !{!1232, !1219, !1233}
!1233 = !DILocation(line: 274, column: 3, scope: !1214)
!1234 = !DILocation(line: 275, column: 8, scope: !1211)
!1235 = !DILocation(line: 275, column: 11, scope: !1211)
!1236 = !DILocation(line: 275, column: 6, scope: !1211)
!1237 = !DILocation(line: 276, column: 8, scope: !1211)
!1238 = !DILocation(line: 276, column: 11, scope: !1211)
!1239 = !DILocation(line: 276, column: 6, scope: !1211)
!1240 = !DILocation(line: 277, column: 3, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !1211, file: !1, line: 277, column: 3)
!1242 = !DILabel(scope: !1211, name: "store", file: !1, line: 278)
!1243 = !DILocation(line: 278, column: 5, scope: !1211)
!1244 = !DILocation(line: 278, column: 17, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1211, file: !1, line: 278, column: 11)
!1246 = !DILocation(line: 278, column: 15, scope: !1245)
!1247 = !DILocation(line: 278, column: 22, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1245, file: !1, line: 278, column: 11)
!1249 = !DILocation(line: 278, column: 24, scope: !1248)
!1250 = !DILocation(line: 278, column: 11, scope: !1245)
!1251 = !DILocation(line: 280, column: 24, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1248, file: !1, line: 278, column: 34)
!1253 = !DILocation(line: 280, column: 31, scope: !1252)
!1254 = !DILocation(line: 280, column: 4, scope: !1252)
!1255 = !DILocation(line: 280, column: 11, scope: !1252)
!1256 = !DILocation(line: 280, column: 14, scope: !1252)
!1257 = !DILocation(line: 280, column: 19, scope: !1252)
!1258 = !DILocation(line: 280, column: 17, scope: !1252)
!1259 = !DILocation(line: 280, column: 22, scope: !1252)
!1260 = !DILocation(line: 281, column: 3, scope: !1252)
!1261 = !DILocation(line: 278, column: 31, scope: !1248)
!1262 = !DILocation(line: 278, column: 11, scope: !1248)
!1263 = distinct !{!1263, !1250, !1264}
!1264 = !DILocation(line: 281, column: 3, scope: !1245)
!1265 = !DILocation(line: 282, column: 2, scope: !1211)
!1266 = !DILocation(line: 270, column: 35, scope: !1206)
!1267 = !DILocation(line: 270, column: 9, scope: !1206)
!1268 = distinct !{!1268, !1208, !1269}
!1269 = !DILocation(line: 282, column: 2, scope: !1203)
!1270 = !DILocation(line: 284, column: 1, scope: !1161)
!1271 = distinct !DISubprogram(name: "step11", scope: !1, file: !1, line: 285, type: !8, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1272 = !DILocalVariable(name: "work_x", arg: 1, scope: !1271, file: !1, line: 285, type: !10)
!1273 = !DILocation(line: 285, column: 18, scope: !1271)
!1274 = !DILocalVariable(name: "work_y", arg: 2, scope: !1271, file: !1, line: 285, type: !10)
!1275 = !DILocation(line: 285, column: 33, scope: !1271)
!1276 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !1271, file: !1, line: 285, type: !10)
!1277 = !DILocation(line: 285, column: 48, scope: !1271)
!1278 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !1271, file: !1, line: 286, type: !10)
!1279 = !DILocation(line: 286, column: 8, scope: !1271)
!1280 = !DILocalVariable(name: "data_x", arg: 5, scope: !1271, file: !1, line: 286, type: !10)
!1281 = !DILocation(line: 286, column: 23, scope: !1271)
!1282 = !DILocalVariable(name: "data_y", arg: 6, scope: !1271, file: !1, line: 286, type: !10)
!1283 = !DILocation(line: 286, column: 38, scope: !1271)
!1284 = !DILocalVariable(name: "smem", arg: 7, scope: !1271, file: !1, line: 286, type: !10)
!1285 = !DILocation(line: 286, column: 54, scope: !1271)
!1286 = !DILocalVariable(name: "reversed", arg: 8, scope: !1271, file: !1, line: 287, type: !10)
!1287 = !DILocation(line: 287, column: 7, scope: !1271)
!1288 = !DILocalVariable(name: "sin_64", arg: 9, scope: !1271, file: !1, line: 288, type: !12)
!1289 = !DILocation(line: 288, column: 9, scope: !1271)
!1290 = !DILocalVariable(name: "cos_64", arg: 10, scope: !1271, file: !1, line: 289, type: !12)
!1291 = !DILocation(line: 289, column: 9, scope: !1271)
!1292 = !DILocalVariable(name: "sin_512", arg: 11, scope: !1271, file: !1, line: 290, type: !12)
!1293 = !DILocation(line: 290, column: 9, scope: !1271)
!1294 = !DILocalVariable(name: "cos_512", arg: 12, scope: !1271, file: !1, line: 291, type: !12)
!1295 = !DILocation(line: 291, column: 9, scope: !1271)
!1296 = !DILocalVariable(name: "tid", scope: !1271, file: !1, line: 295, type: !11)
!1297 = !DILocation(line: 295, column: 6, scope: !1271)
!1298 = !DILocalVariable(name: "hi", scope: !1271, file: !1, line: 295, type: !11)
!1299 = !DILocation(line: 295, column: 11, scope: !1271)
!1300 = !DILocalVariable(name: "lo", scope: !1271, file: !1, line: 295, type: !11)
!1301 = !DILocation(line: 295, column: 15, scope: !1271)
!1302 = !DILocalVariable(name: "i", scope: !1271, file: !1, line: 295, type: !11)
!1303 = !DILocation(line: 295, column: 19, scope: !1271)
!1304 = !DILocalVariable(name: "j", scope: !1271, file: !1, line: 295, type: !11)
!1305 = !DILocation(line: 295, column: 22, scope: !1271)
!1306 = !DILocalVariable(name: "stride", scope: !1271, file: !1, line: 295, type: !11)
!1307 = !DILocation(line: 295, column: 25, scope: !1271)
!1308 = !DILocation(line: 296, column: 9, scope: !1271)
!1309 = !DILocation(line: 296, column: 2, scope: !1271)
!1310 = !DILabel(scope: !1271, name: "outer", file: !1, line: 297)
!1311 = !DILocation(line: 297, column: 3, scope: !1271)
!1312 = !DILocation(line: 297, column: 17, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1271, file: !1, line: 297, column: 9)
!1314 = !DILocation(line: 297, column: 13, scope: !1313)
!1315 = !DILocation(line: 297, column: 22, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 297, column: 9)
!1317 = !DILocation(line: 297, column: 26, scope: !1316)
!1318 = !DILocation(line: 297, column: 9, scope: !1313)
!1319 = !DILocation(line: 297, column: 38, scope: !1316)
!1320 = !DILabel(scope: !1321, name: "load", file: !1, line: 299)
!1321 = distinct !DILexicalBlock(scope: !1316, file: !1, line: 297, column: 38)
!1322 = !DILocation(line: 299, column: 5, scope: !1321)
!1323 = !DILocation(line: 299, column: 16, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1321, file: !1, line: 299, column: 10)
!1325 = !DILocation(line: 299, column: 14, scope: !1324)
!1326 = !DILocation(line: 299, column: 21, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 299, column: 10)
!1328 = !DILocation(line: 299, column: 23, scope: !1327)
!1329 = !DILocation(line: 299, column: 10, scope: !1324)
!1330 = !DILocation(line: 300, column: 16, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !1327, file: !1, line: 299, column: 33)
!1332 = !DILocation(line: 300, column: 23, scope: !1331)
!1333 = !DILocation(line: 300, column: 26, scope: !1331)
!1334 = !DILocation(line: 300, column: 31, scope: !1331)
!1335 = !DILocation(line: 300, column: 29, scope: !1331)
!1336 = !DILocation(line: 300, column: 4, scope: !1331)
!1337 = !DILocation(line: 300, column: 11, scope: !1331)
!1338 = !DILocation(line: 300, column: 14, scope: !1331)
!1339 = !DILocation(line: 301, column: 16, scope: !1331)
!1340 = !DILocation(line: 301, column: 23, scope: !1331)
!1341 = !DILocation(line: 301, column: 26, scope: !1331)
!1342 = !DILocation(line: 301, column: 31, scope: !1331)
!1343 = !DILocation(line: 301, column: 29, scope: !1331)
!1344 = !DILocation(line: 301, column: 4, scope: !1331)
!1345 = !DILocation(line: 301, column: 11, scope: !1331)
!1346 = !DILocation(line: 301, column: 14, scope: !1331)
!1347 = !DILocation(line: 302, column: 3, scope: !1331)
!1348 = !DILocation(line: 299, column: 30, scope: !1327)
!1349 = !DILocation(line: 299, column: 10, scope: !1327)
!1350 = distinct !{!1350, !1329, !1351}
!1351 = !DILocation(line: 302, column: 3, scope: !1324)
!1352 = !DILocalVariable(name: "exp_1_8_x", scope: !1353, file: !1, line: 305, type: !11)
!1353 = distinct !DILexicalBlock(scope: !1321, file: !1, line: 305, column: 3)
!1354 = !DILocation(line: 305, column: 3, scope: !1353)
!1355 = !DILocalVariable(name: "exp_1_4_x", scope: !1353, file: !1, line: 305, type: !11)
!1356 = !DILocalVariable(name: "exp_3_8_x", scope: !1353, file: !1, line: 305, type: !11)
!1357 = !DILocalVariable(name: "exp_1_8_y", scope: !1353, file: !1, line: 305, type: !11)
!1358 = !DILocalVariable(name: "exp_1_4_y", scope: !1353, file: !1, line: 305, type: !11)
!1359 = !DILocalVariable(name: "exp_3_8_y", scope: !1353, file: !1, line: 305, type: !11)
!1360 = !DILocalVariable(name: "tmp_1", scope: !1353, file: !1, line: 305, type: !11)
!1361 = !DILocalVariable(name: "tmp_2", scope: !1353, file: !1, line: 305, type: !11)
!1362 = !DILocalVariable(name: "c0_x", scope: !1363, file: !1, line: 305, type: !11)
!1363 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 305, column: 3)
!1364 = !DILocation(line: 305, column: 3, scope: !1363)
!1365 = !DILocalVariable(name: "c0_y", scope: !1363, file: !1, line: 305, type: !11)
!1366 = !DILocalVariable(name: "c0_x", scope: !1367, file: !1, line: 305, type: !11)
!1367 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 305, column: 3)
!1368 = !DILocation(line: 305, column: 3, scope: !1367)
!1369 = !DILocalVariable(name: "c0_y", scope: !1367, file: !1, line: 305, type: !11)
!1370 = !DILocalVariable(name: "c0_x", scope: !1371, file: !1, line: 305, type: !11)
!1371 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 305, column: 3)
!1372 = !DILocation(line: 305, column: 3, scope: !1371)
!1373 = !DILocalVariable(name: "c0_y", scope: !1371, file: !1, line: 305, type: !11)
!1374 = !DILocalVariable(name: "c0_x", scope: !1375, file: !1, line: 305, type: !11)
!1375 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 305, column: 3)
!1376 = !DILocation(line: 305, column: 3, scope: !1375)
!1377 = !DILocalVariable(name: "c0_y", scope: !1375, file: !1, line: 305, type: !11)
!1378 = !DILocalVariable(name: "exp_1_44_x", scope: !1379, file: !1, line: 305, type: !11)
!1379 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 305, column: 3)
!1380 = !DILocation(line: 305, column: 3, scope: !1379)
!1381 = !DILocalVariable(name: "exp_1_44_y", scope: !1379, file: !1, line: 305, type: !11)
!1382 = !DILocalVariable(name: "tmp", scope: !1379, file: !1, line: 305, type: !11)
!1383 = !DILocalVariable(name: "c0_x", scope: !1384, file: !1, line: 305, type: !11)
!1384 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 305, column: 3)
!1385 = !DILocation(line: 305, column: 3, scope: !1384)
!1386 = !DILocalVariable(name: "c0_y", scope: !1384, file: !1, line: 305, type: !11)
!1387 = !DILocalVariable(name: "c0_x", scope: !1388, file: !1, line: 305, type: !11)
!1388 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 305, column: 3)
!1389 = !DILocation(line: 305, column: 3, scope: !1388)
!1390 = !DILocalVariable(name: "c0_y", scope: !1388, file: !1, line: 305, type: !11)
!1391 = !DILocalVariable(name: "c0_x", scope: !1392, file: !1, line: 305, type: !11)
!1392 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 305, column: 3)
!1393 = !DILocation(line: 305, column: 3, scope: !1392)
!1394 = !DILocalVariable(name: "c0_y", scope: !1392, file: !1, line: 305, type: !11)
!1395 = !DILocalVariable(name: "c0_x", scope: !1396, file: !1, line: 305, type: !11)
!1396 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 305, column: 3)
!1397 = !DILocation(line: 305, column: 3, scope: !1396)
!1398 = !DILocalVariable(name: "c0_y", scope: !1396, file: !1, line: 305, type: !11)
!1399 = !DILocalVariable(name: "exp_1_44_x", scope: !1400, file: !1, line: 305, type: !11)
!1400 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 305, column: 3)
!1401 = !DILocation(line: 305, column: 3, scope: !1400)
!1402 = !DILocalVariable(name: "exp_1_44_y", scope: !1400, file: !1, line: 305, type: !11)
!1403 = !DILocalVariable(name: "tmp", scope: !1400, file: !1, line: 305, type: !11)
!1404 = !DILocalVariable(name: "c0_x", scope: !1405, file: !1, line: 305, type: !11)
!1405 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 305, column: 3)
!1406 = !DILocation(line: 305, column: 3, scope: !1405)
!1407 = !DILocalVariable(name: "c0_y", scope: !1405, file: !1, line: 305, type: !11)
!1408 = !DILocalVariable(name: "c0_x", scope: !1409, file: !1, line: 305, type: !11)
!1409 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 305, column: 3)
!1410 = !DILocation(line: 305, column: 3, scope: !1409)
!1411 = !DILocalVariable(name: "c0_y", scope: !1409, file: !1, line: 305, type: !11)
!1412 = !DILocalVariable(name: "c0_x", scope: !1413, file: !1, line: 305, type: !11)
!1413 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 305, column: 3)
!1414 = !DILocation(line: 305, column: 3, scope: !1413)
!1415 = !DILocalVariable(name: "c0_y", scope: !1413, file: !1, line: 305, type: !11)
!1416 = !DILocalVariable(name: "c0_x", scope: !1417, file: !1, line: 305, type: !11)
!1417 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 305, column: 3)
!1418 = !DILocation(line: 305, column: 3, scope: !1417)
!1419 = !DILocalVariable(name: "c0_y", scope: !1417, file: !1, line: 305, type: !11)
!1420 = !DILabel(scope: !1321, name: "store", file: !1, line: 308)
!1421 = !DILocation(line: 308, column: 5, scope: !1321)
!1422 = !DILocation(line: 308, column: 16, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1321, file: !1, line: 308, column: 11)
!1424 = !DILocation(line: 308, column: 15, scope: !1423)
!1425 = !DILocation(line: 308, column: 20, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1423, file: !1, line: 308, column: 11)
!1427 = !DILocation(line: 308, column: 21, scope: !1426)
!1428 = !DILocation(line: 308, column: 11, scope: !1423)
!1429 = !DILocation(line: 310, column: 27, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1426, file: !1, line: 308, column: 28)
!1431 = !DILocation(line: 310, column: 34, scope: !1430)
!1432 = !DILocation(line: 310, column: 43, scope: !1430)
!1433 = !DILocation(line: 310, column: 4, scope: !1430)
!1434 = !DILocation(line: 310, column: 11, scope: !1430)
!1435 = !DILocation(line: 310, column: 13, scope: !1430)
!1436 = !DILocation(line: 310, column: 12, scope: !1430)
!1437 = !DILocation(line: 310, column: 20, scope: !1430)
!1438 = !DILocation(line: 310, column: 19, scope: !1430)
!1439 = !DILocation(line: 310, column: 25, scope: !1430)
!1440 = !DILocation(line: 311, column: 27, scope: !1430)
!1441 = !DILocation(line: 311, column: 34, scope: !1430)
!1442 = !DILocation(line: 311, column: 43, scope: !1430)
!1443 = !DILocation(line: 311, column: 4, scope: !1430)
!1444 = !DILocation(line: 311, column: 11, scope: !1430)
!1445 = !DILocation(line: 311, column: 13, scope: !1430)
!1446 = !DILocation(line: 311, column: 12, scope: !1430)
!1447 = !DILocation(line: 311, column: 20, scope: !1430)
!1448 = !DILocation(line: 311, column: 19, scope: !1430)
!1449 = !DILocation(line: 311, column: 25, scope: !1430)
!1450 = !DILocation(line: 312, column: 3, scope: !1430)
!1451 = !DILocation(line: 308, column: 25, scope: !1426)
!1452 = !DILocation(line: 308, column: 11, scope: !1426)
!1453 = distinct !{!1453, !1428, !1454}
!1454 = !DILocation(line: 312, column: 3, scope: !1423)
!1455 = !DILocation(line: 313, column: 2, scope: !1321)
!1456 = !DILocation(line: 297, column: 35, scope: !1316)
!1457 = !DILocation(line: 297, column: 9, scope: !1316)
!1458 = distinct !{!1458, !1318, !1459}
!1459 = !DILocation(line: 313, column: 2, scope: !1313)
!1460 = !DILocation(line: 314, column: 1, scope: !1271)
!1461 = distinct !DISubprogram(name: "fft1D_512", scope: !1, file: !1, line: 315, type: !8, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1462 = !DILocalVariable(name: "work_x", arg: 1, scope: !1461, file: !1, line: 315, type: !10)
!1463 = !DILocation(line: 315, column: 21, scope: !1461)
!1464 = !DILocalVariable(name: "work_y", arg: 2, scope: !1461, file: !1, line: 315, type: !10)
!1465 = !DILocation(line: 315, column: 39, scope: !1461)
!1466 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !1461, file: !1, line: 316, type: !10)
!1467 = !DILocation(line: 316, column: 7, scope: !1461)
!1468 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !1461, file: !1, line: 317, type: !10)
!1469 = !DILocation(line: 317, column: 7, scope: !1461)
!1470 = !DILocalVariable(name: "data_x", arg: 5, scope: !1461, file: !1, line: 318, type: !10)
!1471 = !DILocation(line: 318, column: 7, scope: !1461)
!1472 = !DILocalVariable(name: "data_y", arg: 6, scope: !1461, file: !1, line: 319, type: !10)
!1473 = !DILocation(line: 319, column: 7, scope: !1461)
!1474 = !DILocalVariable(name: "smem", arg: 7, scope: !1461, file: !1, line: 320, type: !10)
!1475 = !DILocation(line: 320, column: 7, scope: !1461)
!1476 = !DILocalVariable(name: "reversed", arg: 8, scope: !1461, file: !1, line: 321, type: !10)
!1477 = !DILocation(line: 321, column: 7, scope: !1461)
!1478 = !DILocalVariable(name: "sin_64", arg: 9, scope: !1461, file: !1, line: 322, type: !12)
!1479 = !DILocation(line: 322, column: 9, scope: !1461)
!1480 = !DILocalVariable(name: "cos_64", arg: 10, scope: !1461, file: !1, line: 323, type: !12)
!1481 = !DILocation(line: 323, column: 9, scope: !1461)
!1482 = !DILocalVariable(name: "sin_512", arg: 11, scope: !1461, file: !1, line: 324, type: !12)
!1483 = !DILocation(line: 324, column: 9, scope: !1461)
!1484 = !DILocalVariable(name: "cos_512", arg: 12, scope: !1461, file: !1, line: 325, type: !12)
!1485 = !DILocation(line: 325, column: 9, scope: !1461)
!1486 = !DILocalVariable(name: "tid", scope: !1461, file: !1, line: 332, type: !11)
!1487 = !DILocation(line: 332, column: 7, scope: !1461)
!1488 = !DILocalVariable(name: "hi", scope: !1461, file: !1, line: 332, type: !11)
!1489 = !DILocation(line: 332, column: 12, scope: !1461)
!1490 = !DILocalVariable(name: "lo", scope: !1461, file: !1, line: 332, type: !11)
!1491 = !DILocation(line: 332, column: 16, scope: !1461)
!1492 = !DILocalVariable(name: "i", scope: !1461, file: !1, line: 332, type: !11)
!1493 = !DILocation(line: 332, column: 20, scope: !1461)
!1494 = !DILocalVariable(name: "j", scope: !1461, file: !1, line: 332, type: !11)
!1495 = !DILocation(line: 332, column: 23, scope: !1461)
!1496 = !DILocalVariable(name: "stride", scope: !1461, file: !1, line: 332, type: !11)
!1497 = !DILocation(line: 332, column: 26, scope: !1461)
!1498 = !DILocation(line: 333, column: 9, scope: !1461)
!1499 = !DILocation(line: 335, column: 9, scope: !1461)
!1500 = !DILocation(line: 335, column: 17, scope: !1461)
!1501 = !DILocation(line: 335, column: 25, scope: !1461)
!1502 = !DILocation(line: 335, column: 33, scope: !1461)
!1503 = !DILocation(line: 335, column: 41, scope: !1461)
!1504 = !DILocation(line: 335, column: 49, scope: !1461)
!1505 = !DILocation(line: 335, column: 57, scope: !1461)
!1506 = !DILocation(line: 335, column: 63, scope: !1461)
!1507 = !DILocation(line: 335, column: 73, scope: !1461)
!1508 = !DILocation(line: 335, column: 81, scope: !1461)
!1509 = !DILocation(line: 335, column: 89, scope: !1461)
!1510 = !DILocation(line: 335, column: 98, scope: !1461)
!1511 = !DILocation(line: 335, column: 3, scope: !1461)
!1512 = !DILocation(line: 336, column: 9, scope: !1461)
!1513 = !DILocation(line: 336, column: 17, scope: !1461)
!1514 = !DILocation(line: 336, column: 25, scope: !1461)
!1515 = !DILocation(line: 336, column: 33, scope: !1461)
!1516 = !DILocation(line: 336, column: 41, scope: !1461)
!1517 = !DILocation(line: 336, column: 49, scope: !1461)
!1518 = !DILocation(line: 336, column: 57, scope: !1461)
!1519 = !DILocation(line: 336, column: 63, scope: !1461)
!1520 = !DILocation(line: 336, column: 73, scope: !1461)
!1521 = !DILocation(line: 336, column: 81, scope: !1461)
!1522 = !DILocation(line: 336, column: 89, scope: !1461)
!1523 = !DILocation(line: 336, column: 98, scope: !1461)
!1524 = !DILocation(line: 336, column: 3, scope: !1461)
!1525 = !DILocation(line: 337, column: 9, scope: !1461)
!1526 = !DILocation(line: 337, column: 17, scope: !1461)
!1527 = !DILocation(line: 337, column: 25, scope: !1461)
!1528 = !DILocation(line: 337, column: 33, scope: !1461)
!1529 = !DILocation(line: 337, column: 41, scope: !1461)
!1530 = !DILocation(line: 337, column: 49, scope: !1461)
!1531 = !DILocation(line: 337, column: 57, scope: !1461)
!1532 = !DILocation(line: 337, column: 63, scope: !1461)
!1533 = !DILocation(line: 337, column: 73, scope: !1461)
!1534 = !DILocation(line: 337, column: 81, scope: !1461)
!1535 = !DILocation(line: 337, column: 89, scope: !1461)
!1536 = !DILocation(line: 337, column: 98, scope: !1461)
!1537 = !DILocation(line: 337, column: 3, scope: !1461)
!1538 = !DILocation(line: 338, column: 9, scope: !1461)
!1539 = !DILocation(line: 338, column: 17, scope: !1461)
!1540 = !DILocation(line: 338, column: 25, scope: !1461)
!1541 = !DILocation(line: 338, column: 33, scope: !1461)
!1542 = !DILocation(line: 338, column: 41, scope: !1461)
!1543 = !DILocation(line: 338, column: 49, scope: !1461)
!1544 = !DILocation(line: 338, column: 57, scope: !1461)
!1545 = !DILocation(line: 338, column: 63, scope: !1461)
!1546 = !DILocation(line: 338, column: 73, scope: !1461)
!1547 = !DILocation(line: 338, column: 81, scope: !1461)
!1548 = !DILocation(line: 338, column: 89, scope: !1461)
!1549 = !DILocation(line: 338, column: 98, scope: !1461)
!1550 = !DILocation(line: 338, column: 3, scope: !1461)
!1551 = !DILocation(line: 339, column: 9, scope: !1461)
!1552 = !DILocation(line: 339, column: 17, scope: !1461)
!1553 = !DILocation(line: 339, column: 25, scope: !1461)
!1554 = !DILocation(line: 339, column: 33, scope: !1461)
!1555 = !DILocation(line: 339, column: 41, scope: !1461)
!1556 = !DILocation(line: 339, column: 49, scope: !1461)
!1557 = !DILocation(line: 339, column: 57, scope: !1461)
!1558 = !DILocation(line: 339, column: 63, scope: !1461)
!1559 = !DILocation(line: 339, column: 73, scope: !1461)
!1560 = !DILocation(line: 339, column: 81, scope: !1461)
!1561 = !DILocation(line: 339, column: 89, scope: !1461)
!1562 = !DILocation(line: 339, column: 98, scope: !1461)
!1563 = !DILocation(line: 339, column: 3, scope: !1461)
!1564 = !DILocation(line: 340, column: 9, scope: !1461)
!1565 = !DILocation(line: 340, column: 17, scope: !1461)
!1566 = !DILocation(line: 340, column: 25, scope: !1461)
!1567 = !DILocation(line: 340, column: 33, scope: !1461)
!1568 = !DILocation(line: 340, column: 41, scope: !1461)
!1569 = !DILocation(line: 340, column: 49, scope: !1461)
!1570 = !DILocation(line: 340, column: 57, scope: !1461)
!1571 = !DILocation(line: 340, column: 63, scope: !1461)
!1572 = !DILocation(line: 340, column: 73, scope: !1461)
!1573 = !DILocation(line: 340, column: 81, scope: !1461)
!1574 = !DILocation(line: 340, column: 89, scope: !1461)
!1575 = !DILocation(line: 340, column: 98, scope: !1461)
!1576 = !DILocation(line: 340, column: 3, scope: !1461)
!1577 = !DILocation(line: 341, column: 9, scope: !1461)
!1578 = !DILocation(line: 341, column: 17, scope: !1461)
!1579 = !DILocation(line: 341, column: 25, scope: !1461)
!1580 = !DILocation(line: 341, column: 33, scope: !1461)
!1581 = !DILocation(line: 341, column: 41, scope: !1461)
!1582 = !DILocation(line: 341, column: 49, scope: !1461)
!1583 = !DILocation(line: 341, column: 57, scope: !1461)
!1584 = !DILocation(line: 341, column: 63, scope: !1461)
!1585 = !DILocation(line: 341, column: 73, scope: !1461)
!1586 = !DILocation(line: 341, column: 81, scope: !1461)
!1587 = !DILocation(line: 341, column: 89, scope: !1461)
!1588 = !DILocation(line: 341, column: 98, scope: !1461)
!1589 = !DILocation(line: 341, column: 3, scope: !1461)
!1590 = !DILocation(line: 342, column: 9, scope: !1461)
!1591 = !DILocation(line: 342, column: 17, scope: !1461)
!1592 = !DILocation(line: 342, column: 25, scope: !1461)
!1593 = !DILocation(line: 342, column: 33, scope: !1461)
!1594 = !DILocation(line: 342, column: 41, scope: !1461)
!1595 = !DILocation(line: 342, column: 49, scope: !1461)
!1596 = !DILocation(line: 342, column: 57, scope: !1461)
!1597 = !DILocation(line: 342, column: 63, scope: !1461)
!1598 = !DILocation(line: 342, column: 73, scope: !1461)
!1599 = !DILocation(line: 342, column: 81, scope: !1461)
!1600 = !DILocation(line: 342, column: 89, scope: !1461)
!1601 = !DILocation(line: 342, column: 98, scope: !1461)
!1602 = !DILocation(line: 342, column: 3, scope: !1461)
!1603 = !DILocation(line: 343, column: 9, scope: !1461)
!1604 = !DILocation(line: 343, column: 17, scope: !1461)
!1605 = !DILocation(line: 343, column: 25, scope: !1461)
!1606 = !DILocation(line: 343, column: 33, scope: !1461)
!1607 = !DILocation(line: 343, column: 41, scope: !1461)
!1608 = !DILocation(line: 343, column: 49, scope: !1461)
!1609 = !DILocation(line: 343, column: 57, scope: !1461)
!1610 = !DILocation(line: 343, column: 63, scope: !1461)
!1611 = !DILocation(line: 343, column: 73, scope: !1461)
!1612 = !DILocation(line: 343, column: 81, scope: !1461)
!1613 = !DILocation(line: 343, column: 89, scope: !1461)
!1614 = !DILocation(line: 343, column: 98, scope: !1461)
!1615 = !DILocation(line: 343, column: 3, scope: !1461)
!1616 = !DILocation(line: 344, column: 10, scope: !1461)
!1617 = !DILocation(line: 344, column: 18, scope: !1461)
!1618 = !DILocation(line: 344, column: 26, scope: !1461)
!1619 = !DILocation(line: 344, column: 34, scope: !1461)
!1620 = !DILocation(line: 344, column: 42, scope: !1461)
!1621 = !DILocation(line: 344, column: 50, scope: !1461)
!1622 = !DILocation(line: 344, column: 58, scope: !1461)
!1623 = !DILocation(line: 344, column: 64, scope: !1461)
!1624 = !DILocation(line: 344, column: 74, scope: !1461)
!1625 = !DILocation(line: 344, column: 82, scope: !1461)
!1626 = !DILocation(line: 344, column: 90, scope: !1461)
!1627 = !DILocation(line: 344, column: 99, scope: !1461)
!1628 = !DILocation(line: 344, column: 3, scope: !1461)
!1629 = !DILocation(line: 345, column: 10, scope: !1461)
!1630 = !DILocation(line: 345, column: 18, scope: !1461)
!1631 = !DILocation(line: 345, column: 26, scope: !1461)
!1632 = !DILocation(line: 345, column: 34, scope: !1461)
!1633 = !DILocation(line: 345, column: 42, scope: !1461)
!1634 = !DILocation(line: 345, column: 50, scope: !1461)
!1635 = !DILocation(line: 345, column: 58, scope: !1461)
!1636 = !DILocation(line: 345, column: 64, scope: !1461)
!1637 = !DILocation(line: 345, column: 74, scope: !1461)
!1638 = !DILocation(line: 345, column: 82, scope: !1461)
!1639 = !DILocation(line: 345, column: 90, scope: !1461)
!1640 = !DILocation(line: 345, column: 99, scope: !1461)
!1641 = !DILocation(line: 345, column: 3, scope: !1461)
!1642 = !DILocation(line: 351, column: 1, scope: !1461)
!1643 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 352, type: !1644, scopeLine: 352, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!11}
!1646 = !DILocalVariable(name: "a_x", scope: !1643, file: !1, line: 353, type: !1647)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 16384, elements: !1648)
!1648 = !{!1649}
!1649 = !DISubrange(count: 512)
!1650 = !DILocation(line: 353, column: 8, scope: !1643)
!1651 = !DILocalVariable(name: "a_y", scope: !1643, file: !1, line: 354, type: !1647)
!1652 = !DILocation(line: 354, column: 8, scope: !1643)
!1653 = !DILocalVariable(name: "i", scope: !1643, file: !1, line: 355, type: !11)
!1654 = !DILocation(line: 355, column: 7, scope: !1643)
!1655 = !DILocation(line: 357, column: 10, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 357, column: 3)
!1657 = !DILocation(line: 357, column: 8, scope: !1656)
!1658 = !DILocation(line: 357, column: 15, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1656, file: !1, line: 357, column: 3)
!1660 = !DILocation(line: 357, column: 17, scope: !1659)
!1661 = !DILocation(line: 357, column: 3, scope: !1656)
!1662 = !DILocation(line: 358, column: 14, scope: !1663)
!1663 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 357, column: 28)
!1664 = !DILocation(line: 358, column: 9, scope: !1663)
!1665 = !DILocation(line: 358, column: 5, scope: !1663)
!1666 = !DILocation(line: 358, column: 12, scope: !1663)
!1667 = !DILocation(line: 359, column: 9, scope: !1663)
!1668 = !DILocation(line: 359, column: 5, scope: !1663)
!1669 = !DILocation(line: 359, column: 12, scope: !1663)
!1670 = !DILocation(line: 360, column: 3, scope: !1663)
!1671 = !DILocation(line: 357, column: 25, scope: !1659)
!1672 = !DILocation(line: 357, column: 3, scope: !1659)
!1673 = distinct !{!1673, !1661, !1674}
!1674 = !DILocation(line: 360, column: 3, scope: !1656)
!1675 = !DILocalVariable(name: "sin_64", scope: !1643, file: !1, line: 361, type: !1676)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 14336, elements: !1677)
!1677 = !{!1678}
!1678 = !DISubrange(count: 448)
!1679 = !DILocation(line: 361, column: 9, scope: !1643)
!1680 = !DILocalVariable(name: "sin_512", scope: !1643, file: !1, line: 426, type: !1676)
!1681 = !DILocation(line: 426, column: 9, scope: !1643)
!1682 = !DILocalVariable(name: "cos_64", scope: !1643, file: !1, line: 491, type: !1676)
!1683 = !DILocation(line: 491, column: 9, scope: !1643)
!1684 = !DILocalVariable(name: "cos_512", scope: !1643, file: !1, line: 556, type: !1676)
!1685 = !DILocation(line: 556, column: 9, scope: !1643)
!1686 = !DILocalVariable(name: "DATA_x", scope: !1643, file: !1, line: 622, type: !1647)
!1687 = !DILocation(line: 622, column: 8, scope: !1643)
!1688 = !DILocalVariable(name: "DATA_y", scope: !1643, file: !1, line: 623, type: !1647)
!1689 = !DILocation(line: 623, column: 8, scope: !1643)
!1690 = !DILocalVariable(name: "data_x", scope: !1643, file: !1, line: 624, type: !1691)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 256, elements: !1692)
!1692 = !{!1693}
!1693 = !DISubrange(count: 8)
!1694 = !DILocation(line: 624, column: 8, scope: !1643)
!1695 = !DILocalVariable(name: "data_y", scope: !1643, file: !1, line: 625, type: !1691)
!1696 = !DILocation(line: 625, column: 8, scope: !1643)
!1697 = !DILocalVariable(name: "smem", scope: !1643, file: !1, line: 626, type: !1698)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 18432, elements: !1699)
!1699 = !{!1700}
!1700 = !DISubrange(count: 576)
!1701 = !DILocation(line: 626, column: 8, scope: !1643)
!1702 = !DILocalVariable(name: "reversed", scope: !1643, file: !1, line: 627, type: !1691)
!1703 = !DILocation(line: 627, column: 7, scope: !1643)
!1704 = !DILocation(line: 631, column: 13, scope: !1643)
!1705 = !DILocation(line: 631, column: 18, scope: !1643)
!1706 = !DILocation(line: 631, column: 23, scope: !1643)
!1707 = !DILocation(line: 631, column: 31, scope: !1643)
!1708 = !DILocation(line: 631, column: 39, scope: !1643)
!1709 = !DILocation(line: 631, column: 47, scope: !1643)
!1710 = !DILocation(line: 631, column: 55, scope: !1643)
!1711 = !DILocation(line: 631, column: 61, scope: !1643)
!1712 = !DILocation(line: 631, column: 71, scope: !1643)
!1713 = !DILocation(line: 631, column: 79, scope: !1643)
!1714 = !DILocation(line: 631, column: 88, scope: !1643)
!1715 = !DILocation(line: 631, column: 96, scope: !1643)
!1716 = !DILocation(line: 631, column: 3, scope: !1643)
!1717 = !DILocation(line: 636, column: 10, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 636, column: 3)
!1719 = !DILocation(line: 636, column: 8, scope: !1718)
!1720 = !DILocation(line: 636, column: 15, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1718, file: !1, line: 636, column: 3)
!1722 = !DILocation(line: 636, column: 17, scope: !1721)
!1723 = !DILocation(line: 636, column: 3, scope: !1718)
!1724 = !DILocation(line: 637, column: 36, scope: !1725)
!1725 = distinct !DILexicalBlock(scope: !1721, file: !1, line: 636, column: 26)
!1726 = !DILocation(line: 637, column: 32, scope: !1725)
!1727 = !DILocation(line: 637, column: 44, scope: !1725)
!1728 = !DILocation(line: 637, column: 40, scope: !1725)
!1729 = !DILocation(line: 637, column: 5, scope: !1725)
!1730 = !DILocation(line: 638, column: 3, scope: !1725)
!1731 = !DILocation(line: 636, column: 23, scope: !1721)
!1732 = !DILocation(line: 636, column: 3, scope: !1721)
!1733 = distinct !{!1733, !1723, !1734}
!1734 = !DILocation(line: 638, column: 3, scope: !1718)
!1735 = !DILocation(line: 640, column: 3, scope: !1643)
