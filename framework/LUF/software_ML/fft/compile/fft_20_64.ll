; ModuleID = 'fft_20_64.ll'
source_filename = "fft_20_64.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.sin_64 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000], align 16
@__const.main.sin_512 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFA91F70E0000000, float 0xBF992146A0000000, float 0xBFB2D527E0000000, float 0xBF89221000000000, float 0xBFAF657760000000, float 0xBFA2D85E00000000, float 0xBFB5F6CAC0000000, float 0xBFB917A460000000, float 0xBFA91F70E0000000, float 0xBFC2C80C80000000, float 0xBF992146A0000000, float 0xBFBF5653C0000000, float 0xBFB2D527E0000000, float 0xBFC5E21540000000, float 0xBFC2C80C80000000, float 0xBFB2D527E0000000, float 0xBFCC0B8060000000, float 0xBFA2D85E00000000, float 0xBFC76DDAC0000000, float 0xBFBC378240000000, float 0xBFD04FB980000000, float 0xBFC8F8B580000000, float 0xBFB917A460000000, float 0xBFD2940780000000, float 0xBFA91F70E0000000, float 0xBFCF19F800000000, float 0xBFC2C80C80000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFBF5653C0000000, float 0xBFD7088500000000, float 0xBFAF657760000000, float 0xBFD3541100000000, float 0xBFC76DDAC0000000, float 0xBFDAA6CA00000000, float 0xBFD2940780000000, float 0xBFC2C80C80000000, float 0xBFDB5D0FA0000000, float 0xBFB2D527E0000000, float 0xBFD7088500000000, float 0xBFCC0B8060000000, float 0xBFDF8BA400000000, float 0xBFD58F9B20000000, float 0xBFC5E21540000000, float 0xBFDF8BA400000000, float 0xBFB5F6CAC0000000, float 0xBFDAA6CA00000000, float 0xBFD04FB980000000, float 0xBFE21A7A00000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFDB5D0FA0000000, float 0xBFCC0B8060000000, float 0xBFE3AFFB00000000, float 0xBFBC378240000000, float 0xBFE0C97100000000, float 0xBFD4D1E100000000, float 0xBFE65918A0000000, float 0xBFDE2B5E60000000, float 0xBFCF19F800000000, float 0xBFE57D6940000000, float 0xBFBF5653C0000000, float 0xBFE26D04E0000000, float 0xBFD7088500000000, float 0xBFE83B0E60000000, float 0xBFE0738820000000, float 0xBFD111D360000000, float 0xBFE72D0800000000, float 0xBFC139F340000000, float 0xBFE3FED840000000, float 0xBFD9372A40000000, float 0xBFE9EF4380000000, float 0xBFE1C73AC0000000, float 0xBFD2940780000000, float 0xBFE8BC7F80000000, float 0xBFC2C80C80000000, float 0xBFE57D6940000000, float 0xBFDB5D0FA0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0xBFD4135DA0000000, float 0xBFEA29A800000000, float 0xBFC4557580000000, float 0xBFE6E744C0000000, float 0xBFDD7978A0000000, float 0xBFECC1F000000000, float 0xBFE44CF280000000, float 0xBFD58F9B20000000, float 0xBFEB728420000000, float 0xBFC5E21540000000, float 0xBFE83B0E60000000, float 0xBFDF8BA400000000, float 0xBFEDDB1420000000, float 0xBFE57D6940000000, float 0xBFD7088500000000, float 0xBFEC954A80000000, float 0xBFC76DDAC0000000, float 0xBFE9777F20000000, float 0xBFE0C97100000000, float 0xBFEEBBD9C0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFE7B5DEE0000000, float 0xBFD9EF7800000000, float 0xBFEE628880000000, float 0xBFCA829D00000000, float 0xBFEBA5AAC0000000, float 0xBFE2BEDB80000000, float 0xBFEFCE1600000000, float 0xBFE8BC7F80000000, float 0xBFDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0xBFCC0B8060000000, float 0xBFEC954A80000000, float 0xBFE3AFFB00000000, float 0xBFEFFD88C0000000, float 0xBFE9B3E140000000, float 0xBFDCC66D40000000, float 0xBFEF8765C0000000, float 0xBFCD934F00000000, float 0xBFED6961C0000000, float 0xBFE49A45A0000000, float 0xBFEFF09520000000, float 0xBFEA9B6700000000, float 0xBFDE2B5E60000000, float 0xBFEFD88E40000000, float 0xBFCF19F800000000, float 0xBFEE2120E0000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFDF8BA400000000, float 0xBFEFFD88C0000000, float 0xBFD04FB980000000, float 0xBFEEBBD9C0000000, float 0xBFE65918A0000000, float 0xBFEF225320000000, float 0xBFEC38B260000000, float 0xBFE0738820000000, float 0xBFEFF620E0000000, float 0xBFD111D360000000, float 0xBFEF38F360000000, float 0xBFE72D0800000000, float 0xBFEE628880000000, float 0xBFECED7A60000000, float 0xBFE11EB420000000, float 0xBFEFC26560000000, float 0xBFD1D34580000000, float 0xBFEF97F840000000, float 0xBFE7F8EC00000000, float 0xBFED6961C0000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0xBFEE2120E0000000, float 0xBFE26D04E0000000, float 0xBFEED740C0000000, float 0xBFD3541100000000, float 0xBFEFFA7220000000, float 0xBFE9777F20000000, float 0xBFEAD2BD40000000, float 0xBFEE9F40A0000000, float 0xBFE30FF760000000, float 0xBFEE2120E0000000, float 0xBFD4135DA0000000, float 0xBFEFFD88C0000000, float 0xBFEA29A800000000, float 0xBFE93A2160000000, float 0xBFEF0A7E80000000, float 0xBFE3AFFB00000000, float 0xBFED413560000000, float 0xBFD4D1E100000000, float 0xBFEFE1CBC0000000, float 0xBFEAD2BD40000000, float 0xBFE771E6C0000000, float 0xBFEF629740000000, float 0xBFE44CF280000000, float 0xBFEC38B260000000, float 0xBFD58F9B20000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFE4E6CB20000000, float 0xBFEB090B40000000, float 0xBFD64C7F40000000, float 0xBFEF4E5F80000000, float 0xBFEC08C400000000, float 0xBFE36058A0000000, float 0xBFEFD88E40000000, float 0xBFE57D6940000000, float 0xBFE9B3E140000000, float 0xBFD7088500000000, float 0xBFEED740C0000000, float 0xBFEC954A80000000, float 0xBFE11EB420000000, float 0xBFEFF620E0000000, float 0xBFE610B840000000, float 0xBFE83B0E60000000, float 0xBFD7C3A860000000, float 0xBFEE4269A0000000, float 0xBFED17E780000000, float 0xBFDD7978A0000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEFF620E0000000, float 0xBFE72D0800000000, float 0xBFE4E6CB20000000, float 0xBFD9372A40000000, float 0xBFECC1F000000000, float 0xBFEDFEAE60000000, float 0xBFD3541100000000, float 0xBFEFD88E40000000, float 0xBFE7B5DEE0000000, float 0xBFE30FF760000000, float 0xBFD9EF7800000000, float 0xBFEBD7C0C0000000, float 0xBFEE628880000000, float 0xBFCC0B8060000000, float 0xBFEFA75680000000, float 0xBFE83B0E60000000, float 0xBFE11EB420000000, float 0xBFDAA6CA00000000, float 0xBFEAD2BD40000000, float 0xBFEEBBD9C0000000, float 0xBFC139F340000000, float 0xBFEF629740000000, float 0xBFE8BC7F80000000, float 0xBFDE2B5E60000000, float 0xBFDB5D0FA0000000, float 0xBFE9B3E140000000, float 0xBFEF0A7E80000000, float 0xBFA91F70E0000000, float 0xBFEF0A7E80000000, float 0xBFE93A2160000000, float 0xBFD9EF7800000000, float 0xBFDC1248E0000000, float 0xBFE87C3F80000000, float 0xBFEF4E5F80000000, float 0x3FA2D85E00000000, float 0xBFEE9F40A0000000, float 0xBFE9B3E140000000, float 0xBFD58F9B20000000, float 0xBFDCC66D40000000, float 0xBFE72D0800000000, float 0xBFEF8765C0000000, float 0x3FBF5653C0000000, float 0xBFEE2120E0000000, float 0xBFEA29A800000000, float 0xBFD111D360000000, float 0xBFDD7978A0000000, float 0xBFE5C77BC0000000, float 0xBFEFB57A40000000, float 0x3FCA829D00000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFECED7A60000000, float 0xBFEB090B40000000, float 0xBFBF5653C0000000, float 0xBFDEDC1A40000000, float 0xBFE2BEDB80000000, float 0xBFEFF09520000000, float 0x3FD7C3A860000000, float 0xBFEC38B260000000, float 0xBFEB728420000000, float 0xBFA91F70E0000000, float 0xBFDF8BA400000000, float 0xBFE11EB420000000, float 0xBFEFFD88C0000000, float 0x3FDCC66D40000000, float 0xBFEB728420000000, float 0xBFEBD7C0C0000000, float 0x3F992146A0000000, float 0xBFE01CFBC0000000, float 0xBFDEDC1A40000000, float 0xBFEFFF62C0000000, float 0x3FE0C97100000000, float 0xBFEA9B6700000000, float 0xBFEC38B260000000, float 0x3FB917A460000000, float 0xBFE0738820000000, float 0xBFDB5D0FA0000000, float 0xBFEFF620E0000000, float 0x3FE30FF760000000, float 0xBFE9B3E140000000, float 0xBFEC954A80000000, float 0x3FC5E21540000000, float 0xBFE0C97100000000, float 0xBFD7C3A860000000, float 0xBFEFE1CBC0000000, float 0x3FE5328300000000, float 0xBFE8BC7F80000000, float 0xBFECED7A60000000, float 0x3FCF19F800000000, float 0xBFE11EB420000000, float 0xBFD4135DA0000000, float 0xBFEFC26560000000, float 0x3FE72D0800000000, float 0xBFE7B5DEE0000000, float 0xBFED413560000000, float 0x3FD4135DA0000000, float 0xBFE1734D60000000, float 0xBFD04FB980000000, float 0xBFEF97F840000000, float 0x3FE8FBCC20000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE57D6940000000, float 0xBFEDDB1420000000, float 0x3FDCC66D40000000, float 0xBFE21A7A00000000, float 0xBFC139F340000000, float 0xBFEF225320000000, float 0x3FEC08C400000000, float 0xBFE44CF280000000, float 0xBFEE2120E0000000, float 0x3FE0738820000000, float 0xBFE26D04E0000000, float 0xBFB2D527E0000000, float 0xBFEED740C0000000, float 0x3FED413560000000, float 0xBFE30FF760000000, float 0xBFEE628880000000, float 0x3FE26D04E0000000, float 0xBFE2BEDB80000000, float 0xBF89221000000000, float 0xBFEE817BA0000000, float 0x3FEE4269A0000000, float 0xBFE1C73AC0000000, float 0xBFEE9F40A0000000, float 0x3FE44CF280000000, float 0xBFE30FF760000000, float 0x3FA91F70E0000000, float 0xBFEE2120E0000000, float 0x3FEF0A7E80000000, float 0xBFE0738820000000, float 0xBFEED740C0000000, float 0x3FE610B840000000, float 0xBFE36058A0000000, float 0x3FBC378240000000, float 0xBFEDB65240000000, float 0x3FEF97F840000000, float 0xBFDE2B5E60000000, float 0xBFEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0xBFE3AFFB00000000, float 0x3FC5E21540000000, float 0xBFED413560000000, float 0x3FEFE9CCC0000000, float 0xBFDB5D0FA0000000, float 0xBFEF38F360000000, float 0x3FE93A2160000000, float 0xBFE3FED840000000, float 0x3FCD934F00000000, float 0xBFECC1F000000000, float 0x3FEFFF62C0000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFD58F9B20000000, float 0xBFEF8765C0000000, float 0x3FEBD7C0C0000000, float 0xBFE49A45A0000000, float 0x3FD64C7F40000000, float 0xBFEBA5AAC0000000, float 0x3FEF7598A0000000, float 0xBFD2940780000000, float 0xBFEFA75680000000, float 0x3FECED7A60000000, float 0xBFE4E6CB20000000, float 0x3FD9EF7800000000, float 0xBFEB090B40000000, float 0x3FEED740C0000000, float 0xBFCF19F800000000, float 0xBFEFC26560000000, float 0x3FEDDB1420000000, float 0xBFE5328300000000, float 0x3FDD7978A0000000, float 0xBFEA630880000000, float 0x3FEDFEAE60000000, float 0xBFC8F8B580000000, float 0xBFEFD88E40000000, float 0x3FEE9F40A0000000, float 0xBFE57D6940000000, float 0x3FE0738820000000, float 0xBFE9B3E140000000, float 0x3FECED7A60000000, float 0xBFC2C80C80000000, float 0xBFEFE9CCC0000000, float 0x3FEF38F360000000, float 0xBFE5C77BC0000000, float 0x3FE21A7A00000000, float 0xBFE8FBCC20000000, float 0x3FEBA5AAC0000000, float 0xBFB917A460000000, float 0xBFEFF620E0000000, float 0x3FEFA75680000000, float 0xBFE610B840000000, float 0x3FE3AFFB00000000, float 0xBFE83B0E60000000, float 0x3FEA29A800000000, float 0xBFA91F70E0000000, float 0xBFEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0xBFE65918A0000000, float 0x3FE5328300000000, float 0xBFE771E6C0000000, float 0x3FE87C3F80000000], align 16
@__const.main.cos_64 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000], align 16
@__const.main.cos_512 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEFF620E0000000, float 0x3FEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0x3FEFFF62C0000000, float 0x3FEFF09520000000, float 0x3FEFFA7220000000, float 0x3FEFE1CBC0000000, float 0x3FEFD88E40000000, float 0x3FEFF620E0000000, float 0x3FEFA75680000000, float 0x3FEFFD88C0000000, float 0x3FEFC26560000000, float 0x3FEFE9CCC0000000, float 0x3FEF8765C0000000, float 0x3FEFA75680000000, float 0x3FEFE9CCC0000000, float 0x3FEF38F360000000, float 0x3FEFFA7220000000, float 0x3FEF7598A0000000, float 0x3FEFCE1600000000, float 0x3FEEF177A0000000, float 0x3FEF629740000000, float 0x3FEFD88E40000000, float 0x3FEE9F40A0000000, float 0x3FEFF620E0000000, float 0x3FEF0A7E80000000, float 0x3FEFA75680000000, float 0x3FEE2120E0000000, float 0x3FEF0A7E80000000, float 0x3FEFC26560000000, float 0x3FEDDB1420000000, float 0x3FEFF09520000000, float 0x3FEE817BA0000000, float 0x3FEF7598A0000000, float 0x3FED17E780000000, float 0x3FEE9F40A0000000, float 0x3FEFA75680000000, float 0x3FECED7A60000000, float 0x3FEFE9CCC0000000, float 0x3FEDDB1420000000, float 0x3FEF38F360000000, float 0x3FEBD7C0C0000000, float 0x3FEE2120E0000000, float 0x3FEF8765C0000000, float 0x3FEBD7C0C0000000, float 0x3FEFE1CBC0000000, float 0x3FED17E780000000, float 0x3FEEF177A0000000, float 0x3FEA630880000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FECED7A60000000, float 0x3FEF38F360000000, float 0x3FE93A2160000000, float 0x3FEFCE1600000000, float 0x3FEB3E4CE0000000, float 0x3FEE4269A0000000, float 0x3FE6E744C0000000, float 0x3FEC38B260000000, float 0x3FEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0x3FEFC26560000000, float 0x3FEA29A800000000, float 0x3FEDDB1420000000, float 0x3FE4E6CB20000000, float 0x3FEB728420000000, float 0x3FEED740C0000000, float 0x3FE610B840000000, float 0x3FEFB57A40000000, float 0x3FE8FBCC20000000, float 0x3FED6961C0000000, float 0x3FE2BEDB80000000, float 0x3FEA9B6700000000, float 0x3FEE9F40A0000000, float 0x3FE44CF280000000, float 0x3FEFA75680000000, float 0x3FE7B5DEE0000000, float 0x3FECED7A60000000, float 0x3FE0738820000000, float 0x3FE9B3E140000000, float 0x3FEE628880000000, float 0x3FE26D04E0000000, float 0x3FEF97F840000000, float 0x3FE65918A0000000, float 0x3FEC678C00000000, float 0x3FDC1248E0000000, float 0x3FE8BC7F80000000, float 0x3FEE2120E0000000, float 0x3FE0738820000000, float 0x3FEF8765C0000000, float 0x3FE4E6CB20000000, float 0x3FEBD7C0C0000000, float 0x3FD7088500000000, float 0x3FE7B5DEE0000000, float 0x3FEDDB1420000000, float 0x3FDCC66D40000000, float 0x3FEF7598A0000000, float 0x3FE36058A0000000, float 0x3FEB3E4CE0000000, float 0x3FD1D34580000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FE57D6940000000, float 0x3FED413560000000, float 0x3FD4135DA0000000, float 0x3FEF4E5F80000000, float 0x3FE01CFBC0000000, float 0x3FE9EF4380000000, float 0x3FBC378240000000, float 0x3FE44CF280000000, float 0x3FECED7A60000000, float 0x3FCF19F800000000, float 0x3FEF38F360000000, float 0x3FDCC66D40000000, float 0x3FE93A2160000000, float 0x3F992146A0000000, float 0x3FE30FF760000000, float 0x3FEC954A80000000, float 0x3FC5E21540000000, float 0x3FEF225320000000, float 0x3FD9372A40000000, float 0x3FE87C3F80000000, float 0xBFAF657760000000, float 0x3FE1C73AC0000000, float 0x3FEC38B260000000, float 0x3FB917A460000000, float 0x3FEF0A7E80000000, float 0x3FD58F9B20000000, float 0x3FE7B5DEE0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0x3FEBD7C0C0000000, float 0x3F992146A0000000, float 0x3FEEF177A0000000, float 0x3FD1D34580000000, float 0x3FE6E744C0000000, float 0xBFCD934F00000000, float 0x3FDE2B5E60000000, float 0x3FEB728420000000, float 0xBFA91F70E0000000, float 0x3FEED740C0000000, float 0x3FCC0B8060000000, float 0x3FE610B840000000, float 0xBFD4135DA0000000, float 0x3FDB5D0FA0000000, float 0x3FEB090B40000000, float 0xBFBF5653C0000000, float 0x3FEEBBD9C0000000, float 0x3FC4557580000000, float 0x3FE5328300000000, float 0xBFD9372A40000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FD58F9B20000000, float 0x3FEA29A800000000, float 0xBFD111D360000000, float 0x3FEE817BA0000000, float 0x3FA2D85E00000000, float 0x3FE36058A0000000, float 0xBFE1734D60000000, float 0x3FD2940780000000, float 0x3FE9B3E140000000, float 0xBFD58F9B20000000, float 0x3FEE628880000000, float 0xBF992146A0000000, float 0x3FE26D04E0000000, float 0xBFE3AFFB00000000, float 0x3FCF19F800000000, float 0x3FE93A2160000000, float 0xBFD9EF7800000000, float 0x3FEE4269A0000000, float 0xBFB5F6CAC0000000, float 0x3FE1734D60000000, float 0xBFE5C77BC0000000, float 0x3FC8F8B580000000, float 0x3FE8BC7F80000000, float 0xBFDE2B5E60000000, float 0x3FEE2120E0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0xBFE7B5DEE0000000, float 0x3FC2C80C80000000, float 0x3FE83B0E60000000, float 0xBFE11EB420000000, float 0x3FEDFEAE60000000, float 0xBFCA829D00000000, float 0x3FDEDC1A40000000, float 0xBFE9777F20000000, float 0x3FB917A460000000, float 0x3FE7B5DEE0000000, float 0xBFE30FF760000000, float 0x3FEDDB1420000000, float 0xBFD111D360000000, float 0x3FDCC66D40000000, float 0xBFEB090B40000000, float 0x3FA91F70E0000000, float 0x3FE72D0800000000, float 0xBFE4E6CB20000000, float 0x3FEDB65240000000, float 0xBFD4D1E100000000, float 0x3FDAA6CA00000000, float 0xBFEC678C00000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFA91F70E0000000, float 0x3FE610B840000000, float 0xBFE83B0E60000000, float 0x3FED6961C0000000, float 0xBFDC1248E0000000, float 0x3FD64C7F40000000, float 0xBFEE817BA0000000, float 0xBFB917A460000000, float 0x3FE57D6940000000, float 0xBFE9B3E140000000, float 0x3FED413560000000, float 0xBFDF8BA400000000, float 0x3FD4135DA0000000, float 0xBFEF38F360000000, float 0xBFC2C80C80000000, float 0x3FE4E6CB20000000, float 0xBFEB090B40000000, float 0x3FED17E780000000, float 0xBFE1734D60000000, float 0x3FD1D34580000000, float 0xBFEFB57A40000000, float 0xBFC8F8B580000000, float 0x3FE44CF280000000, float 0xBFEC38B260000000, float 0x3FECED7A60000000, float 0xBFE30FF760000000, float 0x3FCF19F800000000, float 0xBFEFF620E0000000, float 0xBFCF19F800000000, float 0x3FE3AFFB00000000, float 0xBFED413560000000, float 0x3FECC1F000000000, float 0xBFE49A45A0000000, float 0x3FCA829D00000000, float 0xBFEFFA7220000000, float 0xBFD2940780000000, float 0x3FE30FF760000000, float 0xBFEE2120E0000000, float 0x3FEC954A80000000, float 0xBFE610B840000000, float 0x3FC5E21540000000, float 0xBFEFC26560000000, float 0xBFD58F9B20000000, float 0x3FE26D04E0000000, float 0xBFEED740C0000000, float 0x3FEC678C00000000, float 0xBFE771E6C0000000, float 0x3FC139F340000000, float 0xBFEF4E5F80000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFDB5D0FA0000000, float 0x3FE11EB420000000, float 0xBFEFC26560000000, float 0x3FEC08C400000000, float 0xBFE9EF4380000000, float 0x3FAF657760000000, float 0xBFEDB65240000000, float 0xBFDE2B5E60000000, float 0x3FE0738820000000, float 0xBFEFF620E0000000, float 0x3FEBD7C0C0000000, float 0xBFEB090B40000000, float 0x3F992146A0000000, float 0xBFEC954A80000000, float 0xBFE0738820000000, float 0x3FDF8BA400000000, float 0xBFEFFD88C0000000, float 0x3FEBA5AAC0000000, float 0xBFEC08C400000000, float 0xBF89221000000000, float 0xBFEB3E4CE0000000, float 0xBFE1C73AC0000000, float 0x3FDE2B5E60000000, float 0xBFEFD88E40000000, float 0x3FEB728420000000, float 0xBFECED7A60000000, float 0xBFA91F70E0000000, float 0xBFE9B3E140000000, float 0xBFE30FF760000000, float 0x3FDCC66D40000000, float 0xBFEF8765C0000000, float 0x3FEB3E4CE0000000, float 0xBFEDB65240000000, float 0xBFB5F6CAC0000000, float 0xBFE7F8EC00000000, float 0xBFE44CF280000000, float 0x3FDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0x3FEB090B40000000, float 0xBFEE628880000000, float 0xBFBF5653C0000000, float 0xBFE610B840000000, float 0xBFE57D6940000000, float 0x3FD9EF7800000000, float 0xBFEE628880000000, float 0x3FEAD2BD40000000, float 0xBFEEF177A0000000, float 0xBFC4557580000000, float 0xBFE3FED840000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE7B5DEE0000000, float 0x3FD7088500000000, float 0xBFEC954A80000000, float 0x3FEA630880000000, float 0xBFEFB57A40000000, float 0xBFCD934F00000000, float 0xBFDEDC1A40000000, float 0xBFE8BC7F80000000, float 0x3FD58F9B20000000, float 0xBFEB728420000000, float 0x3FEA29A800000000, float 0xBFEFE9CCC0000000, float 0xBFD111D360000000, float 0xBFD9EF7800000000, float 0xBFE9B3E140000000, float 0x3FD4135DA0000000, float 0xBFEA29A800000000, float 0x3FE9EF4380000000, float 0xBFEFFF62C0000000, float 0xBFD3541100000000, float 0xBFD4D1E100000000, float 0xBFEA9B6700000000, float 0x3FD2940780000000, float 0xBFE8BC7F80000000, float 0x3FE9B3E140000000, float 0xBFEFF620E0000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFEB728420000000, float 0x3FD111D360000000, float 0xBFE72D0800000000, float 0x3FE9777F20000000, float 0xBFEFCE1600000000, float 0xBFD7C3A860000000, float 0xBFC4557580000000, float 0xBFEC38B260000000, float 0x3FCF19F800000000, float 0xBFE57D6940000000, float 0x3FE93A2160000000, float 0xBFEF8765C0000000, float 0xBFD9EF7800000000, float 0xBFB2D527E0000000, float 0xBFECED7A60000000, float 0x3FCC0B8060000000, float 0xBFE3AFFB00000000, float 0x3FE8FBCC20000000, float 0xBFEF225320000000, float 0xBFDC1248E0000000, float 0x3F89221000000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFEE2120E0000000, float 0x3FC5E21540000000, float 0xBFDF8BA400000000, float 0x3FE87C3F80000000, float 0xBFEDFEAE60000000, float 0xBFE01CFBC0000000, float 0x3FC76DDAC0000000, float 0xBFEE9F40A0000000, float 0x3FC2C80C80000000, float 0xBFDB5D0FA0000000, float 0x3FE83B0E60000000, float 0xBFED413560000000, float 0xBFE11EB420000000, float 0x3FD111D360000000, float 0xBFEF0A7E80000000, float 0x3FBF5653C0000000, float 0xBFD7088500000000, float 0x3FE7F8EC00000000, float 0xBFEC678C00000000, float 0xBFE21A7A00000000, float 0x3FD64C7F40000000, float 0xBFEF629740000000, float 0x3FB917A460000000, float 0xBFD2940780000000, float 0x3FE7B5DEE0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0x3FDB5D0FA0000000, float 0xBFEFA75680000000, float 0x3FB2D527E0000000, float 0xBFCC0B8060000000, float 0x3FE771E6C0000000, float 0xBFEA630880000000, float 0xBFE3FED840000000, float 0x3FE01CFBC0000000, float 0xBFEFD88E40000000, float 0x3FA91F70E0000000, float 0xBFC2C80C80000000, float 0x3FE72D0800000000, float 0xBFE93A2160000000, float 0xBFE4E6CB20000000, float 0x3FE26D04E0000000, float 0xBFEFF620E0000000, float 0x3F992146A0000000, float 0xBFB2D527E0000000, float 0x3FE6E744C0000000, float 0xBFE7F8EC00000000, float 0xBFE5C77BC0000000, float 0x3FE49A45A0000000], align 16
@__const.main.reversed = private unnamed_addr constant [8 x i32] [i32 0, i32 4, i32 2, i32 6, i32 1, i32 5, i32 3, i32 7], align 16
@.str = private unnamed_addr constant [16 x i8] c"x = %i y = %i \0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc332
  %indvars.iv21 = phi i64 [ 0, %entry ], [ %indvars.iv.next22, %for.inc332 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv, 6
  %1 = add nuw nsw i64 %0, %indvars.iv21
  %arrayidx = getelementptr inbounds i32, i32* %work_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %3 = shl nsw i64 %indvars.iv, 6
  %4 = add nuw nsw i64 %3, %indvars.iv21
  %arrayidx9 = getelementptr inbounds i32, i32* %work_y, i64 %4
  %5 = load i32, i32* %arrayidx9, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %5, i32* %arrayidx11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !2

for.end:                                          ; preds = %for.body3
  %6 = load i32, i32* %data_x, align 4
  %7 = load i32, i32* %data_y, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4
  %8 = load i32, i32* %arrayidx14, align 4
  %add15 = add nsw i32 %6, %8
  store i32 %add15, i32* %data_x, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4
  %9 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %7, %9
  store i32 %add18, i32* %data_y, align 4
  %arrayidx20 = getelementptr inbounds i32, i32* %data_x, i64 4
  %10 = load i32, i32* %arrayidx20, align 4
  %sub = sub nsw i32 %6, %10
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %sub, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 4
  %11 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %7, %11
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %sub23, i32* %arrayidx24, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1
  %12 = load i32, i32* %arrayidx26, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1
  %13 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5
  %14 = load i32, i32* %arrayidx29, align 4
  %add30 = add nsw i32 %12, %14
  %arrayidx31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add30, i32* %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5
  %15 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %13, %15
  %arrayidx34 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add33, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 5
  %16 = load i32, i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %12, %16
  %arrayidx37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub36, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 5
  %17 = load i32, i32* %arrayidx38, align 4
  %sub39 = sub nsw i32 %13, %17
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub39, i32* %arrayidx40, align 4
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2
  %18 = load i32, i32* %arrayidx42, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2
  %19 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %20 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %18, %20
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add46, i32* %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6
  %21 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %19, %21
  %arrayidx50 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add49, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 6
  %22 = load i32, i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %18, %22
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub52, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %sub55 = sub nsw i32 %19, %23
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub55, i32* %arrayidx56, align 4
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3
  %24 = load i32, i32* %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7
  %26 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %24, %26
  %arrayidx63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %add62, i32* %arrayidx63, align 4
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7
  %27 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %25, %27
  %arrayidx66 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %add65, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds i32, i32* %data_x, i64 7
  %28 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %24, %28
  %arrayidx69 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds i32, i32* %data_y, i64 7
  %29 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %25, %29
  %arrayidx72 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub71, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds i32, i32* %data_x, i64 5
  %30 = load i32, i32* %arrayidx73, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %data_y, i64 5
  %31 = load i32, i32* %arrayidx76, align 4
  %sub78 = add nsw i32 %30, %31
  %conv = sitofp i32 %sub78 to float
  %mul79 = fmul float %conv, 0x3FE6A09E60000000
  %conv80 = fptosi float %mul79 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4
  %arrayidx83 = getelementptr inbounds i32, i32* %data_y, i64 5
  %32 = load i32, i32* %arrayidx83, align 4
  %add85 = sub i32 %32, %30
  %conv86 = sitofp i32 %add85 to float
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000
  %conv88 = fptosi float %mul87 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %conv88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds i32, i32* %data_x, i64 6
  %33 = load i32, i32* %arrayidx90, align 4
  %arrayidx93 = getelementptr inbounds i32, i32* %data_y, i64 6
  %34 = load i32, i32* %arrayidx93, align 4
  %arrayidx96 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %34, i32* %arrayidx96, align 4
  %mul97 = sub nsw i32 0, %33
  %arrayidx101 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %mul97, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds i32, i32* %data_x, i64 7
  %35 = load i32, i32* %arrayidx102, align 4
  %arrayidx105 = getelementptr inbounds i32, i32* %data_y, i64 7
  %36 = load i32, i32* %arrayidx105, align 4
  %sub107 = sub i32 %36, %35
  %conv108 = sitofp i32 %sub107 to float
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000
  %conv110 = fptosi float %mul109 to i32
  %arrayidx111 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %conv110, i32* %arrayidx111, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %data_y, i64 7
  %37 = load i32, i32* %arrayidx113, align 4
  %38 = add i32 %35, %37
  %add115 = sub i32 0, %38
  %conv116 = sitofp i32 %add115 to float
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000
  %conv118 = fptosi float %mul117 to i32
  %arrayidx119 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %conv118, i32* %arrayidx119, align 4
  %39 = load i32, i32* %data_x, align 4
  %40 = load i32, i32* %data_y, align 4
  %arrayidx124 = getelementptr inbounds i32, i32* %data_x, i64 2
  %41 = load i32, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %39, %41
  store i32 %add125, i32* %data_x, align 4
  %arrayidx127 = getelementptr inbounds i32, i32* %data_y, i64 2
  %42 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %40, %42
  store i32 %add128, i32* %data_y, align 4
  %arrayidx130 = getelementptr inbounds i32, i32* %data_x, i64 2
  %43 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub nsw i32 %39, %43
  %arrayidx132 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %sub131, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %data_y, i64 2
  %44 = load i32, i32* %arrayidx133, align 4
  %sub134 = sub nsw i32 %40, %44
  %arrayidx135 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %sub134, i32* %arrayidx135, align 4
  %arrayidx137 = getelementptr inbounds i32, i32* %data_x, i64 1
  %45 = load i32, i32* %arrayidx137, align 4
  %arrayidx139 = getelementptr inbounds i32, i32* %data_y, i64 1
  %46 = load i32, i32* %arrayidx139, align 4
  %arrayidx140 = getelementptr inbounds i32, i32* %data_x, i64 3
  %47 = load i32, i32* %arrayidx140, align 4
  %add141 = add nsw i32 %45, %47
  %arrayidx142 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add141, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds i32, i32* %data_y, i64 3
  %48 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %46, %48
  %arrayidx145 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %data_x, i64 3
  %49 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub nsw i32 %45, %49
  %arrayidx148 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub147, i32* %arrayidx148, align 4
  %arrayidx149 = getelementptr inbounds i32, i32* %data_y, i64 3
  %50 = load i32, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %46, %50
  %arrayidx151 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub150, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %data_x, i64 3
  %51 = load i32, i32* %arrayidx152, align 4
  %arrayidx158 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub150, i32* %arrayidx158, align 4
  %mul159 = sub nsw i32 0, %51
  %arrayidx163 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %mul159, i32* %arrayidx163, align 4
  %52 = load i32, i32* %data_x, align 4
  %53 = load i32, i32* %data_y, align 4
  %arrayidx168 = getelementptr inbounds i32, i32* %data_x, i64 1
  %54 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %52, %54
  store i32 %add169, i32* %data_x, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %data_y, i64 1
  %55 = load i32, i32* %arrayidx171, align 4
  %add172 = add nsw i32 %53, %55
  store i32 %add172, i32* %data_y, align 4
  %arrayidx174 = getelementptr inbounds i32, i32* %data_x, i64 1
  %56 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %52, %56
  %arrayidx176 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %sub175, i32* %arrayidx176, align 4
  %arrayidx177 = getelementptr inbounds i32, i32* %data_y, i64 1
  %57 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %53, %57
  %arrayidx179 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %sub178, i32* %arrayidx179, align 4
  %arrayidx181 = getelementptr inbounds i32, i32* %data_x, i64 2
  %58 = load i32, i32* %arrayidx181, align 4
  %arrayidx183 = getelementptr inbounds i32, i32* %data_y, i64 2
  %59 = load i32, i32* %arrayidx183, align 4
  %arrayidx184 = getelementptr inbounds i32, i32* %data_x, i64 3
  %60 = load i32, i32* %arrayidx184, align 4
  %add185 = add nsw i32 %58, %60
  %arrayidx186 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add185, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %data_y, i64 3
  %61 = load i32, i32* %arrayidx187, align 4
  %add188 = add nsw i32 %59, %61
  %arrayidx189 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %data_x, i64 3
  %62 = load i32, i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 %58, %62
  %arrayidx192 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub191, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds i32, i32* %data_y, i64 3
  %63 = load i32, i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 %59, %63
  %arrayidx195 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub194, i32* %arrayidx195, align 4
  %arrayidx200 = getelementptr inbounds i32, i32* %data_x, i64 4
  %64 = load i32, i32* %arrayidx200, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %data_y, i64 4
  %65 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds i32, i32* %data_x, i64 6
  %66 = load i32, i32* %arrayidx203, align 4
  %add204 = add nsw i32 %64, %66
  %arrayidx205 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds i32, i32* %data_y, i64 6
  %67 = load i32, i32* %arrayidx206, align 4
  %add207 = add nsw i32 %65, %67
  %arrayidx208 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add207, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %data_x, i64 6
  %68 = load i32, i32* %arrayidx209, align 4
  %sub210 = sub nsw i32 %64, %68
  %arrayidx211 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub210, i32* %arrayidx211, align 4
  %arrayidx212 = getelementptr inbounds i32, i32* %data_y, i64 6
  %69 = load i32, i32* %arrayidx212, align 4
  %sub213 = sub nsw i32 %65, %69
  %arrayidx214 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub213, i32* %arrayidx214, align 4
  %arrayidx216 = getelementptr inbounds i32, i32* %data_x, i64 5
  %70 = load i32, i32* %arrayidx216, align 4
  %arrayidx218 = getelementptr inbounds i32, i32* %data_y, i64 5
  %71 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds i32, i32* %data_x, i64 7
  %72 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %70, %72
  %arrayidx221 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %add220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds i32, i32* %data_y, i64 7
  %73 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %71, %73
  %arrayidx224 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %add223, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds i32, i32* %data_x, i64 7
  %74 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %70, %74
  %arrayidx227 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub226, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %data_y, i64 7
  %75 = load i32, i32* %arrayidx228, align 4
  %sub229 = sub nsw i32 %71, %75
  %arrayidx230 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub229, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds i32, i32* %data_x, i64 7
  %76 = load i32, i32* %arrayidx231, align 4
  %arrayidx237 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub229, i32* %arrayidx237, align 4
  %mul238 = sub nsw i32 0, %76
  %arrayidx242 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %mul238, i32* %arrayidx242, align 4
  %arrayidx244 = getelementptr inbounds i32, i32* %data_x, i64 4
  %77 = load i32, i32* %arrayidx244, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %data_y, i64 4
  %78 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %data_x, i64 5
  %79 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %77, %79
  %arrayidx249 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds i32, i32* %data_y, i64 5
  %80 = load i32, i32* %arrayidx250, align 4
  %add251 = add nsw i32 %78, %80
  %arrayidx252 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add251, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds i32, i32* %data_x, i64 5
  %81 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %77, %81
  %arrayidx255 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub254, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds i32, i32* %data_y, i64 5
  %82 = load i32, i32* %arrayidx256, align 4
  %sub257 = sub nsw i32 %78, %82
  %arrayidx258 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub257, i32* %arrayidx258, align 4
  %arrayidx260 = getelementptr inbounds i32, i32* %data_x, i64 6
  %83 = load i32, i32* %arrayidx260, align 4
  %arrayidx262 = getelementptr inbounds i32, i32* %data_y, i64 6
  %84 = load i32, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds i32, i32* %data_x, i64 7
  %85 = load i32, i32* %arrayidx263, align 4
  %add264 = add nsw i32 %83, %85
  %arrayidx265 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %data_y, i64 7
  %86 = load i32, i32* %arrayidx266, align 4
  %add267 = add nsw i32 %84, %86
  %arrayidx268 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %add267, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds i32, i32* %data_x, i64 7
  %87 = load i32, i32* %arrayidx269, align 4
  %sub270 = sub nsw i32 %83, %87
  %arrayidx271 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub270, i32* %arrayidx271, align 4
  %arrayidx272 = getelementptr inbounds i32, i32* %data_y, i64 7
  %88 = load i32, i32* %arrayidx272, align 4
  %sub273 = sub nsw i32 %84, %88
  %arrayidx274 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub273, i32* %arrayidx274, align 4
  br label %for.body278

for.body278:                                      ; preds = %for.end, %for.body278
  %indvars.iv9 = phi i64 [ 1, %for.end ], [ %indvars.iv.next10, %for.body278 ]
  %89 = mul nuw nsw i64 %indvars.iv21, 7
  %90 = add nuw nsw i64 %89, %indvars.iv9
  %91 = add nsw i64 %90, -1
  %arrayidx284 = getelementptr inbounds float, float* %cos_512, i64 %91
  %92 = load float, float* %arrayidx284, align 4
  %conv285 = fptosi float %92 to i32
  %93 = mul nuw nsw i64 %indvars.iv21, 7
  %94 = add nuw nsw i64 %93, %indvars.iv9
  %95 = add nsw i64 %94, -1
  %arrayidx290 = getelementptr inbounds float, float* %sin_512, i64 %95
  %96 = load float, float* %arrayidx290, align 4
  %conv291 = fptosi float %96 to i32
  %arrayidx293 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv9
  %97 = load i32, i32* %arrayidx293, align 4
  %arrayidx295 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv9
  %98 = load i32, i32* %arrayidx295, align 4
  %mul296 = mul nsw i32 %98, %conv285
  %arrayidx298 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv9
  %99 = load i32, i32* %arrayidx298, align 4
  %mul299 = mul nsw i32 %99, %conv291
  %sub300 = sub nsw i32 %mul296, %mul299
  %arrayidx302 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv9
  store i32 %sub300, i32* %arrayidx302, align 4
  %mul303 = mul nsw i32 %97, %conv291
  %arrayidx305 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv9
  %100 = load i32, i32* %arrayidx305, align 4
  %mul306 = mul nsw i32 %100, %conv285
  %add307 = add nsw i32 %mul303, %mul306
  %arrayidx309 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv9
  store i32 %add307, i32* %arrayidx309, align 4
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond15 = icmp ne i64 %indvars.iv.next10, 8
  br i1 %exitcond15, label %for.body278, label %for.body316.preheader, !llvm.loop !4

for.body316.preheader:                            ; preds = %for.body278
  br label %for.body316

for.body316:                                      ; preds = %for.body316.preheader, %for.body316
  %indvars.iv16 = phi i64 [ 0, %for.body316.preheader ], [ %indvars.iv.next17, %for.body316 ]
  %arrayidx318 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv16
  %101 = load i32, i32* %arrayidx318, align 4
  %102 = shl nsw i64 %indvars.iv21, 3
  %103 = add nuw nsw i64 %102, %indvars.iv16
  %arrayidx322 = getelementptr inbounds i32, i32* %DATA_x, i64 %103
  store i32 %101, i32* %arrayidx322, align 4
  %arrayidx324 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv16
  %104 = load i32, i32* %arrayidx324, align 4
  %105 = shl nsw i64 %indvars.iv21, 3
  %106 = add nuw nsw i64 %105, %indvars.iv16
  %arrayidx328 = getelementptr inbounds i32, i32* %DATA_y, i64 %106
  store i32 %104, i32* %arrayidx328, align 4
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %exitcond20 = icmp ne i64 %indvars.iv.next17, 8
  br i1 %exitcond20, label %for.body316, label %for.inc332, !llvm.loop !5

for.inc332:                                       ; preds = %for.body316
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1
  %exitcond27 = icmp ne i64 %indvars.iv.next22, 64
  br i1 %exitcond27, label %for.body, label %for.end334, !llvm.loop !6

for.end334:                                       ; preds = %for.inc332
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step2(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !7

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 66
  %add19 = add nuw nsw i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 132
  %add27 = add nuw nsw i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 198
  %add35 = add nuw nsw i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 264
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 330
  %add51 = add nuw nsw i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 396
  %add59 = add nuw nsw i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 462
  %add67 = add nuw nsw i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !8

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step3(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !9

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nuw nsw i32 %and, 66
  %add8 = add nuw nsw i32 %mul6, %4
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_x, align 4
  %mul12 = mul nuw nsw i32 %and, 66
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = add nuw nsw i32 %add13, %4
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nuw nsw i32 %and, 66
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = add nuw nsw i32 %add19, %4
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nuw nsw i32 %and, 66
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = add nuw nsw i32 %add25, %4
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nuw nsw i32 %and, 66
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = add nuw nsw i32 %add31, %4
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nuw nsw i32 %and, 66
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = add nuw nsw i32 %add37, %4
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nuw nsw i32 %and, 66
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = add nuw nsw i32 %add43, %4
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nuw nsw i32 %and, 66
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = add nuw nsw i32 %add49, %4
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_x, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !10

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !11

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step4(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !12

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 66
  %add19 = add nuw nsw i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 132
  %add27 = add nuw nsw i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 198
  %add35 = add nuw nsw i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 264
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 330
  %add51 = add nuw nsw i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 396
  %add59 = add nuw nsw i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 462
  %add67 = add nuw nsw i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !13

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step5(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !14

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nuw nsw i32 %and, 66
  %add8 = add nuw nsw i32 %mul6, %4
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_y, align 4
  %mul12 = mul nuw nsw i32 %and, 66
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = add nuw nsw i32 %add13, %4
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nuw nsw i32 %and, 66
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = add nuw nsw i32 %add19, %4
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nuw nsw i32 %and, 66
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = add nuw nsw i32 %add25, %4
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nuw nsw i32 %and, 66
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = add nuw nsw i32 %add31, %4
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nuw nsw i32 %and, 66
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = add nuw nsw i32 %add37, %4
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nuw nsw i32 %and, 66
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = add nuw nsw i32 %add43, %4
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nuw nsw i32 %and, 66
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = add nuw nsw i32 %add49, %4
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_y, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !15

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !16

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step6(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc332
  %indvars.iv19 = phi i64 [ 0, %entry ], [ %indvars.iv.next20, %for.inc332 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv19, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %3 = shl nsw i64 %indvars.iv19, 3
  %4 = add nuw nsw i64 %3, %indvars.iv
  %arrayidx9 = getelementptr inbounds i32, i32* %DATA_y, i64 %4
  %5 = load i32, i32* %arrayidx9, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %5, i32* %arrayidx11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !17

for.end:                                          ; preds = %for.body3
  %6 = load i32, i32* %data_x, align 4
  %7 = load i32, i32* %data_y, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4
  %8 = load i32, i32* %arrayidx14, align 4
  %add15 = add nsw i32 %6, %8
  store i32 %add15, i32* %data_x, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4
  %9 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %7, %9
  store i32 %add18, i32* %data_y, align 4
  %arrayidx20 = getelementptr inbounds i32, i32* %data_x, i64 4
  %10 = load i32, i32* %arrayidx20, align 4
  %sub = sub nsw i32 %6, %10
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %sub, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 4
  %11 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %7, %11
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %sub23, i32* %arrayidx24, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1
  %12 = load i32, i32* %arrayidx26, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1
  %13 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5
  %14 = load i32, i32* %arrayidx29, align 4
  %add30 = add nsw i32 %12, %14
  %arrayidx31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add30, i32* %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5
  %15 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %13, %15
  %arrayidx34 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add33, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 5
  %16 = load i32, i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %12, %16
  %arrayidx37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub36, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 5
  %17 = load i32, i32* %arrayidx38, align 4
  %sub39 = sub nsw i32 %13, %17
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub39, i32* %arrayidx40, align 4
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2
  %18 = load i32, i32* %arrayidx42, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2
  %19 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %20 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %18, %20
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add46, i32* %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6
  %21 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %19, %21
  %arrayidx50 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add49, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 6
  %22 = load i32, i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %18, %22
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub52, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %sub55 = sub nsw i32 %19, %23
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub55, i32* %arrayidx56, align 4
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3
  %24 = load i32, i32* %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7
  %26 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %24, %26
  %arrayidx63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %add62, i32* %arrayidx63, align 4
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7
  %27 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %25, %27
  %arrayidx66 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %add65, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds i32, i32* %data_x, i64 7
  %28 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %24, %28
  %arrayidx69 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds i32, i32* %data_y, i64 7
  %29 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %25, %29
  %arrayidx72 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub71, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds i32, i32* %data_x, i64 5
  %30 = load i32, i32* %arrayidx73, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %data_y, i64 5
  %31 = load i32, i32* %arrayidx76, align 4
  %sub78 = add nsw i32 %30, %31
  %conv = sitofp i32 %sub78 to float
  %mul79 = fmul float %conv, 0x3FE6A09E60000000
  %conv80 = fptosi float %mul79 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4
  %arrayidx83 = getelementptr inbounds i32, i32* %data_y, i64 5
  %32 = load i32, i32* %arrayidx83, align 4
  %add85 = sub i32 %32, %30
  %conv86 = sitofp i32 %add85 to float
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000
  %conv88 = fptosi float %mul87 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %conv88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds i32, i32* %data_x, i64 6
  %33 = load i32, i32* %arrayidx90, align 4
  %arrayidx93 = getelementptr inbounds i32, i32* %data_y, i64 6
  %34 = load i32, i32* %arrayidx93, align 4
  %arrayidx96 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %34, i32* %arrayidx96, align 4
  %mul97 = sub nsw i32 0, %33
  %arrayidx101 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %mul97, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds i32, i32* %data_x, i64 7
  %35 = load i32, i32* %arrayidx102, align 4
  %arrayidx105 = getelementptr inbounds i32, i32* %data_y, i64 7
  %36 = load i32, i32* %arrayidx105, align 4
  %sub107 = sub i32 %36, %35
  %conv108 = sitofp i32 %sub107 to float
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000
  %conv110 = fptosi float %mul109 to i32
  %arrayidx111 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %conv110, i32* %arrayidx111, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %data_y, i64 7
  %37 = load i32, i32* %arrayidx113, align 4
  %38 = add i32 %35, %37
  %add115 = sub i32 0, %38
  %conv116 = sitofp i32 %add115 to float
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000
  %conv118 = fptosi float %mul117 to i32
  %arrayidx119 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %conv118, i32* %arrayidx119, align 4
  %39 = load i32, i32* %data_x, align 4
  %40 = load i32, i32* %data_y, align 4
  %arrayidx124 = getelementptr inbounds i32, i32* %data_x, i64 2
  %41 = load i32, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %39, %41
  store i32 %add125, i32* %data_x, align 4
  %arrayidx127 = getelementptr inbounds i32, i32* %data_y, i64 2
  %42 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %40, %42
  store i32 %add128, i32* %data_y, align 4
  %arrayidx130 = getelementptr inbounds i32, i32* %data_x, i64 2
  %43 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub nsw i32 %39, %43
  %arrayidx132 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %sub131, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %data_y, i64 2
  %44 = load i32, i32* %arrayidx133, align 4
  %sub134 = sub nsw i32 %40, %44
  %arrayidx135 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %sub134, i32* %arrayidx135, align 4
  %arrayidx137 = getelementptr inbounds i32, i32* %data_x, i64 1
  %45 = load i32, i32* %arrayidx137, align 4
  %arrayidx139 = getelementptr inbounds i32, i32* %data_y, i64 1
  %46 = load i32, i32* %arrayidx139, align 4
  %arrayidx140 = getelementptr inbounds i32, i32* %data_x, i64 3
  %47 = load i32, i32* %arrayidx140, align 4
  %add141 = add nsw i32 %45, %47
  %arrayidx142 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add141, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds i32, i32* %data_y, i64 3
  %48 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %46, %48
  %arrayidx145 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %data_x, i64 3
  %49 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub nsw i32 %45, %49
  %arrayidx148 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub147, i32* %arrayidx148, align 4
  %arrayidx149 = getelementptr inbounds i32, i32* %data_y, i64 3
  %50 = load i32, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %46, %50
  %arrayidx151 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub150, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %data_x, i64 3
  %51 = load i32, i32* %arrayidx152, align 4
  %arrayidx158 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub150, i32* %arrayidx158, align 4
  %mul159 = sub nsw i32 0, %51
  %arrayidx163 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %mul159, i32* %arrayidx163, align 4
  %52 = load i32, i32* %data_x, align 4
  %53 = load i32, i32* %data_y, align 4
  %arrayidx168 = getelementptr inbounds i32, i32* %data_x, i64 1
  %54 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %52, %54
  store i32 %add169, i32* %data_x, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %data_y, i64 1
  %55 = load i32, i32* %arrayidx171, align 4
  %add172 = add nsw i32 %53, %55
  store i32 %add172, i32* %data_y, align 4
  %arrayidx174 = getelementptr inbounds i32, i32* %data_x, i64 1
  %56 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %52, %56
  %arrayidx176 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %sub175, i32* %arrayidx176, align 4
  %arrayidx177 = getelementptr inbounds i32, i32* %data_y, i64 1
  %57 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %53, %57
  %arrayidx179 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %sub178, i32* %arrayidx179, align 4
  %arrayidx181 = getelementptr inbounds i32, i32* %data_x, i64 2
  %58 = load i32, i32* %arrayidx181, align 4
  %arrayidx183 = getelementptr inbounds i32, i32* %data_y, i64 2
  %59 = load i32, i32* %arrayidx183, align 4
  %arrayidx184 = getelementptr inbounds i32, i32* %data_x, i64 3
  %60 = load i32, i32* %arrayidx184, align 4
  %add185 = add nsw i32 %58, %60
  %arrayidx186 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add185, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %data_y, i64 3
  %61 = load i32, i32* %arrayidx187, align 4
  %add188 = add nsw i32 %59, %61
  %arrayidx189 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %data_x, i64 3
  %62 = load i32, i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 %58, %62
  %arrayidx192 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub191, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds i32, i32* %data_y, i64 3
  %63 = load i32, i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 %59, %63
  %arrayidx195 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub194, i32* %arrayidx195, align 4
  %arrayidx200 = getelementptr inbounds i32, i32* %data_x, i64 4
  %64 = load i32, i32* %arrayidx200, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %data_y, i64 4
  %65 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds i32, i32* %data_x, i64 6
  %66 = load i32, i32* %arrayidx203, align 4
  %add204 = add nsw i32 %64, %66
  %arrayidx205 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds i32, i32* %data_y, i64 6
  %67 = load i32, i32* %arrayidx206, align 4
  %add207 = add nsw i32 %65, %67
  %arrayidx208 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add207, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %data_x, i64 6
  %68 = load i32, i32* %arrayidx209, align 4
  %sub210 = sub nsw i32 %64, %68
  %arrayidx211 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub210, i32* %arrayidx211, align 4
  %arrayidx212 = getelementptr inbounds i32, i32* %data_y, i64 6
  %69 = load i32, i32* %arrayidx212, align 4
  %sub213 = sub nsw i32 %65, %69
  %arrayidx214 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub213, i32* %arrayidx214, align 4
  %arrayidx216 = getelementptr inbounds i32, i32* %data_x, i64 5
  %70 = load i32, i32* %arrayidx216, align 4
  %arrayidx218 = getelementptr inbounds i32, i32* %data_y, i64 5
  %71 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds i32, i32* %data_x, i64 7
  %72 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %70, %72
  %arrayidx221 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %add220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds i32, i32* %data_y, i64 7
  %73 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %71, %73
  %arrayidx224 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %add223, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds i32, i32* %data_x, i64 7
  %74 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %70, %74
  %arrayidx227 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub226, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %data_y, i64 7
  %75 = load i32, i32* %arrayidx228, align 4
  %sub229 = sub nsw i32 %71, %75
  %arrayidx230 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub229, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds i32, i32* %data_x, i64 7
  %76 = load i32, i32* %arrayidx231, align 4
  %arrayidx237 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub229, i32* %arrayidx237, align 4
  %mul238 = sub nsw i32 0, %76
  %arrayidx242 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %mul238, i32* %arrayidx242, align 4
  %arrayidx244 = getelementptr inbounds i32, i32* %data_x, i64 4
  %77 = load i32, i32* %arrayidx244, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %data_y, i64 4
  %78 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %data_x, i64 5
  %79 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %77, %79
  %arrayidx249 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds i32, i32* %data_y, i64 5
  %80 = load i32, i32* %arrayidx250, align 4
  %add251 = add nsw i32 %78, %80
  %arrayidx252 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add251, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds i32, i32* %data_x, i64 5
  %81 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %77, %81
  %arrayidx255 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub254, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds i32, i32* %data_y, i64 5
  %82 = load i32, i32* %arrayidx256, align 4
  %sub257 = sub nsw i32 %78, %82
  %arrayidx258 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub257, i32* %arrayidx258, align 4
  %arrayidx260 = getelementptr inbounds i32, i32* %data_x, i64 6
  %83 = load i32, i32* %arrayidx260, align 4
  %arrayidx262 = getelementptr inbounds i32, i32* %data_y, i64 6
  %84 = load i32, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds i32, i32* %data_x, i64 7
  %85 = load i32, i32* %arrayidx263, align 4
  %add264 = add nsw i32 %83, %85
  %arrayidx265 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %data_y, i64 7
  %86 = load i32, i32* %arrayidx266, align 4
  %add267 = add nsw i32 %84, %86
  %arrayidx268 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %add267, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds i32, i32* %data_x, i64 7
  %87 = load i32, i32* %arrayidx269, align 4
  %sub270 = sub nsw i32 %83, %87
  %arrayidx271 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub270, i32* %arrayidx271, align 4
  %arrayidx272 = getelementptr inbounds i32, i32* %data_y, i64 7
  %88 = load i32, i32* %arrayidx272, align 4
  %sub273 = sub nsw i32 %84, %88
  %arrayidx274 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub273, i32* %arrayidx274, align 4
  %89 = trunc i64 %indvars.iv19 to i32
  %90 = lshr i32 %89, 3
  br label %for.body278

for.body278:                                      ; preds = %for.end, %for.body278
  %indvars.iv7 = phi i64 [ 1, %for.end ], [ %indvars.iv.next8, %for.body278 ]
  %mul280 = mul nuw nsw i32 %90, 7
  %91 = sext i32 %mul280 to i64
  %92 = add nuw nsw i64 %91, %indvars.iv7
  %93 = add nsw i64 %92, -1
  %arrayidx284 = getelementptr inbounds float, float* %cos_64, i64 %93
  %94 = load float, float* %arrayidx284, align 4
  %conv285 = fptosi float %94 to i32
  %mul286 = mul nuw nsw i32 %90, 7
  %95 = sext i32 %mul286 to i64
  %96 = add nuw nsw i64 %95, %indvars.iv7
  %97 = add nsw i64 %96, -1
  %arrayidx290 = getelementptr inbounds float, float* %sin_64, i64 %97
  %98 = load float, float* %arrayidx290, align 4
  %conv291 = fptosi float %98 to i32
  %arrayidx293 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv7
  %99 = load i32, i32* %arrayidx293, align 4
  %arrayidx295 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv7
  %100 = load i32, i32* %arrayidx295, align 4
  %mul296 = mul nsw i32 %100, %conv285
  %arrayidx298 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv7
  %101 = load i32, i32* %arrayidx298, align 4
  %mul299 = mul nsw i32 %101, %conv291
  %sub300 = sub nsw i32 %mul296, %mul299
  %arrayidx302 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv7
  store i32 %sub300, i32* %arrayidx302, align 4
  %mul303 = mul nsw i32 %99, %conv291
  %arrayidx305 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv7
  %102 = load i32, i32* %arrayidx305, align 4
  %mul306 = mul nsw i32 %102, %conv285
  %add307 = add nsw i32 %mul303, %mul306
  %arrayidx309 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv7
  store i32 %add307, i32* %arrayidx309, align 4
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next8, 8
  br i1 %exitcond13, label %for.body278, label %for.body316.preheader, !llvm.loop !18

for.body316.preheader:                            ; preds = %for.body278
  br label %for.body316

for.body316:                                      ; preds = %for.body316.preheader, %for.body316
  %indvars.iv14 = phi i64 [ 0, %for.body316.preheader ], [ %indvars.iv.next15, %for.body316 ]
  %arrayidx318 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv14
  %103 = load i32, i32* %arrayidx318, align 4
  %104 = shl nsw i64 %indvars.iv19, 3
  %105 = add nuw nsw i64 %104, %indvars.iv14
  %arrayidx322 = getelementptr inbounds i32, i32* %DATA_x, i64 %105
  store i32 %103, i32* %arrayidx322, align 4
  %arrayidx324 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv14
  %106 = load i32, i32* %arrayidx324, align 4
  %107 = shl nsw i64 %indvars.iv19, 3
  %108 = add nuw nsw i64 %107, %indvars.iv14
  %arrayidx328 = getelementptr inbounds i32, i32* %DATA_y, i64 %108
  store i32 %106, i32* %arrayidx328, align 4
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1
  %exitcond18 = icmp ne i64 %indvars.iv.next15, 8
  br i1 %exitcond18, label %for.body316, label %for.inc332, !llvm.loop !19

for.inc332:                                       ; preds = %for.body316
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %exitcond25 = icmp ne i64 %indvars.iv.next20, 64
  br i1 %exitcond25, label %for.body, label %for.end334, !llvm.loop !20

for.end334:                                       ; preds = %for.inc332
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step7(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !21

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 72
  %add19 = or i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 144
  %add27 = or i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 216
  %add35 = or i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 288
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 360
  %add51 = or i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 432
  %add59 = or i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 504
  %add67 = or i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !22

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step8(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %0, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !23

for.end:                                          ; preds = %for.body3
  %1 = load i32, i32* %smem, align 4
  store i32 %1, i32* %data_x, align 4
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 8
  %2 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %2, i32* %arrayidx17, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 16
  %3 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %3, i32* %arrayidx23, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 24
  %4 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %4, i32* %arrayidx29, align 4
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 32
  %5 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %5, i32* %arrayidx35, align 4
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 40
  %6 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %6, i32* %arrayidx41, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 48
  %7 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %7, i32* %arrayidx47, align 4
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 56
  %8 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %8, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5
  %9 = load i32, i32* %arrayidx58, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_x, i64 %indvars.iv5
  store i32 %9, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !24

for.inc66:                                        ; preds = %for.body56
  br label %for.body3.1

for.body3.1:                                      ; preds = %for.body3.1, %for.inc66
  %indvars.iv.1 = phi i64 [ 0, %for.inc66 ], [ %indvars.iv.next.1, %for.body3.1 ]
  %10 = add nuw nsw i64 8, %indvars.iv.1
  %arrayidx.1 = getelementptr inbounds i32, i32* %DATA_x, i64 %10
  %11 = load i32, i32* %arrayidx.1, align 4
  %arrayidx5.1 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.1
  store i32 %11, i32* %arrayidx5.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %exitcond.1 = icmp ne i64 %indvars.iv.next.1, 8
  br i1 %exitcond.1, label %for.body3.1, label %for.end.1, !llvm.loop !23

for.end.1:                                        ; preds = %for.body3.1
  %arrayidx10.1 = getelementptr inbounds i32, i32* %smem, i64 1
  %12 = load i32, i32* %arrayidx10.1, align 4
  store i32 %12, i32* %data_x, align 4
  %arrayidx16.1 = getelementptr inbounds i32, i32* %smem, i64 9
  %13 = load i32, i32* %arrayidx16.1, align 4
  %arrayidx17.1 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %13, i32* %arrayidx17.1, align 4
  %arrayidx22.1 = getelementptr inbounds i32, i32* %smem, i64 17
  %14 = load i32, i32* %arrayidx22.1, align 4
  %arrayidx23.1 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %14, i32* %arrayidx23.1, align 4
  %arrayidx28.1 = getelementptr inbounds i32, i32* %smem, i64 25
  %15 = load i32, i32* %arrayidx28.1, align 4
  %arrayidx29.1 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %15, i32* %arrayidx29.1, align 4
  %arrayidx34.1 = getelementptr inbounds i32, i32* %smem, i64 33
  %16 = load i32, i32* %arrayidx34.1, align 4
  %arrayidx35.1 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %16, i32* %arrayidx35.1, align 4
  %arrayidx40.1 = getelementptr inbounds i32, i32* %smem, i64 41
  %17 = load i32, i32* %arrayidx40.1, align 4
  %arrayidx41.1 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %17, i32* %arrayidx41.1, align 4
  %arrayidx46.1 = getelementptr inbounds i32, i32* %smem, i64 49
  %18 = load i32, i32* %arrayidx46.1, align 4
  %arrayidx47.1 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %18, i32* %arrayidx47.1, align 4
  %arrayidx52.1 = getelementptr inbounds i32, i32* %smem, i64 57
  %19 = load i32, i32* %arrayidx52.1, align 4
  %arrayidx53.1 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %19, i32* %arrayidx53.1, align 4
  br label %for.body56.1

for.body56.1:                                     ; preds = %for.body56.1, %for.end.1
  %indvars.iv5.1 = phi i64 [ 0, %for.end.1 ], [ %indvars.iv.next6.1, %for.body56.1 ]
  %arrayidx58.1 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.1
  %20 = load i32, i32* %arrayidx58.1, align 4
  %21 = add nuw nsw i64 8, %indvars.iv5.1
  %arrayidx62.1 = getelementptr inbounds i32, i32* %DATA_x, i64 %21
  store i32 %20, i32* %arrayidx62.1, align 4
  %indvars.iv.next6.1 = add nuw nsw i64 %indvars.iv5.1, 1
  %exitcond8.1 = icmp ne i64 %indvars.iv.next6.1, 8
  br i1 %exitcond8.1, label %for.body56.1, label %for.inc66.1, !llvm.loop !24

for.inc66.1:                                      ; preds = %for.body56.1
  br label %for.body3.2

for.body3.2:                                      ; preds = %for.body3.2, %for.inc66.1
  %indvars.iv.2 = phi i64 [ 0, %for.inc66.1 ], [ %indvars.iv.next.2, %for.body3.2 ]
  %22 = add nuw nsw i64 16, %indvars.iv.2
  %arrayidx.2 = getelementptr inbounds i32, i32* %DATA_x, i64 %22
  %23 = load i32, i32* %arrayidx.2, align 4
  %arrayidx5.2 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.2
  store i32 %23, i32* %arrayidx5.2, align 4
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %exitcond.2 = icmp ne i64 %indvars.iv.next.2, 8
  br i1 %exitcond.2, label %for.body3.2, label %for.end.2, !llvm.loop !23

for.end.2:                                        ; preds = %for.body3.2
  %arrayidx10.2 = getelementptr inbounds i32, i32* %smem, i64 2
  %24 = load i32, i32* %arrayidx10.2, align 4
  store i32 %24, i32* %data_x, align 4
  %arrayidx16.2 = getelementptr inbounds i32, i32* %smem, i64 10
  %25 = load i32, i32* %arrayidx16.2, align 4
  %arrayidx17.2 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %25, i32* %arrayidx17.2, align 4
  %arrayidx22.2 = getelementptr inbounds i32, i32* %smem, i64 18
  %26 = load i32, i32* %arrayidx22.2, align 4
  %arrayidx23.2 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %26, i32* %arrayidx23.2, align 4
  %arrayidx28.2 = getelementptr inbounds i32, i32* %smem, i64 26
  %27 = load i32, i32* %arrayidx28.2, align 4
  %arrayidx29.2 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %27, i32* %arrayidx29.2, align 4
  %arrayidx34.2 = getelementptr inbounds i32, i32* %smem, i64 34
  %28 = load i32, i32* %arrayidx34.2, align 4
  %arrayidx35.2 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %28, i32* %arrayidx35.2, align 4
  %arrayidx40.2 = getelementptr inbounds i32, i32* %smem, i64 42
  %29 = load i32, i32* %arrayidx40.2, align 4
  %arrayidx41.2 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %29, i32* %arrayidx41.2, align 4
  %arrayidx46.2 = getelementptr inbounds i32, i32* %smem, i64 50
  %30 = load i32, i32* %arrayidx46.2, align 4
  %arrayidx47.2 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %30, i32* %arrayidx47.2, align 4
  %arrayidx52.2 = getelementptr inbounds i32, i32* %smem, i64 58
  %31 = load i32, i32* %arrayidx52.2, align 4
  %arrayidx53.2 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %31, i32* %arrayidx53.2, align 4
  br label %for.body56.2

for.body56.2:                                     ; preds = %for.body56.2, %for.end.2
  %indvars.iv5.2 = phi i64 [ 0, %for.end.2 ], [ %indvars.iv.next6.2, %for.body56.2 ]
  %arrayidx58.2 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.2
  %32 = load i32, i32* %arrayidx58.2, align 4
  %33 = add nuw nsw i64 16, %indvars.iv5.2
  %arrayidx62.2 = getelementptr inbounds i32, i32* %DATA_x, i64 %33
  store i32 %32, i32* %arrayidx62.2, align 4
  %indvars.iv.next6.2 = add nuw nsw i64 %indvars.iv5.2, 1
  %exitcond8.2 = icmp ne i64 %indvars.iv.next6.2, 8
  br i1 %exitcond8.2, label %for.body56.2, label %for.inc66.2, !llvm.loop !24

for.inc66.2:                                      ; preds = %for.body56.2
  br label %for.body3.3

for.body3.3:                                      ; preds = %for.body3.3, %for.inc66.2
  %indvars.iv.3 = phi i64 [ 0, %for.inc66.2 ], [ %indvars.iv.next.3, %for.body3.3 ]
  %34 = add nuw nsw i64 24, %indvars.iv.3
  %arrayidx.3 = getelementptr inbounds i32, i32* %DATA_x, i64 %34
  %35 = load i32, i32* %arrayidx.3, align 4
  %arrayidx5.3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.3
  store i32 %35, i32* %arrayidx5.3, align 4
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.3, 1
  %exitcond.3 = icmp ne i64 %indvars.iv.next.3, 8
  br i1 %exitcond.3, label %for.body3.3, label %for.end.3, !llvm.loop !23

for.end.3:                                        ; preds = %for.body3.3
  %arrayidx10.3 = getelementptr inbounds i32, i32* %smem, i64 3
  %36 = load i32, i32* %arrayidx10.3, align 4
  store i32 %36, i32* %data_x, align 4
  %arrayidx16.3 = getelementptr inbounds i32, i32* %smem, i64 11
  %37 = load i32, i32* %arrayidx16.3, align 4
  %arrayidx17.3 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %37, i32* %arrayidx17.3, align 4
  %arrayidx22.3 = getelementptr inbounds i32, i32* %smem, i64 19
  %38 = load i32, i32* %arrayidx22.3, align 4
  %arrayidx23.3 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %38, i32* %arrayidx23.3, align 4
  %arrayidx28.3 = getelementptr inbounds i32, i32* %smem, i64 27
  %39 = load i32, i32* %arrayidx28.3, align 4
  %arrayidx29.3 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %39, i32* %arrayidx29.3, align 4
  %arrayidx34.3 = getelementptr inbounds i32, i32* %smem, i64 35
  %40 = load i32, i32* %arrayidx34.3, align 4
  %arrayidx35.3 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %40, i32* %arrayidx35.3, align 4
  %arrayidx40.3 = getelementptr inbounds i32, i32* %smem, i64 43
  %41 = load i32, i32* %arrayidx40.3, align 4
  %arrayidx41.3 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %41, i32* %arrayidx41.3, align 4
  %arrayidx46.3 = getelementptr inbounds i32, i32* %smem, i64 51
  %42 = load i32, i32* %arrayidx46.3, align 4
  %arrayidx47.3 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %42, i32* %arrayidx47.3, align 4
  %arrayidx52.3 = getelementptr inbounds i32, i32* %smem, i64 59
  %43 = load i32, i32* %arrayidx52.3, align 4
  %arrayidx53.3 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %43, i32* %arrayidx53.3, align 4
  br label %for.body56.3

for.body56.3:                                     ; preds = %for.body56.3, %for.end.3
  %indvars.iv5.3 = phi i64 [ 0, %for.end.3 ], [ %indvars.iv.next6.3, %for.body56.3 ]
  %arrayidx58.3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.3
  %44 = load i32, i32* %arrayidx58.3, align 4
  %45 = add nuw nsw i64 24, %indvars.iv5.3
  %arrayidx62.3 = getelementptr inbounds i32, i32* %DATA_x, i64 %45
  store i32 %44, i32* %arrayidx62.3, align 4
  %indvars.iv.next6.3 = add nuw nsw i64 %indvars.iv5.3, 1
  %exitcond8.3 = icmp ne i64 %indvars.iv.next6.3, 8
  br i1 %exitcond8.3, label %for.body56.3, label %for.inc66.3, !llvm.loop !24

for.inc66.3:                                      ; preds = %for.body56.3
  br label %for.body3.4

for.body3.4:                                      ; preds = %for.body3.4, %for.inc66.3
  %indvars.iv.4 = phi i64 [ 0, %for.inc66.3 ], [ %indvars.iv.next.4, %for.body3.4 ]
  %46 = add nuw nsw i64 32, %indvars.iv.4
  %arrayidx.4 = getelementptr inbounds i32, i32* %DATA_x, i64 %46
  %47 = load i32, i32* %arrayidx.4, align 4
  %arrayidx5.4 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.4
  store i32 %47, i32* %arrayidx5.4, align 4
  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv.4, 1
  %exitcond.4 = icmp ne i64 %indvars.iv.next.4, 8
  br i1 %exitcond.4, label %for.body3.4, label %for.end.4, !llvm.loop !23

for.end.4:                                        ; preds = %for.body3.4
  %arrayidx10.4 = getelementptr inbounds i32, i32* %smem, i64 4
  %48 = load i32, i32* %arrayidx10.4, align 4
  store i32 %48, i32* %data_x, align 4
  %arrayidx16.4 = getelementptr inbounds i32, i32* %smem, i64 12
  %49 = load i32, i32* %arrayidx16.4, align 4
  %arrayidx17.4 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %49, i32* %arrayidx17.4, align 4
  %arrayidx22.4 = getelementptr inbounds i32, i32* %smem, i64 20
  %50 = load i32, i32* %arrayidx22.4, align 4
  %arrayidx23.4 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %50, i32* %arrayidx23.4, align 4
  %arrayidx28.4 = getelementptr inbounds i32, i32* %smem, i64 28
  %51 = load i32, i32* %arrayidx28.4, align 4
  %arrayidx29.4 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %51, i32* %arrayidx29.4, align 4
  %arrayidx34.4 = getelementptr inbounds i32, i32* %smem, i64 36
  %52 = load i32, i32* %arrayidx34.4, align 4
  %arrayidx35.4 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %52, i32* %arrayidx35.4, align 4
  %arrayidx40.4 = getelementptr inbounds i32, i32* %smem, i64 44
  %53 = load i32, i32* %arrayidx40.4, align 4
  %arrayidx41.4 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %53, i32* %arrayidx41.4, align 4
  %arrayidx46.4 = getelementptr inbounds i32, i32* %smem, i64 52
  %54 = load i32, i32* %arrayidx46.4, align 4
  %arrayidx47.4 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %54, i32* %arrayidx47.4, align 4
  %arrayidx52.4 = getelementptr inbounds i32, i32* %smem, i64 60
  %55 = load i32, i32* %arrayidx52.4, align 4
  %arrayidx53.4 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %55, i32* %arrayidx53.4, align 4
  br label %for.body56.4

for.body56.4:                                     ; preds = %for.body56.4, %for.end.4
  %indvars.iv5.4 = phi i64 [ 0, %for.end.4 ], [ %indvars.iv.next6.4, %for.body56.4 ]
  %arrayidx58.4 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.4
  %56 = load i32, i32* %arrayidx58.4, align 4
  %57 = add nuw nsw i64 32, %indvars.iv5.4
  %arrayidx62.4 = getelementptr inbounds i32, i32* %DATA_x, i64 %57
  store i32 %56, i32* %arrayidx62.4, align 4
  %indvars.iv.next6.4 = add nuw nsw i64 %indvars.iv5.4, 1
  %exitcond8.4 = icmp ne i64 %indvars.iv.next6.4, 8
  br i1 %exitcond8.4, label %for.body56.4, label %for.inc66.4, !llvm.loop !24

for.inc66.4:                                      ; preds = %for.body56.4
  br label %for.body3.5

for.body3.5:                                      ; preds = %for.body3.5, %for.inc66.4
  %indvars.iv.5 = phi i64 [ 0, %for.inc66.4 ], [ %indvars.iv.next.5, %for.body3.5 ]
  %58 = add nuw nsw i64 40, %indvars.iv.5
  %arrayidx.5 = getelementptr inbounds i32, i32* %DATA_x, i64 %58
  %59 = load i32, i32* %arrayidx.5, align 4
  %arrayidx5.5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.5
  store i32 %59, i32* %arrayidx5.5, align 4
  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv.5, 1
  %exitcond.5 = icmp ne i64 %indvars.iv.next.5, 8
  br i1 %exitcond.5, label %for.body3.5, label %for.end.5, !llvm.loop !23

for.end.5:                                        ; preds = %for.body3.5
  %arrayidx10.5 = getelementptr inbounds i32, i32* %smem, i64 5
  %60 = load i32, i32* %arrayidx10.5, align 4
  store i32 %60, i32* %data_x, align 4
  %arrayidx16.5 = getelementptr inbounds i32, i32* %smem, i64 13
  %61 = load i32, i32* %arrayidx16.5, align 4
  %arrayidx17.5 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %61, i32* %arrayidx17.5, align 4
  %arrayidx22.5 = getelementptr inbounds i32, i32* %smem, i64 21
  %62 = load i32, i32* %arrayidx22.5, align 4
  %arrayidx23.5 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %62, i32* %arrayidx23.5, align 4
  %arrayidx28.5 = getelementptr inbounds i32, i32* %smem, i64 29
  %63 = load i32, i32* %arrayidx28.5, align 4
  %arrayidx29.5 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %63, i32* %arrayidx29.5, align 4
  %arrayidx34.5 = getelementptr inbounds i32, i32* %smem, i64 37
  %64 = load i32, i32* %arrayidx34.5, align 4
  %arrayidx35.5 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %64, i32* %arrayidx35.5, align 4
  %arrayidx40.5 = getelementptr inbounds i32, i32* %smem, i64 45
  %65 = load i32, i32* %arrayidx40.5, align 4
  %arrayidx41.5 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %65, i32* %arrayidx41.5, align 4
  %arrayidx46.5 = getelementptr inbounds i32, i32* %smem, i64 53
  %66 = load i32, i32* %arrayidx46.5, align 4
  %arrayidx47.5 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %66, i32* %arrayidx47.5, align 4
  %arrayidx52.5 = getelementptr inbounds i32, i32* %smem, i64 61
  %67 = load i32, i32* %arrayidx52.5, align 4
  %arrayidx53.5 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %67, i32* %arrayidx53.5, align 4
  br label %for.body56.5

for.body56.5:                                     ; preds = %for.body56.5, %for.end.5
  %indvars.iv5.5 = phi i64 [ 0, %for.end.5 ], [ %indvars.iv.next6.5, %for.body56.5 ]
  %arrayidx58.5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.5
  %68 = load i32, i32* %arrayidx58.5, align 4
  %69 = add nuw nsw i64 40, %indvars.iv5.5
  %arrayidx62.5 = getelementptr inbounds i32, i32* %DATA_x, i64 %69
  store i32 %68, i32* %arrayidx62.5, align 4
  %indvars.iv.next6.5 = add nuw nsw i64 %indvars.iv5.5, 1
  %exitcond8.5 = icmp ne i64 %indvars.iv.next6.5, 8
  br i1 %exitcond8.5, label %for.body56.5, label %for.inc66.5, !llvm.loop !24

for.inc66.5:                                      ; preds = %for.body56.5
  br label %for.body3.6

for.body3.6:                                      ; preds = %for.body3.6, %for.inc66.5
  %indvars.iv.6 = phi i64 [ 0, %for.inc66.5 ], [ %indvars.iv.next.6, %for.body3.6 ]
  %70 = add nuw nsw i64 48, %indvars.iv.6
  %arrayidx.6 = getelementptr inbounds i32, i32* %DATA_x, i64 %70
  %71 = load i32, i32* %arrayidx.6, align 4
  %arrayidx5.6 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.6
  store i32 %71, i32* %arrayidx5.6, align 4
  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv.6, 1
  %exitcond.6 = icmp ne i64 %indvars.iv.next.6, 8
  br i1 %exitcond.6, label %for.body3.6, label %for.end.6, !llvm.loop !23

for.end.6:                                        ; preds = %for.body3.6
  %arrayidx10.6 = getelementptr inbounds i32, i32* %smem, i64 6
  %72 = load i32, i32* %arrayidx10.6, align 4
  store i32 %72, i32* %data_x, align 4
  %arrayidx16.6 = getelementptr inbounds i32, i32* %smem, i64 14
  %73 = load i32, i32* %arrayidx16.6, align 4
  %arrayidx17.6 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %73, i32* %arrayidx17.6, align 4
  %arrayidx22.6 = getelementptr inbounds i32, i32* %smem, i64 22
  %74 = load i32, i32* %arrayidx22.6, align 4
  %arrayidx23.6 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %74, i32* %arrayidx23.6, align 4
  %arrayidx28.6 = getelementptr inbounds i32, i32* %smem, i64 30
  %75 = load i32, i32* %arrayidx28.6, align 4
  %arrayidx29.6 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %75, i32* %arrayidx29.6, align 4
  %arrayidx34.6 = getelementptr inbounds i32, i32* %smem, i64 38
  %76 = load i32, i32* %arrayidx34.6, align 4
  %arrayidx35.6 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %76, i32* %arrayidx35.6, align 4
  %arrayidx40.6 = getelementptr inbounds i32, i32* %smem, i64 46
  %77 = load i32, i32* %arrayidx40.6, align 4
  %arrayidx41.6 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %77, i32* %arrayidx41.6, align 4
  %arrayidx46.6 = getelementptr inbounds i32, i32* %smem, i64 54
  %78 = load i32, i32* %arrayidx46.6, align 4
  %arrayidx47.6 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %78, i32* %arrayidx47.6, align 4
  %arrayidx52.6 = getelementptr inbounds i32, i32* %smem, i64 62
  %79 = load i32, i32* %arrayidx52.6, align 4
  %arrayidx53.6 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %79, i32* %arrayidx53.6, align 4
  br label %for.body56.6

for.body56.6:                                     ; preds = %for.body56.6, %for.end.6
  %indvars.iv5.6 = phi i64 [ 0, %for.end.6 ], [ %indvars.iv.next6.6, %for.body56.6 ]
  %arrayidx58.6 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.6
  %80 = load i32, i32* %arrayidx58.6, align 4
  %81 = add nuw nsw i64 48, %indvars.iv5.6
  %arrayidx62.6 = getelementptr inbounds i32, i32* %DATA_x, i64 %81
  store i32 %80, i32* %arrayidx62.6, align 4
  %indvars.iv.next6.6 = add nuw nsw i64 %indvars.iv5.6, 1
  %exitcond8.6 = icmp ne i64 %indvars.iv.next6.6, 8
  br i1 %exitcond8.6, label %for.body56.6, label %for.inc66.6, !llvm.loop !24

for.inc66.6:                                      ; preds = %for.body56.6
  br label %for.body3.7

for.body3.7:                                      ; preds = %for.body3.7, %for.inc66.6
  %indvars.iv.7 = phi i64 [ 0, %for.inc66.6 ], [ %indvars.iv.next.7, %for.body3.7 ]
  %82 = add nuw nsw i64 56, %indvars.iv.7
  %arrayidx.7 = getelementptr inbounds i32, i32* %DATA_x, i64 %82
  %83 = load i32, i32* %arrayidx.7, align 4
  %arrayidx5.7 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.7
  store i32 %83, i32* %arrayidx5.7, align 4
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv.7, 1
  %exitcond.7 = icmp ne i64 %indvars.iv.next.7, 8
  br i1 %exitcond.7, label %for.body3.7, label %for.end.7, !llvm.loop !23

for.end.7:                                        ; preds = %for.body3.7
  %arrayidx10.7 = getelementptr inbounds i32, i32* %smem, i64 7
  %84 = load i32, i32* %arrayidx10.7, align 4
  store i32 %84, i32* %data_x, align 4
  %arrayidx16.7 = getelementptr inbounds i32, i32* %smem, i64 15
  %85 = load i32, i32* %arrayidx16.7, align 4
  %arrayidx17.7 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %85, i32* %arrayidx17.7, align 4
  %arrayidx22.7 = getelementptr inbounds i32, i32* %smem, i64 23
  %86 = load i32, i32* %arrayidx22.7, align 4
  %arrayidx23.7 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %86, i32* %arrayidx23.7, align 4
  %arrayidx28.7 = getelementptr inbounds i32, i32* %smem, i64 31
  %87 = load i32, i32* %arrayidx28.7, align 4
  %arrayidx29.7 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %87, i32* %arrayidx29.7, align 4
  %arrayidx34.7 = getelementptr inbounds i32, i32* %smem, i64 39
  %88 = load i32, i32* %arrayidx34.7, align 4
  %arrayidx35.7 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %88, i32* %arrayidx35.7, align 4
  %arrayidx40.7 = getelementptr inbounds i32, i32* %smem, i64 47
  %89 = load i32, i32* %arrayidx40.7, align 4
  %arrayidx41.7 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %89, i32* %arrayidx41.7, align 4
  %arrayidx46.7 = getelementptr inbounds i32, i32* %smem, i64 55
  %90 = load i32, i32* %arrayidx46.7, align 4
  %arrayidx47.7 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %90, i32* %arrayidx47.7, align 4
  %arrayidx52.7 = getelementptr inbounds i32, i32* %smem, i64 63
  %91 = load i32, i32* %arrayidx52.7, align 4
  %arrayidx53.7 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %91, i32* %arrayidx53.7, align 4
  br label %for.body56.7

for.body56.7:                                     ; preds = %for.body56.7, %for.end.7
  %indvars.iv5.7 = phi i64 [ 0, %for.end.7 ], [ %indvars.iv.next6.7, %for.body56.7 ]
  %arrayidx58.7 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.7
  %92 = load i32, i32* %arrayidx58.7, align 4
  %93 = add nuw nsw i64 56, %indvars.iv5.7
  %arrayidx62.7 = getelementptr inbounds i32, i32* %DATA_x, i64 %93
  store i32 %92, i32* %arrayidx62.7, align 4
  %indvars.iv.next6.7 = add nuw nsw i64 %indvars.iv5.7, 1
  %exitcond8.7 = icmp ne i64 %indvars.iv.next6.7, 8
  br i1 %exitcond8.7, label %for.body56.7, label %for.inc66.7, !llvm.loop !24

for.inc66.7:                                      ; preds = %for.body56.7
  br label %for.body3.8

for.body3.8:                                      ; preds = %for.body3.8, %for.inc66.7
  %indvars.iv.8 = phi i64 [ 0, %for.inc66.7 ], [ %indvars.iv.next.8, %for.body3.8 ]
  %94 = add nuw nsw i64 64, %indvars.iv.8
  %arrayidx.8 = getelementptr inbounds i32, i32* %DATA_x, i64 %94
  %95 = load i32, i32* %arrayidx.8, align 4
  %arrayidx5.8 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.8
  store i32 %95, i32* %arrayidx5.8, align 4
  %indvars.iv.next.8 = add nuw nsw i64 %indvars.iv.8, 1
  %exitcond.8 = icmp ne i64 %indvars.iv.next.8, 8
  br i1 %exitcond.8, label %for.body3.8, label %for.end.8, !llvm.loop !23

for.end.8:                                        ; preds = %for.body3.8
  %arrayidx10.8 = getelementptr inbounds i32, i32* %smem, i64 72
  %96 = load i32, i32* %arrayidx10.8, align 4
  store i32 %96, i32* %data_x, align 4
  %arrayidx16.8 = getelementptr inbounds i32, i32* %smem, i64 80
  %97 = load i32, i32* %arrayidx16.8, align 4
  %arrayidx17.8 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %97, i32* %arrayidx17.8, align 4
  %arrayidx22.8 = getelementptr inbounds i32, i32* %smem, i64 88
  %98 = load i32, i32* %arrayidx22.8, align 4
  %arrayidx23.8 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %98, i32* %arrayidx23.8, align 4
  %arrayidx28.8 = getelementptr inbounds i32, i32* %smem, i64 96
  %99 = load i32, i32* %arrayidx28.8, align 4
  %arrayidx29.8 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %99, i32* %arrayidx29.8, align 4
  %arrayidx34.8 = getelementptr inbounds i32, i32* %smem, i64 104
  %100 = load i32, i32* %arrayidx34.8, align 4
  %arrayidx35.8 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %100, i32* %arrayidx35.8, align 4
  %arrayidx40.8 = getelementptr inbounds i32, i32* %smem, i64 112
  %101 = load i32, i32* %arrayidx40.8, align 4
  %arrayidx41.8 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %101, i32* %arrayidx41.8, align 4
  %arrayidx46.8 = getelementptr inbounds i32, i32* %smem, i64 120
  %102 = load i32, i32* %arrayidx46.8, align 4
  %arrayidx47.8 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %102, i32* %arrayidx47.8, align 4
  %arrayidx52.8 = getelementptr inbounds i32, i32* %smem, i64 128
  %103 = load i32, i32* %arrayidx52.8, align 4
  %arrayidx53.8 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %103, i32* %arrayidx53.8, align 4
  br label %for.body56.8

for.body56.8:                                     ; preds = %for.body56.8, %for.end.8
  %indvars.iv5.8 = phi i64 [ 0, %for.end.8 ], [ %indvars.iv.next6.8, %for.body56.8 ]
  %arrayidx58.8 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.8
  %104 = load i32, i32* %arrayidx58.8, align 4
  %105 = add nuw nsw i64 64, %indvars.iv5.8
  %arrayidx62.8 = getelementptr inbounds i32, i32* %DATA_x, i64 %105
  store i32 %104, i32* %arrayidx62.8, align 4
  %indvars.iv.next6.8 = add nuw nsw i64 %indvars.iv5.8, 1
  %exitcond8.8 = icmp ne i64 %indvars.iv.next6.8, 8
  br i1 %exitcond8.8, label %for.body56.8, label %for.inc66.8, !llvm.loop !24

for.inc66.8:                                      ; preds = %for.body56.8
  br label %for.body3.9

for.body3.9:                                      ; preds = %for.body3.9, %for.inc66.8
  %indvars.iv.9 = phi i64 [ 0, %for.inc66.8 ], [ %indvars.iv.next.9, %for.body3.9 ]
  %106 = add nuw nsw i64 72, %indvars.iv.9
  %arrayidx.9 = getelementptr inbounds i32, i32* %DATA_x, i64 %106
  %107 = load i32, i32* %arrayidx.9, align 4
  %arrayidx5.9 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.9
  store i32 %107, i32* %arrayidx5.9, align 4
  %indvars.iv.next.9 = add nuw nsw i64 %indvars.iv.9, 1
  %exitcond.9 = icmp ne i64 %indvars.iv.next.9, 8
  br i1 %exitcond.9, label %for.body3.9, label %for.end.9, !llvm.loop !23

for.end.9:                                        ; preds = %for.body3.9
  %arrayidx10.9 = getelementptr inbounds i32, i32* %smem, i64 73
  %108 = load i32, i32* %arrayidx10.9, align 4
  store i32 %108, i32* %data_x, align 4
  %arrayidx16.9 = getelementptr inbounds i32, i32* %smem, i64 81
  %109 = load i32, i32* %arrayidx16.9, align 4
  %arrayidx17.9 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %109, i32* %arrayidx17.9, align 4
  %arrayidx22.9 = getelementptr inbounds i32, i32* %smem, i64 89
  %110 = load i32, i32* %arrayidx22.9, align 4
  %arrayidx23.9 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %110, i32* %arrayidx23.9, align 4
  %arrayidx28.9 = getelementptr inbounds i32, i32* %smem, i64 97
  %111 = load i32, i32* %arrayidx28.9, align 4
  %arrayidx29.9 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %111, i32* %arrayidx29.9, align 4
  %arrayidx34.9 = getelementptr inbounds i32, i32* %smem, i64 105
  %112 = load i32, i32* %arrayidx34.9, align 4
  %arrayidx35.9 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %112, i32* %arrayidx35.9, align 4
  %arrayidx40.9 = getelementptr inbounds i32, i32* %smem, i64 113
  %113 = load i32, i32* %arrayidx40.9, align 4
  %arrayidx41.9 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %113, i32* %arrayidx41.9, align 4
  %arrayidx46.9 = getelementptr inbounds i32, i32* %smem, i64 121
  %114 = load i32, i32* %arrayidx46.9, align 4
  %arrayidx47.9 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %114, i32* %arrayidx47.9, align 4
  %arrayidx52.9 = getelementptr inbounds i32, i32* %smem, i64 129
  %115 = load i32, i32* %arrayidx52.9, align 4
  %arrayidx53.9 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %115, i32* %arrayidx53.9, align 4
  br label %for.body56.9

for.body56.9:                                     ; preds = %for.body56.9, %for.end.9
  %indvars.iv5.9 = phi i64 [ 0, %for.end.9 ], [ %indvars.iv.next6.9, %for.body56.9 ]
  %arrayidx58.9 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.9
  %116 = load i32, i32* %arrayidx58.9, align 4
  %117 = add nuw nsw i64 72, %indvars.iv5.9
  %arrayidx62.9 = getelementptr inbounds i32, i32* %DATA_x, i64 %117
  store i32 %116, i32* %arrayidx62.9, align 4
  %indvars.iv.next6.9 = add nuw nsw i64 %indvars.iv5.9, 1
  %exitcond8.9 = icmp ne i64 %indvars.iv.next6.9, 8
  br i1 %exitcond8.9, label %for.body56.9, label %for.inc66.9, !llvm.loop !24

for.inc66.9:                                      ; preds = %for.body56.9
  br label %for.body3.10

for.body3.10:                                     ; preds = %for.body3.10, %for.inc66.9
  %indvars.iv.10 = phi i64 [ 0, %for.inc66.9 ], [ %indvars.iv.next.10, %for.body3.10 ]
  %118 = add nuw nsw i64 80, %indvars.iv.10
  %arrayidx.10 = getelementptr inbounds i32, i32* %DATA_x, i64 %118
  %119 = load i32, i32* %arrayidx.10, align 4
  %arrayidx5.10 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.10
  store i32 %119, i32* %arrayidx5.10, align 4
  %indvars.iv.next.10 = add nuw nsw i64 %indvars.iv.10, 1
  %exitcond.10 = icmp ne i64 %indvars.iv.next.10, 8
  br i1 %exitcond.10, label %for.body3.10, label %for.end.10, !llvm.loop !23

for.end.10:                                       ; preds = %for.body3.10
  %arrayidx10.10 = getelementptr inbounds i32, i32* %smem, i64 74
  %120 = load i32, i32* %arrayidx10.10, align 4
  store i32 %120, i32* %data_x, align 4
  %arrayidx16.10 = getelementptr inbounds i32, i32* %smem, i64 82
  %121 = load i32, i32* %arrayidx16.10, align 4
  %arrayidx17.10 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %121, i32* %arrayidx17.10, align 4
  %arrayidx22.10 = getelementptr inbounds i32, i32* %smem, i64 90
  %122 = load i32, i32* %arrayidx22.10, align 4
  %arrayidx23.10 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %122, i32* %arrayidx23.10, align 4
  %arrayidx28.10 = getelementptr inbounds i32, i32* %smem, i64 98
  %123 = load i32, i32* %arrayidx28.10, align 4
  %arrayidx29.10 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %123, i32* %arrayidx29.10, align 4
  %arrayidx34.10 = getelementptr inbounds i32, i32* %smem, i64 106
  %124 = load i32, i32* %arrayidx34.10, align 4
  %arrayidx35.10 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %124, i32* %arrayidx35.10, align 4
  %arrayidx40.10 = getelementptr inbounds i32, i32* %smem, i64 114
  %125 = load i32, i32* %arrayidx40.10, align 4
  %arrayidx41.10 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %125, i32* %arrayidx41.10, align 4
  %arrayidx46.10 = getelementptr inbounds i32, i32* %smem, i64 122
  %126 = load i32, i32* %arrayidx46.10, align 4
  %arrayidx47.10 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %126, i32* %arrayidx47.10, align 4
  %arrayidx52.10 = getelementptr inbounds i32, i32* %smem, i64 130
  %127 = load i32, i32* %arrayidx52.10, align 4
  %arrayidx53.10 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %127, i32* %arrayidx53.10, align 4
  br label %for.body56.10

for.body56.10:                                    ; preds = %for.body56.10, %for.end.10
  %indvars.iv5.10 = phi i64 [ 0, %for.end.10 ], [ %indvars.iv.next6.10, %for.body56.10 ]
  %arrayidx58.10 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.10
  %128 = load i32, i32* %arrayidx58.10, align 4
  %129 = add nuw nsw i64 80, %indvars.iv5.10
  %arrayidx62.10 = getelementptr inbounds i32, i32* %DATA_x, i64 %129
  store i32 %128, i32* %arrayidx62.10, align 4
  %indvars.iv.next6.10 = add nuw nsw i64 %indvars.iv5.10, 1
  %exitcond8.10 = icmp ne i64 %indvars.iv.next6.10, 8
  br i1 %exitcond8.10, label %for.body56.10, label %for.inc66.10, !llvm.loop !24

for.inc66.10:                                     ; preds = %for.body56.10
  br label %for.body3.11

for.body3.11:                                     ; preds = %for.body3.11, %for.inc66.10
  %indvars.iv.11 = phi i64 [ 0, %for.inc66.10 ], [ %indvars.iv.next.11, %for.body3.11 ]
  %130 = add nuw nsw i64 88, %indvars.iv.11
  %arrayidx.11 = getelementptr inbounds i32, i32* %DATA_x, i64 %130
  %131 = load i32, i32* %arrayidx.11, align 4
  %arrayidx5.11 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.11
  store i32 %131, i32* %arrayidx5.11, align 4
  %indvars.iv.next.11 = add nuw nsw i64 %indvars.iv.11, 1
  %exitcond.11 = icmp ne i64 %indvars.iv.next.11, 8
  br i1 %exitcond.11, label %for.body3.11, label %for.end.11, !llvm.loop !23

for.end.11:                                       ; preds = %for.body3.11
  %arrayidx10.11 = getelementptr inbounds i32, i32* %smem, i64 75
  %132 = load i32, i32* %arrayidx10.11, align 4
  store i32 %132, i32* %data_x, align 4
  %arrayidx16.11 = getelementptr inbounds i32, i32* %smem, i64 83
  %133 = load i32, i32* %arrayidx16.11, align 4
  %arrayidx17.11 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %133, i32* %arrayidx17.11, align 4
  %arrayidx22.11 = getelementptr inbounds i32, i32* %smem, i64 91
  %134 = load i32, i32* %arrayidx22.11, align 4
  %arrayidx23.11 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %134, i32* %arrayidx23.11, align 4
  %arrayidx28.11 = getelementptr inbounds i32, i32* %smem, i64 99
  %135 = load i32, i32* %arrayidx28.11, align 4
  %arrayidx29.11 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %135, i32* %arrayidx29.11, align 4
  %arrayidx34.11 = getelementptr inbounds i32, i32* %smem, i64 107
  %136 = load i32, i32* %arrayidx34.11, align 4
  %arrayidx35.11 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %136, i32* %arrayidx35.11, align 4
  %arrayidx40.11 = getelementptr inbounds i32, i32* %smem, i64 115
  %137 = load i32, i32* %arrayidx40.11, align 4
  %arrayidx41.11 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %137, i32* %arrayidx41.11, align 4
  %arrayidx46.11 = getelementptr inbounds i32, i32* %smem, i64 123
  %138 = load i32, i32* %arrayidx46.11, align 4
  %arrayidx47.11 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %138, i32* %arrayidx47.11, align 4
  %arrayidx52.11 = getelementptr inbounds i32, i32* %smem, i64 131
  %139 = load i32, i32* %arrayidx52.11, align 4
  %arrayidx53.11 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %139, i32* %arrayidx53.11, align 4
  br label %for.body56.11

for.body56.11:                                    ; preds = %for.body56.11, %for.end.11
  %indvars.iv5.11 = phi i64 [ 0, %for.end.11 ], [ %indvars.iv.next6.11, %for.body56.11 ]
  %arrayidx58.11 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.11
  %140 = load i32, i32* %arrayidx58.11, align 4
  %141 = add nuw nsw i64 88, %indvars.iv5.11
  %arrayidx62.11 = getelementptr inbounds i32, i32* %DATA_x, i64 %141
  store i32 %140, i32* %arrayidx62.11, align 4
  %indvars.iv.next6.11 = add nuw nsw i64 %indvars.iv5.11, 1
  %exitcond8.11 = icmp ne i64 %indvars.iv.next6.11, 8
  br i1 %exitcond8.11, label %for.body56.11, label %for.inc66.11, !llvm.loop !24

for.inc66.11:                                     ; preds = %for.body56.11
  br label %for.body3.12

for.body3.12:                                     ; preds = %for.body3.12, %for.inc66.11
  %indvars.iv.12 = phi i64 [ 0, %for.inc66.11 ], [ %indvars.iv.next.12, %for.body3.12 ]
  %142 = add nuw nsw i64 96, %indvars.iv.12
  %arrayidx.12 = getelementptr inbounds i32, i32* %DATA_x, i64 %142
  %143 = load i32, i32* %arrayidx.12, align 4
  %arrayidx5.12 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.12
  store i32 %143, i32* %arrayidx5.12, align 4
  %indvars.iv.next.12 = add nuw nsw i64 %indvars.iv.12, 1
  %exitcond.12 = icmp ne i64 %indvars.iv.next.12, 8
  br i1 %exitcond.12, label %for.body3.12, label %for.end.12, !llvm.loop !23

for.end.12:                                       ; preds = %for.body3.12
  %arrayidx10.12 = getelementptr inbounds i32, i32* %smem, i64 76
  %144 = load i32, i32* %arrayidx10.12, align 4
  store i32 %144, i32* %data_x, align 4
  %arrayidx16.12 = getelementptr inbounds i32, i32* %smem, i64 84
  %145 = load i32, i32* %arrayidx16.12, align 4
  %arrayidx17.12 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %145, i32* %arrayidx17.12, align 4
  %arrayidx22.12 = getelementptr inbounds i32, i32* %smem, i64 92
  %146 = load i32, i32* %arrayidx22.12, align 4
  %arrayidx23.12 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %146, i32* %arrayidx23.12, align 4
  %arrayidx28.12 = getelementptr inbounds i32, i32* %smem, i64 100
  %147 = load i32, i32* %arrayidx28.12, align 4
  %arrayidx29.12 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %147, i32* %arrayidx29.12, align 4
  %arrayidx34.12 = getelementptr inbounds i32, i32* %smem, i64 108
  %148 = load i32, i32* %arrayidx34.12, align 4
  %arrayidx35.12 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %148, i32* %arrayidx35.12, align 4
  %arrayidx40.12 = getelementptr inbounds i32, i32* %smem, i64 116
  %149 = load i32, i32* %arrayidx40.12, align 4
  %arrayidx41.12 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %149, i32* %arrayidx41.12, align 4
  %arrayidx46.12 = getelementptr inbounds i32, i32* %smem, i64 124
  %150 = load i32, i32* %arrayidx46.12, align 4
  %arrayidx47.12 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %150, i32* %arrayidx47.12, align 4
  %arrayidx52.12 = getelementptr inbounds i32, i32* %smem, i64 132
  %151 = load i32, i32* %arrayidx52.12, align 4
  %arrayidx53.12 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %151, i32* %arrayidx53.12, align 4
  br label %for.body56.12

for.body56.12:                                    ; preds = %for.body56.12, %for.end.12
  %indvars.iv5.12 = phi i64 [ 0, %for.end.12 ], [ %indvars.iv.next6.12, %for.body56.12 ]
  %arrayidx58.12 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.12
  %152 = load i32, i32* %arrayidx58.12, align 4
  %153 = add nuw nsw i64 96, %indvars.iv5.12
  %arrayidx62.12 = getelementptr inbounds i32, i32* %DATA_x, i64 %153
  store i32 %152, i32* %arrayidx62.12, align 4
  %indvars.iv.next6.12 = add nuw nsw i64 %indvars.iv5.12, 1
  %exitcond8.12 = icmp ne i64 %indvars.iv.next6.12, 8
  br i1 %exitcond8.12, label %for.body56.12, label %for.inc66.12, !llvm.loop !24

for.inc66.12:                                     ; preds = %for.body56.12
  br label %for.body3.13

for.body3.13:                                     ; preds = %for.body3.13, %for.inc66.12
  %indvars.iv.13 = phi i64 [ 0, %for.inc66.12 ], [ %indvars.iv.next.13, %for.body3.13 ]
  %154 = add nuw nsw i64 104, %indvars.iv.13
  %arrayidx.13 = getelementptr inbounds i32, i32* %DATA_x, i64 %154
  %155 = load i32, i32* %arrayidx.13, align 4
  %arrayidx5.13 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.13
  store i32 %155, i32* %arrayidx5.13, align 4
  %indvars.iv.next.13 = add nuw nsw i64 %indvars.iv.13, 1
  %exitcond.13 = icmp ne i64 %indvars.iv.next.13, 8
  br i1 %exitcond.13, label %for.body3.13, label %for.end.13, !llvm.loop !23

for.end.13:                                       ; preds = %for.body3.13
  %arrayidx10.13 = getelementptr inbounds i32, i32* %smem, i64 77
  %156 = load i32, i32* %arrayidx10.13, align 4
  store i32 %156, i32* %data_x, align 4
  %arrayidx16.13 = getelementptr inbounds i32, i32* %smem, i64 85
  %157 = load i32, i32* %arrayidx16.13, align 4
  %arrayidx17.13 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %157, i32* %arrayidx17.13, align 4
  %arrayidx22.13 = getelementptr inbounds i32, i32* %smem, i64 93
  %158 = load i32, i32* %arrayidx22.13, align 4
  %arrayidx23.13 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %158, i32* %arrayidx23.13, align 4
  %arrayidx28.13 = getelementptr inbounds i32, i32* %smem, i64 101
  %159 = load i32, i32* %arrayidx28.13, align 4
  %arrayidx29.13 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %159, i32* %arrayidx29.13, align 4
  %arrayidx34.13 = getelementptr inbounds i32, i32* %smem, i64 109
  %160 = load i32, i32* %arrayidx34.13, align 4
  %arrayidx35.13 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %160, i32* %arrayidx35.13, align 4
  %arrayidx40.13 = getelementptr inbounds i32, i32* %smem, i64 117
  %161 = load i32, i32* %arrayidx40.13, align 4
  %arrayidx41.13 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %161, i32* %arrayidx41.13, align 4
  %arrayidx46.13 = getelementptr inbounds i32, i32* %smem, i64 125
  %162 = load i32, i32* %arrayidx46.13, align 4
  %arrayidx47.13 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %162, i32* %arrayidx47.13, align 4
  %arrayidx52.13 = getelementptr inbounds i32, i32* %smem, i64 133
  %163 = load i32, i32* %arrayidx52.13, align 4
  %arrayidx53.13 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %163, i32* %arrayidx53.13, align 4
  br label %for.body56.13

for.body56.13:                                    ; preds = %for.body56.13, %for.end.13
  %indvars.iv5.13 = phi i64 [ 0, %for.end.13 ], [ %indvars.iv.next6.13, %for.body56.13 ]
  %arrayidx58.13 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.13
  %164 = load i32, i32* %arrayidx58.13, align 4
  %165 = add nuw nsw i64 104, %indvars.iv5.13
  %arrayidx62.13 = getelementptr inbounds i32, i32* %DATA_x, i64 %165
  store i32 %164, i32* %arrayidx62.13, align 4
  %indvars.iv.next6.13 = add nuw nsw i64 %indvars.iv5.13, 1
  %exitcond8.13 = icmp ne i64 %indvars.iv.next6.13, 8
  br i1 %exitcond8.13, label %for.body56.13, label %for.inc66.13, !llvm.loop !24

for.inc66.13:                                     ; preds = %for.body56.13
  br label %for.body3.14

for.body3.14:                                     ; preds = %for.body3.14, %for.inc66.13
  %indvars.iv.14 = phi i64 [ 0, %for.inc66.13 ], [ %indvars.iv.next.14, %for.body3.14 ]
  %166 = add nuw nsw i64 112, %indvars.iv.14
  %arrayidx.14 = getelementptr inbounds i32, i32* %DATA_x, i64 %166
  %167 = load i32, i32* %arrayidx.14, align 4
  %arrayidx5.14 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.14
  store i32 %167, i32* %arrayidx5.14, align 4
  %indvars.iv.next.14 = add nuw nsw i64 %indvars.iv.14, 1
  %exitcond.14 = icmp ne i64 %indvars.iv.next.14, 8
  br i1 %exitcond.14, label %for.body3.14, label %for.end.14, !llvm.loop !23

for.end.14:                                       ; preds = %for.body3.14
  %arrayidx10.14 = getelementptr inbounds i32, i32* %smem, i64 78
  %168 = load i32, i32* %arrayidx10.14, align 4
  store i32 %168, i32* %data_x, align 4
  %arrayidx16.14 = getelementptr inbounds i32, i32* %smem, i64 86
  %169 = load i32, i32* %arrayidx16.14, align 4
  %arrayidx17.14 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %169, i32* %arrayidx17.14, align 4
  %arrayidx22.14 = getelementptr inbounds i32, i32* %smem, i64 94
  %170 = load i32, i32* %arrayidx22.14, align 4
  %arrayidx23.14 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %170, i32* %arrayidx23.14, align 4
  %arrayidx28.14 = getelementptr inbounds i32, i32* %smem, i64 102
  %171 = load i32, i32* %arrayidx28.14, align 4
  %arrayidx29.14 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %171, i32* %arrayidx29.14, align 4
  %arrayidx34.14 = getelementptr inbounds i32, i32* %smem, i64 110
  %172 = load i32, i32* %arrayidx34.14, align 4
  %arrayidx35.14 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %172, i32* %arrayidx35.14, align 4
  %arrayidx40.14 = getelementptr inbounds i32, i32* %smem, i64 118
  %173 = load i32, i32* %arrayidx40.14, align 4
  %arrayidx41.14 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %173, i32* %arrayidx41.14, align 4
  %arrayidx46.14 = getelementptr inbounds i32, i32* %smem, i64 126
  %174 = load i32, i32* %arrayidx46.14, align 4
  %arrayidx47.14 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %174, i32* %arrayidx47.14, align 4
  %arrayidx52.14 = getelementptr inbounds i32, i32* %smem, i64 134
  %175 = load i32, i32* %arrayidx52.14, align 4
  %arrayidx53.14 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %175, i32* %arrayidx53.14, align 4
  br label %for.body56.14

for.body56.14:                                    ; preds = %for.body56.14, %for.end.14
  %indvars.iv5.14 = phi i64 [ 0, %for.end.14 ], [ %indvars.iv.next6.14, %for.body56.14 ]
  %arrayidx58.14 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.14
  %176 = load i32, i32* %arrayidx58.14, align 4
  %177 = add nuw nsw i64 112, %indvars.iv5.14
  %arrayidx62.14 = getelementptr inbounds i32, i32* %DATA_x, i64 %177
  store i32 %176, i32* %arrayidx62.14, align 4
  %indvars.iv.next6.14 = add nuw nsw i64 %indvars.iv5.14, 1
  %exitcond8.14 = icmp ne i64 %indvars.iv.next6.14, 8
  br i1 %exitcond8.14, label %for.body56.14, label %for.inc66.14, !llvm.loop !24

for.inc66.14:                                     ; preds = %for.body56.14
  br label %for.body3.15

for.body3.15:                                     ; preds = %for.body3.15, %for.inc66.14
  %indvars.iv.15 = phi i64 [ 0, %for.inc66.14 ], [ %indvars.iv.next.15, %for.body3.15 ]
  %178 = add nuw nsw i64 120, %indvars.iv.15
  %arrayidx.15 = getelementptr inbounds i32, i32* %DATA_x, i64 %178
  %179 = load i32, i32* %arrayidx.15, align 4
  %arrayidx5.15 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.15
  store i32 %179, i32* %arrayidx5.15, align 4
  %indvars.iv.next.15 = add nuw nsw i64 %indvars.iv.15, 1
  %exitcond.15 = icmp ne i64 %indvars.iv.next.15, 8
  br i1 %exitcond.15, label %for.body3.15, label %for.end.15, !llvm.loop !23

for.end.15:                                       ; preds = %for.body3.15
  %arrayidx10.15 = getelementptr inbounds i32, i32* %smem, i64 79
  %180 = load i32, i32* %arrayidx10.15, align 4
  store i32 %180, i32* %data_x, align 4
  %arrayidx16.15 = getelementptr inbounds i32, i32* %smem, i64 87
  %181 = load i32, i32* %arrayidx16.15, align 4
  %arrayidx17.15 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %181, i32* %arrayidx17.15, align 4
  %arrayidx22.15 = getelementptr inbounds i32, i32* %smem, i64 95
  %182 = load i32, i32* %arrayidx22.15, align 4
  %arrayidx23.15 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %182, i32* %arrayidx23.15, align 4
  %arrayidx28.15 = getelementptr inbounds i32, i32* %smem, i64 103
  %183 = load i32, i32* %arrayidx28.15, align 4
  %arrayidx29.15 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %183, i32* %arrayidx29.15, align 4
  %arrayidx34.15 = getelementptr inbounds i32, i32* %smem, i64 111
  %184 = load i32, i32* %arrayidx34.15, align 4
  %arrayidx35.15 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %184, i32* %arrayidx35.15, align 4
  %arrayidx40.15 = getelementptr inbounds i32, i32* %smem, i64 119
  %185 = load i32, i32* %arrayidx40.15, align 4
  %arrayidx41.15 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %185, i32* %arrayidx41.15, align 4
  %arrayidx46.15 = getelementptr inbounds i32, i32* %smem, i64 127
  %186 = load i32, i32* %arrayidx46.15, align 4
  %arrayidx47.15 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %186, i32* %arrayidx47.15, align 4
  %arrayidx52.15 = getelementptr inbounds i32, i32* %smem, i64 135
  %187 = load i32, i32* %arrayidx52.15, align 4
  %arrayidx53.15 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %187, i32* %arrayidx53.15, align 4
  br label %for.body56.15

for.body56.15:                                    ; preds = %for.body56.15, %for.end.15
  %indvars.iv5.15 = phi i64 [ 0, %for.end.15 ], [ %indvars.iv.next6.15, %for.body56.15 ]
  %arrayidx58.15 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.15
  %188 = load i32, i32* %arrayidx58.15, align 4
  %189 = add nuw nsw i64 120, %indvars.iv5.15
  %arrayidx62.15 = getelementptr inbounds i32, i32* %DATA_x, i64 %189
  store i32 %188, i32* %arrayidx62.15, align 4
  %indvars.iv.next6.15 = add nuw nsw i64 %indvars.iv5.15, 1
  %exitcond8.15 = icmp ne i64 %indvars.iv.next6.15, 8
  br i1 %exitcond8.15, label %for.body56.15, label %for.inc66.15, !llvm.loop !24

for.inc66.15:                                     ; preds = %for.body56.15
  br label %for.body3.16

for.body3.16:                                     ; preds = %for.body3.16, %for.inc66.15
  %indvars.iv.16 = phi i64 [ 0, %for.inc66.15 ], [ %indvars.iv.next.16, %for.body3.16 ]
  %190 = add nuw nsw i64 128, %indvars.iv.16
  %arrayidx.16 = getelementptr inbounds i32, i32* %DATA_x, i64 %190
  %191 = load i32, i32* %arrayidx.16, align 4
  %arrayidx5.16 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.16
  store i32 %191, i32* %arrayidx5.16, align 4
  %indvars.iv.next.16 = add nuw nsw i64 %indvars.iv.16, 1
  %exitcond.16 = icmp ne i64 %indvars.iv.next.16, 8
  br i1 %exitcond.16, label %for.body3.16, label %for.end.16, !llvm.loop !23

for.end.16:                                       ; preds = %for.body3.16
  %arrayidx10.16 = getelementptr inbounds i32, i32* %smem, i64 144
  %192 = load i32, i32* %arrayidx10.16, align 4
  store i32 %192, i32* %data_x, align 4
  %arrayidx16.16 = getelementptr inbounds i32, i32* %smem, i64 152
  %193 = load i32, i32* %arrayidx16.16, align 4
  %arrayidx17.16 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %193, i32* %arrayidx17.16, align 4
  %arrayidx22.16 = getelementptr inbounds i32, i32* %smem, i64 160
  %194 = load i32, i32* %arrayidx22.16, align 4
  %arrayidx23.16 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %194, i32* %arrayidx23.16, align 4
  %arrayidx28.16 = getelementptr inbounds i32, i32* %smem, i64 168
  %195 = load i32, i32* %arrayidx28.16, align 4
  %arrayidx29.16 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %195, i32* %arrayidx29.16, align 4
  %arrayidx34.16 = getelementptr inbounds i32, i32* %smem, i64 176
  %196 = load i32, i32* %arrayidx34.16, align 4
  %arrayidx35.16 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %196, i32* %arrayidx35.16, align 4
  %arrayidx40.16 = getelementptr inbounds i32, i32* %smem, i64 184
  %197 = load i32, i32* %arrayidx40.16, align 4
  %arrayidx41.16 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %197, i32* %arrayidx41.16, align 4
  %arrayidx46.16 = getelementptr inbounds i32, i32* %smem, i64 192
  %198 = load i32, i32* %arrayidx46.16, align 4
  %arrayidx47.16 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %198, i32* %arrayidx47.16, align 4
  %arrayidx52.16 = getelementptr inbounds i32, i32* %smem, i64 200
  %199 = load i32, i32* %arrayidx52.16, align 4
  %arrayidx53.16 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %199, i32* %arrayidx53.16, align 4
  br label %for.body56.16

for.body56.16:                                    ; preds = %for.body56.16, %for.end.16
  %indvars.iv5.16 = phi i64 [ 0, %for.end.16 ], [ %indvars.iv.next6.16, %for.body56.16 ]
  %arrayidx58.16 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.16
  %200 = load i32, i32* %arrayidx58.16, align 4
  %201 = add nuw nsw i64 128, %indvars.iv5.16
  %arrayidx62.16 = getelementptr inbounds i32, i32* %DATA_x, i64 %201
  store i32 %200, i32* %arrayidx62.16, align 4
  %indvars.iv.next6.16 = add nuw nsw i64 %indvars.iv5.16, 1
  %exitcond8.16 = icmp ne i64 %indvars.iv.next6.16, 8
  br i1 %exitcond8.16, label %for.body56.16, label %for.inc66.16, !llvm.loop !24

for.inc66.16:                                     ; preds = %for.body56.16
  br label %for.body3.17

for.body3.17:                                     ; preds = %for.body3.17, %for.inc66.16
  %indvars.iv.17 = phi i64 [ 0, %for.inc66.16 ], [ %indvars.iv.next.17, %for.body3.17 ]
  %202 = add nuw nsw i64 136, %indvars.iv.17
  %arrayidx.17 = getelementptr inbounds i32, i32* %DATA_x, i64 %202
  %203 = load i32, i32* %arrayidx.17, align 4
  %arrayidx5.17 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.17
  store i32 %203, i32* %arrayidx5.17, align 4
  %indvars.iv.next.17 = add nuw nsw i64 %indvars.iv.17, 1
  %exitcond.17 = icmp ne i64 %indvars.iv.next.17, 8
  br i1 %exitcond.17, label %for.body3.17, label %for.end.17, !llvm.loop !23

for.end.17:                                       ; preds = %for.body3.17
  %arrayidx10.17 = getelementptr inbounds i32, i32* %smem, i64 145
  %204 = load i32, i32* %arrayidx10.17, align 4
  store i32 %204, i32* %data_x, align 4
  %arrayidx16.17 = getelementptr inbounds i32, i32* %smem, i64 153
  %205 = load i32, i32* %arrayidx16.17, align 4
  %arrayidx17.17 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %205, i32* %arrayidx17.17, align 4
  %arrayidx22.17 = getelementptr inbounds i32, i32* %smem, i64 161
  %206 = load i32, i32* %arrayidx22.17, align 4
  %arrayidx23.17 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %206, i32* %arrayidx23.17, align 4
  %arrayidx28.17 = getelementptr inbounds i32, i32* %smem, i64 169
  %207 = load i32, i32* %arrayidx28.17, align 4
  %arrayidx29.17 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %207, i32* %arrayidx29.17, align 4
  %arrayidx34.17 = getelementptr inbounds i32, i32* %smem, i64 177
  %208 = load i32, i32* %arrayidx34.17, align 4
  %arrayidx35.17 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %208, i32* %arrayidx35.17, align 4
  %arrayidx40.17 = getelementptr inbounds i32, i32* %smem, i64 185
  %209 = load i32, i32* %arrayidx40.17, align 4
  %arrayidx41.17 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %209, i32* %arrayidx41.17, align 4
  %arrayidx46.17 = getelementptr inbounds i32, i32* %smem, i64 193
  %210 = load i32, i32* %arrayidx46.17, align 4
  %arrayidx47.17 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %210, i32* %arrayidx47.17, align 4
  %arrayidx52.17 = getelementptr inbounds i32, i32* %smem, i64 201
  %211 = load i32, i32* %arrayidx52.17, align 4
  %arrayidx53.17 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %211, i32* %arrayidx53.17, align 4
  br label %for.body56.17

for.body56.17:                                    ; preds = %for.body56.17, %for.end.17
  %indvars.iv5.17 = phi i64 [ 0, %for.end.17 ], [ %indvars.iv.next6.17, %for.body56.17 ]
  %arrayidx58.17 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.17
  %212 = load i32, i32* %arrayidx58.17, align 4
  %213 = add nuw nsw i64 136, %indvars.iv5.17
  %arrayidx62.17 = getelementptr inbounds i32, i32* %DATA_x, i64 %213
  store i32 %212, i32* %arrayidx62.17, align 4
  %indvars.iv.next6.17 = add nuw nsw i64 %indvars.iv5.17, 1
  %exitcond8.17 = icmp ne i64 %indvars.iv.next6.17, 8
  br i1 %exitcond8.17, label %for.body56.17, label %for.inc66.17, !llvm.loop !24

for.inc66.17:                                     ; preds = %for.body56.17
  br label %for.body3.18

for.body3.18:                                     ; preds = %for.body3.18, %for.inc66.17
  %indvars.iv.18 = phi i64 [ 0, %for.inc66.17 ], [ %indvars.iv.next.18, %for.body3.18 ]
  %214 = add nuw nsw i64 144, %indvars.iv.18
  %arrayidx.18 = getelementptr inbounds i32, i32* %DATA_x, i64 %214
  %215 = load i32, i32* %arrayidx.18, align 4
  %arrayidx5.18 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.18
  store i32 %215, i32* %arrayidx5.18, align 4
  %indvars.iv.next.18 = add nuw nsw i64 %indvars.iv.18, 1
  %exitcond.18 = icmp ne i64 %indvars.iv.next.18, 8
  br i1 %exitcond.18, label %for.body3.18, label %for.end.18, !llvm.loop !23

for.end.18:                                       ; preds = %for.body3.18
  %arrayidx10.18 = getelementptr inbounds i32, i32* %smem, i64 146
  %216 = load i32, i32* %arrayidx10.18, align 4
  store i32 %216, i32* %data_x, align 4
  %arrayidx16.18 = getelementptr inbounds i32, i32* %smem, i64 154
  %217 = load i32, i32* %arrayidx16.18, align 4
  %arrayidx17.18 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %217, i32* %arrayidx17.18, align 4
  %arrayidx22.18 = getelementptr inbounds i32, i32* %smem, i64 162
  %218 = load i32, i32* %arrayidx22.18, align 4
  %arrayidx23.18 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %218, i32* %arrayidx23.18, align 4
  %arrayidx28.18 = getelementptr inbounds i32, i32* %smem, i64 170
  %219 = load i32, i32* %arrayidx28.18, align 4
  %arrayidx29.18 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %219, i32* %arrayidx29.18, align 4
  %arrayidx34.18 = getelementptr inbounds i32, i32* %smem, i64 178
  %220 = load i32, i32* %arrayidx34.18, align 4
  %arrayidx35.18 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %220, i32* %arrayidx35.18, align 4
  %arrayidx40.18 = getelementptr inbounds i32, i32* %smem, i64 186
  %221 = load i32, i32* %arrayidx40.18, align 4
  %arrayidx41.18 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %221, i32* %arrayidx41.18, align 4
  %arrayidx46.18 = getelementptr inbounds i32, i32* %smem, i64 194
  %222 = load i32, i32* %arrayidx46.18, align 4
  %arrayidx47.18 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %222, i32* %arrayidx47.18, align 4
  %arrayidx52.18 = getelementptr inbounds i32, i32* %smem, i64 202
  %223 = load i32, i32* %arrayidx52.18, align 4
  %arrayidx53.18 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %223, i32* %arrayidx53.18, align 4
  br label %for.body56.18

for.body56.18:                                    ; preds = %for.body56.18, %for.end.18
  %indvars.iv5.18 = phi i64 [ 0, %for.end.18 ], [ %indvars.iv.next6.18, %for.body56.18 ]
  %arrayidx58.18 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.18
  %224 = load i32, i32* %arrayidx58.18, align 4
  %225 = add nuw nsw i64 144, %indvars.iv5.18
  %arrayidx62.18 = getelementptr inbounds i32, i32* %DATA_x, i64 %225
  store i32 %224, i32* %arrayidx62.18, align 4
  %indvars.iv.next6.18 = add nuw nsw i64 %indvars.iv5.18, 1
  %exitcond8.18 = icmp ne i64 %indvars.iv.next6.18, 8
  br i1 %exitcond8.18, label %for.body56.18, label %for.inc66.18, !llvm.loop !24

for.inc66.18:                                     ; preds = %for.body56.18
  br label %for.body3.19

for.body3.19:                                     ; preds = %for.body3.19, %for.inc66.18
  %indvars.iv.19 = phi i64 [ 0, %for.inc66.18 ], [ %indvars.iv.next.19, %for.body3.19 ]
  %226 = add nuw nsw i64 152, %indvars.iv.19
  %arrayidx.19 = getelementptr inbounds i32, i32* %DATA_x, i64 %226
  %227 = load i32, i32* %arrayidx.19, align 4
  %arrayidx5.19 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.19
  store i32 %227, i32* %arrayidx5.19, align 4
  %indvars.iv.next.19 = add nuw nsw i64 %indvars.iv.19, 1
  %exitcond.19 = icmp ne i64 %indvars.iv.next.19, 8
  br i1 %exitcond.19, label %for.body3.19, label %for.end.19, !llvm.loop !23

for.end.19:                                       ; preds = %for.body3.19
  %arrayidx10.19 = getelementptr inbounds i32, i32* %smem, i64 147
  %228 = load i32, i32* %arrayidx10.19, align 4
  store i32 %228, i32* %data_x, align 4
  %arrayidx16.19 = getelementptr inbounds i32, i32* %smem, i64 155
  %229 = load i32, i32* %arrayidx16.19, align 4
  %arrayidx17.19 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %229, i32* %arrayidx17.19, align 4
  %arrayidx22.19 = getelementptr inbounds i32, i32* %smem, i64 163
  %230 = load i32, i32* %arrayidx22.19, align 4
  %arrayidx23.19 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %230, i32* %arrayidx23.19, align 4
  %arrayidx28.19 = getelementptr inbounds i32, i32* %smem, i64 171
  %231 = load i32, i32* %arrayidx28.19, align 4
  %arrayidx29.19 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %231, i32* %arrayidx29.19, align 4
  %arrayidx34.19 = getelementptr inbounds i32, i32* %smem, i64 179
  %232 = load i32, i32* %arrayidx34.19, align 4
  %arrayidx35.19 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %232, i32* %arrayidx35.19, align 4
  %arrayidx40.19 = getelementptr inbounds i32, i32* %smem, i64 187
  %233 = load i32, i32* %arrayidx40.19, align 4
  %arrayidx41.19 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %233, i32* %arrayidx41.19, align 4
  %arrayidx46.19 = getelementptr inbounds i32, i32* %smem, i64 195
  %234 = load i32, i32* %arrayidx46.19, align 4
  %arrayidx47.19 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %234, i32* %arrayidx47.19, align 4
  %arrayidx52.19 = getelementptr inbounds i32, i32* %smem, i64 203
  %235 = load i32, i32* %arrayidx52.19, align 4
  %arrayidx53.19 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %235, i32* %arrayidx53.19, align 4
  br label %for.body56.19

for.body56.19:                                    ; preds = %for.body56.19, %for.end.19
  %indvars.iv5.19 = phi i64 [ 0, %for.end.19 ], [ %indvars.iv.next6.19, %for.body56.19 ]
  %arrayidx58.19 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.19
  %236 = load i32, i32* %arrayidx58.19, align 4
  %237 = add nuw nsw i64 152, %indvars.iv5.19
  %arrayidx62.19 = getelementptr inbounds i32, i32* %DATA_x, i64 %237
  store i32 %236, i32* %arrayidx62.19, align 4
  %indvars.iv.next6.19 = add nuw nsw i64 %indvars.iv5.19, 1
  %exitcond8.19 = icmp ne i64 %indvars.iv.next6.19, 8
  br i1 %exitcond8.19, label %for.body56.19, label %for.inc66.19, !llvm.loop !24

for.inc66.19:                                     ; preds = %for.body56.19
  br label %for.body3.20

for.body3.20:                                     ; preds = %for.body3.20, %for.inc66.19
  %indvars.iv.20 = phi i64 [ 0, %for.inc66.19 ], [ %indvars.iv.next.20, %for.body3.20 ]
  %238 = add nuw nsw i64 160, %indvars.iv.20
  %arrayidx.20 = getelementptr inbounds i32, i32* %DATA_x, i64 %238
  %239 = load i32, i32* %arrayidx.20, align 4
  %arrayidx5.20 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.20
  store i32 %239, i32* %arrayidx5.20, align 4
  %indvars.iv.next.20 = add nuw nsw i64 %indvars.iv.20, 1
  %exitcond.20 = icmp ne i64 %indvars.iv.next.20, 8
  br i1 %exitcond.20, label %for.body3.20, label %for.end.20, !llvm.loop !23

for.end.20:                                       ; preds = %for.body3.20
  %arrayidx10.20 = getelementptr inbounds i32, i32* %smem, i64 148
  %240 = load i32, i32* %arrayidx10.20, align 4
  store i32 %240, i32* %data_x, align 4
  %arrayidx16.20 = getelementptr inbounds i32, i32* %smem, i64 156
  %241 = load i32, i32* %arrayidx16.20, align 4
  %arrayidx17.20 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %241, i32* %arrayidx17.20, align 4
  %arrayidx22.20 = getelementptr inbounds i32, i32* %smem, i64 164
  %242 = load i32, i32* %arrayidx22.20, align 4
  %arrayidx23.20 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %242, i32* %arrayidx23.20, align 4
  %arrayidx28.20 = getelementptr inbounds i32, i32* %smem, i64 172
  %243 = load i32, i32* %arrayidx28.20, align 4
  %arrayidx29.20 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %243, i32* %arrayidx29.20, align 4
  %arrayidx34.20 = getelementptr inbounds i32, i32* %smem, i64 180
  %244 = load i32, i32* %arrayidx34.20, align 4
  %arrayidx35.20 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %244, i32* %arrayidx35.20, align 4
  %arrayidx40.20 = getelementptr inbounds i32, i32* %smem, i64 188
  %245 = load i32, i32* %arrayidx40.20, align 4
  %arrayidx41.20 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %245, i32* %arrayidx41.20, align 4
  %arrayidx46.20 = getelementptr inbounds i32, i32* %smem, i64 196
  %246 = load i32, i32* %arrayidx46.20, align 4
  %arrayidx47.20 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %246, i32* %arrayidx47.20, align 4
  %arrayidx52.20 = getelementptr inbounds i32, i32* %smem, i64 204
  %247 = load i32, i32* %arrayidx52.20, align 4
  %arrayidx53.20 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %247, i32* %arrayidx53.20, align 4
  br label %for.body56.20

for.body56.20:                                    ; preds = %for.body56.20, %for.end.20
  %indvars.iv5.20 = phi i64 [ 0, %for.end.20 ], [ %indvars.iv.next6.20, %for.body56.20 ]
  %arrayidx58.20 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.20
  %248 = load i32, i32* %arrayidx58.20, align 4
  %249 = add nuw nsw i64 160, %indvars.iv5.20
  %arrayidx62.20 = getelementptr inbounds i32, i32* %DATA_x, i64 %249
  store i32 %248, i32* %arrayidx62.20, align 4
  %indvars.iv.next6.20 = add nuw nsw i64 %indvars.iv5.20, 1
  %exitcond8.20 = icmp ne i64 %indvars.iv.next6.20, 8
  br i1 %exitcond8.20, label %for.body56.20, label %for.inc66.20, !llvm.loop !24

for.inc66.20:                                     ; preds = %for.body56.20
  br label %for.body3.21

for.body3.21:                                     ; preds = %for.body3.21, %for.inc66.20
  %indvars.iv.21 = phi i64 [ 0, %for.inc66.20 ], [ %indvars.iv.next.21, %for.body3.21 ]
  %250 = add nuw nsw i64 168, %indvars.iv.21
  %arrayidx.21 = getelementptr inbounds i32, i32* %DATA_x, i64 %250
  %251 = load i32, i32* %arrayidx.21, align 4
  %arrayidx5.21 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.21
  store i32 %251, i32* %arrayidx5.21, align 4
  %indvars.iv.next.21 = add nuw nsw i64 %indvars.iv.21, 1
  %exitcond.21 = icmp ne i64 %indvars.iv.next.21, 8
  br i1 %exitcond.21, label %for.body3.21, label %for.end.21, !llvm.loop !23

for.end.21:                                       ; preds = %for.body3.21
  %arrayidx10.21 = getelementptr inbounds i32, i32* %smem, i64 149
  %252 = load i32, i32* %arrayidx10.21, align 4
  store i32 %252, i32* %data_x, align 4
  %arrayidx16.21 = getelementptr inbounds i32, i32* %smem, i64 157
  %253 = load i32, i32* %arrayidx16.21, align 4
  %arrayidx17.21 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %253, i32* %arrayidx17.21, align 4
  %arrayidx22.21 = getelementptr inbounds i32, i32* %smem, i64 165
  %254 = load i32, i32* %arrayidx22.21, align 4
  %arrayidx23.21 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %254, i32* %arrayidx23.21, align 4
  %arrayidx28.21 = getelementptr inbounds i32, i32* %smem, i64 173
  %255 = load i32, i32* %arrayidx28.21, align 4
  %arrayidx29.21 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %255, i32* %arrayidx29.21, align 4
  %arrayidx34.21 = getelementptr inbounds i32, i32* %smem, i64 181
  %256 = load i32, i32* %arrayidx34.21, align 4
  %arrayidx35.21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %256, i32* %arrayidx35.21, align 4
  %arrayidx40.21 = getelementptr inbounds i32, i32* %smem, i64 189
  %257 = load i32, i32* %arrayidx40.21, align 4
  %arrayidx41.21 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %257, i32* %arrayidx41.21, align 4
  %arrayidx46.21 = getelementptr inbounds i32, i32* %smem, i64 197
  %258 = load i32, i32* %arrayidx46.21, align 4
  %arrayidx47.21 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %258, i32* %arrayidx47.21, align 4
  %arrayidx52.21 = getelementptr inbounds i32, i32* %smem, i64 205
  %259 = load i32, i32* %arrayidx52.21, align 4
  %arrayidx53.21 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %259, i32* %arrayidx53.21, align 4
  br label %for.body56.21

for.body56.21:                                    ; preds = %for.body56.21, %for.end.21
  %indvars.iv5.21 = phi i64 [ 0, %for.end.21 ], [ %indvars.iv.next6.21, %for.body56.21 ]
  %arrayidx58.21 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.21
  %260 = load i32, i32* %arrayidx58.21, align 4
  %261 = add nuw nsw i64 168, %indvars.iv5.21
  %arrayidx62.21 = getelementptr inbounds i32, i32* %DATA_x, i64 %261
  store i32 %260, i32* %arrayidx62.21, align 4
  %indvars.iv.next6.21 = add nuw nsw i64 %indvars.iv5.21, 1
  %exitcond8.21 = icmp ne i64 %indvars.iv.next6.21, 8
  br i1 %exitcond8.21, label %for.body56.21, label %for.inc66.21, !llvm.loop !24

for.inc66.21:                                     ; preds = %for.body56.21
  br label %for.body3.22

for.body3.22:                                     ; preds = %for.body3.22, %for.inc66.21
  %indvars.iv.22 = phi i64 [ 0, %for.inc66.21 ], [ %indvars.iv.next.22, %for.body3.22 ]
  %262 = add nuw nsw i64 176, %indvars.iv.22
  %arrayidx.22 = getelementptr inbounds i32, i32* %DATA_x, i64 %262
  %263 = load i32, i32* %arrayidx.22, align 4
  %arrayidx5.22 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.22
  store i32 %263, i32* %arrayidx5.22, align 4
  %indvars.iv.next.22 = add nuw nsw i64 %indvars.iv.22, 1
  %exitcond.22 = icmp ne i64 %indvars.iv.next.22, 8
  br i1 %exitcond.22, label %for.body3.22, label %for.end.22, !llvm.loop !23

for.end.22:                                       ; preds = %for.body3.22
  %arrayidx10.22 = getelementptr inbounds i32, i32* %smem, i64 150
  %264 = load i32, i32* %arrayidx10.22, align 4
  store i32 %264, i32* %data_x, align 4
  %arrayidx16.22 = getelementptr inbounds i32, i32* %smem, i64 158
  %265 = load i32, i32* %arrayidx16.22, align 4
  %arrayidx17.22 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %265, i32* %arrayidx17.22, align 4
  %arrayidx22.22 = getelementptr inbounds i32, i32* %smem, i64 166
  %266 = load i32, i32* %arrayidx22.22, align 4
  %arrayidx23.22 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %266, i32* %arrayidx23.22, align 4
  %arrayidx28.22 = getelementptr inbounds i32, i32* %smem, i64 174
  %267 = load i32, i32* %arrayidx28.22, align 4
  %arrayidx29.22 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %267, i32* %arrayidx29.22, align 4
  %arrayidx34.22 = getelementptr inbounds i32, i32* %smem, i64 182
  %268 = load i32, i32* %arrayidx34.22, align 4
  %arrayidx35.22 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %268, i32* %arrayidx35.22, align 4
  %arrayidx40.22 = getelementptr inbounds i32, i32* %smem, i64 190
  %269 = load i32, i32* %arrayidx40.22, align 4
  %arrayidx41.22 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %269, i32* %arrayidx41.22, align 4
  %arrayidx46.22 = getelementptr inbounds i32, i32* %smem, i64 198
  %270 = load i32, i32* %arrayidx46.22, align 4
  %arrayidx47.22 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %270, i32* %arrayidx47.22, align 4
  %arrayidx52.22 = getelementptr inbounds i32, i32* %smem, i64 206
  %271 = load i32, i32* %arrayidx52.22, align 4
  %arrayidx53.22 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %271, i32* %arrayidx53.22, align 4
  br label %for.body56.22

for.body56.22:                                    ; preds = %for.body56.22, %for.end.22
  %indvars.iv5.22 = phi i64 [ 0, %for.end.22 ], [ %indvars.iv.next6.22, %for.body56.22 ]
  %arrayidx58.22 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.22
  %272 = load i32, i32* %arrayidx58.22, align 4
  %273 = add nuw nsw i64 176, %indvars.iv5.22
  %arrayidx62.22 = getelementptr inbounds i32, i32* %DATA_x, i64 %273
  store i32 %272, i32* %arrayidx62.22, align 4
  %indvars.iv.next6.22 = add nuw nsw i64 %indvars.iv5.22, 1
  %exitcond8.22 = icmp ne i64 %indvars.iv.next6.22, 8
  br i1 %exitcond8.22, label %for.body56.22, label %for.inc66.22, !llvm.loop !24

for.inc66.22:                                     ; preds = %for.body56.22
  br label %for.body3.23

for.body3.23:                                     ; preds = %for.body3.23, %for.inc66.22
  %indvars.iv.23 = phi i64 [ 0, %for.inc66.22 ], [ %indvars.iv.next.23, %for.body3.23 ]
  %274 = add nuw nsw i64 184, %indvars.iv.23
  %arrayidx.23 = getelementptr inbounds i32, i32* %DATA_x, i64 %274
  %275 = load i32, i32* %arrayidx.23, align 4
  %arrayidx5.23 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.23
  store i32 %275, i32* %arrayidx5.23, align 4
  %indvars.iv.next.23 = add nuw nsw i64 %indvars.iv.23, 1
  %exitcond.23 = icmp ne i64 %indvars.iv.next.23, 8
  br i1 %exitcond.23, label %for.body3.23, label %for.end.23, !llvm.loop !23

for.end.23:                                       ; preds = %for.body3.23
  %arrayidx10.23 = getelementptr inbounds i32, i32* %smem, i64 151
  %276 = load i32, i32* %arrayidx10.23, align 4
  store i32 %276, i32* %data_x, align 4
  %arrayidx16.23 = getelementptr inbounds i32, i32* %smem, i64 159
  %277 = load i32, i32* %arrayidx16.23, align 4
  %arrayidx17.23 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %277, i32* %arrayidx17.23, align 4
  %arrayidx22.23 = getelementptr inbounds i32, i32* %smem, i64 167
  %278 = load i32, i32* %arrayidx22.23, align 4
  %arrayidx23.23 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %278, i32* %arrayidx23.23, align 4
  %arrayidx28.23 = getelementptr inbounds i32, i32* %smem, i64 175
  %279 = load i32, i32* %arrayidx28.23, align 4
  %arrayidx29.23 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %279, i32* %arrayidx29.23, align 4
  %arrayidx34.23 = getelementptr inbounds i32, i32* %smem, i64 183
  %280 = load i32, i32* %arrayidx34.23, align 4
  %arrayidx35.23 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %280, i32* %arrayidx35.23, align 4
  %arrayidx40.23 = getelementptr inbounds i32, i32* %smem, i64 191
  %281 = load i32, i32* %arrayidx40.23, align 4
  %arrayidx41.23 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %281, i32* %arrayidx41.23, align 4
  %arrayidx46.23 = getelementptr inbounds i32, i32* %smem, i64 199
  %282 = load i32, i32* %arrayidx46.23, align 4
  %arrayidx47.23 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %282, i32* %arrayidx47.23, align 4
  %arrayidx52.23 = getelementptr inbounds i32, i32* %smem, i64 207
  %283 = load i32, i32* %arrayidx52.23, align 4
  %arrayidx53.23 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %283, i32* %arrayidx53.23, align 4
  br label %for.body56.23

for.body56.23:                                    ; preds = %for.body56.23, %for.end.23
  %indvars.iv5.23 = phi i64 [ 0, %for.end.23 ], [ %indvars.iv.next6.23, %for.body56.23 ]
  %arrayidx58.23 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.23
  %284 = load i32, i32* %arrayidx58.23, align 4
  %285 = add nuw nsw i64 184, %indvars.iv5.23
  %arrayidx62.23 = getelementptr inbounds i32, i32* %DATA_x, i64 %285
  store i32 %284, i32* %arrayidx62.23, align 4
  %indvars.iv.next6.23 = add nuw nsw i64 %indvars.iv5.23, 1
  %exitcond8.23 = icmp ne i64 %indvars.iv.next6.23, 8
  br i1 %exitcond8.23, label %for.body56.23, label %for.inc66.23, !llvm.loop !24

for.inc66.23:                                     ; preds = %for.body56.23
  br label %for.body3.24

for.body3.24:                                     ; preds = %for.body3.24, %for.inc66.23
  %indvars.iv.24 = phi i64 [ 0, %for.inc66.23 ], [ %indvars.iv.next.24, %for.body3.24 ]
  %286 = add nuw nsw i64 192, %indvars.iv.24
  %arrayidx.24 = getelementptr inbounds i32, i32* %DATA_x, i64 %286
  %287 = load i32, i32* %arrayidx.24, align 4
  %arrayidx5.24 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.24
  store i32 %287, i32* %arrayidx5.24, align 4
  %indvars.iv.next.24 = add nuw nsw i64 %indvars.iv.24, 1
  %exitcond.24 = icmp ne i64 %indvars.iv.next.24, 8
  br i1 %exitcond.24, label %for.body3.24, label %for.end.24, !llvm.loop !23

for.end.24:                                       ; preds = %for.body3.24
  %arrayidx10.24 = getelementptr inbounds i32, i32* %smem, i64 216
  %288 = load i32, i32* %arrayidx10.24, align 4
  store i32 %288, i32* %data_x, align 4
  %arrayidx16.24 = getelementptr inbounds i32, i32* %smem, i64 224
  %289 = load i32, i32* %arrayidx16.24, align 4
  %arrayidx17.24 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %289, i32* %arrayidx17.24, align 4
  %arrayidx22.24 = getelementptr inbounds i32, i32* %smem, i64 232
  %290 = load i32, i32* %arrayidx22.24, align 4
  %arrayidx23.24 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %290, i32* %arrayidx23.24, align 4
  %arrayidx28.24 = getelementptr inbounds i32, i32* %smem, i64 240
  %291 = load i32, i32* %arrayidx28.24, align 4
  %arrayidx29.24 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %291, i32* %arrayidx29.24, align 4
  %arrayidx34.24 = getelementptr inbounds i32, i32* %smem, i64 248
  %292 = load i32, i32* %arrayidx34.24, align 4
  %arrayidx35.24 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %292, i32* %arrayidx35.24, align 4
  %arrayidx40.24 = getelementptr inbounds i32, i32* %smem, i64 256
  %293 = load i32, i32* %arrayidx40.24, align 4
  %arrayidx41.24 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %293, i32* %arrayidx41.24, align 4
  %arrayidx46.24 = getelementptr inbounds i32, i32* %smem, i64 264
  %294 = load i32, i32* %arrayidx46.24, align 4
  %arrayidx47.24 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %294, i32* %arrayidx47.24, align 4
  %arrayidx52.24 = getelementptr inbounds i32, i32* %smem, i64 272
  %295 = load i32, i32* %arrayidx52.24, align 4
  %arrayidx53.24 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %295, i32* %arrayidx53.24, align 4
  br label %for.body56.24

for.body56.24:                                    ; preds = %for.body56.24, %for.end.24
  %indvars.iv5.24 = phi i64 [ 0, %for.end.24 ], [ %indvars.iv.next6.24, %for.body56.24 ]
  %arrayidx58.24 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.24
  %296 = load i32, i32* %arrayidx58.24, align 4
  %297 = add nuw nsw i64 192, %indvars.iv5.24
  %arrayidx62.24 = getelementptr inbounds i32, i32* %DATA_x, i64 %297
  store i32 %296, i32* %arrayidx62.24, align 4
  %indvars.iv.next6.24 = add nuw nsw i64 %indvars.iv5.24, 1
  %exitcond8.24 = icmp ne i64 %indvars.iv.next6.24, 8
  br i1 %exitcond8.24, label %for.body56.24, label %for.inc66.24, !llvm.loop !24

for.inc66.24:                                     ; preds = %for.body56.24
  br label %for.body3.25

for.body3.25:                                     ; preds = %for.body3.25, %for.inc66.24
  %indvars.iv.25 = phi i64 [ 0, %for.inc66.24 ], [ %indvars.iv.next.25, %for.body3.25 ]
  %298 = add nuw nsw i64 200, %indvars.iv.25
  %arrayidx.25 = getelementptr inbounds i32, i32* %DATA_x, i64 %298
  %299 = load i32, i32* %arrayidx.25, align 4
  %arrayidx5.25 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.25
  store i32 %299, i32* %arrayidx5.25, align 4
  %indvars.iv.next.25 = add nuw nsw i64 %indvars.iv.25, 1
  %exitcond.25 = icmp ne i64 %indvars.iv.next.25, 8
  br i1 %exitcond.25, label %for.body3.25, label %for.end.25, !llvm.loop !23

for.end.25:                                       ; preds = %for.body3.25
  %arrayidx10.25 = getelementptr inbounds i32, i32* %smem, i64 217
  %300 = load i32, i32* %arrayidx10.25, align 4
  store i32 %300, i32* %data_x, align 4
  %arrayidx16.25 = getelementptr inbounds i32, i32* %smem, i64 225
  %301 = load i32, i32* %arrayidx16.25, align 4
  %arrayidx17.25 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %301, i32* %arrayidx17.25, align 4
  %arrayidx22.25 = getelementptr inbounds i32, i32* %smem, i64 233
  %302 = load i32, i32* %arrayidx22.25, align 4
  %arrayidx23.25 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %302, i32* %arrayidx23.25, align 4
  %arrayidx28.25 = getelementptr inbounds i32, i32* %smem, i64 241
  %303 = load i32, i32* %arrayidx28.25, align 4
  %arrayidx29.25 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %303, i32* %arrayidx29.25, align 4
  %arrayidx34.25 = getelementptr inbounds i32, i32* %smem, i64 249
  %304 = load i32, i32* %arrayidx34.25, align 4
  %arrayidx35.25 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %304, i32* %arrayidx35.25, align 4
  %arrayidx40.25 = getelementptr inbounds i32, i32* %smem, i64 257
  %305 = load i32, i32* %arrayidx40.25, align 4
  %arrayidx41.25 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %305, i32* %arrayidx41.25, align 4
  %arrayidx46.25 = getelementptr inbounds i32, i32* %smem, i64 265
  %306 = load i32, i32* %arrayidx46.25, align 4
  %arrayidx47.25 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %306, i32* %arrayidx47.25, align 4
  %arrayidx52.25 = getelementptr inbounds i32, i32* %smem, i64 273
  %307 = load i32, i32* %arrayidx52.25, align 4
  %arrayidx53.25 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %307, i32* %arrayidx53.25, align 4
  br label %for.body56.25

for.body56.25:                                    ; preds = %for.body56.25, %for.end.25
  %indvars.iv5.25 = phi i64 [ 0, %for.end.25 ], [ %indvars.iv.next6.25, %for.body56.25 ]
  %arrayidx58.25 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.25
  %308 = load i32, i32* %arrayidx58.25, align 4
  %309 = add nuw nsw i64 200, %indvars.iv5.25
  %arrayidx62.25 = getelementptr inbounds i32, i32* %DATA_x, i64 %309
  store i32 %308, i32* %arrayidx62.25, align 4
  %indvars.iv.next6.25 = add nuw nsw i64 %indvars.iv5.25, 1
  %exitcond8.25 = icmp ne i64 %indvars.iv.next6.25, 8
  br i1 %exitcond8.25, label %for.body56.25, label %for.inc66.25, !llvm.loop !24

for.inc66.25:                                     ; preds = %for.body56.25
  br label %for.body3.26

for.body3.26:                                     ; preds = %for.body3.26, %for.inc66.25
  %indvars.iv.26 = phi i64 [ 0, %for.inc66.25 ], [ %indvars.iv.next.26, %for.body3.26 ]
  %310 = add nuw nsw i64 208, %indvars.iv.26
  %arrayidx.26 = getelementptr inbounds i32, i32* %DATA_x, i64 %310
  %311 = load i32, i32* %arrayidx.26, align 4
  %arrayidx5.26 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.26
  store i32 %311, i32* %arrayidx5.26, align 4
  %indvars.iv.next.26 = add nuw nsw i64 %indvars.iv.26, 1
  %exitcond.26 = icmp ne i64 %indvars.iv.next.26, 8
  br i1 %exitcond.26, label %for.body3.26, label %for.end.26, !llvm.loop !23

for.end.26:                                       ; preds = %for.body3.26
  %arrayidx10.26 = getelementptr inbounds i32, i32* %smem, i64 218
  %312 = load i32, i32* %arrayidx10.26, align 4
  store i32 %312, i32* %data_x, align 4
  %arrayidx16.26 = getelementptr inbounds i32, i32* %smem, i64 226
  %313 = load i32, i32* %arrayidx16.26, align 4
  %arrayidx17.26 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %313, i32* %arrayidx17.26, align 4
  %arrayidx22.26 = getelementptr inbounds i32, i32* %smem, i64 234
  %314 = load i32, i32* %arrayidx22.26, align 4
  %arrayidx23.26 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %314, i32* %arrayidx23.26, align 4
  %arrayidx28.26 = getelementptr inbounds i32, i32* %smem, i64 242
  %315 = load i32, i32* %arrayidx28.26, align 4
  %arrayidx29.26 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %315, i32* %arrayidx29.26, align 4
  %arrayidx34.26 = getelementptr inbounds i32, i32* %smem, i64 250
  %316 = load i32, i32* %arrayidx34.26, align 4
  %arrayidx35.26 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %316, i32* %arrayidx35.26, align 4
  %arrayidx40.26 = getelementptr inbounds i32, i32* %smem, i64 258
  %317 = load i32, i32* %arrayidx40.26, align 4
  %arrayidx41.26 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %317, i32* %arrayidx41.26, align 4
  %arrayidx46.26 = getelementptr inbounds i32, i32* %smem, i64 266
  %318 = load i32, i32* %arrayidx46.26, align 4
  %arrayidx47.26 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %318, i32* %arrayidx47.26, align 4
  %arrayidx52.26 = getelementptr inbounds i32, i32* %smem, i64 274
  %319 = load i32, i32* %arrayidx52.26, align 4
  %arrayidx53.26 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %319, i32* %arrayidx53.26, align 4
  br label %for.body56.26

for.body56.26:                                    ; preds = %for.body56.26, %for.end.26
  %indvars.iv5.26 = phi i64 [ 0, %for.end.26 ], [ %indvars.iv.next6.26, %for.body56.26 ]
  %arrayidx58.26 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.26
  %320 = load i32, i32* %arrayidx58.26, align 4
  %321 = add nuw nsw i64 208, %indvars.iv5.26
  %arrayidx62.26 = getelementptr inbounds i32, i32* %DATA_x, i64 %321
  store i32 %320, i32* %arrayidx62.26, align 4
  %indvars.iv.next6.26 = add nuw nsw i64 %indvars.iv5.26, 1
  %exitcond8.26 = icmp ne i64 %indvars.iv.next6.26, 8
  br i1 %exitcond8.26, label %for.body56.26, label %for.inc66.26, !llvm.loop !24

for.inc66.26:                                     ; preds = %for.body56.26
  br label %for.body3.27

for.body3.27:                                     ; preds = %for.body3.27, %for.inc66.26
  %indvars.iv.27 = phi i64 [ 0, %for.inc66.26 ], [ %indvars.iv.next.27, %for.body3.27 ]
  %322 = add nuw nsw i64 216, %indvars.iv.27
  %arrayidx.27 = getelementptr inbounds i32, i32* %DATA_x, i64 %322
  %323 = load i32, i32* %arrayidx.27, align 4
  %arrayidx5.27 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.27
  store i32 %323, i32* %arrayidx5.27, align 4
  %indvars.iv.next.27 = add nuw nsw i64 %indvars.iv.27, 1
  %exitcond.27 = icmp ne i64 %indvars.iv.next.27, 8
  br i1 %exitcond.27, label %for.body3.27, label %for.end.27, !llvm.loop !23

for.end.27:                                       ; preds = %for.body3.27
  %arrayidx10.27 = getelementptr inbounds i32, i32* %smem, i64 219
  %324 = load i32, i32* %arrayidx10.27, align 4
  store i32 %324, i32* %data_x, align 4
  %arrayidx16.27 = getelementptr inbounds i32, i32* %smem, i64 227
  %325 = load i32, i32* %arrayidx16.27, align 4
  %arrayidx17.27 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %325, i32* %arrayidx17.27, align 4
  %arrayidx22.27 = getelementptr inbounds i32, i32* %smem, i64 235
  %326 = load i32, i32* %arrayidx22.27, align 4
  %arrayidx23.27 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %326, i32* %arrayidx23.27, align 4
  %arrayidx28.27 = getelementptr inbounds i32, i32* %smem, i64 243
  %327 = load i32, i32* %arrayidx28.27, align 4
  %arrayidx29.27 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %327, i32* %arrayidx29.27, align 4
  %arrayidx34.27 = getelementptr inbounds i32, i32* %smem, i64 251
  %328 = load i32, i32* %arrayidx34.27, align 4
  %arrayidx35.27 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %328, i32* %arrayidx35.27, align 4
  %arrayidx40.27 = getelementptr inbounds i32, i32* %smem, i64 259
  %329 = load i32, i32* %arrayidx40.27, align 4
  %arrayidx41.27 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %329, i32* %arrayidx41.27, align 4
  %arrayidx46.27 = getelementptr inbounds i32, i32* %smem, i64 267
  %330 = load i32, i32* %arrayidx46.27, align 4
  %arrayidx47.27 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %330, i32* %arrayidx47.27, align 4
  %arrayidx52.27 = getelementptr inbounds i32, i32* %smem, i64 275
  %331 = load i32, i32* %arrayidx52.27, align 4
  %arrayidx53.27 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %331, i32* %arrayidx53.27, align 4
  br label %for.body56.27

for.body56.27:                                    ; preds = %for.body56.27, %for.end.27
  %indvars.iv5.27 = phi i64 [ 0, %for.end.27 ], [ %indvars.iv.next6.27, %for.body56.27 ]
  %arrayidx58.27 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.27
  %332 = load i32, i32* %arrayidx58.27, align 4
  %333 = add nuw nsw i64 216, %indvars.iv5.27
  %arrayidx62.27 = getelementptr inbounds i32, i32* %DATA_x, i64 %333
  store i32 %332, i32* %arrayidx62.27, align 4
  %indvars.iv.next6.27 = add nuw nsw i64 %indvars.iv5.27, 1
  %exitcond8.27 = icmp ne i64 %indvars.iv.next6.27, 8
  br i1 %exitcond8.27, label %for.body56.27, label %for.inc66.27, !llvm.loop !24

for.inc66.27:                                     ; preds = %for.body56.27
  br label %for.body3.28

for.body3.28:                                     ; preds = %for.body3.28, %for.inc66.27
  %indvars.iv.28 = phi i64 [ 0, %for.inc66.27 ], [ %indvars.iv.next.28, %for.body3.28 ]
  %334 = add nuw nsw i64 224, %indvars.iv.28
  %arrayidx.28 = getelementptr inbounds i32, i32* %DATA_x, i64 %334
  %335 = load i32, i32* %arrayidx.28, align 4
  %arrayidx5.28 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.28
  store i32 %335, i32* %arrayidx5.28, align 4
  %indvars.iv.next.28 = add nuw nsw i64 %indvars.iv.28, 1
  %exitcond.28 = icmp ne i64 %indvars.iv.next.28, 8
  br i1 %exitcond.28, label %for.body3.28, label %for.end.28, !llvm.loop !23

for.end.28:                                       ; preds = %for.body3.28
  %arrayidx10.28 = getelementptr inbounds i32, i32* %smem, i64 220
  %336 = load i32, i32* %arrayidx10.28, align 4
  store i32 %336, i32* %data_x, align 4
  %arrayidx16.28 = getelementptr inbounds i32, i32* %smem, i64 228
  %337 = load i32, i32* %arrayidx16.28, align 4
  %arrayidx17.28 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %337, i32* %arrayidx17.28, align 4
  %arrayidx22.28 = getelementptr inbounds i32, i32* %smem, i64 236
  %338 = load i32, i32* %arrayidx22.28, align 4
  %arrayidx23.28 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %338, i32* %arrayidx23.28, align 4
  %arrayidx28.28 = getelementptr inbounds i32, i32* %smem, i64 244
  %339 = load i32, i32* %arrayidx28.28, align 4
  %arrayidx29.28 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %339, i32* %arrayidx29.28, align 4
  %arrayidx34.28 = getelementptr inbounds i32, i32* %smem, i64 252
  %340 = load i32, i32* %arrayidx34.28, align 4
  %arrayidx35.28 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %340, i32* %arrayidx35.28, align 4
  %arrayidx40.28 = getelementptr inbounds i32, i32* %smem, i64 260
  %341 = load i32, i32* %arrayidx40.28, align 4
  %arrayidx41.28 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %341, i32* %arrayidx41.28, align 4
  %arrayidx46.28 = getelementptr inbounds i32, i32* %smem, i64 268
  %342 = load i32, i32* %arrayidx46.28, align 4
  %arrayidx47.28 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %342, i32* %arrayidx47.28, align 4
  %arrayidx52.28 = getelementptr inbounds i32, i32* %smem, i64 276
  %343 = load i32, i32* %arrayidx52.28, align 4
  %arrayidx53.28 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %343, i32* %arrayidx53.28, align 4
  br label %for.body56.28

for.body56.28:                                    ; preds = %for.body56.28, %for.end.28
  %indvars.iv5.28 = phi i64 [ 0, %for.end.28 ], [ %indvars.iv.next6.28, %for.body56.28 ]
  %arrayidx58.28 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.28
  %344 = load i32, i32* %arrayidx58.28, align 4
  %345 = add nuw nsw i64 224, %indvars.iv5.28
  %arrayidx62.28 = getelementptr inbounds i32, i32* %DATA_x, i64 %345
  store i32 %344, i32* %arrayidx62.28, align 4
  %indvars.iv.next6.28 = add nuw nsw i64 %indvars.iv5.28, 1
  %exitcond8.28 = icmp ne i64 %indvars.iv.next6.28, 8
  br i1 %exitcond8.28, label %for.body56.28, label %for.inc66.28, !llvm.loop !24

for.inc66.28:                                     ; preds = %for.body56.28
  br label %for.body3.29

for.body3.29:                                     ; preds = %for.body3.29, %for.inc66.28
  %indvars.iv.29 = phi i64 [ 0, %for.inc66.28 ], [ %indvars.iv.next.29, %for.body3.29 ]
  %346 = add nuw nsw i64 232, %indvars.iv.29
  %arrayidx.29 = getelementptr inbounds i32, i32* %DATA_x, i64 %346
  %347 = load i32, i32* %arrayidx.29, align 4
  %arrayidx5.29 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.29
  store i32 %347, i32* %arrayidx5.29, align 4
  %indvars.iv.next.29 = add nuw nsw i64 %indvars.iv.29, 1
  %exitcond.29 = icmp ne i64 %indvars.iv.next.29, 8
  br i1 %exitcond.29, label %for.body3.29, label %for.end.29, !llvm.loop !23

for.end.29:                                       ; preds = %for.body3.29
  %arrayidx10.29 = getelementptr inbounds i32, i32* %smem, i64 221
  %348 = load i32, i32* %arrayidx10.29, align 4
  store i32 %348, i32* %data_x, align 4
  %arrayidx16.29 = getelementptr inbounds i32, i32* %smem, i64 229
  %349 = load i32, i32* %arrayidx16.29, align 4
  %arrayidx17.29 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %349, i32* %arrayidx17.29, align 4
  %arrayidx22.29 = getelementptr inbounds i32, i32* %smem, i64 237
  %350 = load i32, i32* %arrayidx22.29, align 4
  %arrayidx23.29 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %350, i32* %arrayidx23.29, align 4
  %arrayidx28.29 = getelementptr inbounds i32, i32* %smem, i64 245
  %351 = load i32, i32* %arrayidx28.29, align 4
  %arrayidx29.29 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %351, i32* %arrayidx29.29, align 4
  %arrayidx34.29 = getelementptr inbounds i32, i32* %smem, i64 253
  %352 = load i32, i32* %arrayidx34.29, align 4
  %arrayidx35.29 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %352, i32* %arrayidx35.29, align 4
  %arrayidx40.29 = getelementptr inbounds i32, i32* %smem, i64 261
  %353 = load i32, i32* %arrayidx40.29, align 4
  %arrayidx41.29 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %353, i32* %arrayidx41.29, align 4
  %arrayidx46.29 = getelementptr inbounds i32, i32* %smem, i64 269
  %354 = load i32, i32* %arrayidx46.29, align 4
  %arrayidx47.29 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %354, i32* %arrayidx47.29, align 4
  %arrayidx52.29 = getelementptr inbounds i32, i32* %smem, i64 277
  %355 = load i32, i32* %arrayidx52.29, align 4
  %arrayidx53.29 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %355, i32* %arrayidx53.29, align 4
  br label %for.body56.29

for.body56.29:                                    ; preds = %for.body56.29, %for.end.29
  %indvars.iv5.29 = phi i64 [ 0, %for.end.29 ], [ %indvars.iv.next6.29, %for.body56.29 ]
  %arrayidx58.29 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.29
  %356 = load i32, i32* %arrayidx58.29, align 4
  %357 = add nuw nsw i64 232, %indvars.iv5.29
  %arrayidx62.29 = getelementptr inbounds i32, i32* %DATA_x, i64 %357
  store i32 %356, i32* %arrayidx62.29, align 4
  %indvars.iv.next6.29 = add nuw nsw i64 %indvars.iv5.29, 1
  %exitcond8.29 = icmp ne i64 %indvars.iv.next6.29, 8
  br i1 %exitcond8.29, label %for.body56.29, label %for.inc66.29, !llvm.loop !24

for.inc66.29:                                     ; preds = %for.body56.29
  br label %for.body3.30

for.body3.30:                                     ; preds = %for.body3.30, %for.inc66.29
  %indvars.iv.30 = phi i64 [ 0, %for.inc66.29 ], [ %indvars.iv.next.30, %for.body3.30 ]
  %358 = add nuw nsw i64 240, %indvars.iv.30
  %arrayidx.30 = getelementptr inbounds i32, i32* %DATA_x, i64 %358
  %359 = load i32, i32* %arrayidx.30, align 4
  %arrayidx5.30 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.30
  store i32 %359, i32* %arrayidx5.30, align 4
  %indvars.iv.next.30 = add nuw nsw i64 %indvars.iv.30, 1
  %exitcond.30 = icmp ne i64 %indvars.iv.next.30, 8
  br i1 %exitcond.30, label %for.body3.30, label %for.end.30, !llvm.loop !23

for.end.30:                                       ; preds = %for.body3.30
  %arrayidx10.30 = getelementptr inbounds i32, i32* %smem, i64 222
  %360 = load i32, i32* %arrayidx10.30, align 4
  store i32 %360, i32* %data_x, align 4
  %arrayidx16.30 = getelementptr inbounds i32, i32* %smem, i64 230
  %361 = load i32, i32* %arrayidx16.30, align 4
  %arrayidx17.30 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %361, i32* %arrayidx17.30, align 4
  %arrayidx22.30 = getelementptr inbounds i32, i32* %smem, i64 238
  %362 = load i32, i32* %arrayidx22.30, align 4
  %arrayidx23.30 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %362, i32* %arrayidx23.30, align 4
  %arrayidx28.30 = getelementptr inbounds i32, i32* %smem, i64 246
  %363 = load i32, i32* %arrayidx28.30, align 4
  %arrayidx29.30 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %363, i32* %arrayidx29.30, align 4
  %arrayidx34.30 = getelementptr inbounds i32, i32* %smem, i64 254
  %364 = load i32, i32* %arrayidx34.30, align 4
  %arrayidx35.30 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %364, i32* %arrayidx35.30, align 4
  %arrayidx40.30 = getelementptr inbounds i32, i32* %smem, i64 262
  %365 = load i32, i32* %arrayidx40.30, align 4
  %arrayidx41.30 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %365, i32* %arrayidx41.30, align 4
  %arrayidx46.30 = getelementptr inbounds i32, i32* %smem, i64 270
  %366 = load i32, i32* %arrayidx46.30, align 4
  %arrayidx47.30 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %366, i32* %arrayidx47.30, align 4
  %arrayidx52.30 = getelementptr inbounds i32, i32* %smem, i64 278
  %367 = load i32, i32* %arrayidx52.30, align 4
  %arrayidx53.30 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %367, i32* %arrayidx53.30, align 4
  br label %for.body56.30

for.body56.30:                                    ; preds = %for.body56.30, %for.end.30
  %indvars.iv5.30 = phi i64 [ 0, %for.end.30 ], [ %indvars.iv.next6.30, %for.body56.30 ]
  %arrayidx58.30 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.30
  %368 = load i32, i32* %arrayidx58.30, align 4
  %369 = add nuw nsw i64 240, %indvars.iv5.30
  %arrayidx62.30 = getelementptr inbounds i32, i32* %DATA_x, i64 %369
  store i32 %368, i32* %arrayidx62.30, align 4
  %indvars.iv.next6.30 = add nuw nsw i64 %indvars.iv5.30, 1
  %exitcond8.30 = icmp ne i64 %indvars.iv.next6.30, 8
  br i1 %exitcond8.30, label %for.body56.30, label %for.inc66.30, !llvm.loop !24

for.inc66.30:                                     ; preds = %for.body56.30
  br label %for.body3.31

for.body3.31:                                     ; preds = %for.body3.31, %for.inc66.30
  %indvars.iv.31 = phi i64 [ 0, %for.inc66.30 ], [ %indvars.iv.next.31, %for.body3.31 ]
  %370 = add nuw nsw i64 248, %indvars.iv.31
  %arrayidx.31 = getelementptr inbounds i32, i32* %DATA_x, i64 %370
  %371 = load i32, i32* %arrayidx.31, align 4
  %arrayidx5.31 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.31
  store i32 %371, i32* %arrayidx5.31, align 4
  %indvars.iv.next.31 = add nuw nsw i64 %indvars.iv.31, 1
  %exitcond.31 = icmp ne i64 %indvars.iv.next.31, 8
  br i1 %exitcond.31, label %for.body3.31, label %for.end.31, !llvm.loop !23

for.end.31:                                       ; preds = %for.body3.31
  %arrayidx10.31 = getelementptr inbounds i32, i32* %smem, i64 223
  %372 = load i32, i32* %arrayidx10.31, align 4
  store i32 %372, i32* %data_x, align 4
  %arrayidx16.31 = getelementptr inbounds i32, i32* %smem, i64 231
  %373 = load i32, i32* %arrayidx16.31, align 4
  %arrayidx17.31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %373, i32* %arrayidx17.31, align 4
  %arrayidx22.31 = getelementptr inbounds i32, i32* %smem, i64 239
  %374 = load i32, i32* %arrayidx22.31, align 4
  %arrayidx23.31 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %374, i32* %arrayidx23.31, align 4
  %arrayidx28.31 = getelementptr inbounds i32, i32* %smem, i64 247
  %375 = load i32, i32* %arrayidx28.31, align 4
  %arrayidx29.31 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %375, i32* %arrayidx29.31, align 4
  %arrayidx34.31 = getelementptr inbounds i32, i32* %smem, i64 255
  %376 = load i32, i32* %arrayidx34.31, align 4
  %arrayidx35.31 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %376, i32* %arrayidx35.31, align 4
  %arrayidx40.31 = getelementptr inbounds i32, i32* %smem, i64 263
  %377 = load i32, i32* %arrayidx40.31, align 4
  %arrayidx41.31 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %377, i32* %arrayidx41.31, align 4
  %arrayidx46.31 = getelementptr inbounds i32, i32* %smem, i64 271
  %378 = load i32, i32* %arrayidx46.31, align 4
  %arrayidx47.31 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %378, i32* %arrayidx47.31, align 4
  %arrayidx52.31 = getelementptr inbounds i32, i32* %smem, i64 279
  %379 = load i32, i32* %arrayidx52.31, align 4
  %arrayidx53.31 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %379, i32* %arrayidx53.31, align 4
  br label %for.body56.31

for.body56.31:                                    ; preds = %for.body56.31, %for.end.31
  %indvars.iv5.31 = phi i64 [ 0, %for.end.31 ], [ %indvars.iv.next6.31, %for.body56.31 ]
  %arrayidx58.31 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.31
  %380 = load i32, i32* %arrayidx58.31, align 4
  %381 = add nuw nsw i64 248, %indvars.iv5.31
  %arrayidx62.31 = getelementptr inbounds i32, i32* %DATA_x, i64 %381
  store i32 %380, i32* %arrayidx62.31, align 4
  %indvars.iv.next6.31 = add nuw nsw i64 %indvars.iv5.31, 1
  %exitcond8.31 = icmp ne i64 %indvars.iv.next6.31, 8
  br i1 %exitcond8.31, label %for.body56.31, label %for.inc66.31, !llvm.loop !24

for.inc66.31:                                     ; preds = %for.body56.31
  br label %for.body3.32

for.body3.32:                                     ; preds = %for.body3.32, %for.inc66.31
  %indvars.iv.32 = phi i64 [ 0, %for.inc66.31 ], [ %indvars.iv.next.32, %for.body3.32 ]
  %382 = add nuw nsw i64 256, %indvars.iv.32
  %arrayidx.32 = getelementptr inbounds i32, i32* %DATA_x, i64 %382
  %383 = load i32, i32* %arrayidx.32, align 4
  %arrayidx5.32 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.32
  store i32 %383, i32* %arrayidx5.32, align 4
  %indvars.iv.next.32 = add nuw nsw i64 %indvars.iv.32, 1
  %exitcond.32 = icmp ne i64 %indvars.iv.next.32, 8
  br i1 %exitcond.32, label %for.body3.32, label %for.end.32, !llvm.loop !23

for.end.32:                                       ; preds = %for.body3.32
  %arrayidx10.32 = getelementptr inbounds i32, i32* %smem, i64 288
  %384 = load i32, i32* %arrayidx10.32, align 4
  store i32 %384, i32* %data_x, align 4
  %arrayidx16.32 = getelementptr inbounds i32, i32* %smem, i64 296
  %385 = load i32, i32* %arrayidx16.32, align 4
  %arrayidx17.32 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %385, i32* %arrayidx17.32, align 4
  %arrayidx22.32 = getelementptr inbounds i32, i32* %smem, i64 304
  %386 = load i32, i32* %arrayidx22.32, align 4
  %arrayidx23.32 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %386, i32* %arrayidx23.32, align 4
  %arrayidx28.32 = getelementptr inbounds i32, i32* %smem, i64 312
  %387 = load i32, i32* %arrayidx28.32, align 4
  %arrayidx29.32 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %387, i32* %arrayidx29.32, align 4
  %arrayidx34.32 = getelementptr inbounds i32, i32* %smem, i64 320
  %388 = load i32, i32* %arrayidx34.32, align 4
  %arrayidx35.32 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %388, i32* %arrayidx35.32, align 4
  %arrayidx40.32 = getelementptr inbounds i32, i32* %smem, i64 328
  %389 = load i32, i32* %arrayidx40.32, align 4
  %arrayidx41.32 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %389, i32* %arrayidx41.32, align 4
  %arrayidx46.32 = getelementptr inbounds i32, i32* %smem, i64 336
  %390 = load i32, i32* %arrayidx46.32, align 4
  %arrayidx47.32 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %390, i32* %arrayidx47.32, align 4
  %arrayidx52.32 = getelementptr inbounds i32, i32* %smem, i64 344
  %391 = load i32, i32* %arrayidx52.32, align 4
  %arrayidx53.32 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %391, i32* %arrayidx53.32, align 4
  br label %for.body56.32

for.body56.32:                                    ; preds = %for.body56.32, %for.end.32
  %indvars.iv5.32 = phi i64 [ 0, %for.end.32 ], [ %indvars.iv.next6.32, %for.body56.32 ]
  %arrayidx58.32 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.32
  %392 = load i32, i32* %arrayidx58.32, align 4
  %393 = add nuw nsw i64 256, %indvars.iv5.32
  %arrayidx62.32 = getelementptr inbounds i32, i32* %DATA_x, i64 %393
  store i32 %392, i32* %arrayidx62.32, align 4
  %indvars.iv.next6.32 = add nuw nsw i64 %indvars.iv5.32, 1
  %exitcond8.32 = icmp ne i64 %indvars.iv.next6.32, 8
  br i1 %exitcond8.32, label %for.body56.32, label %for.inc66.32, !llvm.loop !24

for.inc66.32:                                     ; preds = %for.body56.32
  br label %for.body3.33

for.body3.33:                                     ; preds = %for.body3.33, %for.inc66.32
  %indvars.iv.33 = phi i64 [ 0, %for.inc66.32 ], [ %indvars.iv.next.33, %for.body3.33 ]
  %394 = add nuw nsw i64 264, %indvars.iv.33
  %arrayidx.33 = getelementptr inbounds i32, i32* %DATA_x, i64 %394
  %395 = load i32, i32* %arrayidx.33, align 4
  %arrayidx5.33 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.33
  store i32 %395, i32* %arrayidx5.33, align 4
  %indvars.iv.next.33 = add nuw nsw i64 %indvars.iv.33, 1
  %exitcond.33 = icmp ne i64 %indvars.iv.next.33, 8
  br i1 %exitcond.33, label %for.body3.33, label %for.end.33, !llvm.loop !23

for.end.33:                                       ; preds = %for.body3.33
  %arrayidx10.33 = getelementptr inbounds i32, i32* %smem, i64 289
  %396 = load i32, i32* %arrayidx10.33, align 4
  store i32 %396, i32* %data_x, align 4
  %arrayidx16.33 = getelementptr inbounds i32, i32* %smem, i64 297
  %397 = load i32, i32* %arrayidx16.33, align 4
  %arrayidx17.33 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %397, i32* %arrayidx17.33, align 4
  %arrayidx22.33 = getelementptr inbounds i32, i32* %smem, i64 305
  %398 = load i32, i32* %arrayidx22.33, align 4
  %arrayidx23.33 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %398, i32* %arrayidx23.33, align 4
  %arrayidx28.33 = getelementptr inbounds i32, i32* %smem, i64 313
  %399 = load i32, i32* %arrayidx28.33, align 4
  %arrayidx29.33 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %399, i32* %arrayidx29.33, align 4
  %arrayidx34.33 = getelementptr inbounds i32, i32* %smem, i64 321
  %400 = load i32, i32* %arrayidx34.33, align 4
  %arrayidx35.33 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %400, i32* %arrayidx35.33, align 4
  %arrayidx40.33 = getelementptr inbounds i32, i32* %smem, i64 329
  %401 = load i32, i32* %arrayidx40.33, align 4
  %arrayidx41.33 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %401, i32* %arrayidx41.33, align 4
  %arrayidx46.33 = getelementptr inbounds i32, i32* %smem, i64 337
  %402 = load i32, i32* %arrayidx46.33, align 4
  %arrayidx47.33 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %402, i32* %arrayidx47.33, align 4
  %arrayidx52.33 = getelementptr inbounds i32, i32* %smem, i64 345
  %403 = load i32, i32* %arrayidx52.33, align 4
  %arrayidx53.33 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %403, i32* %arrayidx53.33, align 4
  br label %for.body56.33

for.body56.33:                                    ; preds = %for.body56.33, %for.end.33
  %indvars.iv5.33 = phi i64 [ 0, %for.end.33 ], [ %indvars.iv.next6.33, %for.body56.33 ]
  %arrayidx58.33 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.33
  %404 = load i32, i32* %arrayidx58.33, align 4
  %405 = add nuw nsw i64 264, %indvars.iv5.33
  %arrayidx62.33 = getelementptr inbounds i32, i32* %DATA_x, i64 %405
  store i32 %404, i32* %arrayidx62.33, align 4
  %indvars.iv.next6.33 = add nuw nsw i64 %indvars.iv5.33, 1
  %exitcond8.33 = icmp ne i64 %indvars.iv.next6.33, 8
  br i1 %exitcond8.33, label %for.body56.33, label %for.inc66.33, !llvm.loop !24

for.inc66.33:                                     ; preds = %for.body56.33
  br label %for.body3.34

for.body3.34:                                     ; preds = %for.body3.34, %for.inc66.33
  %indvars.iv.34 = phi i64 [ 0, %for.inc66.33 ], [ %indvars.iv.next.34, %for.body3.34 ]
  %406 = add nuw nsw i64 272, %indvars.iv.34
  %arrayidx.34 = getelementptr inbounds i32, i32* %DATA_x, i64 %406
  %407 = load i32, i32* %arrayidx.34, align 4
  %arrayidx5.34 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.34
  store i32 %407, i32* %arrayidx5.34, align 4
  %indvars.iv.next.34 = add nuw nsw i64 %indvars.iv.34, 1
  %exitcond.34 = icmp ne i64 %indvars.iv.next.34, 8
  br i1 %exitcond.34, label %for.body3.34, label %for.end.34, !llvm.loop !23

for.end.34:                                       ; preds = %for.body3.34
  %arrayidx10.34 = getelementptr inbounds i32, i32* %smem, i64 290
  %408 = load i32, i32* %arrayidx10.34, align 4
  store i32 %408, i32* %data_x, align 4
  %arrayidx16.34 = getelementptr inbounds i32, i32* %smem, i64 298
  %409 = load i32, i32* %arrayidx16.34, align 4
  %arrayidx17.34 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %409, i32* %arrayidx17.34, align 4
  %arrayidx22.34 = getelementptr inbounds i32, i32* %smem, i64 306
  %410 = load i32, i32* %arrayidx22.34, align 4
  %arrayidx23.34 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %410, i32* %arrayidx23.34, align 4
  %arrayidx28.34 = getelementptr inbounds i32, i32* %smem, i64 314
  %411 = load i32, i32* %arrayidx28.34, align 4
  %arrayidx29.34 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %411, i32* %arrayidx29.34, align 4
  %arrayidx34.34 = getelementptr inbounds i32, i32* %smem, i64 322
  %412 = load i32, i32* %arrayidx34.34, align 4
  %arrayidx35.34 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %412, i32* %arrayidx35.34, align 4
  %arrayidx40.34 = getelementptr inbounds i32, i32* %smem, i64 330
  %413 = load i32, i32* %arrayidx40.34, align 4
  %arrayidx41.34 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %413, i32* %arrayidx41.34, align 4
  %arrayidx46.34 = getelementptr inbounds i32, i32* %smem, i64 338
  %414 = load i32, i32* %arrayidx46.34, align 4
  %arrayidx47.34 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %414, i32* %arrayidx47.34, align 4
  %arrayidx52.34 = getelementptr inbounds i32, i32* %smem, i64 346
  %415 = load i32, i32* %arrayidx52.34, align 4
  %arrayidx53.34 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %415, i32* %arrayidx53.34, align 4
  br label %for.body56.34

for.body56.34:                                    ; preds = %for.body56.34, %for.end.34
  %indvars.iv5.34 = phi i64 [ 0, %for.end.34 ], [ %indvars.iv.next6.34, %for.body56.34 ]
  %arrayidx58.34 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.34
  %416 = load i32, i32* %arrayidx58.34, align 4
  %417 = add nuw nsw i64 272, %indvars.iv5.34
  %arrayidx62.34 = getelementptr inbounds i32, i32* %DATA_x, i64 %417
  store i32 %416, i32* %arrayidx62.34, align 4
  %indvars.iv.next6.34 = add nuw nsw i64 %indvars.iv5.34, 1
  %exitcond8.34 = icmp ne i64 %indvars.iv.next6.34, 8
  br i1 %exitcond8.34, label %for.body56.34, label %for.inc66.34, !llvm.loop !24

for.inc66.34:                                     ; preds = %for.body56.34
  br label %for.body3.35

for.body3.35:                                     ; preds = %for.body3.35, %for.inc66.34
  %indvars.iv.35 = phi i64 [ 0, %for.inc66.34 ], [ %indvars.iv.next.35, %for.body3.35 ]
  %418 = add nuw nsw i64 280, %indvars.iv.35
  %arrayidx.35 = getelementptr inbounds i32, i32* %DATA_x, i64 %418
  %419 = load i32, i32* %arrayidx.35, align 4
  %arrayidx5.35 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.35
  store i32 %419, i32* %arrayidx5.35, align 4
  %indvars.iv.next.35 = add nuw nsw i64 %indvars.iv.35, 1
  %exitcond.35 = icmp ne i64 %indvars.iv.next.35, 8
  br i1 %exitcond.35, label %for.body3.35, label %for.end.35, !llvm.loop !23

for.end.35:                                       ; preds = %for.body3.35
  %arrayidx10.35 = getelementptr inbounds i32, i32* %smem, i64 291
  %420 = load i32, i32* %arrayidx10.35, align 4
  store i32 %420, i32* %data_x, align 4
  %arrayidx16.35 = getelementptr inbounds i32, i32* %smem, i64 299
  %421 = load i32, i32* %arrayidx16.35, align 4
  %arrayidx17.35 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %421, i32* %arrayidx17.35, align 4
  %arrayidx22.35 = getelementptr inbounds i32, i32* %smem, i64 307
  %422 = load i32, i32* %arrayidx22.35, align 4
  %arrayidx23.35 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %422, i32* %arrayidx23.35, align 4
  %arrayidx28.35 = getelementptr inbounds i32, i32* %smem, i64 315
  %423 = load i32, i32* %arrayidx28.35, align 4
  %arrayidx29.35 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %423, i32* %arrayidx29.35, align 4
  %arrayidx34.35 = getelementptr inbounds i32, i32* %smem, i64 323
  %424 = load i32, i32* %arrayidx34.35, align 4
  %arrayidx35.35 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %424, i32* %arrayidx35.35, align 4
  %arrayidx40.35 = getelementptr inbounds i32, i32* %smem, i64 331
  %425 = load i32, i32* %arrayidx40.35, align 4
  %arrayidx41.35 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %425, i32* %arrayidx41.35, align 4
  %arrayidx46.35 = getelementptr inbounds i32, i32* %smem, i64 339
  %426 = load i32, i32* %arrayidx46.35, align 4
  %arrayidx47.35 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %426, i32* %arrayidx47.35, align 4
  %arrayidx52.35 = getelementptr inbounds i32, i32* %smem, i64 347
  %427 = load i32, i32* %arrayidx52.35, align 4
  %arrayidx53.35 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %427, i32* %arrayidx53.35, align 4
  br label %for.body56.35

for.body56.35:                                    ; preds = %for.body56.35, %for.end.35
  %indvars.iv5.35 = phi i64 [ 0, %for.end.35 ], [ %indvars.iv.next6.35, %for.body56.35 ]
  %arrayidx58.35 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.35
  %428 = load i32, i32* %arrayidx58.35, align 4
  %429 = add nuw nsw i64 280, %indvars.iv5.35
  %arrayidx62.35 = getelementptr inbounds i32, i32* %DATA_x, i64 %429
  store i32 %428, i32* %arrayidx62.35, align 4
  %indvars.iv.next6.35 = add nuw nsw i64 %indvars.iv5.35, 1
  %exitcond8.35 = icmp ne i64 %indvars.iv.next6.35, 8
  br i1 %exitcond8.35, label %for.body56.35, label %for.inc66.35, !llvm.loop !24

for.inc66.35:                                     ; preds = %for.body56.35
  br label %for.body3.36

for.body3.36:                                     ; preds = %for.body3.36, %for.inc66.35
  %indvars.iv.36 = phi i64 [ 0, %for.inc66.35 ], [ %indvars.iv.next.36, %for.body3.36 ]
  %430 = add nuw nsw i64 288, %indvars.iv.36
  %arrayidx.36 = getelementptr inbounds i32, i32* %DATA_x, i64 %430
  %431 = load i32, i32* %arrayidx.36, align 4
  %arrayidx5.36 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.36
  store i32 %431, i32* %arrayidx5.36, align 4
  %indvars.iv.next.36 = add nuw nsw i64 %indvars.iv.36, 1
  %exitcond.36 = icmp ne i64 %indvars.iv.next.36, 8
  br i1 %exitcond.36, label %for.body3.36, label %for.end.36, !llvm.loop !23

for.end.36:                                       ; preds = %for.body3.36
  %arrayidx10.36 = getelementptr inbounds i32, i32* %smem, i64 292
  %432 = load i32, i32* %arrayidx10.36, align 4
  store i32 %432, i32* %data_x, align 4
  %arrayidx16.36 = getelementptr inbounds i32, i32* %smem, i64 300
  %433 = load i32, i32* %arrayidx16.36, align 4
  %arrayidx17.36 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %433, i32* %arrayidx17.36, align 4
  %arrayidx22.36 = getelementptr inbounds i32, i32* %smem, i64 308
  %434 = load i32, i32* %arrayidx22.36, align 4
  %arrayidx23.36 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %434, i32* %arrayidx23.36, align 4
  %arrayidx28.36 = getelementptr inbounds i32, i32* %smem, i64 316
  %435 = load i32, i32* %arrayidx28.36, align 4
  %arrayidx29.36 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %435, i32* %arrayidx29.36, align 4
  %arrayidx34.36 = getelementptr inbounds i32, i32* %smem, i64 324
  %436 = load i32, i32* %arrayidx34.36, align 4
  %arrayidx35.36 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %436, i32* %arrayidx35.36, align 4
  %arrayidx40.36 = getelementptr inbounds i32, i32* %smem, i64 332
  %437 = load i32, i32* %arrayidx40.36, align 4
  %arrayidx41.36 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %437, i32* %arrayidx41.36, align 4
  %arrayidx46.36 = getelementptr inbounds i32, i32* %smem, i64 340
  %438 = load i32, i32* %arrayidx46.36, align 4
  %arrayidx47.36 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %438, i32* %arrayidx47.36, align 4
  %arrayidx52.36 = getelementptr inbounds i32, i32* %smem, i64 348
  %439 = load i32, i32* %arrayidx52.36, align 4
  %arrayidx53.36 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %439, i32* %arrayidx53.36, align 4
  br label %for.body56.36

for.body56.36:                                    ; preds = %for.body56.36, %for.end.36
  %indvars.iv5.36 = phi i64 [ 0, %for.end.36 ], [ %indvars.iv.next6.36, %for.body56.36 ]
  %arrayidx58.36 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.36
  %440 = load i32, i32* %arrayidx58.36, align 4
  %441 = add nuw nsw i64 288, %indvars.iv5.36
  %arrayidx62.36 = getelementptr inbounds i32, i32* %DATA_x, i64 %441
  store i32 %440, i32* %arrayidx62.36, align 4
  %indvars.iv.next6.36 = add nuw nsw i64 %indvars.iv5.36, 1
  %exitcond8.36 = icmp ne i64 %indvars.iv.next6.36, 8
  br i1 %exitcond8.36, label %for.body56.36, label %for.inc66.36, !llvm.loop !24

for.inc66.36:                                     ; preds = %for.body56.36
  br label %for.body3.37

for.body3.37:                                     ; preds = %for.body3.37, %for.inc66.36
  %indvars.iv.37 = phi i64 [ 0, %for.inc66.36 ], [ %indvars.iv.next.37, %for.body3.37 ]
  %442 = add nuw nsw i64 296, %indvars.iv.37
  %arrayidx.37 = getelementptr inbounds i32, i32* %DATA_x, i64 %442
  %443 = load i32, i32* %arrayidx.37, align 4
  %arrayidx5.37 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.37
  store i32 %443, i32* %arrayidx5.37, align 4
  %indvars.iv.next.37 = add nuw nsw i64 %indvars.iv.37, 1
  %exitcond.37 = icmp ne i64 %indvars.iv.next.37, 8
  br i1 %exitcond.37, label %for.body3.37, label %for.end.37, !llvm.loop !23

for.end.37:                                       ; preds = %for.body3.37
  %arrayidx10.37 = getelementptr inbounds i32, i32* %smem, i64 293
  %444 = load i32, i32* %arrayidx10.37, align 4
  store i32 %444, i32* %data_x, align 4
  %arrayidx16.37 = getelementptr inbounds i32, i32* %smem, i64 301
  %445 = load i32, i32* %arrayidx16.37, align 4
  %arrayidx17.37 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %445, i32* %arrayidx17.37, align 4
  %arrayidx22.37 = getelementptr inbounds i32, i32* %smem, i64 309
  %446 = load i32, i32* %arrayidx22.37, align 4
  %arrayidx23.37 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %446, i32* %arrayidx23.37, align 4
  %arrayidx28.37 = getelementptr inbounds i32, i32* %smem, i64 317
  %447 = load i32, i32* %arrayidx28.37, align 4
  %arrayidx29.37 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %447, i32* %arrayidx29.37, align 4
  %arrayidx34.37 = getelementptr inbounds i32, i32* %smem, i64 325
  %448 = load i32, i32* %arrayidx34.37, align 4
  %arrayidx35.37 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %448, i32* %arrayidx35.37, align 4
  %arrayidx40.37 = getelementptr inbounds i32, i32* %smem, i64 333
  %449 = load i32, i32* %arrayidx40.37, align 4
  %arrayidx41.37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %449, i32* %arrayidx41.37, align 4
  %arrayidx46.37 = getelementptr inbounds i32, i32* %smem, i64 341
  %450 = load i32, i32* %arrayidx46.37, align 4
  %arrayidx47.37 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %450, i32* %arrayidx47.37, align 4
  %arrayidx52.37 = getelementptr inbounds i32, i32* %smem, i64 349
  %451 = load i32, i32* %arrayidx52.37, align 4
  %arrayidx53.37 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %451, i32* %arrayidx53.37, align 4
  br label %for.body56.37

for.body56.37:                                    ; preds = %for.body56.37, %for.end.37
  %indvars.iv5.37 = phi i64 [ 0, %for.end.37 ], [ %indvars.iv.next6.37, %for.body56.37 ]
  %arrayidx58.37 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.37
  %452 = load i32, i32* %arrayidx58.37, align 4
  %453 = add nuw nsw i64 296, %indvars.iv5.37
  %arrayidx62.37 = getelementptr inbounds i32, i32* %DATA_x, i64 %453
  store i32 %452, i32* %arrayidx62.37, align 4
  %indvars.iv.next6.37 = add nuw nsw i64 %indvars.iv5.37, 1
  %exitcond8.37 = icmp ne i64 %indvars.iv.next6.37, 8
  br i1 %exitcond8.37, label %for.body56.37, label %for.inc66.37, !llvm.loop !24

for.inc66.37:                                     ; preds = %for.body56.37
  br label %for.body3.38

for.body3.38:                                     ; preds = %for.body3.38, %for.inc66.37
  %indvars.iv.38 = phi i64 [ 0, %for.inc66.37 ], [ %indvars.iv.next.38, %for.body3.38 ]
  %454 = add nuw nsw i64 304, %indvars.iv.38
  %arrayidx.38 = getelementptr inbounds i32, i32* %DATA_x, i64 %454
  %455 = load i32, i32* %arrayidx.38, align 4
  %arrayidx5.38 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.38
  store i32 %455, i32* %arrayidx5.38, align 4
  %indvars.iv.next.38 = add nuw nsw i64 %indvars.iv.38, 1
  %exitcond.38 = icmp ne i64 %indvars.iv.next.38, 8
  br i1 %exitcond.38, label %for.body3.38, label %for.end.38, !llvm.loop !23

for.end.38:                                       ; preds = %for.body3.38
  %arrayidx10.38 = getelementptr inbounds i32, i32* %smem, i64 294
  %456 = load i32, i32* %arrayidx10.38, align 4
  store i32 %456, i32* %data_x, align 4
  %arrayidx16.38 = getelementptr inbounds i32, i32* %smem, i64 302
  %457 = load i32, i32* %arrayidx16.38, align 4
  %arrayidx17.38 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %457, i32* %arrayidx17.38, align 4
  %arrayidx22.38 = getelementptr inbounds i32, i32* %smem, i64 310
  %458 = load i32, i32* %arrayidx22.38, align 4
  %arrayidx23.38 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %458, i32* %arrayidx23.38, align 4
  %arrayidx28.38 = getelementptr inbounds i32, i32* %smem, i64 318
  %459 = load i32, i32* %arrayidx28.38, align 4
  %arrayidx29.38 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %459, i32* %arrayidx29.38, align 4
  %arrayidx34.38 = getelementptr inbounds i32, i32* %smem, i64 326
  %460 = load i32, i32* %arrayidx34.38, align 4
  %arrayidx35.38 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %460, i32* %arrayidx35.38, align 4
  %arrayidx40.38 = getelementptr inbounds i32, i32* %smem, i64 334
  %461 = load i32, i32* %arrayidx40.38, align 4
  %arrayidx41.38 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %461, i32* %arrayidx41.38, align 4
  %arrayidx46.38 = getelementptr inbounds i32, i32* %smem, i64 342
  %462 = load i32, i32* %arrayidx46.38, align 4
  %arrayidx47.38 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %462, i32* %arrayidx47.38, align 4
  %arrayidx52.38 = getelementptr inbounds i32, i32* %smem, i64 350
  %463 = load i32, i32* %arrayidx52.38, align 4
  %arrayidx53.38 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %463, i32* %arrayidx53.38, align 4
  br label %for.body56.38

for.body56.38:                                    ; preds = %for.body56.38, %for.end.38
  %indvars.iv5.38 = phi i64 [ 0, %for.end.38 ], [ %indvars.iv.next6.38, %for.body56.38 ]
  %arrayidx58.38 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.38
  %464 = load i32, i32* %arrayidx58.38, align 4
  %465 = add nuw nsw i64 304, %indvars.iv5.38
  %arrayidx62.38 = getelementptr inbounds i32, i32* %DATA_x, i64 %465
  store i32 %464, i32* %arrayidx62.38, align 4
  %indvars.iv.next6.38 = add nuw nsw i64 %indvars.iv5.38, 1
  %exitcond8.38 = icmp ne i64 %indvars.iv.next6.38, 8
  br i1 %exitcond8.38, label %for.body56.38, label %for.inc66.38, !llvm.loop !24

for.inc66.38:                                     ; preds = %for.body56.38
  br label %for.body3.39

for.body3.39:                                     ; preds = %for.body3.39, %for.inc66.38
  %indvars.iv.39 = phi i64 [ 0, %for.inc66.38 ], [ %indvars.iv.next.39, %for.body3.39 ]
  %466 = add nuw nsw i64 312, %indvars.iv.39
  %arrayidx.39 = getelementptr inbounds i32, i32* %DATA_x, i64 %466
  %467 = load i32, i32* %arrayidx.39, align 4
  %arrayidx5.39 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.39
  store i32 %467, i32* %arrayidx5.39, align 4
  %indvars.iv.next.39 = add nuw nsw i64 %indvars.iv.39, 1
  %exitcond.39 = icmp ne i64 %indvars.iv.next.39, 8
  br i1 %exitcond.39, label %for.body3.39, label %for.end.39, !llvm.loop !23

for.end.39:                                       ; preds = %for.body3.39
  %arrayidx10.39 = getelementptr inbounds i32, i32* %smem, i64 295
  %468 = load i32, i32* %arrayidx10.39, align 4
  store i32 %468, i32* %data_x, align 4
  %arrayidx16.39 = getelementptr inbounds i32, i32* %smem, i64 303
  %469 = load i32, i32* %arrayidx16.39, align 4
  %arrayidx17.39 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %469, i32* %arrayidx17.39, align 4
  %arrayidx22.39 = getelementptr inbounds i32, i32* %smem, i64 311
  %470 = load i32, i32* %arrayidx22.39, align 4
  %arrayidx23.39 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %470, i32* %arrayidx23.39, align 4
  %arrayidx28.39 = getelementptr inbounds i32, i32* %smem, i64 319
  %471 = load i32, i32* %arrayidx28.39, align 4
  %arrayidx29.39 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %471, i32* %arrayidx29.39, align 4
  %arrayidx34.39 = getelementptr inbounds i32, i32* %smem, i64 327
  %472 = load i32, i32* %arrayidx34.39, align 4
  %arrayidx35.39 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %472, i32* %arrayidx35.39, align 4
  %arrayidx40.39 = getelementptr inbounds i32, i32* %smem, i64 335
  %473 = load i32, i32* %arrayidx40.39, align 4
  %arrayidx41.39 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %473, i32* %arrayidx41.39, align 4
  %arrayidx46.39 = getelementptr inbounds i32, i32* %smem, i64 343
  %474 = load i32, i32* %arrayidx46.39, align 4
  %arrayidx47.39 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %474, i32* %arrayidx47.39, align 4
  %arrayidx52.39 = getelementptr inbounds i32, i32* %smem, i64 351
  %475 = load i32, i32* %arrayidx52.39, align 4
  %arrayidx53.39 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %475, i32* %arrayidx53.39, align 4
  br label %for.body56.39

for.body56.39:                                    ; preds = %for.body56.39, %for.end.39
  %indvars.iv5.39 = phi i64 [ 0, %for.end.39 ], [ %indvars.iv.next6.39, %for.body56.39 ]
  %arrayidx58.39 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.39
  %476 = load i32, i32* %arrayidx58.39, align 4
  %477 = add nuw nsw i64 312, %indvars.iv5.39
  %arrayidx62.39 = getelementptr inbounds i32, i32* %DATA_x, i64 %477
  store i32 %476, i32* %arrayidx62.39, align 4
  %indvars.iv.next6.39 = add nuw nsw i64 %indvars.iv5.39, 1
  %exitcond8.39 = icmp ne i64 %indvars.iv.next6.39, 8
  br i1 %exitcond8.39, label %for.body56.39, label %for.inc66.39, !llvm.loop !24

for.inc66.39:                                     ; preds = %for.body56.39
  br label %for.body3.40

for.body3.40:                                     ; preds = %for.body3.40, %for.inc66.39
  %indvars.iv.40 = phi i64 [ 0, %for.inc66.39 ], [ %indvars.iv.next.40, %for.body3.40 ]
  %478 = add nuw nsw i64 320, %indvars.iv.40
  %arrayidx.40 = getelementptr inbounds i32, i32* %DATA_x, i64 %478
  %479 = load i32, i32* %arrayidx.40, align 4
  %arrayidx5.40 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.40
  store i32 %479, i32* %arrayidx5.40, align 4
  %indvars.iv.next.40 = add nuw nsw i64 %indvars.iv.40, 1
  %exitcond.40 = icmp ne i64 %indvars.iv.next.40, 8
  br i1 %exitcond.40, label %for.body3.40, label %for.end.40, !llvm.loop !23

for.end.40:                                       ; preds = %for.body3.40
  %arrayidx10.40 = getelementptr inbounds i32, i32* %smem, i64 360
  %480 = load i32, i32* %arrayidx10.40, align 4
  store i32 %480, i32* %data_x, align 4
  %arrayidx16.40 = getelementptr inbounds i32, i32* %smem, i64 368
  %481 = load i32, i32* %arrayidx16.40, align 4
  %arrayidx17.40 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %481, i32* %arrayidx17.40, align 4
  %arrayidx22.40 = getelementptr inbounds i32, i32* %smem, i64 376
  %482 = load i32, i32* %arrayidx22.40, align 4
  %arrayidx23.40 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %482, i32* %arrayidx23.40, align 4
  %arrayidx28.40 = getelementptr inbounds i32, i32* %smem, i64 384
  %483 = load i32, i32* %arrayidx28.40, align 4
  %arrayidx29.40 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %483, i32* %arrayidx29.40, align 4
  %arrayidx34.40 = getelementptr inbounds i32, i32* %smem, i64 392
  %484 = load i32, i32* %arrayidx34.40, align 4
  %arrayidx35.40 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %484, i32* %arrayidx35.40, align 4
  %arrayidx40.40 = getelementptr inbounds i32, i32* %smem, i64 400
  %485 = load i32, i32* %arrayidx40.40, align 4
  %arrayidx41.40 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %485, i32* %arrayidx41.40, align 4
  %arrayidx46.40 = getelementptr inbounds i32, i32* %smem, i64 408
  %486 = load i32, i32* %arrayidx46.40, align 4
  %arrayidx47.40 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %486, i32* %arrayidx47.40, align 4
  %arrayidx52.40 = getelementptr inbounds i32, i32* %smem, i64 416
  %487 = load i32, i32* %arrayidx52.40, align 4
  %arrayidx53.40 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %487, i32* %arrayidx53.40, align 4
  br label %for.body56.40

for.body56.40:                                    ; preds = %for.body56.40, %for.end.40
  %indvars.iv5.40 = phi i64 [ 0, %for.end.40 ], [ %indvars.iv.next6.40, %for.body56.40 ]
  %arrayidx58.40 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.40
  %488 = load i32, i32* %arrayidx58.40, align 4
  %489 = add nuw nsw i64 320, %indvars.iv5.40
  %arrayidx62.40 = getelementptr inbounds i32, i32* %DATA_x, i64 %489
  store i32 %488, i32* %arrayidx62.40, align 4
  %indvars.iv.next6.40 = add nuw nsw i64 %indvars.iv5.40, 1
  %exitcond8.40 = icmp ne i64 %indvars.iv.next6.40, 8
  br i1 %exitcond8.40, label %for.body56.40, label %for.inc66.40, !llvm.loop !24

for.inc66.40:                                     ; preds = %for.body56.40
  br label %for.body3.41

for.body3.41:                                     ; preds = %for.body3.41, %for.inc66.40
  %indvars.iv.41 = phi i64 [ 0, %for.inc66.40 ], [ %indvars.iv.next.41, %for.body3.41 ]
  %490 = add nuw nsw i64 328, %indvars.iv.41
  %arrayidx.41 = getelementptr inbounds i32, i32* %DATA_x, i64 %490
  %491 = load i32, i32* %arrayidx.41, align 4
  %arrayidx5.41 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.41
  store i32 %491, i32* %arrayidx5.41, align 4
  %indvars.iv.next.41 = add nuw nsw i64 %indvars.iv.41, 1
  %exitcond.41 = icmp ne i64 %indvars.iv.next.41, 8
  br i1 %exitcond.41, label %for.body3.41, label %for.end.41, !llvm.loop !23

for.end.41:                                       ; preds = %for.body3.41
  %arrayidx10.41 = getelementptr inbounds i32, i32* %smem, i64 361
  %492 = load i32, i32* %arrayidx10.41, align 4
  store i32 %492, i32* %data_x, align 4
  %arrayidx16.41 = getelementptr inbounds i32, i32* %smem, i64 369
  %493 = load i32, i32* %arrayidx16.41, align 4
  %arrayidx17.41 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %493, i32* %arrayidx17.41, align 4
  %arrayidx22.41 = getelementptr inbounds i32, i32* %smem, i64 377
  %494 = load i32, i32* %arrayidx22.41, align 4
  %arrayidx23.41 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %494, i32* %arrayidx23.41, align 4
  %arrayidx28.41 = getelementptr inbounds i32, i32* %smem, i64 385
  %495 = load i32, i32* %arrayidx28.41, align 4
  %arrayidx29.41 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %495, i32* %arrayidx29.41, align 4
  %arrayidx34.41 = getelementptr inbounds i32, i32* %smem, i64 393
  %496 = load i32, i32* %arrayidx34.41, align 4
  %arrayidx35.41 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %496, i32* %arrayidx35.41, align 4
  %arrayidx40.41 = getelementptr inbounds i32, i32* %smem, i64 401
  %497 = load i32, i32* %arrayidx40.41, align 4
  %arrayidx41.41 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %497, i32* %arrayidx41.41, align 4
  %arrayidx46.41 = getelementptr inbounds i32, i32* %smem, i64 409
  %498 = load i32, i32* %arrayidx46.41, align 4
  %arrayidx47.41 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %498, i32* %arrayidx47.41, align 4
  %arrayidx52.41 = getelementptr inbounds i32, i32* %smem, i64 417
  %499 = load i32, i32* %arrayidx52.41, align 4
  %arrayidx53.41 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %499, i32* %arrayidx53.41, align 4
  br label %for.body56.41

for.body56.41:                                    ; preds = %for.body56.41, %for.end.41
  %indvars.iv5.41 = phi i64 [ 0, %for.end.41 ], [ %indvars.iv.next6.41, %for.body56.41 ]
  %arrayidx58.41 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.41
  %500 = load i32, i32* %arrayidx58.41, align 4
  %501 = add nuw nsw i64 328, %indvars.iv5.41
  %arrayidx62.41 = getelementptr inbounds i32, i32* %DATA_x, i64 %501
  store i32 %500, i32* %arrayidx62.41, align 4
  %indvars.iv.next6.41 = add nuw nsw i64 %indvars.iv5.41, 1
  %exitcond8.41 = icmp ne i64 %indvars.iv.next6.41, 8
  br i1 %exitcond8.41, label %for.body56.41, label %for.inc66.41, !llvm.loop !24

for.inc66.41:                                     ; preds = %for.body56.41
  br label %for.body3.42

for.body3.42:                                     ; preds = %for.body3.42, %for.inc66.41
  %indvars.iv.42 = phi i64 [ 0, %for.inc66.41 ], [ %indvars.iv.next.42, %for.body3.42 ]
  %502 = add nuw nsw i64 336, %indvars.iv.42
  %arrayidx.42 = getelementptr inbounds i32, i32* %DATA_x, i64 %502
  %503 = load i32, i32* %arrayidx.42, align 4
  %arrayidx5.42 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.42
  store i32 %503, i32* %arrayidx5.42, align 4
  %indvars.iv.next.42 = add nuw nsw i64 %indvars.iv.42, 1
  %exitcond.42 = icmp ne i64 %indvars.iv.next.42, 8
  br i1 %exitcond.42, label %for.body3.42, label %for.end.42, !llvm.loop !23

for.end.42:                                       ; preds = %for.body3.42
  %arrayidx10.42 = getelementptr inbounds i32, i32* %smem, i64 362
  %504 = load i32, i32* %arrayidx10.42, align 4
  store i32 %504, i32* %data_x, align 4
  %arrayidx16.42 = getelementptr inbounds i32, i32* %smem, i64 370
  %505 = load i32, i32* %arrayidx16.42, align 4
  %arrayidx17.42 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %505, i32* %arrayidx17.42, align 4
  %arrayidx22.42 = getelementptr inbounds i32, i32* %smem, i64 378
  %506 = load i32, i32* %arrayidx22.42, align 4
  %arrayidx23.42 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %506, i32* %arrayidx23.42, align 4
  %arrayidx28.42 = getelementptr inbounds i32, i32* %smem, i64 386
  %507 = load i32, i32* %arrayidx28.42, align 4
  %arrayidx29.42 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %507, i32* %arrayidx29.42, align 4
  %arrayidx34.42 = getelementptr inbounds i32, i32* %smem, i64 394
  %508 = load i32, i32* %arrayidx34.42, align 4
  %arrayidx35.42 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %508, i32* %arrayidx35.42, align 4
  %arrayidx40.42 = getelementptr inbounds i32, i32* %smem, i64 402
  %509 = load i32, i32* %arrayidx40.42, align 4
  %arrayidx41.42 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %509, i32* %arrayidx41.42, align 4
  %arrayidx46.42 = getelementptr inbounds i32, i32* %smem, i64 410
  %510 = load i32, i32* %arrayidx46.42, align 4
  %arrayidx47.42 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %510, i32* %arrayidx47.42, align 4
  %arrayidx52.42 = getelementptr inbounds i32, i32* %smem, i64 418
  %511 = load i32, i32* %arrayidx52.42, align 4
  %arrayidx53.42 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %511, i32* %arrayidx53.42, align 4
  br label %for.body56.42

for.body56.42:                                    ; preds = %for.body56.42, %for.end.42
  %indvars.iv5.42 = phi i64 [ 0, %for.end.42 ], [ %indvars.iv.next6.42, %for.body56.42 ]
  %arrayidx58.42 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.42
  %512 = load i32, i32* %arrayidx58.42, align 4
  %513 = add nuw nsw i64 336, %indvars.iv5.42
  %arrayidx62.42 = getelementptr inbounds i32, i32* %DATA_x, i64 %513
  store i32 %512, i32* %arrayidx62.42, align 4
  %indvars.iv.next6.42 = add nuw nsw i64 %indvars.iv5.42, 1
  %exitcond8.42 = icmp ne i64 %indvars.iv.next6.42, 8
  br i1 %exitcond8.42, label %for.body56.42, label %for.inc66.42, !llvm.loop !24

for.inc66.42:                                     ; preds = %for.body56.42
  br label %for.body3.43

for.body3.43:                                     ; preds = %for.body3.43, %for.inc66.42
  %indvars.iv.43 = phi i64 [ 0, %for.inc66.42 ], [ %indvars.iv.next.43, %for.body3.43 ]
  %514 = add nuw nsw i64 344, %indvars.iv.43
  %arrayidx.43 = getelementptr inbounds i32, i32* %DATA_x, i64 %514
  %515 = load i32, i32* %arrayidx.43, align 4
  %arrayidx5.43 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.43
  store i32 %515, i32* %arrayidx5.43, align 4
  %indvars.iv.next.43 = add nuw nsw i64 %indvars.iv.43, 1
  %exitcond.43 = icmp ne i64 %indvars.iv.next.43, 8
  br i1 %exitcond.43, label %for.body3.43, label %for.end.43, !llvm.loop !23

for.end.43:                                       ; preds = %for.body3.43
  %arrayidx10.43 = getelementptr inbounds i32, i32* %smem, i64 363
  %516 = load i32, i32* %arrayidx10.43, align 4
  store i32 %516, i32* %data_x, align 4
  %arrayidx16.43 = getelementptr inbounds i32, i32* %smem, i64 371
  %517 = load i32, i32* %arrayidx16.43, align 4
  %arrayidx17.43 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %517, i32* %arrayidx17.43, align 4
  %arrayidx22.43 = getelementptr inbounds i32, i32* %smem, i64 379
  %518 = load i32, i32* %arrayidx22.43, align 4
  %arrayidx23.43 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %518, i32* %arrayidx23.43, align 4
  %arrayidx28.43 = getelementptr inbounds i32, i32* %smem, i64 387
  %519 = load i32, i32* %arrayidx28.43, align 4
  %arrayidx29.43 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %519, i32* %arrayidx29.43, align 4
  %arrayidx34.43 = getelementptr inbounds i32, i32* %smem, i64 395
  %520 = load i32, i32* %arrayidx34.43, align 4
  %arrayidx35.43 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %520, i32* %arrayidx35.43, align 4
  %arrayidx40.43 = getelementptr inbounds i32, i32* %smem, i64 403
  %521 = load i32, i32* %arrayidx40.43, align 4
  %arrayidx41.43 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %521, i32* %arrayidx41.43, align 4
  %arrayidx46.43 = getelementptr inbounds i32, i32* %smem, i64 411
  %522 = load i32, i32* %arrayidx46.43, align 4
  %arrayidx47.43 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %522, i32* %arrayidx47.43, align 4
  %arrayidx52.43 = getelementptr inbounds i32, i32* %smem, i64 419
  %523 = load i32, i32* %arrayidx52.43, align 4
  %arrayidx53.43 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %523, i32* %arrayidx53.43, align 4
  br label %for.body56.43

for.body56.43:                                    ; preds = %for.body56.43, %for.end.43
  %indvars.iv5.43 = phi i64 [ 0, %for.end.43 ], [ %indvars.iv.next6.43, %for.body56.43 ]
  %arrayidx58.43 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.43
  %524 = load i32, i32* %arrayidx58.43, align 4
  %525 = add nuw nsw i64 344, %indvars.iv5.43
  %arrayidx62.43 = getelementptr inbounds i32, i32* %DATA_x, i64 %525
  store i32 %524, i32* %arrayidx62.43, align 4
  %indvars.iv.next6.43 = add nuw nsw i64 %indvars.iv5.43, 1
  %exitcond8.43 = icmp ne i64 %indvars.iv.next6.43, 8
  br i1 %exitcond8.43, label %for.body56.43, label %for.inc66.43, !llvm.loop !24

for.inc66.43:                                     ; preds = %for.body56.43
  br label %for.body3.44

for.body3.44:                                     ; preds = %for.body3.44, %for.inc66.43
  %indvars.iv.44 = phi i64 [ 0, %for.inc66.43 ], [ %indvars.iv.next.44, %for.body3.44 ]
  %526 = add nuw nsw i64 352, %indvars.iv.44
  %arrayidx.44 = getelementptr inbounds i32, i32* %DATA_x, i64 %526
  %527 = load i32, i32* %arrayidx.44, align 4
  %arrayidx5.44 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.44
  store i32 %527, i32* %arrayidx5.44, align 4
  %indvars.iv.next.44 = add nuw nsw i64 %indvars.iv.44, 1
  %exitcond.44 = icmp ne i64 %indvars.iv.next.44, 8
  br i1 %exitcond.44, label %for.body3.44, label %for.end.44, !llvm.loop !23

for.end.44:                                       ; preds = %for.body3.44
  %arrayidx10.44 = getelementptr inbounds i32, i32* %smem, i64 364
  %528 = load i32, i32* %arrayidx10.44, align 4
  store i32 %528, i32* %data_x, align 4
  %arrayidx16.44 = getelementptr inbounds i32, i32* %smem, i64 372
  %529 = load i32, i32* %arrayidx16.44, align 4
  %arrayidx17.44 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %529, i32* %arrayidx17.44, align 4
  %arrayidx22.44 = getelementptr inbounds i32, i32* %smem, i64 380
  %530 = load i32, i32* %arrayidx22.44, align 4
  %arrayidx23.44 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %530, i32* %arrayidx23.44, align 4
  %arrayidx28.44 = getelementptr inbounds i32, i32* %smem, i64 388
  %531 = load i32, i32* %arrayidx28.44, align 4
  %arrayidx29.44 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %531, i32* %arrayidx29.44, align 4
  %arrayidx34.44 = getelementptr inbounds i32, i32* %smem, i64 396
  %532 = load i32, i32* %arrayidx34.44, align 4
  %arrayidx35.44 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %532, i32* %arrayidx35.44, align 4
  %arrayidx40.44 = getelementptr inbounds i32, i32* %smem, i64 404
  %533 = load i32, i32* %arrayidx40.44, align 4
  %arrayidx41.44 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %533, i32* %arrayidx41.44, align 4
  %arrayidx46.44 = getelementptr inbounds i32, i32* %smem, i64 412
  %534 = load i32, i32* %arrayidx46.44, align 4
  %arrayidx47.44 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %534, i32* %arrayidx47.44, align 4
  %arrayidx52.44 = getelementptr inbounds i32, i32* %smem, i64 420
  %535 = load i32, i32* %arrayidx52.44, align 4
  %arrayidx53.44 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %535, i32* %arrayidx53.44, align 4
  br label %for.body56.44

for.body56.44:                                    ; preds = %for.body56.44, %for.end.44
  %indvars.iv5.44 = phi i64 [ 0, %for.end.44 ], [ %indvars.iv.next6.44, %for.body56.44 ]
  %arrayidx58.44 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.44
  %536 = load i32, i32* %arrayidx58.44, align 4
  %537 = add nuw nsw i64 352, %indvars.iv5.44
  %arrayidx62.44 = getelementptr inbounds i32, i32* %DATA_x, i64 %537
  store i32 %536, i32* %arrayidx62.44, align 4
  %indvars.iv.next6.44 = add nuw nsw i64 %indvars.iv5.44, 1
  %exitcond8.44 = icmp ne i64 %indvars.iv.next6.44, 8
  br i1 %exitcond8.44, label %for.body56.44, label %for.inc66.44, !llvm.loop !24

for.inc66.44:                                     ; preds = %for.body56.44
  br label %for.body3.45

for.body3.45:                                     ; preds = %for.body3.45, %for.inc66.44
  %indvars.iv.45 = phi i64 [ 0, %for.inc66.44 ], [ %indvars.iv.next.45, %for.body3.45 ]
  %538 = add nuw nsw i64 360, %indvars.iv.45
  %arrayidx.45 = getelementptr inbounds i32, i32* %DATA_x, i64 %538
  %539 = load i32, i32* %arrayidx.45, align 4
  %arrayidx5.45 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.45
  store i32 %539, i32* %arrayidx5.45, align 4
  %indvars.iv.next.45 = add nuw nsw i64 %indvars.iv.45, 1
  %exitcond.45 = icmp ne i64 %indvars.iv.next.45, 8
  br i1 %exitcond.45, label %for.body3.45, label %for.end.45, !llvm.loop !23

for.end.45:                                       ; preds = %for.body3.45
  %arrayidx10.45 = getelementptr inbounds i32, i32* %smem, i64 365
  %540 = load i32, i32* %arrayidx10.45, align 4
  store i32 %540, i32* %data_x, align 4
  %arrayidx16.45 = getelementptr inbounds i32, i32* %smem, i64 373
  %541 = load i32, i32* %arrayidx16.45, align 4
  %arrayidx17.45 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %541, i32* %arrayidx17.45, align 4
  %arrayidx22.45 = getelementptr inbounds i32, i32* %smem, i64 381
  %542 = load i32, i32* %arrayidx22.45, align 4
  %arrayidx23.45 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %542, i32* %arrayidx23.45, align 4
  %arrayidx28.45 = getelementptr inbounds i32, i32* %smem, i64 389
  %543 = load i32, i32* %arrayidx28.45, align 4
  %arrayidx29.45 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %543, i32* %arrayidx29.45, align 4
  %arrayidx34.45 = getelementptr inbounds i32, i32* %smem, i64 397
  %544 = load i32, i32* %arrayidx34.45, align 4
  %arrayidx35.45 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %544, i32* %arrayidx35.45, align 4
  %arrayidx40.45 = getelementptr inbounds i32, i32* %smem, i64 405
  %545 = load i32, i32* %arrayidx40.45, align 4
  %arrayidx41.45 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %545, i32* %arrayidx41.45, align 4
  %arrayidx46.45 = getelementptr inbounds i32, i32* %smem, i64 413
  %546 = load i32, i32* %arrayidx46.45, align 4
  %arrayidx47.45 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %546, i32* %arrayidx47.45, align 4
  %arrayidx52.45 = getelementptr inbounds i32, i32* %smem, i64 421
  %547 = load i32, i32* %arrayidx52.45, align 4
  %arrayidx53.45 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %547, i32* %arrayidx53.45, align 4
  br label %for.body56.45

for.body56.45:                                    ; preds = %for.body56.45, %for.end.45
  %indvars.iv5.45 = phi i64 [ 0, %for.end.45 ], [ %indvars.iv.next6.45, %for.body56.45 ]
  %arrayidx58.45 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.45
  %548 = load i32, i32* %arrayidx58.45, align 4
  %549 = add nuw nsw i64 360, %indvars.iv5.45
  %arrayidx62.45 = getelementptr inbounds i32, i32* %DATA_x, i64 %549
  store i32 %548, i32* %arrayidx62.45, align 4
  %indvars.iv.next6.45 = add nuw nsw i64 %indvars.iv5.45, 1
  %exitcond8.45 = icmp ne i64 %indvars.iv.next6.45, 8
  br i1 %exitcond8.45, label %for.body56.45, label %for.inc66.45, !llvm.loop !24

for.inc66.45:                                     ; preds = %for.body56.45
  br label %for.body3.46

for.body3.46:                                     ; preds = %for.body3.46, %for.inc66.45
  %indvars.iv.46 = phi i64 [ 0, %for.inc66.45 ], [ %indvars.iv.next.46, %for.body3.46 ]
  %550 = add nuw nsw i64 368, %indvars.iv.46
  %arrayidx.46 = getelementptr inbounds i32, i32* %DATA_x, i64 %550
  %551 = load i32, i32* %arrayidx.46, align 4
  %arrayidx5.46 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.46
  store i32 %551, i32* %arrayidx5.46, align 4
  %indvars.iv.next.46 = add nuw nsw i64 %indvars.iv.46, 1
  %exitcond.46 = icmp ne i64 %indvars.iv.next.46, 8
  br i1 %exitcond.46, label %for.body3.46, label %for.end.46, !llvm.loop !23

for.end.46:                                       ; preds = %for.body3.46
  %arrayidx10.46 = getelementptr inbounds i32, i32* %smem, i64 366
  %552 = load i32, i32* %arrayidx10.46, align 4
  store i32 %552, i32* %data_x, align 4
  %arrayidx16.46 = getelementptr inbounds i32, i32* %smem, i64 374
  %553 = load i32, i32* %arrayidx16.46, align 4
  %arrayidx17.46 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %553, i32* %arrayidx17.46, align 4
  %arrayidx22.46 = getelementptr inbounds i32, i32* %smem, i64 382
  %554 = load i32, i32* %arrayidx22.46, align 4
  %arrayidx23.46 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %554, i32* %arrayidx23.46, align 4
  %arrayidx28.46 = getelementptr inbounds i32, i32* %smem, i64 390
  %555 = load i32, i32* %arrayidx28.46, align 4
  %arrayidx29.46 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %555, i32* %arrayidx29.46, align 4
  %arrayidx34.46 = getelementptr inbounds i32, i32* %smem, i64 398
  %556 = load i32, i32* %arrayidx34.46, align 4
  %arrayidx35.46 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %556, i32* %arrayidx35.46, align 4
  %arrayidx40.46 = getelementptr inbounds i32, i32* %smem, i64 406
  %557 = load i32, i32* %arrayidx40.46, align 4
  %arrayidx41.46 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %557, i32* %arrayidx41.46, align 4
  %arrayidx46.46 = getelementptr inbounds i32, i32* %smem, i64 414
  %558 = load i32, i32* %arrayidx46.46, align 4
  %arrayidx47.46 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %558, i32* %arrayidx47.46, align 4
  %arrayidx52.46 = getelementptr inbounds i32, i32* %smem, i64 422
  %559 = load i32, i32* %arrayidx52.46, align 4
  %arrayidx53.46 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %559, i32* %arrayidx53.46, align 4
  br label %for.body56.46

for.body56.46:                                    ; preds = %for.body56.46, %for.end.46
  %indvars.iv5.46 = phi i64 [ 0, %for.end.46 ], [ %indvars.iv.next6.46, %for.body56.46 ]
  %arrayidx58.46 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.46
  %560 = load i32, i32* %arrayidx58.46, align 4
  %561 = add nuw nsw i64 368, %indvars.iv5.46
  %arrayidx62.46 = getelementptr inbounds i32, i32* %DATA_x, i64 %561
  store i32 %560, i32* %arrayidx62.46, align 4
  %indvars.iv.next6.46 = add nuw nsw i64 %indvars.iv5.46, 1
  %exitcond8.46 = icmp ne i64 %indvars.iv.next6.46, 8
  br i1 %exitcond8.46, label %for.body56.46, label %for.inc66.46, !llvm.loop !24

for.inc66.46:                                     ; preds = %for.body56.46
  br label %for.body3.47

for.body3.47:                                     ; preds = %for.body3.47, %for.inc66.46
  %indvars.iv.47 = phi i64 [ 0, %for.inc66.46 ], [ %indvars.iv.next.47, %for.body3.47 ]
  %562 = add nuw nsw i64 376, %indvars.iv.47
  %arrayidx.47 = getelementptr inbounds i32, i32* %DATA_x, i64 %562
  %563 = load i32, i32* %arrayidx.47, align 4
  %arrayidx5.47 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.47
  store i32 %563, i32* %arrayidx5.47, align 4
  %indvars.iv.next.47 = add nuw nsw i64 %indvars.iv.47, 1
  %exitcond.47 = icmp ne i64 %indvars.iv.next.47, 8
  br i1 %exitcond.47, label %for.body3.47, label %for.end.47, !llvm.loop !23

for.end.47:                                       ; preds = %for.body3.47
  %arrayidx10.47 = getelementptr inbounds i32, i32* %smem, i64 367
  %564 = load i32, i32* %arrayidx10.47, align 4
  store i32 %564, i32* %data_x, align 4
  %arrayidx16.47 = getelementptr inbounds i32, i32* %smem, i64 375
  %565 = load i32, i32* %arrayidx16.47, align 4
  %arrayidx17.47 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %565, i32* %arrayidx17.47, align 4
  %arrayidx22.47 = getelementptr inbounds i32, i32* %smem, i64 383
  %566 = load i32, i32* %arrayidx22.47, align 4
  %arrayidx23.47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %566, i32* %arrayidx23.47, align 4
  %arrayidx28.47 = getelementptr inbounds i32, i32* %smem, i64 391
  %567 = load i32, i32* %arrayidx28.47, align 4
  %arrayidx29.47 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %567, i32* %arrayidx29.47, align 4
  %arrayidx34.47 = getelementptr inbounds i32, i32* %smem, i64 399
  %568 = load i32, i32* %arrayidx34.47, align 4
  %arrayidx35.47 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %568, i32* %arrayidx35.47, align 4
  %arrayidx40.47 = getelementptr inbounds i32, i32* %smem, i64 407
  %569 = load i32, i32* %arrayidx40.47, align 4
  %arrayidx41.47 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %569, i32* %arrayidx41.47, align 4
  %arrayidx46.47 = getelementptr inbounds i32, i32* %smem, i64 415
  %570 = load i32, i32* %arrayidx46.47, align 4
  %arrayidx47.47 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %570, i32* %arrayidx47.47, align 4
  %arrayidx52.47 = getelementptr inbounds i32, i32* %smem, i64 423
  %571 = load i32, i32* %arrayidx52.47, align 4
  %arrayidx53.47 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %571, i32* %arrayidx53.47, align 4
  br label %for.body56.47

for.body56.47:                                    ; preds = %for.body56.47, %for.end.47
  %indvars.iv5.47 = phi i64 [ 0, %for.end.47 ], [ %indvars.iv.next6.47, %for.body56.47 ]
  %arrayidx58.47 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.47
  %572 = load i32, i32* %arrayidx58.47, align 4
  %573 = add nuw nsw i64 376, %indvars.iv5.47
  %arrayidx62.47 = getelementptr inbounds i32, i32* %DATA_x, i64 %573
  store i32 %572, i32* %arrayidx62.47, align 4
  %indvars.iv.next6.47 = add nuw nsw i64 %indvars.iv5.47, 1
  %exitcond8.47 = icmp ne i64 %indvars.iv.next6.47, 8
  br i1 %exitcond8.47, label %for.body56.47, label %for.inc66.47, !llvm.loop !24

for.inc66.47:                                     ; preds = %for.body56.47
  br label %for.body3.48

for.body3.48:                                     ; preds = %for.body3.48, %for.inc66.47
  %indvars.iv.48 = phi i64 [ 0, %for.inc66.47 ], [ %indvars.iv.next.48, %for.body3.48 ]
  %574 = add nuw nsw i64 384, %indvars.iv.48
  %arrayidx.48 = getelementptr inbounds i32, i32* %DATA_x, i64 %574
  %575 = load i32, i32* %arrayidx.48, align 4
  %arrayidx5.48 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.48
  store i32 %575, i32* %arrayidx5.48, align 4
  %indvars.iv.next.48 = add nuw nsw i64 %indvars.iv.48, 1
  %exitcond.48 = icmp ne i64 %indvars.iv.next.48, 8
  br i1 %exitcond.48, label %for.body3.48, label %for.end.48, !llvm.loop !23

for.end.48:                                       ; preds = %for.body3.48
  %arrayidx10.48 = getelementptr inbounds i32, i32* %smem, i64 432
  %576 = load i32, i32* %arrayidx10.48, align 4
  store i32 %576, i32* %data_x, align 4
  %arrayidx16.48 = getelementptr inbounds i32, i32* %smem, i64 440
  %577 = load i32, i32* %arrayidx16.48, align 4
  %arrayidx17.48 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %577, i32* %arrayidx17.48, align 4
  %arrayidx22.48 = getelementptr inbounds i32, i32* %smem, i64 448
  %578 = load i32, i32* %arrayidx22.48, align 4
  %arrayidx23.48 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %578, i32* %arrayidx23.48, align 4
  %arrayidx28.48 = getelementptr inbounds i32, i32* %smem, i64 456
  %579 = load i32, i32* %arrayidx28.48, align 4
  %arrayidx29.48 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %579, i32* %arrayidx29.48, align 4
  %arrayidx34.48 = getelementptr inbounds i32, i32* %smem, i64 464
  %580 = load i32, i32* %arrayidx34.48, align 4
  %arrayidx35.48 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %580, i32* %arrayidx35.48, align 4
  %arrayidx40.48 = getelementptr inbounds i32, i32* %smem, i64 472
  %581 = load i32, i32* %arrayidx40.48, align 4
  %arrayidx41.48 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %581, i32* %arrayidx41.48, align 4
  %arrayidx46.48 = getelementptr inbounds i32, i32* %smem, i64 480
  %582 = load i32, i32* %arrayidx46.48, align 4
  %arrayidx47.48 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %582, i32* %arrayidx47.48, align 4
  %arrayidx52.48 = getelementptr inbounds i32, i32* %smem, i64 488
  %583 = load i32, i32* %arrayidx52.48, align 4
  %arrayidx53.48 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %583, i32* %arrayidx53.48, align 4
  br label %for.body56.48

for.body56.48:                                    ; preds = %for.body56.48, %for.end.48
  %indvars.iv5.48 = phi i64 [ 0, %for.end.48 ], [ %indvars.iv.next6.48, %for.body56.48 ]
  %arrayidx58.48 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.48
  %584 = load i32, i32* %arrayidx58.48, align 4
  %585 = add nuw nsw i64 384, %indvars.iv5.48
  %arrayidx62.48 = getelementptr inbounds i32, i32* %DATA_x, i64 %585
  store i32 %584, i32* %arrayidx62.48, align 4
  %indvars.iv.next6.48 = add nuw nsw i64 %indvars.iv5.48, 1
  %exitcond8.48 = icmp ne i64 %indvars.iv.next6.48, 8
  br i1 %exitcond8.48, label %for.body56.48, label %for.inc66.48, !llvm.loop !24

for.inc66.48:                                     ; preds = %for.body56.48
  br label %for.body3.49

for.body3.49:                                     ; preds = %for.body3.49, %for.inc66.48
  %indvars.iv.49 = phi i64 [ 0, %for.inc66.48 ], [ %indvars.iv.next.49, %for.body3.49 ]
  %586 = add nuw nsw i64 392, %indvars.iv.49
  %arrayidx.49 = getelementptr inbounds i32, i32* %DATA_x, i64 %586
  %587 = load i32, i32* %arrayidx.49, align 4
  %arrayidx5.49 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.49
  store i32 %587, i32* %arrayidx5.49, align 4
  %indvars.iv.next.49 = add nuw nsw i64 %indvars.iv.49, 1
  %exitcond.49 = icmp ne i64 %indvars.iv.next.49, 8
  br i1 %exitcond.49, label %for.body3.49, label %for.end.49, !llvm.loop !23

for.end.49:                                       ; preds = %for.body3.49
  %arrayidx10.49 = getelementptr inbounds i32, i32* %smem, i64 433
  %588 = load i32, i32* %arrayidx10.49, align 4
  store i32 %588, i32* %data_x, align 4
  %arrayidx16.49 = getelementptr inbounds i32, i32* %smem, i64 441
  %589 = load i32, i32* %arrayidx16.49, align 4
  %arrayidx17.49 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %589, i32* %arrayidx17.49, align 4
  %arrayidx22.49 = getelementptr inbounds i32, i32* %smem, i64 449
  %590 = load i32, i32* %arrayidx22.49, align 4
  %arrayidx23.49 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %590, i32* %arrayidx23.49, align 4
  %arrayidx28.49 = getelementptr inbounds i32, i32* %smem, i64 457
  %591 = load i32, i32* %arrayidx28.49, align 4
  %arrayidx29.49 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %591, i32* %arrayidx29.49, align 4
  %arrayidx34.49 = getelementptr inbounds i32, i32* %smem, i64 465
  %592 = load i32, i32* %arrayidx34.49, align 4
  %arrayidx35.49 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %592, i32* %arrayidx35.49, align 4
  %arrayidx40.49 = getelementptr inbounds i32, i32* %smem, i64 473
  %593 = load i32, i32* %arrayidx40.49, align 4
  %arrayidx41.49 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %593, i32* %arrayidx41.49, align 4
  %arrayidx46.49 = getelementptr inbounds i32, i32* %smem, i64 481
  %594 = load i32, i32* %arrayidx46.49, align 4
  %arrayidx47.49 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %594, i32* %arrayidx47.49, align 4
  %arrayidx52.49 = getelementptr inbounds i32, i32* %smem, i64 489
  %595 = load i32, i32* %arrayidx52.49, align 4
  %arrayidx53.49 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %595, i32* %arrayidx53.49, align 4
  br label %for.body56.49

for.body56.49:                                    ; preds = %for.body56.49, %for.end.49
  %indvars.iv5.49 = phi i64 [ 0, %for.end.49 ], [ %indvars.iv.next6.49, %for.body56.49 ]
  %arrayidx58.49 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.49
  %596 = load i32, i32* %arrayidx58.49, align 4
  %597 = add nuw nsw i64 392, %indvars.iv5.49
  %arrayidx62.49 = getelementptr inbounds i32, i32* %DATA_x, i64 %597
  store i32 %596, i32* %arrayidx62.49, align 4
  %indvars.iv.next6.49 = add nuw nsw i64 %indvars.iv5.49, 1
  %exitcond8.49 = icmp ne i64 %indvars.iv.next6.49, 8
  br i1 %exitcond8.49, label %for.body56.49, label %for.inc66.49, !llvm.loop !24

for.inc66.49:                                     ; preds = %for.body56.49
  br label %for.body3.50

for.body3.50:                                     ; preds = %for.body3.50, %for.inc66.49
  %indvars.iv.50 = phi i64 [ 0, %for.inc66.49 ], [ %indvars.iv.next.50, %for.body3.50 ]
  %598 = add nuw nsw i64 400, %indvars.iv.50
  %arrayidx.50 = getelementptr inbounds i32, i32* %DATA_x, i64 %598
  %599 = load i32, i32* %arrayidx.50, align 4
  %arrayidx5.50 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.50
  store i32 %599, i32* %arrayidx5.50, align 4
  %indvars.iv.next.50 = add nuw nsw i64 %indvars.iv.50, 1
  %exitcond.50 = icmp ne i64 %indvars.iv.next.50, 8
  br i1 %exitcond.50, label %for.body3.50, label %for.end.50, !llvm.loop !23

for.end.50:                                       ; preds = %for.body3.50
  %arrayidx10.50 = getelementptr inbounds i32, i32* %smem, i64 434
  %600 = load i32, i32* %arrayidx10.50, align 4
  store i32 %600, i32* %data_x, align 4
  %arrayidx16.50 = getelementptr inbounds i32, i32* %smem, i64 442
  %601 = load i32, i32* %arrayidx16.50, align 4
  %arrayidx17.50 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %601, i32* %arrayidx17.50, align 4
  %arrayidx22.50 = getelementptr inbounds i32, i32* %smem, i64 450
  %602 = load i32, i32* %arrayidx22.50, align 4
  %arrayidx23.50 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %602, i32* %arrayidx23.50, align 4
  %arrayidx28.50 = getelementptr inbounds i32, i32* %smem, i64 458
  %603 = load i32, i32* %arrayidx28.50, align 4
  %arrayidx29.50 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %603, i32* %arrayidx29.50, align 4
  %arrayidx34.50 = getelementptr inbounds i32, i32* %smem, i64 466
  %604 = load i32, i32* %arrayidx34.50, align 4
  %arrayidx35.50 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %604, i32* %arrayidx35.50, align 4
  %arrayidx40.50 = getelementptr inbounds i32, i32* %smem, i64 474
  %605 = load i32, i32* %arrayidx40.50, align 4
  %arrayidx41.50 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %605, i32* %arrayidx41.50, align 4
  %arrayidx46.50 = getelementptr inbounds i32, i32* %smem, i64 482
  %606 = load i32, i32* %arrayidx46.50, align 4
  %arrayidx47.50 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %606, i32* %arrayidx47.50, align 4
  %arrayidx52.50 = getelementptr inbounds i32, i32* %smem, i64 490
  %607 = load i32, i32* %arrayidx52.50, align 4
  %arrayidx53.50 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %607, i32* %arrayidx53.50, align 4
  br label %for.body56.50

for.body56.50:                                    ; preds = %for.body56.50, %for.end.50
  %indvars.iv5.50 = phi i64 [ 0, %for.end.50 ], [ %indvars.iv.next6.50, %for.body56.50 ]
  %arrayidx58.50 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.50
  %608 = load i32, i32* %arrayidx58.50, align 4
  %609 = add nuw nsw i64 400, %indvars.iv5.50
  %arrayidx62.50 = getelementptr inbounds i32, i32* %DATA_x, i64 %609
  store i32 %608, i32* %arrayidx62.50, align 4
  %indvars.iv.next6.50 = add nuw nsw i64 %indvars.iv5.50, 1
  %exitcond8.50 = icmp ne i64 %indvars.iv.next6.50, 8
  br i1 %exitcond8.50, label %for.body56.50, label %for.inc66.50, !llvm.loop !24

for.inc66.50:                                     ; preds = %for.body56.50
  br label %for.body3.51

for.body3.51:                                     ; preds = %for.body3.51, %for.inc66.50
  %indvars.iv.51 = phi i64 [ 0, %for.inc66.50 ], [ %indvars.iv.next.51, %for.body3.51 ]
  %610 = add nuw nsw i64 408, %indvars.iv.51
  %arrayidx.51 = getelementptr inbounds i32, i32* %DATA_x, i64 %610
  %611 = load i32, i32* %arrayidx.51, align 4
  %arrayidx5.51 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.51
  store i32 %611, i32* %arrayidx5.51, align 4
  %indvars.iv.next.51 = add nuw nsw i64 %indvars.iv.51, 1
  %exitcond.51 = icmp ne i64 %indvars.iv.next.51, 8
  br i1 %exitcond.51, label %for.body3.51, label %for.end.51, !llvm.loop !23

for.end.51:                                       ; preds = %for.body3.51
  %arrayidx10.51 = getelementptr inbounds i32, i32* %smem, i64 435
  %612 = load i32, i32* %arrayidx10.51, align 4
  store i32 %612, i32* %data_x, align 4
  %arrayidx16.51 = getelementptr inbounds i32, i32* %smem, i64 443
  %613 = load i32, i32* %arrayidx16.51, align 4
  %arrayidx17.51 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %613, i32* %arrayidx17.51, align 4
  %arrayidx22.51 = getelementptr inbounds i32, i32* %smem, i64 451
  %614 = load i32, i32* %arrayidx22.51, align 4
  %arrayidx23.51 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %614, i32* %arrayidx23.51, align 4
  %arrayidx28.51 = getelementptr inbounds i32, i32* %smem, i64 459
  %615 = load i32, i32* %arrayidx28.51, align 4
  %arrayidx29.51 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %615, i32* %arrayidx29.51, align 4
  %arrayidx34.51 = getelementptr inbounds i32, i32* %smem, i64 467
  %616 = load i32, i32* %arrayidx34.51, align 4
  %arrayidx35.51 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %616, i32* %arrayidx35.51, align 4
  %arrayidx40.51 = getelementptr inbounds i32, i32* %smem, i64 475
  %617 = load i32, i32* %arrayidx40.51, align 4
  %arrayidx41.51 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %617, i32* %arrayidx41.51, align 4
  %arrayidx46.51 = getelementptr inbounds i32, i32* %smem, i64 483
  %618 = load i32, i32* %arrayidx46.51, align 4
  %arrayidx47.51 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %618, i32* %arrayidx47.51, align 4
  %arrayidx52.51 = getelementptr inbounds i32, i32* %smem, i64 491
  %619 = load i32, i32* %arrayidx52.51, align 4
  %arrayidx53.51 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %619, i32* %arrayidx53.51, align 4
  br label %for.body56.51

for.body56.51:                                    ; preds = %for.body56.51, %for.end.51
  %indvars.iv5.51 = phi i64 [ 0, %for.end.51 ], [ %indvars.iv.next6.51, %for.body56.51 ]
  %arrayidx58.51 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.51
  %620 = load i32, i32* %arrayidx58.51, align 4
  %621 = add nuw nsw i64 408, %indvars.iv5.51
  %arrayidx62.51 = getelementptr inbounds i32, i32* %DATA_x, i64 %621
  store i32 %620, i32* %arrayidx62.51, align 4
  %indvars.iv.next6.51 = add nuw nsw i64 %indvars.iv5.51, 1
  %exitcond8.51 = icmp ne i64 %indvars.iv.next6.51, 8
  br i1 %exitcond8.51, label %for.body56.51, label %for.inc66.51, !llvm.loop !24

for.inc66.51:                                     ; preds = %for.body56.51
  br label %for.body3.52

for.body3.52:                                     ; preds = %for.body3.52, %for.inc66.51
  %indvars.iv.52 = phi i64 [ 0, %for.inc66.51 ], [ %indvars.iv.next.52, %for.body3.52 ]
  %622 = add nuw nsw i64 416, %indvars.iv.52
  %arrayidx.52 = getelementptr inbounds i32, i32* %DATA_x, i64 %622
  %623 = load i32, i32* %arrayidx.52, align 4
  %arrayidx5.52 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.52
  store i32 %623, i32* %arrayidx5.52, align 4
  %indvars.iv.next.52 = add nuw nsw i64 %indvars.iv.52, 1
  %exitcond.52 = icmp ne i64 %indvars.iv.next.52, 8
  br i1 %exitcond.52, label %for.body3.52, label %for.end.52, !llvm.loop !23

for.end.52:                                       ; preds = %for.body3.52
  %arrayidx10.52 = getelementptr inbounds i32, i32* %smem, i64 436
  %624 = load i32, i32* %arrayidx10.52, align 4
  store i32 %624, i32* %data_x, align 4
  %arrayidx16.52 = getelementptr inbounds i32, i32* %smem, i64 444
  %625 = load i32, i32* %arrayidx16.52, align 4
  %arrayidx17.52 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %625, i32* %arrayidx17.52, align 4
  %arrayidx22.52 = getelementptr inbounds i32, i32* %smem, i64 452
  %626 = load i32, i32* %arrayidx22.52, align 4
  %arrayidx23.52 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %626, i32* %arrayidx23.52, align 4
  %arrayidx28.52 = getelementptr inbounds i32, i32* %smem, i64 460
  %627 = load i32, i32* %arrayidx28.52, align 4
  %arrayidx29.52 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %627, i32* %arrayidx29.52, align 4
  %arrayidx34.52 = getelementptr inbounds i32, i32* %smem, i64 468
  %628 = load i32, i32* %arrayidx34.52, align 4
  %arrayidx35.52 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %628, i32* %arrayidx35.52, align 4
  %arrayidx40.52 = getelementptr inbounds i32, i32* %smem, i64 476
  %629 = load i32, i32* %arrayidx40.52, align 4
  %arrayidx41.52 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %629, i32* %arrayidx41.52, align 4
  %arrayidx46.52 = getelementptr inbounds i32, i32* %smem, i64 484
  %630 = load i32, i32* %arrayidx46.52, align 4
  %arrayidx47.52 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %630, i32* %arrayidx47.52, align 4
  %arrayidx52.52 = getelementptr inbounds i32, i32* %smem, i64 492
  %631 = load i32, i32* %arrayidx52.52, align 4
  %arrayidx53.52 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %631, i32* %arrayidx53.52, align 4
  br label %for.body56.52

for.body56.52:                                    ; preds = %for.body56.52, %for.end.52
  %indvars.iv5.52 = phi i64 [ 0, %for.end.52 ], [ %indvars.iv.next6.52, %for.body56.52 ]
  %arrayidx58.52 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.52
  %632 = load i32, i32* %arrayidx58.52, align 4
  %633 = add nuw nsw i64 416, %indvars.iv5.52
  %arrayidx62.52 = getelementptr inbounds i32, i32* %DATA_x, i64 %633
  store i32 %632, i32* %arrayidx62.52, align 4
  %indvars.iv.next6.52 = add nuw nsw i64 %indvars.iv5.52, 1
  %exitcond8.52 = icmp ne i64 %indvars.iv.next6.52, 8
  br i1 %exitcond8.52, label %for.body56.52, label %for.inc66.52, !llvm.loop !24

for.inc66.52:                                     ; preds = %for.body56.52
  br label %for.body3.53

for.body3.53:                                     ; preds = %for.body3.53, %for.inc66.52
  %indvars.iv.53 = phi i64 [ 0, %for.inc66.52 ], [ %indvars.iv.next.53, %for.body3.53 ]
  %634 = add nuw nsw i64 424, %indvars.iv.53
  %arrayidx.53 = getelementptr inbounds i32, i32* %DATA_x, i64 %634
  %635 = load i32, i32* %arrayidx.53, align 4
  %arrayidx5.53 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.53
  store i32 %635, i32* %arrayidx5.53, align 4
  %indvars.iv.next.53 = add nuw nsw i64 %indvars.iv.53, 1
  %exitcond.53 = icmp ne i64 %indvars.iv.next.53, 8
  br i1 %exitcond.53, label %for.body3.53, label %for.end.53, !llvm.loop !23

for.end.53:                                       ; preds = %for.body3.53
  %arrayidx10.53 = getelementptr inbounds i32, i32* %smem, i64 437
  %636 = load i32, i32* %arrayidx10.53, align 4
  store i32 %636, i32* %data_x, align 4
  %arrayidx16.53 = getelementptr inbounds i32, i32* %smem, i64 445
  %637 = load i32, i32* %arrayidx16.53, align 4
  %arrayidx17.53 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %637, i32* %arrayidx17.53, align 4
  %arrayidx22.53 = getelementptr inbounds i32, i32* %smem, i64 453
  %638 = load i32, i32* %arrayidx22.53, align 4
  %arrayidx23.53 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %638, i32* %arrayidx23.53, align 4
  %arrayidx28.53 = getelementptr inbounds i32, i32* %smem, i64 461
  %639 = load i32, i32* %arrayidx28.53, align 4
  %arrayidx29.53 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %639, i32* %arrayidx29.53, align 4
  %arrayidx34.53 = getelementptr inbounds i32, i32* %smem, i64 469
  %640 = load i32, i32* %arrayidx34.53, align 4
  %arrayidx35.53 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %640, i32* %arrayidx35.53, align 4
  %arrayidx40.53 = getelementptr inbounds i32, i32* %smem, i64 477
  %641 = load i32, i32* %arrayidx40.53, align 4
  %arrayidx41.53 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %641, i32* %arrayidx41.53, align 4
  %arrayidx46.53 = getelementptr inbounds i32, i32* %smem, i64 485
  %642 = load i32, i32* %arrayidx46.53, align 4
  %arrayidx47.53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %642, i32* %arrayidx47.53, align 4
  %arrayidx52.53 = getelementptr inbounds i32, i32* %smem, i64 493
  %643 = load i32, i32* %arrayidx52.53, align 4
  %arrayidx53.53 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %643, i32* %arrayidx53.53, align 4
  br label %for.body56.53

for.body56.53:                                    ; preds = %for.body56.53, %for.end.53
  %indvars.iv5.53 = phi i64 [ 0, %for.end.53 ], [ %indvars.iv.next6.53, %for.body56.53 ]
  %arrayidx58.53 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.53
  %644 = load i32, i32* %arrayidx58.53, align 4
  %645 = add nuw nsw i64 424, %indvars.iv5.53
  %arrayidx62.53 = getelementptr inbounds i32, i32* %DATA_x, i64 %645
  store i32 %644, i32* %arrayidx62.53, align 4
  %indvars.iv.next6.53 = add nuw nsw i64 %indvars.iv5.53, 1
  %exitcond8.53 = icmp ne i64 %indvars.iv.next6.53, 8
  br i1 %exitcond8.53, label %for.body56.53, label %for.inc66.53, !llvm.loop !24

for.inc66.53:                                     ; preds = %for.body56.53
  br label %for.body3.54

for.body3.54:                                     ; preds = %for.body3.54, %for.inc66.53
  %indvars.iv.54 = phi i64 [ 0, %for.inc66.53 ], [ %indvars.iv.next.54, %for.body3.54 ]
  %646 = add nuw nsw i64 432, %indvars.iv.54
  %arrayidx.54 = getelementptr inbounds i32, i32* %DATA_x, i64 %646
  %647 = load i32, i32* %arrayidx.54, align 4
  %arrayidx5.54 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.54
  store i32 %647, i32* %arrayidx5.54, align 4
  %indvars.iv.next.54 = add nuw nsw i64 %indvars.iv.54, 1
  %exitcond.54 = icmp ne i64 %indvars.iv.next.54, 8
  br i1 %exitcond.54, label %for.body3.54, label %for.end.54, !llvm.loop !23

for.end.54:                                       ; preds = %for.body3.54
  %arrayidx10.54 = getelementptr inbounds i32, i32* %smem, i64 438
  %648 = load i32, i32* %arrayidx10.54, align 4
  store i32 %648, i32* %data_x, align 4
  %arrayidx16.54 = getelementptr inbounds i32, i32* %smem, i64 446
  %649 = load i32, i32* %arrayidx16.54, align 4
  %arrayidx17.54 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %649, i32* %arrayidx17.54, align 4
  %arrayidx22.54 = getelementptr inbounds i32, i32* %smem, i64 454
  %650 = load i32, i32* %arrayidx22.54, align 4
  %arrayidx23.54 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %650, i32* %arrayidx23.54, align 4
  %arrayidx28.54 = getelementptr inbounds i32, i32* %smem, i64 462
  %651 = load i32, i32* %arrayidx28.54, align 4
  %arrayidx29.54 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %651, i32* %arrayidx29.54, align 4
  %arrayidx34.54 = getelementptr inbounds i32, i32* %smem, i64 470
  %652 = load i32, i32* %arrayidx34.54, align 4
  %arrayidx35.54 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %652, i32* %arrayidx35.54, align 4
  %arrayidx40.54 = getelementptr inbounds i32, i32* %smem, i64 478
  %653 = load i32, i32* %arrayidx40.54, align 4
  %arrayidx41.54 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %653, i32* %arrayidx41.54, align 4
  %arrayidx46.54 = getelementptr inbounds i32, i32* %smem, i64 486
  %654 = load i32, i32* %arrayidx46.54, align 4
  %arrayidx47.54 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %654, i32* %arrayidx47.54, align 4
  %arrayidx52.54 = getelementptr inbounds i32, i32* %smem, i64 494
  %655 = load i32, i32* %arrayidx52.54, align 4
  %arrayidx53.54 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %655, i32* %arrayidx53.54, align 4
  br label %for.body56.54

for.body56.54:                                    ; preds = %for.body56.54, %for.end.54
  %indvars.iv5.54 = phi i64 [ 0, %for.end.54 ], [ %indvars.iv.next6.54, %for.body56.54 ]
  %arrayidx58.54 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.54
  %656 = load i32, i32* %arrayidx58.54, align 4
  %657 = add nuw nsw i64 432, %indvars.iv5.54
  %arrayidx62.54 = getelementptr inbounds i32, i32* %DATA_x, i64 %657
  store i32 %656, i32* %arrayidx62.54, align 4
  %indvars.iv.next6.54 = add nuw nsw i64 %indvars.iv5.54, 1
  %exitcond8.54 = icmp ne i64 %indvars.iv.next6.54, 8
  br i1 %exitcond8.54, label %for.body56.54, label %for.inc66.54, !llvm.loop !24

for.inc66.54:                                     ; preds = %for.body56.54
  br label %for.body3.55

for.body3.55:                                     ; preds = %for.body3.55, %for.inc66.54
  %indvars.iv.55 = phi i64 [ 0, %for.inc66.54 ], [ %indvars.iv.next.55, %for.body3.55 ]
  %658 = add nuw nsw i64 440, %indvars.iv.55
  %arrayidx.55 = getelementptr inbounds i32, i32* %DATA_x, i64 %658
  %659 = load i32, i32* %arrayidx.55, align 4
  %arrayidx5.55 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.55
  store i32 %659, i32* %arrayidx5.55, align 4
  %indvars.iv.next.55 = add nuw nsw i64 %indvars.iv.55, 1
  %exitcond.55 = icmp ne i64 %indvars.iv.next.55, 8
  br i1 %exitcond.55, label %for.body3.55, label %for.end.55, !llvm.loop !23

for.end.55:                                       ; preds = %for.body3.55
  %arrayidx10.55 = getelementptr inbounds i32, i32* %smem, i64 439
  %660 = load i32, i32* %arrayidx10.55, align 4
  store i32 %660, i32* %data_x, align 4
  %arrayidx16.55 = getelementptr inbounds i32, i32* %smem, i64 447
  %661 = load i32, i32* %arrayidx16.55, align 4
  %arrayidx17.55 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %661, i32* %arrayidx17.55, align 4
  %arrayidx22.55 = getelementptr inbounds i32, i32* %smem, i64 455
  %662 = load i32, i32* %arrayidx22.55, align 4
  %arrayidx23.55 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %662, i32* %arrayidx23.55, align 4
  %arrayidx28.55 = getelementptr inbounds i32, i32* %smem, i64 463
  %663 = load i32, i32* %arrayidx28.55, align 4
  %arrayidx29.55 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %663, i32* %arrayidx29.55, align 4
  %arrayidx34.55 = getelementptr inbounds i32, i32* %smem, i64 471
  %664 = load i32, i32* %arrayidx34.55, align 4
  %arrayidx35.55 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %664, i32* %arrayidx35.55, align 4
  %arrayidx40.55 = getelementptr inbounds i32, i32* %smem, i64 479
  %665 = load i32, i32* %arrayidx40.55, align 4
  %arrayidx41.55 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %665, i32* %arrayidx41.55, align 4
  %arrayidx46.55 = getelementptr inbounds i32, i32* %smem, i64 487
  %666 = load i32, i32* %arrayidx46.55, align 4
  %arrayidx47.55 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %666, i32* %arrayidx47.55, align 4
  %arrayidx52.55 = getelementptr inbounds i32, i32* %smem, i64 495
  %667 = load i32, i32* %arrayidx52.55, align 4
  %arrayidx53.55 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %667, i32* %arrayidx53.55, align 4
  br label %for.body56.55

for.body56.55:                                    ; preds = %for.body56.55, %for.end.55
  %indvars.iv5.55 = phi i64 [ 0, %for.end.55 ], [ %indvars.iv.next6.55, %for.body56.55 ]
  %arrayidx58.55 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.55
  %668 = load i32, i32* %arrayidx58.55, align 4
  %669 = add nuw nsw i64 440, %indvars.iv5.55
  %arrayidx62.55 = getelementptr inbounds i32, i32* %DATA_x, i64 %669
  store i32 %668, i32* %arrayidx62.55, align 4
  %indvars.iv.next6.55 = add nuw nsw i64 %indvars.iv5.55, 1
  %exitcond8.55 = icmp ne i64 %indvars.iv.next6.55, 8
  br i1 %exitcond8.55, label %for.body56.55, label %for.inc66.55, !llvm.loop !24

for.inc66.55:                                     ; preds = %for.body56.55
  br label %for.body3.56

for.body3.56:                                     ; preds = %for.body3.56, %for.inc66.55
  %indvars.iv.56 = phi i64 [ 0, %for.inc66.55 ], [ %indvars.iv.next.56, %for.body3.56 ]
  %670 = add nuw nsw i64 448, %indvars.iv.56
  %arrayidx.56 = getelementptr inbounds i32, i32* %DATA_x, i64 %670
  %671 = load i32, i32* %arrayidx.56, align 4
  %arrayidx5.56 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.56
  store i32 %671, i32* %arrayidx5.56, align 4
  %indvars.iv.next.56 = add nuw nsw i64 %indvars.iv.56, 1
  %exitcond.56 = icmp ne i64 %indvars.iv.next.56, 8
  br i1 %exitcond.56, label %for.body3.56, label %for.end.56, !llvm.loop !23

for.end.56:                                       ; preds = %for.body3.56
  %arrayidx10.56 = getelementptr inbounds i32, i32* %smem, i64 504
  %672 = load i32, i32* %arrayidx10.56, align 4
  store i32 %672, i32* %data_x, align 4
  %arrayidx16.56 = getelementptr inbounds i32, i32* %smem, i64 512
  %673 = load i32, i32* %arrayidx16.56, align 4
  %arrayidx17.56 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %673, i32* %arrayidx17.56, align 4
  %arrayidx22.56 = getelementptr inbounds i32, i32* %smem, i64 520
  %674 = load i32, i32* %arrayidx22.56, align 4
  %arrayidx23.56 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %674, i32* %arrayidx23.56, align 4
  %arrayidx28.56 = getelementptr inbounds i32, i32* %smem, i64 528
  %675 = load i32, i32* %arrayidx28.56, align 4
  %arrayidx29.56 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %675, i32* %arrayidx29.56, align 4
  %arrayidx34.56 = getelementptr inbounds i32, i32* %smem, i64 536
  %676 = load i32, i32* %arrayidx34.56, align 4
  %arrayidx35.56 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %676, i32* %arrayidx35.56, align 4
  %arrayidx40.56 = getelementptr inbounds i32, i32* %smem, i64 544
  %677 = load i32, i32* %arrayidx40.56, align 4
  %arrayidx41.56 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %677, i32* %arrayidx41.56, align 4
  %arrayidx46.56 = getelementptr inbounds i32, i32* %smem, i64 552
  %678 = load i32, i32* %arrayidx46.56, align 4
  %arrayidx47.56 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %678, i32* %arrayidx47.56, align 4
  %arrayidx52.56 = getelementptr inbounds i32, i32* %smem, i64 560
  %679 = load i32, i32* %arrayidx52.56, align 4
  %arrayidx53.56 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %679, i32* %arrayidx53.56, align 4
  br label %for.body56.56

for.body56.56:                                    ; preds = %for.body56.56, %for.end.56
  %indvars.iv5.56 = phi i64 [ 0, %for.end.56 ], [ %indvars.iv.next6.56, %for.body56.56 ]
  %arrayidx58.56 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.56
  %680 = load i32, i32* %arrayidx58.56, align 4
  %681 = add nuw nsw i64 448, %indvars.iv5.56
  %arrayidx62.56 = getelementptr inbounds i32, i32* %DATA_x, i64 %681
  store i32 %680, i32* %arrayidx62.56, align 4
  %indvars.iv.next6.56 = add nuw nsw i64 %indvars.iv5.56, 1
  %exitcond8.56 = icmp ne i64 %indvars.iv.next6.56, 8
  br i1 %exitcond8.56, label %for.body56.56, label %for.inc66.56, !llvm.loop !24

for.inc66.56:                                     ; preds = %for.body56.56
  br label %for.body3.57

for.body3.57:                                     ; preds = %for.body3.57, %for.inc66.56
  %indvars.iv.57 = phi i64 [ 0, %for.inc66.56 ], [ %indvars.iv.next.57, %for.body3.57 ]
  %682 = add nuw nsw i64 456, %indvars.iv.57
  %arrayidx.57 = getelementptr inbounds i32, i32* %DATA_x, i64 %682
  %683 = load i32, i32* %arrayidx.57, align 4
  %arrayidx5.57 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.57
  store i32 %683, i32* %arrayidx5.57, align 4
  %indvars.iv.next.57 = add nuw nsw i64 %indvars.iv.57, 1
  %exitcond.57 = icmp ne i64 %indvars.iv.next.57, 8
  br i1 %exitcond.57, label %for.body3.57, label %for.end.57, !llvm.loop !23

for.end.57:                                       ; preds = %for.body3.57
  %arrayidx10.57 = getelementptr inbounds i32, i32* %smem, i64 505
  %684 = load i32, i32* %arrayidx10.57, align 4
  store i32 %684, i32* %data_x, align 4
  %arrayidx16.57 = getelementptr inbounds i32, i32* %smem, i64 513
  %685 = load i32, i32* %arrayidx16.57, align 4
  %arrayidx17.57 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %685, i32* %arrayidx17.57, align 4
  %arrayidx22.57 = getelementptr inbounds i32, i32* %smem, i64 521
  %686 = load i32, i32* %arrayidx22.57, align 4
  %arrayidx23.57 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %686, i32* %arrayidx23.57, align 4
  %arrayidx28.57 = getelementptr inbounds i32, i32* %smem, i64 529
  %687 = load i32, i32* %arrayidx28.57, align 4
  %arrayidx29.57 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %687, i32* %arrayidx29.57, align 4
  %arrayidx34.57 = getelementptr inbounds i32, i32* %smem, i64 537
  %688 = load i32, i32* %arrayidx34.57, align 4
  %arrayidx35.57 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %688, i32* %arrayidx35.57, align 4
  %arrayidx40.57 = getelementptr inbounds i32, i32* %smem, i64 545
  %689 = load i32, i32* %arrayidx40.57, align 4
  %arrayidx41.57 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %689, i32* %arrayidx41.57, align 4
  %arrayidx46.57 = getelementptr inbounds i32, i32* %smem, i64 553
  %690 = load i32, i32* %arrayidx46.57, align 4
  %arrayidx47.57 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %690, i32* %arrayidx47.57, align 4
  %arrayidx52.57 = getelementptr inbounds i32, i32* %smem, i64 561
  %691 = load i32, i32* %arrayidx52.57, align 4
  %arrayidx53.57 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %691, i32* %arrayidx53.57, align 4
  br label %for.body56.57

for.body56.57:                                    ; preds = %for.body56.57, %for.end.57
  %indvars.iv5.57 = phi i64 [ 0, %for.end.57 ], [ %indvars.iv.next6.57, %for.body56.57 ]
  %arrayidx58.57 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.57
  %692 = load i32, i32* %arrayidx58.57, align 4
  %693 = add nuw nsw i64 456, %indvars.iv5.57
  %arrayidx62.57 = getelementptr inbounds i32, i32* %DATA_x, i64 %693
  store i32 %692, i32* %arrayidx62.57, align 4
  %indvars.iv.next6.57 = add nuw nsw i64 %indvars.iv5.57, 1
  %exitcond8.57 = icmp ne i64 %indvars.iv.next6.57, 8
  br i1 %exitcond8.57, label %for.body56.57, label %for.inc66.57, !llvm.loop !24

for.inc66.57:                                     ; preds = %for.body56.57
  br label %for.body3.58

for.body3.58:                                     ; preds = %for.body3.58, %for.inc66.57
  %indvars.iv.58 = phi i64 [ 0, %for.inc66.57 ], [ %indvars.iv.next.58, %for.body3.58 ]
  %694 = add nuw nsw i64 464, %indvars.iv.58
  %arrayidx.58 = getelementptr inbounds i32, i32* %DATA_x, i64 %694
  %695 = load i32, i32* %arrayidx.58, align 4
  %arrayidx5.58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.58
  store i32 %695, i32* %arrayidx5.58, align 4
  %indvars.iv.next.58 = add nuw nsw i64 %indvars.iv.58, 1
  %exitcond.58 = icmp ne i64 %indvars.iv.next.58, 8
  br i1 %exitcond.58, label %for.body3.58, label %for.end.58, !llvm.loop !23

for.end.58:                                       ; preds = %for.body3.58
  %arrayidx10.58 = getelementptr inbounds i32, i32* %smem, i64 506
  %696 = load i32, i32* %arrayidx10.58, align 4
  store i32 %696, i32* %data_x, align 4
  %arrayidx16.58 = getelementptr inbounds i32, i32* %smem, i64 514
  %697 = load i32, i32* %arrayidx16.58, align 4
  %arrayidx17.58 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %697, i32* %arrayidx17.58, align 4
  %arrayidx22.58 = getelementptr inbounds i32, i32* %smem, i64 522
  %698 = load i32, i32* %arrayidx22.58, align 4
  %arrayidx23.58 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %698, i32* %arrayidx23.58, align 4
  %arrayidx28.58 = getelementptr inbounds i32, i32* %smem, i64 530
  %699 = load i32, i32* %arrayidx28.58, align 4
  %arrayidx29.58 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %699, i32* %arrayidx29.58, align 4
  %arrayidx34.58 = getelementptr inbounds i32, i32* %smem, i64 538
  %700 = load i32, i32* %arrayidx34.58, align 4
  %arrayidx35.58 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %700, i32* %arrayidx35.58, align 4
  %arrayidx40.58 = getelementptr inbounds i32, i32* %smem, i64 546
  %701 = load i32, i32* %arrayidx40.58, align 4
  %arrayidx41.58 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %701, i32* %arrayidx41.58, align 4
  %arrayidx46.58 = getelementptr inbounds i32, i32* %smem, i64 554
  %702 = load i32, i32* %arrayidx46.58, align 4
  %arrayidx47.58 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %702, i32* %arrayidx47.58, align 4
  %arrayidx52.58 = getelementptr inbounds i32, i32* %smem, i64 562
  %703 = load i32, i32* %arrayidx52.58, align 4
  %arrayidx53.58 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %703, i32* %arrayidx53.58, align 4
  br label %for.body56.58

for.body56.58:                                    ; preds = %for.body56.58, %for.end.58
  %indvars.iv5.58 = phi i64 [ 0, %for.end.58 ], [ %indvars.iv.next6.58, %for.body56.58 ]
  %arrayidx58.58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.58
  %704 = load i32, i32* %arrayidx58.58, align 4
  %705 = add nuw nsw i64 464, %indvars.iv5.58
  %arrayidx62.58 = getelementptr inbounds i32, i32* %DATA_x, i64 %705
  store i32 %704, i32* %arrayidx62.58, align 4
  %indvars.iv.next6.58 = add nuw nsw i64 %indvars.iv5.58, 1
  %exitcond8.58 = icmp ne i64 %indvars.iv.next6.58, 8
  br i1 %exitcond8.58, label %for.body56.58, label %for.inc66.58, !llvm.loop !24

for.inc66.58:                                     ; preds = %for.body56.58
  br label %for.body3.59

for.body3.59:                                     ; preds = %for.body3.59, %for.inc66.58
  %indvars.iv.59 = phi i64 [ 0, %for.inc66.58 ], [ %indvars.iv.next.59, %for.body3.59 ]
  %706 = add nuw nsw i64 472, %indvars.iv.59
  %arrayidx.59 = getelementptr inbounds i32, i32* %DATA_x, i64 %706
  %707 = load i32, i32* %arrayidx.59, align 4
  %arrayidx5.59 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.59
  store i32 %707, i32* %arrayidx5.59, align 4
  %indvars.iv.next.59 = add nuw nsw i64 %indvars.iv.59, 1
  %exitcond.59 = icmp ne i64 %indvars.iv.next.59, 8
  br i1 %exitcond.59, label %for.body3.59, label %for.end.59, !llvm.loop !23

for.end.59:                                       ; preds = %for.body3.59
  %arrayidx10.59 = getelementptr inbounds i32, i32* %smem, i64 507
  %708 = load i32, i32* %arrayidx10.59, align 4
  store i32 %708, i32* %data_x, align 4
  %arrayidx16.59 = getelementptr inbounds i32, i32* %smem, i64 515
  %709 = load i32, i32* %arrayidx16.59, align 4
  %arrayidx17.59 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %709, i32* %arrayidx17.59, align 4
  %arrayidx22.59 = getelementptr inbounds i32, i32* %smem, i64 523
  %710 = load i32, i32* %arrayidx22.59, align 4
  %arrayidx23.59 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %710, i32* %arrayidx23.59, align 4
  %arrayidx28.59 = getelementptr inbounds i32, i32* %smem, i64 531
  %711 = load i32, i32* %arrayidx28.59, align 4
  %arrayidx29.59 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %711, i32* %arrayidx29.59, align 4
  %arrayidx34.59 = getelementptr inbounds i32, i32* %smem, i64 539
  %712 = load i32, i32* %arrayidx34.59, align 4
  %arrayidx35.59 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %712, i32* %arrayidx35.59, align 4
  %arrayidx40.59 = getelementptr inbounds i32, i32* %smem, i64 547
  %713 = load i32, i32* %arrayidx40.59, align 4
  %arrayidx41.59 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %713, i32* %arrayidx41.59, align 4
  %arrayidx46.59 = getelementptr inbounds i32, i32* %smem, i64 555
  %714 = load i32, i32* %arrayidx46.59, align 4
  %arrayidx47.59 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %714, i32* %arrayidx47.59, align 4
  %arrayidx52.59 = getelementptr inbounds i32, i32* %smem, i64 563
  %715 = load i32, i32* %arrayidx52.59, align 4
  %arrayidx53.59 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %715, i32* %arrayidx53.59, align 4
  br label %for.body56.59

for.body56.59:                                    ; preds = %for.body56.59, %for.end.59
  %indvars.iv5.59 = phi i64 [ 0, %for.end.59 ], [ %indvars.iv.next6.59, %for.body56.59 ]
  %arrayidx58.59 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.59
  %716 = load i32, i32* %arrayidx58.59, align 4
  %717 = add nuw nsw i64 472, %indvars.iv5.59
  %arrayidx62.59 = getelementptr inbounds i32, i32* %DATA_x, i64 %717
  store i32 %716, i32* %arrayidx62.59, align 4
  %indvars.iv.next6.59 = add nuw nsw i64 %indvars.iv5.59, 1
  %exitcond8.59 = icmp ne i64 %indvars.iv.next6.59, 8
  br i1 %exitcond8.59, label %for.body56.59, label %for.inc66.59, !llvm.loop !24

for.inc66.59:                                     ; preds = %for.body56.59
  br label %for.body3.60

for.body3.60:                                     ; preds = %for.body3.60, %for.inc66.59
  %indvars.iv.60 = phi i64 [ 0, %for.inc66.59 ], [ %indvars.iv.next.60, %for.body3.60 ]
  %718 = add nuw nsw i64 480, %indvars.iv.60
  %arrayidx.60 = getelementptr inbounds i32, i32* %DATA_x, i64 %718
  %719 = load i32, i32* %arrayidx.60, align 4
  %arrayidx5.60 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.60
  store i32 %719, i32* %arrayidx5.60, align 4
  %indvars.iv.next.60 = add nuw nsw i64 %indvars.iv.60, 1
  %exitcond.60 = icmp ne i64 %indvars.iv.next.60, 8
  br i1 %exitcond.60, label %for.body3.60, label %for.end.60, !llvm.loop !23

for.end.60:                                       ; preds = %for.body3.60
  %arrayidx10.60 = getelementptr inbounds i32, i32* %smem, i64 508
  %720 = load i32, i32* %arrayidx10.60, align 4
  store i32 %720, i32* %data_x, align 4
  %arrayidx16.60 = getelementptr inbounds i32, i32* %smem, i64 516
  %721 = load i32, i32* %arrayidx16.60, align 4
  %arrayidx17.60 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %721, i32* %arrayidx17.60, align 4
  %arrayidx22.60 = getelementptr inbounds i32, i32* %smem, i64 524
  %722 = load i32, i32* %arrayidx22.60, align 4
  %arrayidx23.60 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %722, i32* %arrayidx23.60, align 4
  %arrayidx28.60 = getelementptr inbounds i32, i32* %smem, i64 532
  %723 = load i32, i32* %arrayidx28.60, align 4
  %arrayidx29.60 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %723, i32* %arrayidx29.60, align 4
  %arrayidx34.60 = getelementptr inbounds i32, i32* %smem, i64 540
  %724 = load i32, i32* %arrayidx34.60, align 4
  %arrayidx35.60 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %724, i32* %arrayidx35.60, align 4
  %arrayidx40.60 = getelementptr inbounds i32, i32* %smem, i64 548
  %725 = load i32, i32* %arrayidx40.60, align 4
  %arrayidx41.60 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %725, i32* %arrayidx41.60, align 4
  %arrayidx46.60 = getelementptr inbounds i32, i32* %smem, i64 556
  %726 = load i32, i32* %arrayidx46.60, align 4
  %arrayidx47.60 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %726, i32* %arrayidx47.60, align 4
  %arrayidx52.60 = getelementptr inbounds i32, i32* %smem, i64 564
  %727 = load i32, i32* %arrayidx52.60, align 4
  %arrayidx53.60 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %727, i32* %arrayidx53.60, align 4
  br label %for.body56.60

for.body56.60:                                    ; preds = %for.body56.60, %for.end.60
  %indvars.iv5.60 = phi i64 [ 0, %for.end.60 ], [ %indvars.iv.next6.60, %for.body56.60 ]
  %arrayidx58.60 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.60
  %728 = load i32, i32* %arrayidx58.60, align 4
  %729 = add nuw nsw i64 480, %indvars.iv5.60
  %arrayidx62.60 = getelementptr inbounds i32, i32* %DATA_x, i64 %729
  store i32 %728, i32* %arrayidx62.60, align 4
  %indvars.iv.next6.60 = add nuw nsw i64 %indvars.iv5.60, 1
  %exitcond8.60 = icmp ne i64 %indvars.iv.next6.60, 8
  br i1 %exitcond8.60, label %for.body56.60, label %for.inc66.60, !llvm.loop !24

for.inc66.60:                                     ; preds = %for.body56.60
  br label %for.body3.61

for.body3.61:                                     ; preds = %for.body3.61, %for.inc66.60
  %indvars.iv.61 = phi i64 [ 0, %for.inc66.60 ], [ %indvars.iv.next.61, %for.body3.61 ]
  %730 = add nuw nsw i64 488, %indvars.iv.61
  %arrayidx.61 = getelementptr inbounds i32, i32* %DATA_x, i64 %730
  %731 = load i32, i32* %arrayidx.61, align 4
  %arrayidx5.61 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.61
  store i32 %731, i32* %arrayidx5.61, align 4
  %indvars.iv.next.61 = add nuw nsw i64 %indvars.iv.61, 1
  %exitcond.61 = icmp ne i64 %indvars.iv.next.61, 8
  br i1 %exitcond.61, label %for.body3.61, label %for.end.61, !llvm.loop !23

for.end.61:                                       ; preds = %for.body3.61
  %arrayidx10.61 = getelementptr inbounds i32, i32* %smem, i64 509
  %732 = load i32, i32* %arrayidx10.61, align 4
  store i32 %732, i32* %data_x, align 4
  %arrayidx16.61 = getelementptr inbounds i32, i32* %smem, i64 517
  %733 = load i32, i32* %arrayidx16.61, align 4
  %arrayidx17.61 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %733, i32* %arrayidx17.61, align 4
  %arrayidx22.61 = getelementptr inbounds i32, i32* %smem, i64 525
  %734 = load i32, i32* %arrayidx22.61, align 4
  %arrayidx23.61 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %734, i32* %arrayidx23.61, align 4
  %arrayidx28.61 = getelementptr inbounds i32, i32* %smem, i64 533
  %735 = load i32, i32* %arrayidx28.61, align 4
  %arrayidx29.61 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %735, i32* %arrayidx29.61, align 4
  %arrayidx34.61 = getelementptr inbounds i32, i32* %smem, i64 541
  %736 = load i32, i32* %arrayidx34.61, align 4
  %arrayidx35.61 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %736, i32* %arrayidx35.61, align 4
  %arrayidx40.61 = getelementptr inbounds i32, i32* %smem, i64 549
  %737 = load i32, i32* %arrayidx40.61, align 4
  %arrayidx41.61 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %737, i32* %arrayidx41.61, align 4
  %arrayidx46.61 = getelementptr inbounds i32, i32* %smem, i64 557
  %738 = load i32, i32* %arrayidx46.61, align 4
  %arrayidx47.61 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %738, i32* %arrayidx47.61, align 4
  %arrayidx52.61 = getelementptr inbounds i32, i32* %smem, i64 565
  %739 = load i32, i32* %arrayidx52.61, align 4
  %arrayidx53.61 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %739, i32* %arrayidx53.61, align 4
  br label %for.body56.61

for.body56.61:                                    ; preds = %for.body56.61, %for.end.61
  %indvars.iv5.61 = phi i64 [ 0, %for.end.61 ], [ %indvars.iv.next6.61, %for.body56.61 ]
  %arrayidx58.61 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.61
  %740 = load i32, i32* %arrayidx58.61, align 4
  %741 = add nuw nsw i64 488, %indvars.iv5.61
  %arrayidx62.61 = getelementptr inbounds i32, i32* %DATA_x, i64 %741
  store i32 %740, i32* %arrayidx62.61, align 4
  %indvars.iv.next6.61 = add nuw nsw i64 %indvars.iv5.61, 1
  %exitcond8.61 = icmp ne i64 %indvars.iv.next6.61, 8
  br i1 %exitcond8.61, label %for.body56.61, label %for.inc66.61, !llvm.loop !24

for.inc66.61:                                     ; preds = %for.body56.61
  br label %for.body3.62

for.body3.62:                                     ; preds = %for.body3.62, %for.inc66.61
  %indvars.iv.62 = phi i64 [ 0, %for.inc66.61 ], [ %indvars.iv.next.62, %for.body3.62 ]
  %742 = add nuw nsw i64 496, %indvars.iv.62
  %arrayidx.62 = getelementptr inbounds i32, i32* %DATA_x, i64 %742
  %743 = load i32, i32* %arrayidx.62, align 4
  %arrayidx5.62 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.62
  store i32 %743, i32* %arrayidx5.62, align 4
  %indvars.iv.next.62 = add nuw nsw i64 %indvars.iv.62, 1
  %exitcond.62 = icmp ne i64 %indvars.iv.next.62, 8
  br i1 %exitcond.62, label %for.body3.62, label %for.end.62, !llvm.loop !23

for.end.62:                                       ; preds = %for.body3.62
  %arrayidx10.62 = getelementptr inbounds i32, i32* %smem, i64 510
  %744 = load i32, i32* %arrayidx10.62, align 4
  store i32 %744, i32* %data_x, align 4
  %arrayidx16.62 = getelementptr inbounds i32, i32* %smem, i64 518
  %745 = load i32, i32* %arrayidx16.62, align 4
  %arrayidx17.62 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %745, i32* %arrayidx17.62, align 4
  %arrayidx22.62 = getelementptr inbounds i32, i32* %smem, i64 526
  %746 = load i32, i32* %arrayidx22.62, align 4
  %arrayidx23.62 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %746, i32* %arrayidx23.62, align 4
  %arrayidx28.62 = getelementptr inbounds i32, i32* %smem, i64 534
  %747 = load i32, i32* %arrayidx28.62, align 4
  %arrayidx29.62 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %747, i32* %arrayidx29.62, align 4
  %arrayidx34.62 = getelementptr inbounds i32, i32* %smem, i64 542
  %748 = load i32, i32* %arrayidx34.62, align 4
  %arrayidx35.62 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %748, i32* %arrayidx35.62, align 4
  %arrayidx40.62 = getelementptr inbounds i32, i32* %smem, i64 550
  %749 = load i32, i32* %arrayidx40.62, align 4
  %arrayidx41.62 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %749, i32* %arrayidx41.62, align 4
  %arrayidx46.62 = getelementptr inbounds i32, i32* %smem, i64 558
  %750 = load i32, i32* %arrayidx46.62, align 4
  %arrayidx47.62 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %750, i32* %arrayidx47.62, align 4
  %arrayidx52.62 = getelementptr inbounds i32, i32* %smem, i64 566
  %751 = load i32, i32* %arrayidx52.62, align 4
  %arrayidx53.62 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %751, i32* %arrayidx53.62, align 4
  br label %for.body56.62

for.body56.62:                                    ; preds = %for.body56.62, %for.end.62
  %indvars.iv5.62 = phi i64 [ 0, %for.end.62 ], [ %indvars.iv.next6.62, %for.body56.62 ]
  %arrayidx58.62 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.62
  %752 = load i32, i32* %arrayidx58.62, align 4
  %753 = add nuw nsw i64 496, %indvars.iv5.62
  %arrayidx62.62 = getelementptr inbounds i32, i32* %DATA_x, i64 %753
  store i32 %752, i32* %arrayidx62.62, align 4
  %indvars.iv.next6.62 = add nuw nsw i64 %indvars.iv5.62, 1
  %exitcond8.62 = icmp ne i64 %indvars.iv.next6.62, 8
  br i1 %exitcond8.62, label %for.body56.62, label %for.inc66.62, !llvm.loop !24

for.inc66.62:                                     ; preds = %for.body56.62
  br label %for.body3.63

for.body3.63:                                     ; preds = %for.body3.63, %for.inc66.62
  %indvars.iv.63 = phi i64 [ 0, %for.inc66.62 ], [ %indvars.iv.next.63, %for.body3.63 ]
  %754 = add nuw nsw i64 504, %indvars.iv.63
  %arrayidx.63 = getelementptr inbounds i32, i32* %DATA_x, i64 %754
  %755 = load i32, i32* %arrayidx.63, align 4
  %arrayidx5.63 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.63
  store i32 %755, i32* %arrayidx5.63, align 4
  %indvars.iv.next.63 = add nuw nsw i64 %indvars.iv.63, 1
  %exitcond.63 = icmp ne i64 %indvars.iv.next.63, 8
  br i1 %exitcond.63, label %for.body3.63, label %for.end.63, !llvm.loop !23

for.end.63:                                       ; preds = %for.body3.63
  %arrayidx10.63 = getelementptr inbounds i32, i32* %smem, i64 511
  %756 = load i32, i32* %arrayidx10.63, align 4
  store i32 %756, i32* %data_x, align 4
  %arrayidx16.63 = getelementptr inbounds i32, i32* %smem, i64 519
  %757 = load i32, i32* %arrayidx16.63, align 4
  %arrayidx17.63 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %757, i32* %arrayidx17.63, align 4
  %arrayidx22.63 = getelementptr inbounds i32, i32* %smem, i64 527
  %758 = load i32, i32* %arrayidx22.63, align 4
  %arrayidx23.63 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %758, i32* %arrayidx23.63, align 4
  %arrayidx28.63 = getelementptr inbounds i32, i32* %smem, i64 535
  %759 = load i32, i32* %arrayidx28.63, align 4
  %arrayidx29.63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %759, i32* %arrayidx29.63, align 4
  %arrayidx34.63 = getelementptr inbounds i32, i32* %smem, i64 543
  %760 = load i32, i32* %arrayidx34.63, align 4
  %arrayidx35.63 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %760, i32* %arrayidx35.63, align 4
  %arrayidx40.63 = getelementptr inbounds i32, i32* %smem, i64 551
  %761 = load i32, i32* %arrayidx40.63, align 4
  %arrayidx41.63 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %761, i32* %arrayidx41.63, align 4
  %arrayidx46.63 = getelementptr inbounds i32, i32* %smem, i64 559
  %762 = load i32, i32* %arrayidx46.63, align 4
  %arrayidx47.63 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %762, i32* %arrayidx47.63, align 4
  %arrayidx52.63 = getelementptr inbounds i32, i32* %smem, i64 567
  %763 = load i32, i32* %arrayidx52.63, align 4
  %arrayidx53.63 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %763, i32* %arrayidx53.63, align 4
  br label %for.body56.63

for.body56.63:                                    ; preds = %for.body56.63, %for.end.63
  %indvars.iv5.63 = phi i64 [ 0, %for.end.63 ], [ %indvars.iv.next6.63, %for.body56.63 ]
  %arrayidx58.63 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5.63
  %764 = load i32, i32* %arrayidx58.63, align 4
  %765 = add nuw nsw i64 504, %indvars.iv5.63
  %arrayidx62.63 = getelementptr inbounds i32, i32* %DATA_x, i64 %765
  store i32 %764, i32* %arrayidx62.63, align 4
  %indvars.iv.next6.63 = add nuw nsw i64 %indvars.iv5.63, 1
  %exitcond8.63 = icmp ne i64 %indvars.iv.next6.63, 8
  br i1 %exitcond8.63, label %for.body56.63, label %for.inc66.63, !llvm.loop !24

for.inc66.63:                                     ; preds = %for.body56.63
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step9(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !25

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 72
  %add19 = or i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 144
  %add27 = or i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 216
  %add35 = or i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 288
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 360
  %add51 = or i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 432
  %add59 = or i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 504
  %add67 = or i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !26

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step10(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !27

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nsw i32 %4, 72
  %add8 = or i32 %mul6, %and
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_y, align 4
  %mul12 = mul nsw i32 %4, 72
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = or i32 %add13, %and
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nsw i32 %4, 72
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = or i32 %add19, %and
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nsw i32 %4, 72
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = or i32 %add25, %and
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nsw i32 %4, 72
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = or i32 %add31, %and
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nsw i32 %4, 72
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = or i32 %add37, %and
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nsw i32 %4, 72
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = or i32 %add43, %and
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nsw i32 %4, 72
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = or i32 %add49, %and
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_y, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !28

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !29

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc298
  %indvars.iv13 = phi i64 [ 0, %entry ], [ %indvars.iv.next14, %for.inc298 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv13, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %3 = shl nsw i64 %indvars.iv13, 3
  %4 = add nuw nsw i64 %3, %indvars.iv
  %arrayidx9 = getelementptr inbounds i32, i32* %DATA_y, i64 %4
  %5 = load i32, i32* %arrayidx9, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %5, i32* %arrayidx11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !30

for.end:                                          ; preds = %for.body3
  %6 = load i32, i32* %data_x, align 4
  %7 = load i32, i32* %data_y, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4
  %8 = load i32, i32* %arrayidx14, align 4
  %add15 = add nsw i32 %6, %8
  store i32 %add15, i32* %data_x, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4
  %9 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %7, %9
  store i32 %add18, i32* %data_y, align 4
  %arrayidx20 = getelementptr inbounds i32, i32* %data_x, i64 4
  %10 = load i32, i32* %arrayidx20, align 4
  %sub = sub nsw i32 %6, %10
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %sub, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 4
  %11 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %7, %11
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %sub23, i32* %arrayidx24, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1
  %12 = load i32, i32* %arrayidx26, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1
  %13 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5
  %14 = load i32, i32* %arrayidx29, align 4
  %add30 = add nsw i32 %12, %14
  %arrayidx31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add30, i32* %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5
  %15 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %13, %15
  %arrayidx34 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add33, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 5
  %16 = load i32, i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %12, %16
  %arrayidx37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub36, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 5
  %17 = load i32, i32* %arrayidx38, align 4
  %sub39 = sub nsw i32 %13, %17
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub39, i32* %arrayidx40, align 4
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2
  %18 = load i32, i32* %arrayidx42, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2
  %19 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %20 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %18, %20
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add46, i32* %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6
  %21 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %19, %21
  %arrayidx50 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add49, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 6
  %22 = load i32, i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %18, %22
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub52, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %sub55 = sub nsw i32 %19, %23
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub55, i32* %arrayidx56, align 4
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3
  %24 = load i32, i32* %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7
  %26 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %24, %26
  %arrayidx63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %add62, i32* %arrayidx63, align 4
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7
  %27 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %25, %27
  %arrayidx66 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %add65, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds i32, i32* %data_x, i64 7
  %28 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %24, %28
  %arrayidx69 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds i32, i32* %data_y, i64 7
  %29 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %25, %29
  %arrayidx72 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub71, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds i32, i32* %data_x, i64 5
  %30 = load i32, i32* %arrayidx73, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %data_y, i64 5
  %31 = load i32, i32* %arrayidx76, align 4
  %sub78 = add nsw i32 %30, %31
  %conv = sitofp i32 %sub78 to float
  %mul79 = fmul float %conv, 0x3FE6A09E60000000
  %conv80 = fptosi float %mul79 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4
  %arrayidx83 = getelementptr inbounds i32, i32* %data_y, i64 5
  %32 = load i32, i32* %arrayidx83, align 4
  %add85 = sub i32 %32, %30
  %conv86 = sitofp i32 %add85 to float
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000
  %conv88 = fptosi float %mul87 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %conv88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds i32, i32* %data_x, i64 6
  %33 = load i32, i32* %arrayidx90, align 4
  %arrayidx93 = getelementptr inbounds i32, i32* %data_y, i64 6
  %34 = load i32, i32* %arrayidx93, align 4
  %arrayidx96 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %34, i32* %arrayidx96, align 4
  %mul97 = sub nsw i32 0, %33
  %arrayidx101 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %mul97, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds i32, i32* %data_x, i64 7
  %35 = load i32, i32* %arrayidx102, align 4
  %arrayidx105 = getelementptr inbounds i32, i32* %data_y, i64 7
  %36 = load i32, i32* %arrayidx105, align 4
  %sub107 = sub i32 %36, %35
  %conv108 = sitofp i32 %sub107 to float
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000
  %conv110 = fptosi float %mul109 to i32
  %arrayidx111 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %conv110, i32* %arrayidx111, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %data_y, i64 7
  %37 = load i32, i32* %arrayidx113, align 4
  %38 = add i32 %35, %37
  %add115 = sub i32 0, %38
  %conv116 = sitofp i32 %add115 to float
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000
  %conv118 = fptosi float %mul117 to i32
  %arrayidx119 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %conv118, i32* %arrayidx119, align 4
  %39 = load i32, i32* %data_x, align 4
  %40 = load i32, i32* %data_y, align 4
  %arrayidx124 = getelementptr inbounds i32, i32* %data_x, i64 2
  %41 = load i32, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %39, %41
  store i32 %add125, i32* %data_x, align 4
  %arrayidx127 = getelementptr inbounds i32, i32* %data_y, i64 2
  %42 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %40, %42
  store i32 %add128, i32* %data_y, align 4
  %arrayidx130 = getelementptr inbounds i32, i32* %data_x, i64 2
  %43 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub nsw i32 %39, %43
  %arrayidx132 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %sub131, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %data_y, i64 2
  %44 = load i32, i32* %arrayidx133, align 4
  %sub134 = sub nsw i32 %40, %44
  %arrayidx135 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %sub134, i32* %arrayidx135, align 4
  %arrayidx137 = getelementptr inbounds i32, i32* %data_x, i64 1
  %45 = load i32, i32* %arrayidx137, align 4
  %arrayidx139 = getelementptr inbounds i32, i32* %data_y, i64 1
  %46 = load i32, i32* %arrayidx139, align 4
  %arrayidx140 = getelementptr inbounds i32, i32* %data_x, i64 3
  %47 = load i32, i32* %arrayidx140, align 4
  %add141 = add nsw i32 %45, %47
  %arrayidx142 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add141, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds i32, i32* %data_y, i64 3
  %48 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %46, %48
  %arrayidx145 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %data_x, i64 3
  %49 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub nsw i32 %45, %49
  %arrayidx148 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub147, i32* %arrayidx148, align 4
  %arrayidx149 = getelementptr inbounds i32, i32* %data_y, i64 3
  %50 = load i32, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %46, %50
  %arrayidx151 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub150, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %data_x, i64 3
  %51 = load i32, i32* %arrayidx152, align 4
  %arrayidx158 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub150, i32* %arrayidx158, align 4
  %mul159 = sub nsw i32 0, %51
  %arrayidx163 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %mul159, i32* %arrayidx163, align 4
  %52 = load i32, i32* %data_x, align 4
  %53 = load i32, i32* %data_y, align 4
  %arrayidx168 = getelementptr inbounds i32, i32* %data_x, i64 1
  %54 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %52, %54
  store i32 %add169, i32* %data_x, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %data_y, i64 1
  %55 = load i32, i32* %arrayidx171, align 4
  %add172 = add nsw i32 %53, %55
  store i32 %add172, i32* %data_y, align 4
  %arrayidx174 = getelementptr inbounds i32, i32* %data_x, i64 1
  %56 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %52, %56
  %arrayidx176 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %sub175, i32* %arrayidx176, align 4
  %arrayidx177 = getelementptr inbounds i32, i32* %data_y, i64 1
  %57 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %53, %57
  %arrayidx179 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %sub178, i32* %arrayidx179, align 4
  %arrayidx181 = getelementptr inbounds i32, i32* %data_x, i64 2
  %58 = load i32, i32* %arrayidx181, align 4
  %arrayidx183 = getelementptr inbounds i32, i32* %data_y, i64 2
  %59 = load i32, i32* %arrayidx183, align 4
  %arrayidx184 = getelementptr inbounds i32, i32* %data_x, i64 3
  %60 = load i32, i32* %arrayidx184, align 4
  %add185 = add nsw i32 %58, %60
  %arrayidx186 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add185, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %data_y, i64 3
  %61 = load i32, i32* %arrayidx187, align 4
  %add188 = add nsw i32 %59, %61
  %arrayidx189 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %data_x, i64 3
  %62 = load i32, i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 %58, %62
  %arrayidx192 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub191, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds i32, i32* %data_y, i64 3
  %63 = load i32, i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 %59, %63
  %arrayidx195 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub194, i32* %arrayidx195, align 4
  %arrayidx200 = getelementptr inbounds i32, i32* %data_x, i64 4
  %64 = load i32, i32* %arrayidx200, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %data_y, i64 4
  %65 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds i32, i32* %data_x, i64 6
  %66 = load i32, i32* %arrayidx203, align 4
  %add204 = add nsw i32 %64, %66
  %arrayidx205 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds i32, i32* %data_y, i64 6
  %67 = load i32, i32* %arrayidx206, align 4
  %add207 = add nsw i32 %65, %67
  %arrayidx208 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add207, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %data_x, i64 6
  %68 = load i32, i32* %arrayidx209, align 4
  %sub210 = sub nsw i32 %64, %68
  %arrayidx211 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub210, i32* %arrayidx211, align 4
  %arrayidx212 = getelementptr inbounds i32, i32* %data_y, i64 6
  %69 = load i32, i32* %arrayidx212, align 4
  %sub213 = sub nsw i32 %65, %69
  %arrayidx214 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub213, i32* %arrayidx214, align 4
  %arrayidx216 = getelementptr inbounds i32, i32* %data_x, i64 5
  %70 = load i32, i32* %arrayidx216, align 4
  %arrayidx218 = getelementptr inbounds i32, i32* %data_y, i64 5
  %71 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds i32, i32* %data_x, i64 7
  %72 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %70, %72
  %arrayidx221 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %add220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds i32, i32* %data_y, i64 7
  %73 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %71, %73
  %arrayidx224 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %add223, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds i32, i32* %data_x, i64 7
  %74 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %70, %74
  %arrayidx227 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub226, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %data_y, i64 7
  %75 = load i32, i32* %arrayidx228, align 4
  %sub229 = sub nsw i32 %71, %75
  %arrayidx230 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub229, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds i32, i32* %data_x, i64 7
  %76 = load i32, i32* %arrayidx231, align 4
  %arrayidx237 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub229, i32* %arrayidx237, align 4
  %mul238 = sub nsw i32 0, %76
  %arrayidx242 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %mul238, i32* %arrayidx242, align 4
  %arrayidx244 = getelementptr inbounds i32, i32* %data_x, i64 4
  %77 = load i32, i32* %arrayidx244, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %data_y, i64 4
  %78 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %data_x, i64 5
  %79 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %77, %79
  %arrayidx249 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds i32, i32* %data_y, i64 5
  %80 = load i32, i32* %arrayidx250, align 4
  %add251 = add nsw i32 %78, %80
  %arrayidx252 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add251, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds i32, i32* %data_x, i64 5
  %81 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %77, %81
  %arrayidx255 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub254, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds i32, i32* %data_y, i64 5
  %82 = load i32, i32* %arrayidx256, align 4
  %sub257 = sub nsw i32 %78, %82
  %arrayidx258 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub257, i32* %arrayidx258, align 4
  %arrayidx260 = getelementptr inbounds i32, i32* %data_x, i64 6
  %83 = load i32, i32* %arrayidx260, align 4
  %arrayidx262 = getelementptr inbounds i32, i32* %data_y, i64 6
  %84 = load i32, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds i32, i32* %data_x, i64 7
  %85 = load i32, i32* %arrayidx263, align 4
  %add264 = add nsw i32 %83, %85
  %arrayidx265 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %data_y, i64 7
  %86 = load i32, i32* %arrayidx266, align 4
  %add267 = add nsw i32 %84, %86
  %arrayidx268 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %add267, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds i32, i32* %data_x, i64 7
  %87 = load i32, i32* %arrayidx269, align 4
  %sub270 = sub nsw i32 %83, %87
  %arrayidx271 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub270, i32* %arrayidx271, align 4
  %arrayidx272 = getelementptr inbounds i32, i32* %data_y, i64 7
  %88 = load i32, i32* %arrayidx272, align 4
  %sub273 = sub nsw i32 %84, %88
  %arrayidx274 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub273, i32* %arrayidx274, align 4
  br label %for.body278

for.body278:                                      ; preds = %for.end, %for.body278
  %indvars.iv6 = phi i64 [ 0, %for.end ], [ %indvars.iv.next7, %for.body278 ]
  %arrayidx280 = getelementptr inbounds i32, i32* %reversed, i64 %indvars.iv6
  %89 = load i32, i32* %arrayidx280, align 4
  %idxprom281 = sext i32 %89 to i64
  %arrayidx282 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom281
  %90 = load i32, i32* %arrayidx282, align 4
  %91 = shl nsw i64 %indvars.iv6, 6
  %92 = add nuw nsw i64 %91, %indvars.iv13
  %arrayidx286 = getelementptr inbounds i32, i32* %work_x, i64 %92
  store i32 %90, i32* %arrayidx286, align 4
  %arrayidx288 = getelementptr inbounds i32, i32* %reversed, i64 %indvars.iv6
  %93 = load i32, i32* %arrayidx288, align 4
  %idxprom289 = sext i32 %93 to i64
  %arrayidx290 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom289
  %94 = load i32, i32* %arrayidx290, align 4
  %95 = shl nsw i64 %indvars.iv6, 6
  %96 = add nuw nsw i64 %95, %indvars.iv13
  %arrayidx294 = getelementptr inbounds i32, i32* %work_y, i64 %96
  store i32 %94, i32* %arrayidx294, align 4
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %exitcond12 = icmp ne i64 %indvars.iv.next7, 8
  br i1 %exitcond12, label %for.body278, label %for.inc298, !llvm.loop !31

for.inc298:                                       ; preds = %for.body278
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond17 = icmp ne i64 %indvars.iv.next14, 64
  br i1 %exitcond17, label %for.body, label %for.end300, !llvm.loop !32

for.end300:                                       ; preds = %for.inc298
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fft1D_512(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  call void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step2(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step3(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step4(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step5(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step6(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step7(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step8(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step9(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step10(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 {
entry:
  %a_x = alloca [512 x i32], align 16
  %a_y = alloca [512 x i32], align 16
  %sin_64 = alloca [448 x float], align 16
  %sin_512 = alloca [448 x float], align 16
  %cos_64 = alloca [448 x float], align 16
  %cos_512 = alloca [448 x float], align 16
  %DATA_x = alloca [512 x i32], align 16
  %DATA_y = alloca [512 x i32], align 16
  %data_x = alloca [8 x i32], align 16
  %data_y = alloca [8 x i32], align 16
  %smem = alloca [576 x i32], align 16
  %reversed = alloca [8 x i32], align 16
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.3, %for.body ]
  %arrayidx = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv
  %0 = trunc i64 %indvars.iv to i32
  store i32 %0, i32* %arrayidx, align 4
  %arrayidx2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx2, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv.next
  %1 = trunc i64 %indvars.iv.next to i32
  store i32 %1, i32* %arrayidx.1, align 4
  %arrayidx2.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv.next
  store i32 0, i32* %arrayidx2.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next, 1
  %arrayidx.2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv.next.1
  %2 = trunc i64 %indvars.iv.next.1 to i32
  store i32 %2, i32* %arrayidx.2, align 4
  %arrayidx2.2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv.next.1
  store i32 0, i32* %arrayidx2.2, align 4
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.next.1, 1
  %arrayidx.3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv.next.2
  %3 = trunc i64 %indvars.iv.next.2 to i32
  store i32 %3, i32* %arrayidx.3, align 4
  %arrayidx2.3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv.next.2
  store i32 0, i32* %arrayidx2.3, align 4
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.next.2, 1
  %exitcond.3 = icmp ne i64 %indvars.iv.next.3, 512
  br i1 %exitcond.3, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %4 = bitcast [448 x float]* %sin_64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %4, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.sin_64 to i8*), i64 1792, i1 false)
  %5 = bitcast [448 x float]* %sin_512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %5, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.sin_512 to i8*), i64 1792, i1 false)
  %6 = bitcast [448 x float]* %cos_64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %6, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.cos_64 to i8*), i64 1792, i1 false)
  %7 = bitcast [448 x float]* %cos_512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %7, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.cos_512 to i8*), i64 1792, i1 false)
  %8 = bitcast [8 x i32]* %reversed to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(32) %8, i8* nonnull align 16 dereferenceable(32) bitcast ([8 x i32]* @__const.main.reversed to i8*), i64 32, i1 false)
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0
  %arraydecay3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0
  %arraydecay4 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_x, i64 0, i64 0
  %arraydecay5 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_y, i64 0, i64 0
  %arraydecay6 = getelementptr inbounds [8 x i32], [8 x i32]* %data_x, i64 0, i64 0
  %arraydecay7 = getelementptr inbounds [8 x i32], [8 x i32]* %data_y, i64 0, i64 0
  %arraydecay8 = getelementptr inbounds [576 x i32], [576 x i32]* %smem, i64 0, i64 0
  %arraydecay9 = getelementptr inbounds [8 x i32], [8 x i32]* %reversed, i64 0, i64 0
  %arraydecay10 = getelementptr inbounds [448 x float], [448 x float]* %sin_64, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [448 x float], [448 x float]* %sin_512, i64 0, i64 0
  %arraydecay12 = getelementptr inbounds [448 x float], [448 x float]* %cos_64, i64 0, i64 0
  %arraydecay13 = getelementptr inbounds [448 x float], [448 x float]* %cos_512, i64 0, i64 0
  call void @fft1D_512(i32* nonnull %arraydecay, i32* nonnull %arraydecay3, i32* nonnull %arraydecay4, i32* nonnull %arraydecay5, i32* nonnull %arraydecay6, i32* nonnull %arraydecay7, i32* nonnull %arraydecay8, i32* nonnull %arraydecay9, float* nonnull %arraydecay10, float* nonnull %arraydecay11, float* nonnull %arraydecay12, float* nonnull %arraydecay13)
  br label %for.body16

for.body16:                                       ; preds = %for.end
  %arrayidx18 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0
  %9 = load i32, i32* %arrayidx18, align 4
  %arrayidx20 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0
  %10 = load i32, i32* %arrayidx20, align 4
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %9, i32 %10) #3
  %arrayidx18.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 1
  %11 = load i32, i32* %arrayidx18.1, align 4
  %arrayidx20.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 1
  %12 = load i32, i32* %arrayidx20.1, align 4
  %call.1 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %11, i32 %12) #3
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 "}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.count", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !3}
