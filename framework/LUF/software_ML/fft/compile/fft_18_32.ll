; ModuleID = 'fft_18_32.ll'
source_filename = "fft_18_32.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.sin_64 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000], align 16
@__const.main.sin_512 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFA91F70E0000000, float 0xBF992146A0000000, float 0xBFB2D527E0000000, float 0xBF89221000000000, float 0xBFAF657760000000, float 0xBFA2D85E00000000, float 0xBFB5F6CAC0000000, float 0xBFB917A460000000, float 0xBFA91F70E0000000, float 0xBFC2C80C80000000, float 0xBF992146A0000000, float 0xBFBF5653C0000000, float 0xBFB2D527E0000000, float 0xBFC5E21540000000, float 0xBFC2C80C80000000, float 0xBFB2D527E0000000, float 0xBFCC0B8060000000, float 0xBFA2D85E00000000, float 0xBFC76DDAC0000000, float 0xBFBC378240000000, float 0xBFD04FB980000000, float 0xBFC8F8B580000000, float 0xBFB917A460000000, float 0xBFD2940780000000, float 0xBFA91F70E0000000, float 0xBFCF19F800000000, float 0xBFC2C80C80000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFBF5653C0000000, float 0xBFD7088500000000, float 0xBFAF657760000000, float 0xBFD3541100000000, float 0xBFC76DDAC0000000, float 0xBFDAA6CA00000000, float 0xBFD2940780000000, float 0xBFC2C80C80000000, float 0xBFDB5D0FA0000000, float 0xBFB2D527E0000000, float 0xBFD7088500000000, float 0xBFCC0B8060000000, float 0xBFDF8BA400000000, float 0xBFD58F9B20000000, float 0xBFC5E21540000000, float 0xBFDF8BA400000000, float 0xBFB5F6CAC0000000, float 0xBFDAA6CA00000000, float 0xBFD04FB980000000, float 0xBFE21A7A00000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFDB5D0FA0000000, float 0xBFCC0B8060000000, float 0xBFE3AFFB00000000, float 0xBFBC378240000000, float 0xBFE0C97100000000, float 0xBFD4D1E100000000, float 0xBFE65918A0000000, float 0xBFDE2B5E60000000, float 0xBFCF19F800000000, float 0xBFE57D6940000000, float 0xBFBF5653C0000000, float 0xBFE26D04E0000000, float 0xBFD7088500000000, float 0xBFE83B0E60000000, float 0xBFE0738820000000, float 0xBFD111D360000000, float 0xBFE72D0800000000, float 0xBFC139F340000000, float 0xBFE3FED840000000, float 0xBFD9372A40000000, float 0xBFE9EF4380000000, float 0xBFE1C73AC0000000, float 0xBFD2940780000000, float 0xBFE8BC7F80000000, float 0xBFC2C80C80000000, float 0xBFE57D6940000000, float 0xBFDB5D0FA0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0xBFD4135DA0000000, float 0xBFEA29A800000000, float 0xBFC4557580000000, float 0xBFE6E744C0000000, float 0xBFDD7978A0000000, float 0xBFECC1F000000000, float 0xBFE44CF280000000, float 0xBFD58F9B20000000, float 0xBFEB728420000000, float 0xBFC5E21540000000, float 0xBFE83B0E60000000, float 0xBFDF8BA400000000, float 0xBFEDDB1420000000, float 0xBFE57D6940000000, float 0xBFD7088500000000, float 0xBFEC954A80000000, float 0xBFC76DDAC0000000, float 0xBFE9777F20000000, float 0xBFE0C97100000000, float 0xBFEEBBD9C0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFE7B5DEE0000000, float 0xBFD9EF7800000000, float 0xBFEE628880000000, float 0xBFCA829D00000000, float 0xBFEBA5AAC0000000, float 0xBFE2BEDB80000000, float 0xBFEFCE1600000000, float 0xBFE8BC7F80000000, float 0xBFDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0xBFCC0B8060000000, float 0xBFEC954A80000000, float 0xBFE3AFFB00000000, float 0xBFEFFD88C0000000, float 0xBFE9B3E140000000, float 0xBFDCC66D40000000, float 0xBFEF8765C0000000, float 0xBFCD934F00000000, float 0xBFED6961C0000000, float 0xBFE49A45A0000000, float 0xBFEFF09520000000, float 0xBFEA9B6700000000, float 0xBFDE2B5E60000000, float 0xBFEFD88E40000000, float 0xBFCF19F800000000, float 0xBFEE2120E0000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFDF8BA400000000, float 0xBFEFFD88C0000000, float 0xBFD04FB980000000, float 0xBFEEBBD9C0000000, float 0xBFE65918A0000000, float 0xBFEF225320000000, float 0xBFEC38B260000000, float 0xBFE0738820000000, float 0xBFEFF620E0000000, float 0xBFD111D360000000, float 0xBFEF38F360000000, float 0xBFE72D0800000000, float 0xBFEE628880000000, float 0xBFECED7A60000000, float 0xBFE11EB420000000, float 0xBFEFC26560000000, float 0xBFD1D34580000000, float 0xBFEF97F840000000, float 0xBFE7F8EC00000000, float 0xBFED6961C0000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0xBFEE2120E0000000, float 0xBFE26D04E0000000, float 0xBFEED740C0000000, float 0xBFD3541100000000, float 0xBFEFFA7220000000, float 0xBFE9777F20000000, float 0xBFEAD2BD40000000, float 0xBFEE9F40A0000000, float 0xBFE30FF760000000, float 0xBFEE2120E0000000, float 0xBFD4135DA0000000, float 0xBFEFFD88C0000000, float 0xBFEA29A800000000, float 0xBFE93A2160000000, float 0xBFEF0A7E80000000, float 0xBFE3AFFB00000000, float 0xBFED413560000000, float 0xBFD4D1E100000000, float 0xBFEFE1CBC0000000, float 0xBFEAD2BD40000000, float 0xBFE771E6C0000000, float 0xBFEF629740000000, float 0xBFE44CF280000000, float 0xBFEC38B260000000, float 0xBFD58F9B20000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFE4E6CB20000000, float 0xBFEB090B40000000, float 0xBFD64C7F40000000, float 0xBFEF4E5F80000000, float 0xBFEC08C400000000, float 0xBFE36058A0000000, float 0xBFEFD88E40000000, float 0xBFE57D6940000000, float 0xBFE9B3E140000000, float 0xBFD7088500000000, float 0xBFEED740C0000000, float 0xBFEC954A80000000, float 0xBFE11EB420000000, float 0xBFEFF620E0000000, float 0xBFE610B840000000, float 0xBFE83B0E60000000, float 0xBFD7C3A860000000, float 0xBFEE4269A0000000, float 0xBFED17E780000000, float 0xBFDD7978A0000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEFF620E0000000, float 0xBFE72D0800000000, float 0xBFE4E6CB20000000, float 0xBFD9372A40000000, float 0xBFECC1F000000000, float 0xBFEDFEAE60000000, float 0xBFD3541100000000, float 0xBFEFD88E40000000, float 0xBFE7B5DEE0000000, float 0xBFE30FF760000000, float 0xBFD9EF7800000000, float 0xBFEBD7C0C0000000, float 0xBFEE628880000000, float 0xBFCC0B8060000000, float 0xBFEFA75680000000, float 0xBFE83B0E60000000, float 0xBFE11EB420000000, float 0xBFDAA6CA00000000, float 0xBFEAD2BD40000000, float 0xBFEEBBD9C0000000, float 0xBFC139F340000000, float 0xBFEF629740000000, float 0xBFE8BC7F80000000, float 0xBFDE2B5E60000000, float 0xBFDB5D0FA0000000, float 0xBFE9B3E140000000, float 0xBFEF0A7E80000000, float 0xBFA91F70E0000000, float 0xBFEF0A7E80000000, float 0xBFE93A2160000000, float 0xBFD9EF7800000000, float 0xBFDC1248E0000000, float 0xBFE87C3F80000000, float 0xBFEF4E5F80000000, float 0x3FA2D85E00000000, float 0xBFEE9F40A0000000, float 0xBFE9B3E140000000, float 0xBFD58F9B20000000, float 0xBFDCC66D40000000, float 0xBFE72D0800000000, float 0xBFEF8765C0000000, float 0x3FBF5653C0000000, float 0xBFEE2120E0000000, float 0xBFEA29A800000000, float 0xBFD111D360000000, float 0xBFDD7978A0000000, float 0xBFE5C77BC0000000, float 0xBFEFB57A40000000, float 0x3FCA829D00000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFECED7A60000000, float 0xBFEB090B40000000, float 0xBFBF5653C0000000, float 0xBFDEDC1A40000000, float 0xBFE2BEDB80000000, float 0xBFEFF09520000000, float 0x3FD7C3A860000000, float 0xBFEC38B260000000, float 0xBFEB728420000000, float 0xBFA91F70E0000000, float 0xBFDF8BA400000000, float 0xBFE11EB420000000, float 0xBFEFFD88C0000000, float 0x3FDCC66D40000000, float 0xBFEB728420000000, float 0xBFEBD7C0C0000000, float 0x3F992146A0000000, float 0xBFE01CFBC0000000, float 0xBFDEDC1A40000000, float 0xBFEFFF62C0000000, float 0x3FE0C97100000000, float 0xBFEA9B6700000000, float 0xBFEC38B260000000, float 0x3FB917A460000000, float 0xBFE0738820000000, float 0xBFDB5D0FA0000000, float 0xBFEFF620E0000000, float 0x3FE30FF760000000, float 0xBFE9B3E140000000, float 0xBFEC954A80000000, float 0x3FC5E21540000000, float 0xBFE0C97100000000, float 0xBFD7C3A860000000, float 0xBFEFE1CBC0000000, float 0x3FE5328300000000, float 0xBFE8BC7F80000000, float 0xBFECED7A60000000, float 0x3FCF19F800000000, float 0xBFE11EB420000000, float 0xBFD4135DA0000000, float 0xBFEFC26560000000, float 0x3FE72D0800000000, float 0xBFE7B5DEE0000000, float 0xBFED413560000000, float 0x3FD4135DA0000000, float 0xBFE1734D60000000, float 0xBFD04FB980000000, float 0xBFEF97F840000000, float 0x3FE8FBCC20000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE57D6940000000, float 0xBFEDDB1420000000, float 0x3FDCC66D40000000, float 0xBFE21A7A00000000, float 0xBFC139F340000000, float 0xBFEF225320000000, float 0x3FEC08C400000000, float 0xBFE44CF280000000, float 0xBFEE2120E0000000, float 0x3FE0738820000000, float 0xBFE26D04E0000000, float 0xBFB2D527E0000000, float 0xBFEED740C0000000, float 0x3FED413560000000, float 0xBFE30FF760000000, float 0xBFEE628880000000, float 0x3FE26D04E0000000, float 0xBFE2BEDB80000000, float 0xBF89221000000000, float 0xBFEE817BA0000000, float 0x3FEE4269A0000000, float 0xBFE1C73AC0000000, float 0xBFEE9F40A0000000, float 0x3FE44CF280000000, float 0xBFE30FF760000000, float 0x3FA91F70E0000000, float 0xBFEE2120E0000000, float 0x3FEF0A7E80000000, float 0xBFE0738820000000, float 0xBFEED740C0000000, float 0x3FE610B840000000, float 0xBFE36058A0000000, float 0x3FBC378240000000, float 0xBFEDB65240000000, float 0x3FEF97F840000000, float 0xBFDE2B5E60000000, float 0xBFEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0xBFE3AFFB00000000, float 0x3FC5E21540000000, float 0xBFED413560000000, float 0x3FEFE9CCC0000000, float 0xBFDB5D0FA0000000, float 0xBFEF38F360000000, float 0x3FE93A2160000000, float 0xBFE3FED840000000, float 0x3FCD934F00000000, float 0xBFECC1F000000000, float 0x3FEFFF62C0000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFD58F9B20000000, float 0xBFEF8765C0000000, float 0x3FEBD7C0C0000000, float 0xBFE49A45A0000000, float 0x3FD64C7F40000000, float 0xBFEBA5AAC0000000, float 0x3FEF7598A0000000, float 0xBFD2940780000000, float 0xBFEFA75680000000, float 0x3FECED7A60000000, float 0xBFE4E6CB20000000, float 0x3FD9EF7800000000, float 0xBFEB090B40000000, float 0x3FEED740C0000000, float 0xBFCF19F800000000, float 0xBFEFC26560000000, float 0x3FEDDB1420000000, float 0xBFE5328300000000, float 0x3FDD7978A0000000, float 0xBFEA630880000000, float 0x3FEDFEAE60000000, float 0xBFC8F8B580000000, float 0xBFEFD88E40000000, float 0x3FEE9F40A0000000, float 0xBFE57D6940000000, float 0x3FE0738820000000, float 0xBFE9B3E140000000, float 0x3FECED7A60000000, float 0xBFC2C80C80000000, float 0xBFEFE9CCC0000000, float 0x3FEF38F360000000, float 0xBFE5C77BC0000000, float 0x3FE21A7A00000000, float 0xBFE8FBCC20000000, float 0x3FEBA5AAC0000000, float 0xBFB917A460000000, float 0xBFEFF620E0000000, float 0x3FEFA75680000000, float 0xBFE610B840000000, float 0x3FE3AFFB00000000, float 0xBFE83B0E60000000, float 0x3FEA29A800000000, float 0xBFA91F70E0000000, float 0xBFEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0xBFE65918A0000000, float 0x3FE5328300000000, float 0xBFE771E6C0000000, float 0x3FE87C3F80000000], align 16
@__const.main.cos_64 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000], align 16
@__const.main.cos_512 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEFF620E0000000, float 0x3FEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0x3FEFFF62C0000000, float 0x3FEFF09520000000, float 0x3FEFFA7220000000, float 0x3FEFE1CBC0000000, float 0x3FEFD88E40000000, float 0x3FEFF620E0000000, float 0x3FEFA75680000000, float 0x3FEFFD88C0000000, float 0x3FEFC26560000000, float 0x3FEFE9CCC0000000, float 0x3FEF8765C0000000, float 0x3FEFA75680000000, float 0x3FEFE9CCC0000000, float 0x3FEF38F360000000, float 0x3FEFFA7220000000, float 0x3FEF7598A0000000, float 0x3FEFCE1600000000, float 0x3FEEF177A0000000, float 0x3FEF629740000000, float 0x3FEFD88E40000000, float 0x3FEE9F40A0000000, float 0x3FEFF620E0000000, float 0x3FEF0A7E80000000, float 0x3FEFA75680000000, float 0x3FEE2120E0000000, float 0x3FEF0A7E80000000, float 0x3FEFC26560000000, float 0x3FEDDB1420000000, float 0x3FEFF09520000000, float 0x3FEE817BA0000000, float 0x3FEF7598A0000000, float 0x3FED17E780000000, float 0x3FEE9F40A0000000, float 0x3FEFA75680000000, float 0x3FECED7A60000000, float 0x3FEFE9CCC0000000, float 0x3FEDDB1420000000, float 0x3FEF38F360000000, float 0x3FEBD7C0C0000000, float 0x3FEE2120E0000000, float 0x3FEF8765C0000000, float 0x3FEBD7C0C0000000, float 0x3FEFE1CBC0000000, float 0x3FED17E780000000, float 0x3FEEF177A0000000, float 0x3FEA630880000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FECED7A60000000, float 0x3FEF38F360000000, float 0x3FE93A2160000000, float 0x3FEFCE1600000000, float 0x3FEB3E4CE0000000, float 0x3FEE4269A0000000, float 0x3FE6E744C0000000, float 0x3FEC38B260000000, float 0x3FEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0x3FEFC26560000000, float 0x3FEA29A800000000, float 0x3FEDDB1420000000, float 0x3FE4E6CB20000000, float 0x3FEB728420000000, float 0x3FEED740C0000000, float 0x3FE610B840000000, float 0x3FEFB57A40000000, float 0x3FE8FBCC20000000, float 0x3FED6961C0000000, float 0x3FE2BEDB80000000, float 0x3FEA9B6700000000, float 0x3FEE9F40A0000000, float 0x3FE44CF280000000, float 0x3FEFA75680000000, float 0x3FE7B5DEE0000000, float 0x3FECED7A60000000, float 0x3FE0738820000000, float 0x3FE9B3E140000000, float 0x3FEE628880000000, float 0x3FE26D04E0000000, float 0x3FEF97F840000000, float 0x3FE65918A0000000, float 0x3FEC678C00000000, float 0x3FDC1248E0000000, float 0x3FE8BC7F80000000, float 0x3FEE2120E0000000, float 0x3FE0738820000000, float 0x3FEF8765C0000000, float 0x3FE4E6CB20000000, float 0x3FEBD7C0C0000000, float 0x3FD7088500000000, float 0x3FE7B5DEE0000000, float 0x3FEDDB1420000000, float 0x3FDCC66D40000000, float 0x3FEF7598A0000000, float 0x3FE36058A0000000, float 0x3FEB3E4CE0000000, float 0x3FD1D34580000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FE57D6940000000, float 0x3FED413560000000, float 0x3FD4135DA0000000, float 0x3FEF4E5F80000000, float 0x3FE01CFBC0000000, float 0x3FE9EF4380000000, float 0x3FBC378240000000, float 0x3FE44CF280000000, float 0x3FECED7A60000000, float 0x3FCF19F800000000, float 0x3FEF38F360000000, float 0x3FDCC66D40000000, float 0x3FE93A2160000000, float 0x3F992146A0000000, float 0x3FE30FF760000000, float 0x3FEC954A80000000, float 0x3FC5E21540000000, float 0x3FEF225320000000, float 0x3FD9372A40000000, float 0x3FE87C3F80000000, float 0xBFAF657760000000, float 0x3FE1C73AC0000000, float 0x3FEC38B260000000, float 0x3FB917A460000000, float 0x3FEF0A7E80000000, float 0x3FD58F9B20000000, float 0x3FE7B5DEE0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0x3FEBD7C0C0000000, float 0x3F992146A0000000, float 0x3FEEF177A0000000, float 0x3FD1D34580000000, float 0x3FE6E744C0000000, float 0xBFCD934F00000000, float 0x3FDE2B5E60000000, float 0x3FEB728420000000, float 0xBFA91F70E0000000, float 0x3FEED740C0000000, float 0x3FCC0B8060000000, float 0x3FE610B840000000, float 0xBFD4135DA0000000, float 0x3FDB5D0FA0000000, float 0x3FEB090B40000000, float 0xBFBF5653C0000000, float 0x3FEEBBD9C0000000, float 0x3FC4557580000000, float 0x3FE5328300000000, float 0xBFD9372A40000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FD58F9B20000000, float 0x3FEA29A800000000, float 0xBFD111D360000000, float 0x3FEE817BA0000000, float 0x3FA2D85E00000000, float 0x3FE36058A0000000, float 0xBFE1734D60000000, float 0x3FD2940780000000, float 0x3FE9B3E140000000, float 0xBFD58F9B20000000, float 0x3FEE628880000000, float 0xBF992146A0000000, float 0x3FE26D04E0000000, float 0xBFE3AFFB00000000, float 0x3FCF19F800000000, float 0x3FE93A2160000000, float 0xBFD9EF7800000000, float 0x3FEE4269A0000000, float 0xBFB5F6CAC0000000, float 0x3FE1734D60000000, float 0xBFE5C77BC0000000, float 0x3FC8F8B580000000, float 0x3FE8BC7F80000000, float 0xBFDE2B5E60000000, float 0x3FEE2120E0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0xBFE7B5DEE0000000, float 0x3FC2C80C80000000, float 0x3FE83B0E60000000, float 0xBFE11EB420000000, float 0x3FEDFEAE60000000, float 0xBFCA829D00000000, float 0x3FDEDC1A40000000, float 0xBFE9777F20000000, float 0x3FB917A460000000, float 0x3FE7B5DEE0000000, float 0xBFE30FF760000000, float 0x3FEDDB1420000000, float 0xBFD111D360000000, float 0x3FDCC66D40000000, float 0xBFEB090B40000000, float 0x3FA91F70E0000000, float 0x3FE72D0800000000, float 0xBFE4E6CB20000000, float 0x3FEDB65240000000, float 0xBFD4D1E100000000, float 0x3FDAA6CA00000000, float 0xBFEC678C00000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFA91F70E0000000, float 0x3FE610B840000000, float 0xBFE83B0E60000000, float 0x3FED6961C0000000, float 0xBFDC1248E0000000, float 0x3FD64C7F40000000, float 0xBFEE817BA0000000, float 0xBFB917A460000000, float 0x3FE57D6940000000, float 0xBFE9B3E140000000, float 0x3FED413560000000, float 0xBFDF8BA400000000, float 0x3FD4135DA0000000, float 0xBFEF38F360000000, float 0xBFC2C80C80000000, float 0x3FE4E6CB20000000, float 0xBFEB090B40000000, float 0x3FED17E780000000, float 0xBFE1734D60000000, float 0x3FD1D34580000000, float 0xBFEFB57A40000000, float 0xBFC8F8B580000000, float 0x3FE44CF280000000, float 0xBFEC38B260000000, float 0x3FECED7A60000000, float 0xBFE30FF760000000, float 0x3FCF19F800000000, float 0xBFEFF620E0000000, float 0xBFCF19F800000000, float 0x3FE3AFFB00000000, float 0xBFED413560000000, float 0x3FECC1F000000000, float 0xBFE49A45A0000000, float 0x3FCA829D00000000, float 0xBFEFFA7220000000, float 0xBFD2940780000000, float 0x3FE30FF760000000, float 0xBFEE2120E0000000, float 0x3FEC954A80000000, float 0xBFE610B840000000, float 0x3FC5E21540000000, float 0xBFEFC26560000000, float 0xBFD58F9B20000000, float 0x3FE26D04E0000000, float 0xBFEED740C0000000, float 0x3FEC678C00000000, float 0xBFE771E6C0000000, float 0x3FC139F340000000, float 0xBFEF4E5F80000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFDB5D0FA0000000, float 0x3FE11EB420000000, float 0xBFEFC26560000000, float 0x3FEC08C400000000, float 0xBFE9EF4380000000, float 0x3FAF657760000000, float 0xBFEDB65240000000, float 0xBFDE2B5E60000000, float 0x3FE0738820000000, float 0xBFEFF620E0000000, float 0x3FEBD7C0C0000000, float 0xBFEB090B40000000, float 0x3F992146A0000000, float 0xBFEC954A80000000, float 0xBFE0738820000000, float 0x3FDF8BA400000000, float 0xBFEFFD88C0000000, float 0x3FEBA5AAC0000000, float 0xBFEC08C400000000, float 0xBF89221000000000, float 0xBFEB3E4CE0000000, float 0xBFE1C73AC0000000, float 0x3FDE2B5E60000000, float 0xBFEFD88E40000000, float 0x3FEB728420000000, float 0xBFECED7A60000000, float 0xBFA91F70E0000000, float 0xBFE9B3E140000000, float 0xBFE30FF760000000, float 0x3FDCC66D40000000, float 0xBFEF8765C0000000, float 0x3FEB3E4CE0000000, float 0xBFEDB65240000000, float 0xBFB5F6CAC0000000, float 0xBFE7F8EC00000000, float 0xBFE44CF280000000, float 0x3FDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0x3FEB090B40000000, float 0xBFEE628880000000, float 0xBFBF5653C0000000, float 0xBFE610B840000000, float 0xBFE57D6940000000, float 0x3FD9EF7800000000, float 0xBFEE628880000000, float 0x3FEAD2BD40000000, float 0xBFEEF177A0000000, float 0xBFC4557580000000, float 0xBFE3FED840000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE7B5DEE0000000, float 0x3FD7088500000000, float 0xBFEC954A80000000, float 0x3FEA630880000000, float 0xBFEFB57A40000000, float 0xBFCD934F00000000, float 0xBFDEDC1A40000000, float 0xBFE8BC7F80000000, float 0x3FD58F9B20000000, float 0xBFEB728420000000, float 0x3FEA29A800000000, float 0xBFEFE9CCC0000000, float 0xBFD111D360000000, float 0xBFD9EF7800000000, float 0xBFE9B3E140000000, float 0x3FD4135DA0000000, float 0xBFEA29A800000000, float 0x3FE9EF4380000000, float 0xBFEFFF62C0000000, float 0xBFD3541100000000, float 0xBFD4D1E100000000, float 0xBFEA9B6700000000, float 0x3FD2940780000000, float 0xBFE8BC7F80000000, float 0x3FE9B3E140000000, float 0xBFEFF620E0000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFEB728420000000, float 0x3FD111D360000000, float 0xBFE72D0800000000, float 0x3FE9777F20000000, float 0xBFEFCE1600000000, float 0xBFD7C3A860000000, float 0xBFC4557580000000, float 0xBFEC38B260000000, float 0x3FCF19F800000000, float 0xBFE57D6940000000, float 0x3FE93A2160000000, float 0xBFEF8765C0000000, float 0xBFD9EF7800000000, float 0xBFB2D527E0000000, float 0xBFECED7A60000000, float 0x3FCC0B8060000000, float 0xBFE3AFFB00000000, float 0x3FE8FBCC20000000, float 0xBFEF225320000000, float 0xBFDC1248E0000000, float 0x3F89221000000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFEE2120E0000000, float 0x3FC5E21540000000, float 0xBFDF8BA400000000, float 0x3FE87C3F80000000, float 0xBFEDFEAE60000000, float 0xBFE01CFBC0000000, float 0x3FC76DDAC0000000, float 0xBFEE9F40A0000000, float 0x3FC2C80C80000000, float 0xBFDB5D0FA0000000, float 0x3FE83B0E60000000, float 0xBFED413560000000, float 0xBFE11EB420000000, float 0x3FD111D360000000, float 0xBFEF0A7E80000000, float 0x3FBF5653C0000000, float 0xBFD7088500000000, float 0x3FE7F8EC00000000, float 0xBFEC678C00000000, float 0xBFE21A7A00000000, float 0x3FD64C7F40000000, float 0xBFEF629740000000, float 0x3FB917A460000000, float 0xBFD2940780000000, float 0x3FE7B5DEE0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0x3FDB5D0FA0000000, float 0xBFEFA75680000000, float 0x3FB2D527E0000000, float 0xBFCC0B8060000000, float 0x3FE771E6C0000000, float 0xBFEA630880000000, float 0xBFE3FED840000000, float 0x3FE01CFBC0000000, float 0xBFEFD88E40000000, float 0x3FA91F70E0000000, float 0xBFC2C80C80000000, float 0x3FE72D0800000000, float 0xBFE93A2160000000, float 0xBFE4E6CB20000000, float 0x3FE26D04E0000000, float 0xBFEFF620E0000000, float 0x3F992146A0000000, float 0xBFB2D527E0000000, float 0x3FE6E744C0000000, float 0xBFE7F8EC00000000, float 0xBFE5C77BC0000000, float 0x3FE49A45A0000000], align 16
@__const.main.reversed = private unnamed_addr constant [8 x i32] [i32 0, i32 4, i32 2, i32 6, i32 1, i32 5, i32 3, i32 7], align 16
@.str = private unnamed_addr constant [16 x i8] c"x = %i y = %i \0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc332
  %indvars.iv21 = phi i64 [ 0, %entry ], [ %indvars.iv.next22, %for.inc332 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv, 6
  %1 = add nuw nsw i64 %0, %indvars.iv21
  %arrayidx = getelementptr inbounds i32, i32* %work_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %3 = shl nsw i64 %indvars.iv, 6
  %4 = add nuw nsw i64 %3, %indvars.iv21
  %arrayidx9 = getelementptr inbounds i32, i32* %work_y, i64 %4
  %5 = load i32, i32* %arrayidx9, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %5, i32* %arrayidx11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !2

for.end:                                          ; preds = %for.body3
  %6 = load i32, i32* %data_x, align 4
  %7 = load i32, i32* %data_y, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4
  %8 = load i32, i32* %arrayidx14, align 4
  %add15 = add nsw i32 %6, %8
  store i32 %add15, i32* %data_x, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4
  %9 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %7, %9
  store i32 %add18, i32* %data_y, align 4
  %arrayidx20 = getelementptr inbounds i32, i32* %data_x, i64 4
  %10 = load i32, i32* %arrayidx20, align 4
  %sub = sub nsw i32 %6, %10
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %sub, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 4
  %11 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %7, %11
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %sub23, i32* %arrayidx24, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1
  %12 = load i32, i32* %arrayidx26, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1
  %13 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5
  %14 = load i32, i32* %arrayidx29, align 4
  %add30 = add nsw i32 %12, %14
  %arrayidx31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add30, i32* %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5
  %15 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %13, %15
  %arrayidx34 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add33, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 5
  %16 = load i32, i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %12, %16
  %arrayidx37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub36, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 5
  %17 = load i32, i32* %arrayidx38, align 4
  %sub39 = sub nsw i32 %13, %17
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub39, i32* %arrayidx40, align 4
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2
  %18 = load i32, i32* %arrayidx42, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2
  %19 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %20 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %18, %20
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add46, i32* %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6
  %21 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %19, %21
  %arrayidx50 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add49, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 6
  %22 = load i32, i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %18, %22
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub52, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %sub55 = sub nsw i32 %19, %23
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub55, i32* %arrayidx56, align 4
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3
  %24 = load i32, i32* %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7
  %26 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %24, %26
  %arrayidx63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %add62, i32* %arrayidx63, align 4
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7
  %27 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %25, %27
  %arrayidx66 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %add65, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds i32, i32* %data_x, i64 7
  %28 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %24, %28
  %arrayidx69 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds i32, i32* %data_y, i64 7
  %29 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %25, %29
  %arrayidx72 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub71, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds i32, i32* %data_x, i64 5
  %30 = load i32, i32* %arrayidx73, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %data_y, i64 5
  %31 = load i32, i32* %arrayidx76, align 4
  %sub78 = add nsw i32 %30, %31
  %conv = sitofp i32 %sub78 to float
  %mul79 = fmul float %conv, 0x3FE6A09E60000000
  %conv80 = fptosi float %mul79 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4
  %arrayidx83 = getelementptr inbounds i32, i32* %data_y, i64 5
  %32 = load i32, i32* %arrayidx83, align 4
  %add85 = sub i32 %32, %30
  %conv86 = sitofp i32 %add85 to float
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000
  %conv88 = fptosi float %mul87 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %conv88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds i32, i32* %data_x, i64 6
  %33 = load i32, i32* %arrayidx90, align 4
  %arrayidx93 = getelementptr inbounds i32, i32* %data_y, i64 6
  %34 = load i32, i32* %arrayidx93, align 4
  %arrayidx96 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %34, i32* %arrayidx96, align 4
  %mul97 = sub nsw i32 0, %33
  %arrayidx101 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %mul97, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds i32, i32* %data_x, i64 7
  %35 = load i32, i32* %arrayidx102, align 4
  %arrayidx105 = getelementptr inbounds i32, i32* %data_y, i64 7
  %36 = load i32, i32* %arrayidx105, align 4
  %sub107 = sub i32 %36, %35
  %conv108 = sitofp i32 %sub107 to float
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000
  %conv110 = fptosi float %mul109 to i32
  %arrayidx111 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %conv110, i32* %arrayidx111, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %data_y, i64 7
  %37 = load i32, i32* %arrayidx113, align 4
  %38 = add i32 %35, %37
  %add115 = sub i32 0, %38
  %conv116 = sitofp i32 %add115 to float
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000
  %conv118 = fptosi float %mul117 to i32
  %arrayidx119 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %conv118, i32* %arrayidx119, align 4
  %39 = load i32, i32* %data_x, align 4
  %40 = load i32, i32* %data_y, align 4
  %arrayidx124 = getelementptr inbounds i32, i32* %data_x, i64 2
  %41 = load i32, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %39, %41
  store i32 %add125, i32* %data_x, align 4
  %arrayidx127 = getelementptr inbounds i32, i32* %data_y, i64 2
  %42 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %40, %42
  store i32 %add128, i32* %data_y, align 4
  %arrayidx130 = getelementptr inbounds i32, i32* %data_x, i64 2
  %43 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub nsw i32 %39, %43
  %arrayidx132 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %sub131, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %data_y, i64 2
  %44 = load i32, i32* %arrayidx133, align 4
  %sub134 = sub nsw i32 %40, %44
  %arrayidx135 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %sub134, i32* %arrayidx135, align 4
  %arrayidx137 = getelementptr inbounds i32, i32* %data_x, i64 1
  %45 = load i32, i32* %arrayidx137, align 4
  %arrayidx139 = getelementptr inbounds i32, i32* %data_y, i64 1
  %46 = load i32, i32* %arrayidx139, align 4
  %arrayidx140 = getelementptr inbounds i32, i32* %data_x, i64 3
  %47 = load i32, i32* %arrayidx140, align 4
  %add141 = add nsw i32 %45, %47
  %arrayidx142 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add141, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds i32, i32* %data_y, i64 3
  %48 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %46, %48
  %arrayidx145 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %data_x, i64 3
  %49 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub nsw i32 %45, %49
  %arrayidx148 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub147, i32* %arrayidx148, align 4
  %arrayidx149 = getelementptr inbounds i32, i32* %data_y, i64 3
  %50 = load i32, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %46, %50
  %arrayidx151 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub150, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %data_x, i64 3
  %51 = load i32, i32* %arrayidx152, align 4
  %arrayidx158 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub150, i32* %arrayidx158, align 4
  %mul159 = sub nsw i32 0, %51
  %arrayidx163 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %mul159, i32* %arrayidx163, align 4
  %52 = load i32, i32* %data_x, align 4
  %53 = load i32, i32* %data_y, align 4
  %arrayidx168 = getelementptr inbounds i32, i32* %data_x, i64 1
  %54 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %52, %54
  store i32 %add169, i32* %data_x, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %data_y, i64 1
  %55 = load i32, i32* %arrayidx171, align 4
  %add172 = add nsw i32 %53, %55
  store i32 %add172, i32* %data_y, align 4
  %arrayidx174 = getelementptr inbounds i32, i32* %data_x, i64 1
  %56 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %52, %56
  %arrayidx176 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %sub175, i32* %arrayidx176, align 4
  %arrayidx177 = getelementptr inbounds i32, i32* %data_y, i64 1
  %57 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %53, %57
  %arrayidx179 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %sub178, i32* %arrayidx179, align 4
  %arrayidx181 = getelementptr inbounds i32, i32* %data_x, i64 2
  %58 = load i32, i32* %arrayidx181, align 4
  %arrayidx183 = getelementptr inbounds i32, i32* %data_y, i64 2
  %59 = load i32, i32* %arrayidx183, align 4
  %arrayidx184 = getelementptr inbounds i32, i32* %data_x, i64 3
  %60 = load i32, i32* %arrayidx184, align 4
  %add185 = add nsw i32 %58, %60
  %arrayidx186 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add185, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %data_y, i64 3
  %61 = load i32, i32* %arrayidx187, align 4
  %add188 = add nsw i32 %59, %61
  %arrayidx189 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %data_x, i64 3
  %62 = load i32, i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 %58, %62
  %arrayidx192 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub191, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds i32, i32* %data_y, i64 3
  %63 = load i32, i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 %59, %63
  %arrayidx195 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub194, i32* %arrayidx195, align 4
  %arrayidx200 = getelementptr inbounds i32, i32* %data_x, i64 4
  %64 = load i32, i32* %arrayidx200, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %data_y, i64 4
  %65 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds i32, i32* %data_x, i64 6
  %66 = load i32, i32* %arrayidx203, align 4
  %add204 = add nsw i32 %64, %66
  %arrayidx205 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds i32, i32* %data_y, i64 6
  %67 = load i32, i32* %arrayidx206, align 4
  %add207 = add nsw i32 %65, %67
  %arrayidx208 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add207, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %data_x, i64 6
  %68 = load i32, i32* %arrayidx209, align 4
  %sub210 = sub nsw i32 %64, %68
  %arrayidx211 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub210, i32* %arrayidx211, align 4
  %arrayidx212 = getelementptr inbounds i32, i32* %data_y, i64 6
  %69 = load i32, i32* %arrayidx212, align 4
  %sub213 = sub nsw i32 %65, %69
  %arrayidx214 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub213, i32* %arrayidx214, align 4
  %arrayidx216 = getelementptr inbounds i32, i32* %data_x, i64 5
  %70 = load i32, i32* %arrayidx216, align 4
  %arrayidx218 = getelementptr inbounds i32, i32* %data_y, i64 5
  %71 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds i32, i32* %data_x, i64 7
  %72 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %70, %72
  %arrayidx221 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %add220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds i32, i32* %data_y, i64 7
  %73 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %71, %73
  %arrayidx224 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %add223, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds i32, i32* %data_x, i64 7
  %74 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %70, %74
  %arrayidx227 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub226, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %data_y, i64 7
  %75 = load i32, i32* %arrayidx228, align 4
  %sub229 = sub nsw i32 %71, %75
  %arrayidx230 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub229, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds i32, i32* %data_x, i64 7
  %76 = load i32, i32* %arrayidx231, align 4
  %arrayidx237 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub229, i32* %arrayidx237, align 4
  %mul238 = sub nsw i32 0, %76
  %arrayidx242 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %mul238, i32* %arrayidx242, align 4
  %arrayidx244 = getelementptr inbounds i32, i32* %data_x, i64 4
  %77 = load i32, i32* %arrayidx244, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %data_y, i64 4
  %78 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %data_x, i64 5
  %79 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %77, %79
  %arrayidx249 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds i32, i32* %data_y, i64 5
  %80 = load i32, i32* %arrayidx250, align 4
  %add251 = add nsw i32 %78, %80
  %arrayidx252 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add251, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds i32, i32* %data_x, i64 5
  %81 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %77, %81
  %arrayidx255 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub254, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds i32, i32* %data_y, i64 5
  %82 = load i32, i32* %arrayidx256, align 4
  %sub257 = sub nsw i32 %78, %82
  %arrayidx258 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub257, i32* %arrayidx258, align 4
  %arrayidx260 = getelementptr inbounds i32, i32* %data_x, i64 6
  %83 = load i32, i32* %arrayidx260, align 4
  %arrayidx262 = getelementptr inbounds i32, i32* %data_y, i64 6
  %84 = load i32, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds i32, i32* %data_x, i64 7
  %85 = load i32, i32* %arrayidx263, align 4
  %add264 = add nsw i32 %83, %85
  %arrayidx265 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %data_y, i64 7
  %86 = load i32, i32* %arrayidx266, align 4
  %add267 = add nsw i32 %84, %86
  %arrayidx268 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %add267, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds i32, i32* %data_x, i64 7
  %87 = load i32, i32* %arrayidx269, align 4
  %sub270 = sub nsw i32 %83, %87
  %arrayidx271 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub270, i32* %arrayidx271, align 4
  %arrayidx272 = getelementptr inbounds i32, i32* %data_y, i64 7
  %88 = load i32, i32* %arrayidx272, align 4
  %sub273 = sub nsw i32 %84, %88
  %arrayidx274 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub273, i32* %arrayidx274, align 4
  br label %for.body278

for.body278:                                      ; preds = %for.end, %for.body278
  %indvars.iv9 = phi i64 [ 1, %for.end ], [ %indvars.iv.next10, %for.body278 ]
  %89 = mul nuw nsw i64 %indvars.iv21, 7
  %90 = add nuw nsw i64 %89, %indvars.iv9
  %91 = add nsw i64 %90, -1
  %arrayidx284 = getelementptr inbounds float, float* %cos_512, i64 %91
  %92 = load float, float* %arrayidx284, align 4
  %conv285 = fptosi float %92 to i32
  %93 = mul nuw nsw i64 %indvars.iv21, 7
  %94 = add nuw nsw i64 %93, %indvars.iv9
  %95 = add nsw i64 %94, -1
  %arrayidx290 = getelementptr inbounds float, float* %sin_512, i64 %95
  %96 = load float, float* %arrayidx290, align 4
  %conv291 = fptosi float %96 to i32
  %arrayidx293 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv9
  %97 = load i32, i32* %arrayidx293, align 4
  %arrayidx295 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv9
  %98 = load i32, i32* %arrayidx295, align 4
  %mul296 = mul nsw i32 %98, %conv285
  %arrayidx298 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv9
  %99 = load i32, i32* %arrayidx298, align 4
  %mul299 = mul nsw i32 %99, %conv291
  %sub300 = sub nsw i32 %mul296, %mul299
  %arrayidx302 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv9
  store i32 %sub300, i32* %arrayidx302, align 4
  %mul303 = mul nsw i32 %97, %conv291
  %arrayidx305 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv9
  %100 = load i32, i32* %arrayidx305, align 4
  %mul306 = mul nsw i32 %100, %conv285
  %add307 = add nsw i32 %mul303, %mul306
  %arrayidx309 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv9
  store i32 %add307, i32* %arrayidx309, align 4
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond15 = icmp ne i64 %indvars.iv.next10, 8
  br i1 %exitcond15, label %for.body278, label %for.body316.preheader, !llvm.loop !4

for.body316.preheader:                            ; preds = %for.body278
  br label %for.body316

for.body316:                                      ; preds = %for.body316.preheader, %for.body316
  %indvars.iv16 = phi i64 [ 0, %for.body316.preheader ], [ %indvars.iv.next17, %for.body316 ]
  %arrayidx318 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv16
  %101 = load i32, i32* %arrayidx318, align 4
  %102 = shl nsw i64 %indvars.iv21, 3
  %103 = add nuw nsw i64 %102, %indvars.iv16
  %arrayidx322 = getelementptr inbounds i32, i32* %DATA_x, i64 %103
  store i32 %101, i32* %arrayidx322, align 4
  %arrayidx324 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv16
  %104 = load i32, i32* %arrayidx324, align 4
  %105 = shl nsw i64 %indvars.iv21, 3
  %106 = add nuw nsw i64 %105, %indvars.iv16
  %arrayidx328 = getelementptr inbounds i32, i32* %DATA_y, i64 %106
  store i32 %104, i32* %arrayidx328, align 4
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %exitcond20 = icmp ne i64 %indvars.iv.next17, 8
  br i1 %exitcond20, label %for.body316, label %for.inc332, !llvm.loop !5

for.inc332:                                       ; preds = %for.body316
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1
  %exitcond27 = icmp ne i64 %indvars.iv.next22, 64
  br i1 %exitcond27, label %for.body, label %for.end334, !llvm.loop !6

for.end334:                                       ; preds = %for.inc332
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step2(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !7

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 66
  %add19 = add nuw nsw i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 132
  %add27 = add nuw nsw i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 198
  %add35 = add nuw nsw i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 264
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 330
  %add51 = add nuw nsw i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 396
  %add59 = add nuw nsw i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 462
  %add67 = add nuw nsw i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !8

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step3(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !9

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nuw nsw i32 %and, 66
  %add8 = add nuw nsw i32 %mul6, %4
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_x, align 4
  %mul12 = mul nuw nsw i32 %and, 66
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = add nuw nsw i32 %add13, %4
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nuw nsw i32 %and, 66
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = add nuw nsw i32 %add19, %4
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nuw nsw i32 %and, 66
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = add nuw nsw i32 %add25, %4
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nuw nsw i32 %and, 66
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = add nuw nsw i32 %add31, %4
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nuw nsw i32 %and, 66
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = add nuw nsw i32 %add37, %4
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nuw nsw i32 %and, 66
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = add nuw nsw i32 %add43, %4
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nuw nsw i32 %and, 66
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = add nuw nsw i32 %add49, %4
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_x, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !10

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !11

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step4(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !12

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 66
  %add19 = add nuw nsw i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 132
  %add27 = add nuw nsw i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 198
  %add35 = add nuw nsw i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 264
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 330
  %add51 = add nuw nsw i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 396
  %add59 = add nuw nsw i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 462
  %add67 = add nuw nsw i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !13

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step5(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !14

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nuw nsw i32 %and, 66
  %add8 = add nuw nsw i32 %mul6, %4
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_y, align 4
  %mul12 = mul nuw nsw i32 %and, 66
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = add nuw nsw i32 %add13, %4
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nuw nsw i32 %and, 66
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = add nuw nsw i32 %add19, %4
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nuw nsw i32 %and, 66
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = add nuw nsw i32 %add25, %4
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nuw nsw i32 %and, 66
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = add nuw nsw i32 %add31, %4
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nuw nsw i32 %and, 66
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = add nuw nsw i32 %add37, %4
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nuw nsw i32 %and, 66
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = add nuw nsw i32 %add43, %4
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nuw nsw i32 %and, 66
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = add nuw nsw i32 %add49, %4
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_y, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !15

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !16

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step6(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc332
  %indvars.iv19 = phi i64 [ 0, %entry ], [ %indvars.iv.next20, %for.inc332 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv19, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %3 = shl nsw i64 %indvars.iv19, 3
  %4 = add nuw nsw i64 %3, %indvars.iv
  %arrayidx9 = getelementptr inbounds i32, i32* %DATA_y, i64 %4
  %5 = load i32, i32* %arrayidx9, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %5, i32* %arrayidx11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !17

for.end:                                          ; preds = %for.body3
  %6 = load i32, i32* %data_x, align 4
  %7 = load i32, i32* %data_y, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4
  %8 = load i32, i32* %arrayidx14, align 4
  %add15 = add nsw i32 %6, %8
  store i32 %add15, i32* %data_x, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4
  %9 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %7, %9
  store i32 %add18, i32* %data_y, align 4
  %arrayidx20 = getelementptr inbounds i32, i32* %data_x, i64 4
  %10 = load i32, i32* %arrayidx20, align 4
  %sub = sub nsw i32 %6, %10
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %sub, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 4
  %11 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %7, %11
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %sub23, i32* %arrayidx24, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1
  %12 = load i32, i32* %arrayidx26, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1
  %13 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5
  %14 = load i32, i32* %arrayidx29, align 4
  %add30 = add nsw i32 %12, %14
  %arrayidx31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add30, i32* %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5
  %15 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %13, %15
  %arrayidx34 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add33, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 5
  %16 = load i32, i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %12, %16
  %arrayidx37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub36, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 5
  %17 = load i32, i32* %arrayidx38, align 4
  %sub39 = sub nsw i32 %13, %17
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub39, i32* %arrayidx40, align 4
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2
  %18 = load i32, i32* %arrayidx42, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2
  %19 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %20 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %18, %20
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add46, i32* %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6
  %21 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %19, %21
  %arrayidx50 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add49, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 6
  %22 = load i32, i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %18, %22
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub52, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %sub55 = sub nsw i32 %19, %23
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub55, i32* %arrayidx56, align 4
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3
  %24 = load i32, i32* %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7
  %26 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %24, %26
  %arrayidx63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %add62, i32* %arrayidx63, align 4
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7
  %27 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %25, %27
  %arrayidx66 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %add65, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds i32, i32* %data_x, i64 7
  %28 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %24, %28
  %arrayidx69 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds i32, i32* %data_y, i64 7
  %29 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %25, %29
  %arrayidx72 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub71, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds i32, i32* %data_x, i64 5
  %30 = load i32, i32* %arrayidx73, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %data_y, i64 5
  %31 = load i32, i32* %arrayidx76, align 4
  %sub78 = add nsw i32 %30, %31
  %conv = sitofp i32 %sub78 to float
  %mul79 = fmul float %conv, 0x3FE6A09E60000000
  %conv80 = fptosi float %mul79 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4
  %arrayidx83 = getelementptr inbounds i32, i32* %data_y, i64 5
  %32 = load i32, i32* %arrayidx83, align 4
  %add85 = sub i32 %32, %30
  %conv86 = sitofp i32 %add85 to float
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000
  %conv88 = fptosi float %mul87 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %conv88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds i32, i32* %data_x, i64 6
  %33 = load i32, i32* %arrayidx90, align 4
  %arrayidx93 = getelementptr inbounds i32, i32* %data_y, i64 6
  %34 = load i32, i32* %arrayidx93, align 4
  %arrayidx96 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %34, i32* %arrayidx96, align 4
  %mul97 = sub nsw i32 0, %33
  %arrayidx101 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %mul97, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds i32, i32* %data_x, i64 7
  %35 = load i32, i32* %arrayidx102, align 4
  %arrayidx105 = getelementptr inbounds i32, i32* %data_y, i64 7
  %36 = load i32, i32* %arrayidx105, align 4
  %sub107 = sub i32 %36, %35
  %conv108 = sitofp i32 %sub107 to float
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000
  %conv110 = fptosi float %mul109 to i32
  %arrayidx111 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %conv110, i32* %arrayidx111, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %data_y, i64 7
  %37 = load i32, i32* %arrayidx113, align 4
  %38 = add i32 %35, %37
  %add115 = sub i32 0, %38
  %conv116 = sitofp i32 %add115 to float
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000
  %conv118 = fptosi float %mul117 to i32
  %arrayidx119 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %conv118, i32* %arrayidx119, align 4
  %39 = load i32, i32* %data_x, align 4
  %40 = load i32, i32* %data_y, align 4
  %arrayidx124 = getelementptr inbounds i32, i32* %data_x, i64 2
  %41 = load i32, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %39, %41
  store i32 %add125, i32* %data_x, align 4
  %arrayidx127 = getelementptr inbounds i32, i32* %data_y, i64 2
  %42 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %40, %42
  store i32 %add128, i32* %data_y, align 4
  %arrayidx130 = getelementptr inbounds i32, i32* %data_x, i64 2
  %43 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub nsw i32 %39, %43
  %arrayidx132 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %sub131, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %data_y, i64 2
  %44 = load i32, i32* %arrayidx133, align 4
  %sub134 = sub nsw i32 %40, %44
  %arrayidx135 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %sub134, i32* %arrayidx135, align 4
  %arrayidx137 = getelementptr inbounds i32, i32* %data_x, i64 1
  %45 = load i32, i32* %arrayidx137, align 4
  %arrayidx139 = getelementptr inbounds i32, i32* %data_y, i64 1
  %46 = load i32, i32* %arrayidx139, align 4
  %arrayidx140 = getelementptr inbounds i32, i32* %data_x, i64 3
  %47 = load i32, i32* %arrayidx140, align 4
  %add141 = add nsw i32 %45, %47
  %arrayidx142 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add141, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds i32, i32* %data_y, i64 3
  %48 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %46, %48
  %arrayidx145 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %data_x, i64 3
  %49 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub nsw i32 %45, %49
  %arrayidx148 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub147, i32* %arrayidx148, align 4
  %arrayidx149 = getelementptr inbounds i32, i32* %data_y, i64 3
  %50 = load i32, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %46, %50
  %arrayidx151 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub150, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %data_x, i64 3
  %51 = load i32, i32* %arrayidx152, align 4
  %arrayidx158 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub150, i32* %arrayidx158, align 4
  %mul159 = sub nsw i32 0, %51
  %arrayidx163 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %mul159, i32* %arrayidx163, align 4
  %52 = load i32, i32* %data_x, align 4
  %53 = load i32, i32* %data_y, align 4
  %arrayidx168 = getelementptr inbounds i32, i32* %data_x, i64 1
  %54 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %52, %54
  store i32 %add169, i32* %data_x, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %data_y, i64 1
  %55 = load i32, i32* %arrayidx171, align 4
  %add172 = add nsw i32 %53, %55
  store i32 %add172, i32* %data_y, align 4
  %arrayidx174 = getelementptr inbounds i32, i32* %data_x, i64 1
  %56 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %52, %56
  %arrayidx176 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %sub175, i32* %arrayidx176, align 4
  %arrayidx177 = getelementptr inbounds i32, i32* %data_y, i64 1
  %57 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %53, %57
  %arrayidx179 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %sub178, i32* %arrayidx179, align 4
  %arrayidx181 = getelementptr inbounds i32, i32* %data_x, i64 2
  %58 = load i32, i32* %arrayidx181, align 4
  %arrayidx183 = getelementptr inbounds i32, i32* %data_y, i64 2
  %59 = load i32, i32* %arrayidx183, align 4
  %arrayidx184 = getelementptr inbounds i32, i32* %data_x, i64 3
  %60 = load i32, i32* %arrayidx184, align 4
  %add185 = add nsw i32 %58, %60
  %arrayidx186 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add185, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %data_y, i64 3
  %61 = load i32, i32* %arrayidx187, align 4
  %add188 = add nsw i32 %59, %61
  %arrayidx189 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %data_x, i64 3
  %62 = load i32, i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 %58, %62
  %arrayidx192 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub191, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds i32, i32* %data_y, i64 3
  %63 = load i32, i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 %59, %63
  %arrayidx195 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub194, i32* %arrayidx195, align 4
  %arrayidx200 = getelementptr inbounds i32, i32* %data_x, i64 4
  %64 = load i32, i32* %arrayidx200, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %data_y, i64 4
  %65 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds i32, i32* %data_x, i64 6
  %66 = load i32, i32* %arrayidx203, align 4
  %add204 = add nsw i32 %64, %66
  %arrayidx205 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds i32, i32* %data_y, i64 6
  %67 = load i32, i32* %arrayidx206, align 4
  %add207 = add nsw i32 %65, %67
  %arrayidx208 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add207, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %data_x, i64 6
  %68 = load i32, i32* %arrayidx209, align 4
  %sub210 = sub nsw i32 %64, %68
  %arrayidx211 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub210, i32* %arrayidx211, align 4
  %arrayidx212 = getelementptr inbounds i32, i32* %data_y, i64 6
  %69 = load i32, i32* %arrayidx212, align 4
  %sub213 = sub nsw i32 %65, %69
  %arrayidx214 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub213, i32* %arrayidx214, align 4
  %arrayidx216 = getelementptr inbounds i32, i32* %data_x, i64 5
  %70 = load i32, i32* %arrayidx216, align 4
  %arrayidx218 = getelementptr inbounds i32, i32* %data_y, i64 5
  %71 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds i32, i32* %data_x, i64 7
  %72 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %70, %72
  %arrayidx221 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %add220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds i32, i32* %data_y, i64 7
  %73 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %71, %73
  %arrayidx224 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %add223, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds i32, i32* %data_x, i64 7
  %74 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %70, %74
  %arrayidx227 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub226, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %data_y, i64 7
  %75 = load i32, i32* %arrayidx228, align 4
  %sub229 = sub nsw i32 %71, %75
  %arrayidx230 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub229, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds i32, i32* %data_x, i64 7
  %76 = load i32, i32* %arrayidx231, align 4
  %arrayidx237 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub229, i32* %arrayidx237, align 4
  %mul238 = sub nsw i32 0, %76
  %arrayidx242 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %mul238, i32* %arrayidx242, align 4
  %arrayidx244 = getelementptr inbounds i32, i32* %data_x, i64 4
  %77 = load i32, i32* %arrayidx244, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %data_y, i64 4
  %78 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %data_x, i64 5
  %79 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %77, %79
  %arrayidx249 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds i32, i32* %data_y, i64 5
  %80 = load i32, i32* %arrayidx250, align 4
  %add251 = add nsw i32 %78, %80
  %arrayidx252 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add251, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds i32, i32* %data_x, i64 5
  %81 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %77, %81
  %arrayidx255 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub254, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds i32, i32* %data_y, i64 5
  %82 = load i32, i32* %arrayidx256, align 4
  %sub257 = sub nsw i32 %78, %82
  %arrayidx258 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub257, i32* %arrayidx258, align 4
  %arrayidx260 = getelementptr inbounds i32, i32* %data_x, i64 6
  %83 = load i32, i32* %arrayidx260, align 4
  %arrayidx262 = getelementptr inbounds i32, i32* %data_y, i64 6
  %84 = load i32, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds i32, i32* %data_x, i64 7
  %85 = load i32, i32* %arrayidx263, align 4
  %add264 = add nsw i32 %83, %85
  %arrayidx265 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %data_y, i64 7
  %86 = load i32, i32* %arrayidx266, align 4
  %add267 = add nsw i32 %84, %86
  %arrayidx268 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %add267, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds i32, i32* %data_x, i64 7
  %87 = load i32, i32* %arrayidx269, align 4
  %sub270 = sub nsw i32 %83, %87
  %arrayidx271 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub270, i32* %arrayidx271, align 4
  %arrayidx272 = getelementptr inbounds i32, i32* %data_y, i64 7
  %88 = load i32, i32* %arrayidx272, align 4
  %sub273 = sub nsw i32 %84, %88
  %arrayidx274 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub273, i32* %arrayidx274, align 4
  %89 = trunc i64 %indvars.iv19 to i32
  %90 = lshr i32 %89, 3
  br label %for.body278

for.body278:                                      ; preds = %for.end, %for.body278
  %indvars.iv7 = phi i64 [ 1, %for.end ], [ %indvars.iv.next8, %for.body278 ]
  %mul280 = mul nuw nsw i32 %90, 7
  %91 = sext i32 %mul280 to i64
  %92 = add nuw nsw i64 %91, %indvars.iv7
  %93 = add nsw i64 %92, -1
  %arrayidx284 = getelementptr inbounds float, float* %cos_64, i64 %93
  %94 = load float, float* %arrayidx284, align 4
  %conv285 = fptosi float %94 to i32
  %mul286 = mul nuw nsw i32 %90, 7
  %95 = sext i32 %mul286 to i64
  %96 = add nuw nsw i64 %95, %indvars.iv7
  %97 = add nsw i64 %96, -1
  %arrayidx290 = getelementptr inbounds float, float* %sin_64, i64 %97
  %98 = load float, float* %arrayidx290, align 4
  %conv291 = fptosi float %98 to i32
  %arrayidx293 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv7
  %99 = load i32, i32* %arrayidx293, align 4
  %arrayidx295 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv7
  %100 = load i32, i32* %arrayidx295, align 4
  %mul296 = mul nsw i32 %100, %conv285
  %arrayidx298 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv7
  %101 = load i32, i32* %arrayidx298, align 4
  %mul299 = mul nsw i32 %101, %conv291
  %sub300 = sub nsw i32 %mul296, %mul299
  %arrayidx302 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv7
  store i32 %sub300, i32* %arrayidx302, align 4
  %mul303 = mul nsw i32 %99, %conv291
  %arrayidx305 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv7
  %102 = load i32, i32* %arrayidx305, align 4
  %mul306 = mul nsw i32 %102, %conv285
  %add307 = add nsw i32 %mul303, %mul306
  %arrayidx309 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv7
  store i32 %add307, i32* %arrayidx309, align 4
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next8, 8
  br i1 %exitcond13, label %for.body278, label %for.body316.preheader, !llvm.loop !18

for.body316.preheader:                            ; preds = %for.body278
  br label %for.body316

for.body316:                                      ; preds = %for.body316.preheader, %for.body316
  %indvars.iv14 = phi i64 [ 0, %for.body316.preheader ], [ %indvars.iv.next15, %for.body316 ]
  %arrayidx318 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv14
  %103 = load i32, i32* %arrayidx318, align 4
  %104 = shl nsw i64 %indvars.iv19, 3
  %105 = add nuw nsw i64 %104, %indvars.iv14
  %arrayidx322 = getelementptr inbounds i32, i32* %DATA_x, i64 %105
  store i32 %103, i32* %arrayidx322, align 4
  %arrayidx324 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv14
  %106 = load i32, i32* %arrayidx324, align 4
  %107 = shl nsw i64 %indvars.iv19, 3
  %108 = add nuw nsw i64 %107, %indvars.iv14
  %arrayidx328 = getelementptr inbounds i32, i32* %DATA_y, i64 %108
  store i32 %106, i32* %arrayidx328, align 4
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1
  %exitcond18 = icmp ne i64 %indvars.iv.next15, 8
  br i1 %exitcond18, label %for.body316, label %for.inc332, !llvm.loop !19

for.inc332:                                       ; preds = %for.body316
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %exitcond25 = icmp ne i64 %indvars.iv.next20, 64
  br i1 %exitcond25, label %for.body, label %for.end334, !llvm.loop !20

for.end334:                                       ; preds = %for.inc332
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step7(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.end.31, %entry
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5.31, %for.end.31 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !21

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %4 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7
  %5 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %5, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %6 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %6 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %8 = trunc i64 %indvars.iv4 to i32
  %add18 = add nuw nsw i32 %8, 72
  %idxprom20 = zext i32 %add18 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %7, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %9 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %9 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23
  %10 = load i32, i32* %arrayidx24, align 4
  %11 = trunc i64 %indvars.iv4 to i32
  %add26 = add nuw nsw i32 %11, 144
  %idxprom28 = zext i32 %add26 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %10, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %12 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %12 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31
  %13 = load i32, i32* %arrayidx32, align 4
  %14 = trunc i64 %indvars.iv4 to i32
  %add34 = add nuw nsw i32 %14, 216
  %idxprom36 = zext i32 %add34 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %13, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %15 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %15 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39
  %16 = load i32, i32* %arrayidx40, align 4
  %17 = trunc i64 %indvars.iv4 to i32
  %add42 = add nuw nsw i32 %17, 288
  %idxprom44 = zext i32 %add42 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %16, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %18 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %18 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47
  %19 = load i32, i32* %arrayidx48, align 4
  %20 = trunc i64 %indvars.iv4 to i32
  %add50 = add nuw nsw i32 %20, 360
  %idxprom52 = zext i32 %add50 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %19, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %21 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %21 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55
  %22 = load i32, i32* %arrayidx56, align 4
  %23 = trunc i64 %indvars.iv4 to i32
  %add58 = add nuw nsw i32 %23, 432
  %idxprom60 = zext i32 %add58 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %22, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %24 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %24 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63
  %25 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %3, 504
  %idxprom68 = zext i32 %add66 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %25, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  br label %for.body3.1

for.end72:                                        ; preds = %for.end.31
  ret void

for.body3.1:                                      ; preds = %for.body3.1, %for.end
  %indvars.iv.1 = phi i64 [ 0, %for.end ], [ %indvars.iv.next.1, %for.body3.1 ]
  %26 = shl nsw i64 %indvars.iv.next5, 3
  %27 = add nuw nsw i64 %26, %indvars.iv.1
  %arrayidx.1 = getelementptr inbounds i32, i32* %DATA_x, i64 %27
  %28 = load i32, i32* %arrayidx.1, align 4
  %arrayidx5.1 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.1
  store i32 %28, i32* %arrayidx5.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %exitcond.1 = icmp ne i64 %indvars.iv.next.1, 8
  br i1 %exitcond.1, label %for.body3.1, label %for.end.1, !llvm.loop !21

for.end.1:                                        ; preds = %for.body3.1
  %29 = trunc i64 %indvars.iv.next5 to i32
  %30 = and i32 %29, 2147483640
  %31 = load i32, i32* %reversed, align 4
  %idxprom7.1 = sext i32 %31 to i64
  %arrayidx8.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.1
  %32 = load i32, i32* %arrayidx8.1, align 4
  %arrayidx13.1 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5
  store i32 %32, i32* %arrayidx13.1, align 4
  %arrayidx14.1 = getelementptr inbounds i32, i32* %reversed, i64 1
  %33 = load i32, i32* %arrayidx14.1, align 4
  %idxprom15.1 = sext i32 %33 to i64
  %arrayidx16.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.1
  %34 = load i32, i32* %arrayidx16.1, align 4
  %35 = trunc i64 %indvars.iv.next5 to i32
  %mul17.1 = and i32 %35, 2147483640
  %add18.1 = add nuw nsw i32 %mul17.1, 72
  %add19.1 = or i32 %add18.1, 1
  %idxprom20.1 = zext i32 %add19.1 to i64
  %arrayidx21.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.1
  store i32 %34, i32* %arrayidx21.1, align 4
  %arrayidx22.1 = getelementptr inbounds i32, i32* %reversed, i64 2
  %36 = load i32, i32* %arrayidx22.1, align 4
  %idxprom23.1 = sext i32 %36 to i64
  %arrayidx24.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.1
  %37 = load i32, i32* %arrayidx24.1, align 4
  %38 = trunc i64 %indvars.iv.next5 to i32
  %mul25.1 = and i32 %38, 2147483640
  %add26.1 = add nuw nsw i32 %mul25.1, 144
  %add27.1 = or i32 %add26.1, 1
  %idxprom28.1 = zext i32 %add27.1 to i64
  %arrayidx29.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.1
  store i32 %37, i32* %arrayidx29.1, align 4
  %arrayidx30.1 = getelementptr inbounds i32, i32* %reversed, i64 3
  %39 = load i32, i32* %arrayidx30.1, align 4
  %idxprom31.1 = sext i32 %39 to i64
  %arrayidx32.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.1
  %40 = load i32, i32* %arrayidx32.1, align 4
  %41 = trunc i64 %indvars.iv.next5 to i32
  %mul33.1 = and i32 %41, 2147483640
  %add34.1 = add nuw nsw i32 %mul33.1, 216
  %add35.1 = or i32 %add34.1, 1
  %idxprom36.1 = zext i32 %add35.1 to i64
  %arrayidx37.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.1
  store i32 %40, i32* %arrayidx37.1, align 4
  %arrayidx38.1 = getelementptr inbounds i32, i32* %reversed, i64 4
  %42 = load i32, i32* %arrayidx38.1, align 4
  %idxprom39.1 = sext i32 %42 to i64
  %arrayidx40.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.1
  %43 = load i32, i32* %arrayidx40.1, align 4
  %44 = trunc i64 %indvars.iv.next5 to i32
  %mul41.1 = and i32 %44, 2147483640
  %add42.1 = add nuw nsw i32 %mul41.1, 288
  %add43.1 = or i32 %add42.1, 1
  %idxprom44.1 = zext i32 %add43.1 to i64
  %arrayidx45.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.1
  store i32 %43, i32* %arrayidx45.1, align 4
  %arrayidx46.1 = getelementptr inbounds i32, i32* %reversed, i64 5
  %45 = load i32, i32* %arrayidx46.1, align 4
  %idxprom47.1 = sext i32 %45 to i64
  %arrayidx48.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.1
  %46 = load i32, i32* %arrayidx48.1, align 4
  %47 = trunc i64 %indvars.iv.next5 to i32
  %mul49.1 = and i32 %47, 2147483640
  %add50.1 = add nuw nsw i32 %mul49.1, 360
  %add51.1 = or i32 %add50.1, 1
  %idxprom52.1 = zext i32 %add51.1 to i64
  %arrayidx53.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.1
  store i32 %46, i32* %arrayidx53.1, align 4
  %arrayidx54.1 = getelementptr inbounds i32, i32* %reversed, i64 6
  %48 = load i32, i32* %arrayidx54.1, align 4
  %idxprom55.1 = sext i32 %48 to i64
  %arrayidx56.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.1
  %49 = load i32, i32* %arrayidx56.1, align 4
  %50 = trunc i64 %indvars.iv.next5 to i32
  %mul57.1 = and i32 %50, 2147483640
  %add58.1 = add nuw nsw i32 %mul57.1, 432
  %add59.1 = or i32 %add58.1, 1
  %idxprom60.1 = zext i32 %add59.1 to i64
  %arrayidx61.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.1
  store i32 %49, i32* %arrayidx61.1, align 4
  %arrayidx62.1 = getelementptr inbounds i32, i32* %reversed, i64 7
  %51 = load i32, i32* %arrayidx62.1, align 4
  %idxprom63.1 = sext i32 %51 to i64
  %arrayidx64.1 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.1
  %52 = load i32, i32* %arrayidx64.1, align 4
  %add66.1 = add nuw nsw i32 %30, 504
  %add67.1 = or i32 %add66.1, 1
  %idxprom68.1 = zext i32 %add67.1 to i64
  %arrayidx69.1 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.1
  store i32 %52, i32* %arrayidx69.1, align 4
  %indvars.iv.next5.1 = add nuw nsw i64 %indvars.iv.next5, 1
  br label %for.body3.2

for.body3.2:                                      ; preds = %for.body3.2, %for.end.1
  %indvars.iv.2 = phi i64 [ 0, %for.end.1 ], [ %indvars.iv.next.2, %for.body3.2 ]
  %53 = shl nsw i64 %indvars.iv.next5.1, 3
  %54 = add nuw nsw i64 %53, %indvars.iv.2
  %arrayidx.2 = getelementptr inbounds i32, i32* %DATA_x, i64 %54
  %55 = load i32, i32* %arrayidx.2, align 4
  %arrayidx5.2 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.2
  store i32 %55, i32* %arrayidx5.2, align 4
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %exitcond.2 = icmp ne i64 %indvars.iv.next.2, 8
  br i1 %exitcond.2, label %for.body3.2, label %for.end.2, !llvm.loop !21

for.end.2:                                        ; preds = %for.body3.2
  %56 = trunc i64 %indvars.iv.next5.1 to i32
  %57 = and i32 %56, 2147483640
  %58 = load i32, i32* %reversed, align 4
  %idxprom7.2 = sext i32 %58 to i64
  %arrayidx8.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.2
  %59 = load i32, i32* %arrayidx8.2, align 4
  %arrayidx13.2 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.1
  store i32 %59, i32* %arrayidx13.2, align 4
  %arrayidx14.2 = getelementptr inbounds i32, i32* %reversed, i64 1
  %60 = load i32, i32* %arrayidx14.2, align 4
  %idxprom15.2 = sext i32 %60 to i64
  %arrayidx16.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.2
  %61 = load i32, i32* %arrayidx16.2, align 4
  %62 = trunc i64 %indvars.iv.next5.1 to i32
  %mul17.2 = and i32 %62, 2147483640
  %add18.2 = add nuw nsw i32 %mul17.2, 72
  %add19.2 = or i32 %add18.2, 2
  %idxprom20.2 = zext i32 %add19.2 to i64
  %arrayidx21.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.2
  store i32 %61, i32* %arrayidx21.2, align 4
  %arrayidx22.2 = getelementptr inbounds i32, i32* %reversed, i64 2
  %63 = load i32, i32* %arrayidx22.2, align 4
  %idxprom23.2 = sext i32 %63 to i64
  %arrayidx24.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.2
  %64 = load i32, i32* %arrayidx24.2, align 4
  %65 = trunc i64 %indvars.iv.next5.1 to i32
  %mul25.2 = and i32 %65, 2147483640
  %add26.2 = add nuw nsw i32 %mul25.2, 144
  %add27.2 = or i32 %add26.2, 2
  %idxprom28.2 = zext i32 %add27.2 to i64
  %arrayidx29.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.2
  store i32 %64, i32* %arrayidx29.2, align 4
  %arrayidx30.2 = getelementptr inbounds i32, i32* %reversed, i64 3
  %66 = load i32, i32* %arrayidx30.2, align 4
  %idxprom31.2 = sext i32 %66 to i64
  %arrayidx32.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.2
  %67 = load i32, i32* %arrayidx32.2, align 4
  %68 = trunc i64 %indvars.iv.next5.1 to i32
  %mul33.2 = and i32 %68, 2147483640
  %add34.2 = add nuw nsw i32 %mul33.2, 216
  %add35.2 = or i32 %add34.2, 2
  %idxprom36.2 = zext i32 %add35.2 to i64
  %arrayidx37.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.2
  store i32 %67, i32* %arrayidx37.2, align 4
  %arrayidx38.2 = getelementptr inbounds i32, i32* %reversed, i64 4
  %69 = load i32, i32* %arrayidx38.2, align 4
  %idxprom39.2 = sext i32 %69 to i64
  %arrayidx40.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.2
  %70 = load i32, i32* %arrayidx40.2, align 4
  %71 = trunc i64 %indvars.iv.next5.1 to i32
  %mul41.2 = and i32 %71, 2147483640
  %add42.2 = add nuw nsw i32 %mul41.2, 288
  %add43.2 = or i32 %add42.2, 2
  %idxprom44.2 = zext i32 %add43.2 to i64
  %arrayidx45.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.2
  store i32 %70, i32* %arrayidx45.2, align 4
  %arrayidx46.2 = getelementptr inbounds i32, i32* %reversed, i64 5
  %72 = load i32, i32* %arrayidx46.2, align 4
  %idxprom47.2 = sext i32 %72 to i64
  %arrayidx48.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.2
  %73 = load i32, i32* %arrayidx48.2, align 4
  %74 = trunc i64 %indvars.iv.next5.1 to i32
  %mul49.2 = and i32 %74, 2147483640
  %add50.2 = add nuw nsw i32 %mul49.2, 360
  %add51.2 = or i32 %add50.2, 2
  %idxprom52.2 = zext i32 %add51.2 to i64
  %arrayidx53.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.2
  store i32 %73, i32* %arrayidx53.2, align 4
  %arrayidx54.2 = getelementptr inbounds i32, i32* %reversed, i64 6
  %75 = load i32, i32* %arrayidx54.2, align 4
  %idxprom55.2 = sext i32 %75 to i64
  %arrayidx56.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.2
  %76 = load i32, i32* %arrayidx56.2, align 4
  %77 = trunc i64 %indvars.iv.next5.1 to i32
  %mul57.2 = and i32 %77, 2147483640
  %add58.2 = add nuw nsw i32 %mul57.2, 432
  %add59.2 = or i32 %add58.2, 2
  %idxprom60.2 = zext i32 %add59.2 to i64
  %arrayidx61.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.2
  store i32 %76, i32* %arrayidx61.2, align 4
  %arrayidx62.2 = getelementptr inbounds i32, i32* %reversed, i64 7
  %78 = load i32, i32* %arrayidx62.2, align 4
  %idxprom63.2 = sext i32 %78 to i64
  %arrayidx64.2 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.2
  %79 = load i32, i32* %arrayidx64.2, align 4
  %add66.2 = add nuw nsw i32 %57, 504
  %add67.2 = or i32 %add66.2, 2
  %idxprom68.2 = zext i32 %add67.2 to i64
  %arrayidx69.2 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.2
  store i32 %79, i32* %arrayidx69.2, align 4
  %indvars.iv.next5.2 = add nuw nsw i64 %indvars.iv.next5.1, 1
  br label %for.body3.3

for.body3.3:                                      ; preds = %for.body3.3, %for.end.2
  %indvars.iv.3 = phi i64 [ 0, %for.end.2 ], [ %indvars.iv.next.3, %for.body3.3 ]
  %80 = shl nsw i64 %indvars.iv.next5.2, 3
  %81 = add nuw nsw i64 %80, %indvars.iv.3
  %arrayidx.3 = getelementptr inbounds i32, i32* %DATA_x, i64 %81
  %82 = load i32, i32* %arrayidx.3, align 4
  %arrayidx5.3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.3
  store i32 %82, i32* %arrayidx5.3, align 4
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.3, 1
  %exitcond.3 = icmp ne i64 %indvars.iv.next.3, 8
  br i1 %exitcond.3, label %for.body3.3, label %for.end.3, !llvm.loop !21

for.end.3:                                        ; preds = %for.body3.3
  %83 = trunc i64 %indvars.iv.next5.2 to i32
  %84 = and i32 %83, 2147483640
  %85 = load i32, i32* %reversed, align 4
  %idxprom7.3 = sext i32 %85 to i64
  %arrayidx8.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.3
  %86 = load i32, i32* %arrayidx8.3, align 4
  %arrayidx13.3 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.2
  store i32 %86, i32* %arrayidx13.3, align 4
  %arrayidx14.3 = getelementptr inbounds i32, i32* %reversed, i64 1
  %87 = load i32, i32* %arrayidx14.3, align 4
  %idxprom15.3 = sext i32 %87 to i64
  %arrayidx16.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.3
  %88 = load i32, i32* %arrayidx16.3, align 4
  %89 = trunc i64 %indvars.iv.next5.2 to i32
  %mul17.3 = and i32 %89, 2147483640
  %add18.3 = add nuw nsw i32 %mul17.3, 72
  %add19.3 = or i32 %add18.3, 3
  %idxprom20.3 = zext i32 %add19.3 to i64
  %arrayidx21.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.3
  store i32 %88, i32* %arrayidx21.3, align 4
  %arrayidx22.3 = getelementptr inbounds i32, i32* %reversed, i64 2
  %90 = load i32, i32* %arrayidx22.3, align 4
  %idxprom23.3 = sext i32 %90 to i64
  %arrayidx24.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.3
  %91 = load i32, i32* %arrayidx24.3, align 4
  %92 = trunc i64 %indvars.iv.next5.2 to i32
  %mul25.3 = and i32 %92, 2147483640
  %add26.3 = add nuw nsw i32 %mul25.3, 144
  %add27.3 = or i32 %add26.3, 3
  %idxprom28.3 = zext i32 %add27.3 to i64
  %arrayidx29.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.3
  store i32 %91, i32* %arrayidx29.3, align 4
  %arrayidx30.3 = getelementptr inbounds i32, i32* %reversed, i64 3
  %93 = load i32, i32* %arrayidx30.3, align 4
  %idxprom31.3 = sext i32 %93 to i64
  %arrayidx32.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.3
  %94 = load i32, i32* %arrayidx32.3, align 4
  %95 = trunc i64 %indvars.iv.next5.2 to i32
  %mul33.3 = and i32 %95, 2147483640
  %add34.3 = add nuw nsw i32 %mul33.3, 216
  %add35.3 = or i32 %add34.3, 3
  %idxprom36.3 = zext i32 %add35.3 to i64
  %arrayidx37.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.3
  store i32 %94, i32* %arrayidx37.3, align 4
  %arrayidx38.3 = getelementptr inbounds i32, i32* %reversed, i64 4
  %96 = load i32, i32* %arrayidx38.3, align 4
  %idxprom39.3 = sext i32 %96 to i64
  %arrayidx40.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.3
  %97 = load i32, i32* %arrayidx40.3, align 4
  %98 = trunc i64 %indvars.iv.next5.2 to i32
  %mul41.3 = and i32 %98, 2147483640
  %add42.3 = add nuw nsw i32 %mul41.3, 288
  %add43.3 = or i32 %add42.3, 3
  %idxprom44.3 = zext i32 %add43.3 to i64
  %arrayidx45.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.3
  store i32 %97, i32* %arrayidx45.3, align 4
  %arrayidx46.3 = getelementptr inbounds i32, i32* %reversed, i64 5
  %99 = load i32, i32* %arrayidx46.3, align 4
  %idxprom47.3 = sext i32 %99 to i64
  %arrayidx48.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.3
  %100 = load i32, i32* %arrayidx48.3, align 4
  %101 = trunc i64 %indvars.iv.next5.2 to i32
  %mul49.3 = and i32 %101, 2147483640
  %add50.3 = add nuw nsw i32 %mul49.3, 360
  %add51.3 = or i32 %add50.3, 3
  %idxprom52.3 = zext i32 %add51.3 to i64
  %arrayidx53.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.3
  store i32 %100, i32* %arrayidx53.3, align 4
  %arrayidx54.3 = getelementptr inbounds i32, i32* %reversed, i64 6
  %102 = load i32, i32* %arrayidx54.3, align 4
  %idxprom55.3 = sext i32 %102 to i64
  %arrayidx56.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.3
  %103 = load i32, i32* %arrayidx56.3, align 4
  %104 = trunc i64 %indvars.iv.next5.2 to i32
  %mul57.3 = and i32 %104, 2147483640
  %add58.3 = add nuw nsw i32 %mul57.3, 432
  %add59.3 = or i32 %add58.3, 3
  %idxprom60.3 = zext i32 %add59.3 to i64
  %arrayidx61.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.3
  store i32 %103, i32* %arrayidx61.3, align 4
  %arrayidx62.3 = getelementptr inbounds i32, i32* %reversed, i64 7
  %105 = load i32, i32* %arrayidx62.3, align 4
  %idxprom63.3 = sext i32 %105 to i64
  %arrayidx64.3 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.3
  %106 = load i32, i32* %arrayidx64.3, align 4
  %add66.3 = add nuw nsw i32 %84, 504
  %add67.3 = or i32 %add66.3, 3
  %idxprom68.3 = zext i32 %add67.3 to i64
  %arrayidx69.3 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.3
  store i32 %106, i32* %arrayidx69.3, align 4
  %indvars.iv.next5.3 = add nuw nsw i64 %indvars.iv.next5.2, 1
  br label %for.body3.4

for.body3.4:                                      ; preds = %for.body3.4, %for.end.3
  %indvars.iv.4 = phi i64 [ 0, %for.end.3 ], [ %indvars.iv.next.4, %for.body3.4 ]
  %107 = shl nsw i64 %indvars.iv.next5.3, 3
  %108 = add nuw nsw i64 %107, %indvars.iv.4
  %arrayidx.4 = getelementptr inbounds i32, i32* %DATA_x, i64 %108
  %109 = load i32, i32* %arrayidx.4, align 4
  %arrayidx5.4 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.4
  store i32 %109, i32* %arrayidx5.4, align 4
  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv.4, 1
  %exitcond.4 = icmp ne i64 %indvars.iv.next.4, 8
  br i1 %exitcond.4, label %for.body3.4, label %for.end.4, !llvm.loop !21

for.end.4:                                        ; preds = %for.body3.4
  %110 = trunc i64 %indvars.iv.next5.3 to i32
  %111 = and i32 %110, 2147483640
  %112 = load i32, i32* %reversed, align 4
  %idxprom7.4 = sext i32 %112 to i64
  %arrayidx8.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.4
  %113 = load i32, i32* %arrayidx8.4, align 4
  %arrayidx13.4 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.3
  store i32 %113, i32* %arrayidx13.4, align 4
  %arrayidx14.4 = getelementptr inbounds i32, i32* %reversed, i64 1
  %114 = load i32, i32* %arrayidx14.4, align 4
  %idxprom15.4 = sext i32 %114 to i64
  %arrayidx16.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.4
  %115 = load i32, i32* %arrayidx16.4, align 4
  %116 = trunc i64 %indvars.iv.next5.3 to i32
  %mul17.4 = and i32 %116, 2147483640
  %add18.4 = add nuw nsw i32 %mul17.4, 72
  %add19.4 = or i32 %add18.4, 4
  %idxprom20.4 = zext i32 %add19.4 to i64
  %arrayidx21.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.4
  store i32 %115, i32* %arrayidx21.4, align 4
  %arrayidx22.4 = getelementptr inbounds i32, i32* %reversed, i64 2
  %117 = load i32, i32* %arrayidx22.4, align 4
  %idxprom23.4 = sext i32 %117 to i64
  %arrayidx24.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.4
  %118 = load i32, i32* %arrayidx24.4, align 4
  %119 = trunc i64 %indvars.iv.next5.3 to i32
  %mul25.4 = and i32 %119, 2147483640
  %add26.4 = add nuw nsw i32 %mul25.4, 144
  %add27.4 = or i32 %add26.4, 4
  %idxprom28.4 = zext i32 %add27.4 to i64
  %arrayidx29.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.4
  store i32 %118, i32* %arrayidx29.4, align 4
  %arrayidx30.4 = getelementptr inbounds i32, i32* %reversed, i64 3
  %120 = load i32, i32* %arrayidx30.4, align 4
  %idxprom31.4 = sext i32 %120 to i64
  %arrayidx32.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.4
  %121 = load i32, i32* %arrayidx32.4, align 4
  %122 = trunc i64 %indvars.iv.next5.3 to i32
  %mul33.4 = and i32 %122, 2147483640
  %add34.4 = add nuw nsw i32 %mul33.4, 216
  %add35.4 = or i32 %add34.4, 4
  %idxprom36.4 = zext i32 %add35.4 to i64
  %arrayidx37.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.4
  store i32 %121, i32* %arrayidx37.4, align 4
  %arrayidx38.4 = getelementptr inbounds i32, i32* %reversed, i64 4
  %123 = load i32, i32* %arrayidx38.4, align 4
  %idxprom39.4 = sext i32 %123 to i64
  %arrayidx40.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.4
  %124 = load i32, i32* %arrayidx40.4, align 4
  %125 = trunc i64 %indvars.iv.next5.3 to i32
  %mul41.4 = and i32 %125, 2147483640
  %add42.4 = add nuw nsw i32 %mul41.4, 288
  %add43.4 = or i32 %add42.4, 4
  %idxprom44.4 = zext i32 %add43.4 to i64
  %arrayidx45.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.4
  store i32 %124, i32* %arrayidx45.4, align 4
  %arrayidx46.4 = getelementptr inbounds i32, i32* %reversed, i64 5
  %126 = load i32, i32* %arrayidx46.4, align 4
  %idxprom47.4 = sext i32 %126 to i64
  %arrayidx48.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.4
  %127 = load i32, i32* %arrayidx48.4, align 4
  %128 = trunc i64 %indvars.iv.next5.3 to i32
  %mul49.4 = and i32 %128, 2147483640
  %add50.4 = add nuw nsw i32 %mul49.4, 360
  %add51.4 = or i32 %add50.4, 4
  %idxprom52.4 = zext i32 %add51.4 to i64
  %arrayidx53.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.4
  store i32 %127, i32* %arrayidx53.4, align 4
  %arrayidx54.4 = getelementptr inbounds i32, i32* %reversed, i64 6
  %129 = load i32, i32* %arrayidx54.4, align 4
  %idxprom55.4 = sext i32 %129 to i64
  %arrayidx56.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.4
  %130 = load i32, i32* %arrayidx56.4, align 4
  %131 = trunc i64 %indvars.iv.next5.3 to i32
  %mul57.4 = and i32 %131, 2147483640
  %add58.4 = add nuw nsw i32 %mul57.4, 432
  %add59.4 = or i32 %add58.4, 4
  %idxprom60.4 = zext i32 %add59.4 to i64
  %arrayidx61.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.4
  store i32 %130, i32* %arrayidx61.4, align 4
  %arrayidx62.4 = getelementptr inbounds i32, i32* %reversed, i64 7
  %132 = load i32, i32* %arrayidx62.4, align 4
  %idxprom63.4 = sext i32 %132 to i64
  %arrayidx64.4 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.4
  %133 = load i32, i32* %arrayidx64.4, align 4
  %add66.4 = add nuw nsw i32 %111, 504
  %add67.4 = or i32 %add66.4, 4
  %idxprom68.4 = zext i32 %add67.4 to i64
  %arrayidx69.4 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.4
  store i32 %133, i32* %arrayidx69.4, align 4
  %indvars.iv.next5.4 = add nuw nsw i64 %indvars.iv.next5.3, 1
  br label %for.body3.5

for.body3.5:                                      ; preds = %for.body3.5, %for.end.4
  %indvars.iv.5 = phi i64 [ 0, %for.end.4 ], [ %indvars.iv.next.5, %for.body3.5 ]
  %134 = shl nsw i64 %indvars.iv.next5.4, 3
  %135 = add nuw nsw i64 %134, %indvars.iv.5
  %arrayidx.5 = getelementptr inbounds i32, i32* %DATA_x, i64 %135
  %136 = load i32, i32* %arrayidx.5, align 4
  %arrayidx5.5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.5
  store i32 %136, i32* %arrayidx5.5, align 4
  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv.5, 1
  %exitcond.5 = icmp ne i64 %indvars.iv.next.5, 8
  br i1 %exitcond.5, label %for.body3.5, label %for.end.5, !llvm.loop !21

for.end.5:                                        ; preds = %for.body3.5
  %137 = trunc i64 %indvars.iv.next5.4 to i32
  %138 = and i32 %137, 2147483640
  %139 = load i32, i32* %reversed, align 4
  %idxprom7.5 = sext i32 %139 to i64
  %arrayidx8.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.5
  %140 = load i32, i32* %arrayidx8.5, align 4
  %arrayidx13.5 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.4
  store i32 %140, i32* %arrayidx13.5, align 4
  %arrayidx14.5 = getelementptr inbounds i32, i32* %reversed, i64 1
  %141 = load i32, i32* %arrayidx14.5, align 4
  %idxprom15.5 = sext i32 %141 to i64
  %arrayidx16.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.5
  %142 = load i32, i32* %arrayidx16.5, align 4
  %143 = trunc i64 %indvars.iv.next5.4 to i32
  %mul17.5 = and i32 %143, 2147483640
  %add18.5 = add nuw nsw i32 %mul17.5, 72
  %add19.5 = or i32 %add18.5, 5
  %idxprom20.5 = zext i32 %add19.5 to i64
  %arrayidx21.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.5
  store i32 %142, i32* %arrayidx21.5, align 4
  %arrayidx22.5 = getelementptr inbounds i32, i32* %reversed, i64 2
  %144 = load i32, i32* %arrayidx22.5, align 4
  %idxprom23.5 = sext i32 %144 to i64
  %arrayidx24.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.5
  %145 = load i32, i32* %arrayidx24.5, align 4
  %146 = trunc i64 %indvars.iv.next5.4 to i32
  %mul25.5 = and i32 %146, 2147483640
  %add26.5 = add nuw nsw i32 %mul25.5, 144
  %add27.5 = or i32 %add26.5, 5
  %idxprom28.5 = zext i32 %add27.5 to i64
  %arrayidx29.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.5
  store i32 %145, i32* %arrayidx29.5, align 4
  %arrayidx30.5 = getelementptr inbounds i32, i32* %reversed, i64 3
  %147 = load i32, i32* %arrayidx30.5, align 4
  %idxprom31.5 = sext i32 %147 to i64
  %arrayidx32.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.5
  %148 = load i32, i32* %arrayidx32.5, align 4
  %149 = trunc i64 %indvars.iv.next5.4 to i32
  %mul33.5 = and i32 %149, 2147483640
  %add34.5 = add nuw nsw i32 %mul33.5, 216
  %add35.5 = or i32 %add34.5, 5
  %idxprom36.5 = zext i32 %add35.5 to i64
  %arrayidx37.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.5
  store i32 %148, i32* %arrayidx37.5, align 4
  %arrayidx38.5 = getelementptr inbounds i32, i32* %reversed, i64 4
  %150 = load i32, i32* %arrayidx38.5, align 4
  %idxprom39.5 = sext i32 %150 to i64
  %arrayidx40.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.5
  %151 = load i32, i32* %arrayidx40.5, align 4
  %152 = trunc i64 %indvars.iv.next5.4 to i32
  %mul41.5 = and i32 %152, 2147483640
  %add42.5 = add nuw nsw i32 %mul41.5, 288
  %add43.5 = or i32 %add42.5, 5
  %idxprom44.5 = zext i32 %add43.5 to i64
  %arrayidx45.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.5
  store i32 %151, i32* %arrayidx45.5, align 4
  %arrayidx46.5 = getelementptr inbounds i32, i32* %reversed, i64 5
  %153 = load i32, i32* %arrayidx46.5, align 4
  %idxprom47.5 = sext i32 %153 to i64
  %arrayidx48.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.5
  %154 = load i32, i32* %arrayidx48.5, align 4
  %155 = trunc i64 %indvars.iv.next5.4 to i32
  %mul49.5 = and i32 %155, 2147483640
  %add50.5 = add nuw nsw i32 %mul49.5, 360
  %add51.5 = or i32 %add50.5, 5
  %idxprom52.5 = zext i32 %add51.5 to i64
  %arrayidx53.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.5
  store i32 %154, i32* %arrayidx53.5, align 4
  %arrayidx54.5 = getelementptr inbounds i32, i32* %reversed, i64 6
  %156 = load i32, i32* %arrayidx54.5, align 4
  %idxprom55.5 = sext i32 %156 to i64
  %arrayidx56.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.5
  %157 = load i32, i32* %arrayidx56.5, align 4
  %158 = trunc i64 %indvars.iv.next5.4 to i32
  %mul57.5 = and i32 %158, 2147483640
  %add58.5 = add nuw nsw i32 %mul57.5, 432
  %add59.5 = or i32 %add58.5, 5
  %idxprom60.5 = zext i32 %add59.5 to i64
  %arrayidx61.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.5
  store i32 %157, i32* %arrayidx61.5, align 4
  %arrayidx62.5 = getelementptr inbounds i32, i32* %reversed, i64 7
  %159 = load i32, i32* %arrayidx62.5, align 4
  %idxprom63.5 = sext i32 %159 to i64
  %arrayidx64.5 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.5
  %160 = load i32, i32* %arrayidx64.5, align 4
  %add66.5 = add nuw nsw i32 %138, 504
  %add67.5 = or i32 %add66.5, 5
  %idxprom68.5 = zext i32 %add67.5 to i64
  %arrayidx69.5 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.5
  store i32 %160, i32* %arrayidx69.5, align 4
  %indvars.iv.next5.5 = add nuw nsw i64 %indvars.iv.next5.4, 1
  br label %for.body3.6

for.body3.6:                                      ; preds = %for.body3.6, %for.end.5
  %indvars.iv.6 = phi i64 [ 0, %for.end.5 ], [ %indvars.iv.next.6, %for.body3.6 ]
  %161 = shl nsw i64 %indvars.iv.next5.5, 3
  %162 = add nuw nsw i64 %161, %indvars.iv.6
  %arrayidx.6 = getelementptr inbounds i32, i32* %DATA_x, i64 %162
  %163 = load i32, i32* %arrayidx.6, align 4
  %arrayidx5.6 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.6
  store i32 %163, i32* %arrayidx5.6, align 4
  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv.6, 1
  %exitcond.6 = icmp ne i64 %indvars.iv.next.6, 8
  br i1 %exitcond.6, label %for.body3.6, label %for.end.6, !llvm.loop !21

for.end.6:                                        ; preds = %for.body3.6
  %164 = trunc i64 %indvars.iv.next5.5 to i32
  %165 = and i32 %164, 2147483640
  %166 = load i32, i32* %reversed, align 4
  %idxprom7.6 = sext i32 %166 to i64
  %arrayidx8.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.6
  %167 = load i32, i32* %arrayidx8.6, align 4
  %arrayidx13.6 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.5
  store i32 %167, i32* %arrayidx13.6, align 4
  %arrayidx14.6 = getelementptr inbounds i32, i32* %reversed, i64 1
  %168 = load i32, i32* %arrayidx14.6, align 4
  %idxprom15.6 = sext i32 %168 to i64
  %arrayidx16.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.6
  %169 = load i32, i32* %arrayidx16.6, align 4
  %170 = trunc i64 %indvars.iv.next5.5 to i32
  %mul17.6 = and i32 %170, 2147483640
  %add18.6 = add nuw nsw i32 %mul17.6, 72
  %add19.6 = or i32 %add18.6, 6
  %idxprom20.6 = zext i32 %add19.6 to i64
  %arrayidx21.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.6
  store i32 %169, i32* %arrayidx21.6, align 4
  %arrayidx22.6 = getelementptr inbounds i32, i32* %reversed, i64 2
  %171 = load i32, i32* %arrayidx22.6, align 4
  %idxprom23.6 = sext i32 %171 to i64
  %arrayidx24.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.6
  %172 = load i32, i32* %arrayidx24.6, align 4
  %173 = trunc i64 %indvars.iv.next5.5 to i32
  %mul25.6 = and i32 %173, 2147483640
  %add26.6 = add nuw nsw i32 %mul25.6, 144
  %add27.6 = or i32 %add26.6, 6
  %idxprom28.6 = zext i32 %add27.6 to i64
  %arrayidx29.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.6
  store i32 %172, i32* %arrayidx29.6, align 4
  %arrayidx30.6 = getelementptr inbounds i32, i32* %reversed, i64 3
  %174 = load i32, i32* %arrayidx30.6, align 4
  %idxprom31.6 = sext i32 %174 to i64
  %arrayidx32.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.6
  %175 = load i32, i32* %arrayidx32.6, align 4
  %176 = trunc i64 %indvars.iv.next5.5 to i32
  %mul33.6 = and i32 %176, 2147483640
  %add34.6 = add nuw nsw i32 %mul33.6, 216
  %add35.6 = or i32 %add34.6, 6
  %idxprom36.6 = zext i32 %add35.6 to i64
  %arrayidx37.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.6
  store i32 %175, i32* %arrayidx37.6, align 4
  %arrayidx38.6 = getelementptr inbounds i32, i32* %reversed, i64 4
  %177 = load i32, i32* %arrayidx38.6, align 4
  %idxprom39.6 = sext i32 %177 to i64
  %arrayidx40.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.6
  %178 = load i32, i32* %arrayidx40.6, align 4
  %179 = trunc i64 %indvars.iv.next5.5 to i32
  %mul41.6 = and i32 %179, 2147483640
  %add42.6 = add nuw nsw i32 %mul41.6, 288
  %add43.6 = or i32 %add42.6, 6
  %idxprom44.6 = zext i32 %add43.6 to i64
  %arrayidx45.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.6
  store i32 %178, i32* %arrayidx45.6, align 4
  %arrayidx46.6 = getelementptr inbounds i32, i32* %reversed, i64 5
  %180 = load i32, i32* %arrayidx46.6, align 4
  %idxprom47.6 = sext i32 %180 to i64
  %arrayidx48.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.6
  %181 = load i32, i32* %arrayidx48.6, align 4
  %182 = trunc i64 %indvars.iv.next5.5 to i32
  %mul49.6 = and i32 %182, 2147483640
  %add50.6 = add nuw nsw i32 %mul49.6, 360
  %add51.6 = or i32 %add50.6, 6
  %idxprom52.6 = zext i32 %add51.6 to i64
  %arrayidx53.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.6
  store i32 %181, i32* %arrayidx53.6, align 4
  %arrayidx54.6 = getelementptr inbounds i32, i32* %reversed, i64 6
  %183 = load i32, i32* %arrayidx54.6, align 4
  %idxprom55.6 = sext i32 %183 to i64
  %arrayidx56.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.6
  %184 = load i32, i32* %arrayidx56.6, align 4
  %185 = trunc i64 %indvars.iv.next5.5 to i32
  %mul57.6 = and i32 %185, 2147483640
  %add58.6 = add nuw nsw i32 %mul57.6, 432
  %add59.6 = or i32 %add58.6, 6
  %idxprom60.6 = zext i32 %add59.6 to i64
  %arrayidx61.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.6
  store i32 %184, i32* %arrayidx61.6, align 4
  %arrayidx62.6 = getelementptr inbounds i32, i32* %reversed, i64 7
  %186 = load i32, i32* %arrayidx62.6, align 4
  %idxprom63.6 = sext i32 %186 to i64
  %arrayidx64.6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.6
  %187 = load i32, i32* %arrayidx64.6, align 4
  %add66.6 = add nuw nsw i32 %165, 504
  %add67.6 = or i32 %add66.6, 6
  %idxprom68.6 = zext i32 %add67.6 to i64
  %arrayidx69.6 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.6
  store i32 %187, i32* %arrayidx69.6, align 4
  %indvars.iv.next5.6 = add nuw nsw i64 %indvars.iv.next5.5, 1
  br label %for.body3.7

for.body3.7:                                      ; preds = %for.body3.7, %for.end.6
  %indvars.iv.7 = phi i64 [ 0, %for.end.6 ], [ %indvars.iv.next.7, %for.body3.7 ]
  %188 = shl nsw i64 %indvars.iv.next5.6, 3
  %189 = add nuw nsw i64 %188, %indvars.iv.7
  %arrayidx.7 = getelementptr inbounds i32, i32* %DATA_x, i64 %189
  %190 = load i32, i32* %arrayidx.7, align 4
  %arrayidx5.7 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.7
  store i32 %190, i32* %arrayidx5.7, align 4
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv.7, 1
  %exitcond.7 = icmp ne i64 %indvars.iv.next.7, 8
  br i1 %exitcond.7, label %for.body3.7, label %for.end.7, !llvm.loop !21

for.end.7:                                        ; preds = %for.body3.7
  %191 = trunc i64 %indvars.iv.next5.6 to i32
  %192 = and i32 %191, 2147483640
  %193 = load i32, i32* %reversed, align 4
  %idxprom7.7 = sext i32 %193 to i64
  %arrayidx8.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.7
  %194 = load i32, i32* %arrayidx8.7, align 4
  %arrayidx13.7 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.6
  store i32 %194, i32* %arrayidx13.7, align 4
  %arrayidx14.7 = getelementptr inbounds i32, i32* %reversed, i64 1
  %195 = load i32, i32* %arrayidx14.7, align 4
  %idxprom15.7 = sext i32 %195 to i64
  %arrayidx16.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.7
  %196 = load i32, i32* %arrayidx16.7, align 4
  %197 = trunc i64 %indvars.iv.next5.6 to i32
  %mul17.7 = and i32 %197, 2147483640
  %add18.7 = add nuw nsw i32 %mul17.7, 72
  %add19.7 = or i32 %add18.7, 7
  %idxprom20.7 = zext i32 %add19.7 to i64
  %arrayidx21.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.7
  store i32 %196, i32* %arrayidx21.7, align 4
  %arrayidx22.7 = getelementptr inbounds i32, i32* %reversed, i64 2
  %198 = load i32, i32* %arrayidx22.7, align 4
  %idxprom23.7 = sext i32 %198 to i64
  %arrayidx24.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.7
  %199 = load i32, i32* %arrayidx24.7, align 4
  %200 = trunc i64 %indvars.iv.next5.6 to i32
  %mul25.7 = and i32 %200, 2147483640
  %add26.7 = add nuw nsw i32 %mul25.7, 144
  %add27.7 = or i32 %add26.7, 7
  %idxprom28.7 = zext i32 %add27.7 to i64
  %arrayidx29.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.7
  store i32 %199, i32* %arrayidx29.7, align 4
  %arrayidx30.7 = getelementptr inbounds i32, i32* %reversed, i64 3
  %201 = load i32, i32* %arrayidx30.7, align 4
  %idxprom31.7 = sext i32 %201 to i64
  %arrayidx32.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.7
  %202 = load i32, i32* %arrayidx32.7, align 4
  %203 = trunc i64 %indvars.iv.next5.6 to i32
  %mul33.7 = and i32 %203, 2147483640
  %add34.7 = add nuw nsw i32 %mul33.7, 216
  %add35.7 = or i32 %add34.7, 7
  %idxprom36.7 = zext i32 %add35.7 to i64
  %arrayidx37.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.7
  store i32 %202, i32* %arrayidx37.7, align 4
  %arrayidx38.7 = getelementptr inbounds i32, i32* %reversed, i64 4
  %204 = load i32, i32* %arrayidx38.7, align 4
  %idxprom39.7 = sext i32 %204 to i64
  %arrayidx40.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.7
  %205 = load i32, i32* %arrayidx40.7, align 4
  %206 = trunc i64 %indvars.iv.next5.6 to i32
  %mul41.7 = and i32 %206, 2147483640
  %add42.7 = add nuw nsw i32 %mul41.7, 288
  %add43.7 = or i32 %add42.7, 7
  %idxprom44.7 = zext i32 %add43.7 to i64
  %arrayidx45.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.7
  store i32 %205, i32* %arrayidx45.7, align 4
  %arrayidx46.7 = getelementptr inbounds i32, i32* %reversed, i64 5
  %207 = load i32, i32* %arrayidx46.7, align 4
  %idxprom47.7 = sext i32 %207 to i64
  %arrayidx48.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.7
  %208 = load i32, i32* %arrayidx48.7, align 4
  %209 = trunc i64 %indvars.iv.next5.6 to i32
  %mul49.7 = and i32 %209, 2147483640
  %add50.7 = add nuw nsw i32 %mul49.7, 360
  %add51.7 = or i32 %add50.7, 7
  %idxprom52.7 = zext i32 %add51.7 to i64
  %arrayidx53.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.7
  store i32 %208, i32* %arrayidx53.7, align 4
  %arrayidx54.7 = getelementptr inbounds i32, i32* %reversed, i64 6
  %210 = load i32, i32* %arrayidx54.7, align 4
  %idxprom55.7 = sext i32 %210 to i64
  %arrayidx56.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.7
  %211 = load i32, i32* %arrayidx56.7, align 4
  %212 = trunc i64 %indvars.iv.next5.6 to i32
  %mul57.7 = and i32 %212, 2147483640
  %add58.7 = add nuw nsw i32 %mul57.7, 432
  %add59.7 = or i32 %add58.7, 7
  %idxprom60.7 = zext i32 %add59.7 to i64
  %arrayidx61.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.7
  store i32 %211, i32* %arrayidx61.7, align 4
  %arrayidx62.7 = getelementptr inbounds i32, i32* %reversed, i64 7
  %213 = load i32, i32* %arrayidx62.7, align 4
  %idxprom63.7 = sext i32 %213 to i64
  %arrayidx64.7 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.7
  %214 = load i32, i32* %arrayidx64.7, align 4
  %add66.7 = add nuw nsw i32 %192, 504
  %add67.7 = or i32 %add66.7, 7
  %idxprom68.7 = zext i32 %add67.7 to i64
  %arrayidx69.7 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.7
  store i32 %214, i32* %arrayidx69.7, align 4
  %indvars.iv.next5.7 = add nuw nsw i64 %indvars.iv.next5.6, 1
  br label %for.body3.8

for.body3.8:                                      ; preds = %for.body3.8, %for.end.7
  %indvars.iv.8 = phi i64 [ 0, %for.end.7 ], [ %indvars.iv.next.8, %for.body3.8 ]
  %215 = shl nsw i64 %indvars.iv.next5.7, 3
  %216 = add nuw nsw i64 %215, %indvars.iv.8
  %arrayidx.8 = getelementptr inbounds i32, i32* %DATA_x, i64 %216
  %217 = load i32, i32* %arrayidx.8, align 4
  %arrayidx5.8 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.8
  store i32 %217, i32* %arrayidx5.8, align 4
  %indvars.iv.next.8 = add nuw nsw i64 %indvars.iv.8, 1
  %exitcond.8 = icmp ne i64 %indvars.iv.next.8, 8
  br i1 %exitcond.8, label %for.body3.8, label %for.end.8, !llvm.loop !21

for.end.8:                                        ; preds = %for.body3.8
  %218 = trunc i64 %indvars.iv.next5.7 to i32
  %219 = load i32, i32* %reversed, align 4
  %idxprom7.8 = sext i32 %219 to i64
  %arrayidx8.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.8
  %220 = load i32, i32* %arrayidx8.8, align 4
  %arrayidx13.8 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.7
  store i32 %220, i32* %arrayidx13.8, align 4
  %arrayidx14.8 = getelementptr inbounds i32, i32* %reversed, i64 1
  %221 = load i32, i32* %arrayidx14.8, align 4
  %idxprom15.8 = sext i32 %221 to i64
  %arrayidx16.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.8
  %222 = load i32, i32* %arrayidx16.8, align 4
  %223 = trunc i64 %indvars.iv.next5.7 to i32
  %add18.8 = add nuw nsw i32 %223, 72
  %idxprom20.8 = zext i32 %add18.8 to i64
  %arrayidx21.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.8
  store i32 %222, i32* %arrayidx21.8, align 4
  %arrayidx22.8 = getelementptr inbounds i32, i32* %reversed, i64 2
  %224 = load i32, i32* %arrayidx22.8, align 4
  %idxprom23.8 = sext i32 %224 to i64
  %arrayidx24.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.8
  %225 = load i32, i32* %arrayidx24.8, align 4
  %226 = trunc i64 %indvars.iv.next5.7 to i32
  %add26.8 = add nuw nsw i32 %226, 144
  %idxprom28.8 = zext i32 %add26.8 to i64
  %arrayidx29.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.8
  store i32 %225, i32* %arrayidx29.8, align 4
  %arrayidx30.8 = getelementptr inbounds i32, i32* %reversed, i64 3
  %227 = load i32, i32* %arrayidx30.8, align 4
  %idxprom31.8 = sext i32 %227 to i64
  %arrayidx32.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.8
  %228 = load i32, i32* %arrayidx32.8, align 4
  %229 = trunc i64 %indvars.iv.next5.7 to i32
  %add34.8 = add nuw nsw i32 %229, 216
  %idxprom36.8 = zext i32 %add34.8 to i64
  %arrayidx37.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.8
  store i32 %228, i32* %arrayidx37.8, align 4
  %arrayidx38.8 = getelementptr inbounds i32, i32* %reversed, i64 4
  %230 = load i32, i32* %arrayidx38.8, align 4
  %idxprom39.8 = sext i32 %230 to i64
  %arrayidx40.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.8
  %231 = load i32, i32* %arrayidx40.8, align 4
  %232 = trunc i64 %indvars.iv.next5.7 to i32
  %add42.8 = add nuw nsw i32 %232, 288
  %idxprom44.8 = zext i32 %add42.8 to i64
  %arrayidx45.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.8
  store i32 %231, i32* %arrayidx45.8, align 4
  %arrayidx46.8 = getelementptr inbounds i32, i32* %reversed, i64 5
  %233 = load i32, i32* %arrayidx46.8, align 4
  %idxprom47.8 = sext i32 %233 to i64
  %arrayidx48.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.8
  %234 = load i32, i32* %arrayidx48.8, align 4
  %235 = trunc i64 %indvars.iv.next5.7 to i32
  %add50.8 = add nuw nsw i32 %235, 360
  %idxprom52.8 = zext i32 %add50.8 to i64
  %arrayidx53.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.8
  store i32 %234, i32* %arrayidx53.8, align 4
  %arrayidx54.8 = getelementptr inbounds i32, i32* %reversed, i64 6
  %236 = load i32, i32* %arrayidx54.8, align 4
  %idxprom55.8 = sext i32 %236 to i64
  %arrayidx56.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.8
  %237 = load i32, i32* %arrayidx56.8, align 4
  %238 = trunc i64 %indvars.iv.next5.7 to i32
  %add58.8 = add nuw nsw i32 %238, 432
  %idxprom60.8 = zext i32 %add58.8 to i64
  %arrayidx61.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.8
  store i32 %237, i32* %arrayidx61.8, align 4
  %arrayidx62.8 = getelementptr inbounds i32, i32* %reversed, i64 7
  %239 = load i32, i32* %arrayidx62.8, align 4
  %idxprom63.8 = sext i32 %239 to i64
  %arrayidx64.8 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.8
  %240 = load i32, i32* %arrayidx64.8, align 4
  %add66.8 = add nuw nsw i32 %218, 504
  %idxprom68.8 = zext i32 %add66.8 to i64
  %arrayidx69.8 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.8
  store i32 %240, i32* %arrayidx69.8, align 4
  %indvars.iv.next5.8 = add nuw nsw i64 %indvars.iv.next5.7, 1
  br label %for.body3.9

for.body3.9:                                      ; preds = %for.body3.9, %for.end.8
  %indvars.iv.9 = phi i64 [ 0, %for.end.8 ], [ %indvars.iv.next.9, %for.body3.9 ]
  %241 = shl nsw i64 %indvars.iv.next5.8, 3
  %242 = add nuw nsw i64 %241, %indvars.iv.9
  %arrayidx.9 = getelementptr inbounds i32, i32* %DATA_x, i64 %242
  %243 = load i32, i32* %arrayidx.9, align 4
  %arrayidx5.9 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.9
  store i32 %243, i32* %arrayidx5.9, align 4
  %indvars.iv.next.9 = add nuw nsw i64 %indvars.iv.9, 1
  %exitcond.9 = icmp ne i64 %indvars.iv.next.9, 8
  br i1 %exitcond.9, label %for.body3.9, label %for.end.9, !llvm.loop !21

for.end.9:                                        ; preds = %for.body3.9
  %244 = trunc i64 %indvars.iv.next5.8 to i32
  %245 = and i32 %244, 2147483640
  %246 = load i32, i32* %reversed, align 4
  %idxprom7.9 = sext i32 %246 to i64
  %arrayidx8.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.9
  %247 = load i32, i32* %arrayidx8.9, align 4
  %arrayidx13.9 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.8
  store i32 %247, i32* %arrayidx13.9, align 4
  %arrayidx14.9 = getelementptr inbounds i32, i32* %reversed, i64 1
  %248 = load i32, i32* %arrayidx14.9, align 4
  %idxprom15.9 = sext i32 %248 to i64
  %arrayidx16.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.9
  %249 = load i32, i32* %arrayidx16.9, align 4
  %250 = trunc i64 %indvars.iv.next5.8 to i32
  %mul17.9 = and i32 %250, 2147483640
  %add18.9 = add nuw nsw i32 %mul17.9, 72
  %add19.9 = or i32 %add18.9, 1
  %idxprom20.9 = zext i32 %add19.9 to i64
  %arrayidx21.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.9
  store i32 %249, i32* %arrayidx21.9, align 4
  %arrayidx22.9 = getelementptr inbounds i32, i32* %reversed, i64 2
  %251 = load i32, i32* %arrayidx22.9, align 4
  %idxprom23.9 = sext i32 %251 to i64
  %arrayidx24.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.9
  %252 = load i32, i32* %arrayidx24.9, align 4
  %253 = trunc i64 %indvars.iv.next5.8 to i32
  %mul25.9 = and i32 %253, 2147483640
  %add26.9 = add nuw nsw i32 %mul25.9, 144
  %add27.9 = or i32 %add26.9, 1
  %idxprom28.9 = zext i32 %add27.9 to i64
  %arrayidx29.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.9
  store i32 %252, i32* %arrayidx29.9, align 4
  %arrayidx30.9 = getelementptr inbounds i32, i32* %reversed, i64 3
  %254 = load i32, i32* %arrayidx30.9, align 4
  %idxprom31.9 = sext i32 %254 to i64
  %arrayidx32.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.9
  %255 = load i32, i32* %arrayidx32.9, align 4
  %256 = trunc i64 %indvars.iv.next5.8 to i32
  %mul33.9 = and i32 %256, 2147483640
  %add34.9 = add nuw nsw i32 %mul33.9, 216
  %add35.9 = or i32 %add34.9, 1
  %idxprom36.9 = zext i32 %add35.9 to i64
  %arrayidx37.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.9
  store i32 %255, i32* %arrayidx37.9, align 4
  %arrayidx38.9 = getelementptr inbounds i32, i32* %reversed, i64 4
  %257 = load i32, i32* %arrayidx38.9, align 4
  %idxprom39.9 = sext i32 %257 to i64
  %arrayidx40.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.9
  %258 = load i32, i32* %arrayidx40.9, align 4
  %259 = trunc i64 %indvars.iv.next5.8 to i32
  %mul41.9 = and i32 %259, 2147483640
  %add42.9 = add nuw nsw i32 %mul41.9, 288
  %add43.9 = or i32 %add42.9, 1
  %idxprom44.9 = zext i32 %add43.9 to i64
  %arrayidx45.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.9
  store i32 %258, i32* %arrayidx45.9, align 4
  %arrayidx46.9 = getelementptr inbounds i32, i32* %reversed, i64 5
  %260 = load i32, i32* %arrayidx46.9, align 4
  %idxprom47.9 = sext i32 %260 to i64
  %arrayidx48.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.9
  %261 = load i32, i32* %arrayidx48.9, align 4
  %262 = trunc i64 %indvars.iv.next5.8 to i32
  %mul49.9 = and i32 %262, 2147483640
  %add50.9 = add nuw nsw i32 %mul49.9, 360
  %add51.9 = or i32 %add50.9, 1
  %idxprom52.9 = zext i32 %add51.9 to i64
  %arrayidx53.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.9
  store i32 %261, i32* %arrayidx53.9, align 4
  %arrayidx54.9 = getelementptr inbounds i32, i32* %reversed, i64 6
  %263 = load i32, i32* %arrayidx54.9, align 4
  %idxprom55.9 = sext i32 %263 to i64
  %arrayidx56.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.9
  %264 = load i32, i32* %arrayidx56.9, align 4
  %265 = trunc i64 %indvars.iv.next5.8 to i32
  %mul57.9 = and i32 %265, 2147483640
  %add58.9 = add nuw nsw i32 %mul57.9, 432
  %add59.9 = or i32 %add58.9, 1
  %idxprom60.9 = zext i32 %add59.9 to i64
  %arrayidx61.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.9
  store i32 %264, i32* %arrayidx61.9, align 4
  %arrayidx62.9 = getelementptr inbounds i32, i32* %reversed, i64 7
  %266 = load i32, i32* %arrayidx62.9, align 4
  %idxprom63.9 = sext i32 %266 to i64
  %arrayidx64.9 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.9
  %267 = load i32, i32* %arrayidx64.9, align 4
  %add66.9 = add nuw nsw i32 %245, 504
  %add67.9 = or i32 %add66.9, 1
  %idxprom68.9 = zext i32 %add67.9 to i64
  %arrayidx69.9 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.9
  store i32 %267, i32* %arrayidx69.9, align 4
  %indvars.iv.next5.9 = add nuw nsw i64 %indvars.iv.next5.8, 1
  br label %for.body3.10

for.body3.10:                                     ; preds = %for.body3.10, %for.end.9
  %indvars.iv.10 = phi i64 [ 0, %for.end.9 ], [ %indvars.iv.next.10, %for.body3.10 ]
  %268 = shl nsw i64 %indvars.iv.next5.9, 3
  %269 = add nuw nsw i64 %268, %indvars.iv.10
  %arrayidx.10 = getelementptr inbounds i32, i32* %DATA_x, i64 %269
  %270 = load i32, i32* %arrayidx.10, align 4
  %arrayidx5.10 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.10
  store i32 %270, i32* %arrayidx5.10, align 4
  %indvars.iv.next.10 = add nuw nsw i64 %indvars.iv.10, 1
  %exitcond.10 = icmp ne i64 %indvars.iv.next.10, 8
  br i1 %exitcond.10, label %for.body3.10, label %for.end.10, !llvm.loop !21

for.end.10:                                       ; preds = %for.body3.10
  %271 = trunc i64 %indvars.iv.next5.9 to i32
  %272 = and i32 %271, 2147483640
  %273 = load i32, i32* %reversed, align 4
  %idxprom7.10 = sext i32 %273 to i64
  %arrayidx8.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.10
  %274 = load i32, i32* %arrayidx8.10, align 4
  %arrayidx13.10 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.9
  store i32 %274, i32* %arrayidx13.10, align 4
  %arrayidx14.10 = getelementptr inbounds i32, i32* %reversed, i64 1
  %275 = load i32, i32* %arrayidx14.10, align 4
  %idxprom15.10 = sext i32 %275 to i64
  %arrayidx16.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.10
  %276 = load i32, i32* %arrayidx16.10, align 4
  %277 = trunc i64 %indvars.iv.next5.9 to i32
  %mul17.10 = and i32 %277, 2147483640
  %add18.10 = add nuw nsw i32 %mul17.10, 72
  %add19.10 = or i32 %add18.10, 2
  %idxprom20.10 = zext i32 %add19.10 to i64
  %arrayidx21.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.10
  store i32 %276, i32* %arrayidx21.10, align 4
  %arrayidx22.10 = getelementptr inbounds i32, i32* %reversed, i64 2
  %278 = load i32, i32* %arrayidx22.10, align 4
  %idxprom23.10 = sext i32 %278 to i64
  %arrayidx24.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.10
  %279 = load i32, i32* %arrayidx24.10, align 4
  %280 = trunc i64 %indvars.iv.next5.9 to i32
  %mul25.10 = and i32 %280, 2147483640
  %add26.10 = add nuw nsw i32 %mul25.10, 144
  %add27.10 = or i32 %add26.10, 2
  %idxprom28.10 = zext i32 %add27.10 to i64
  %arrayidx29.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.10
  store i32 %279, i32* %arrayidx29.10, align 4
  %arrayidx30.10 = getelementptr inbounds i32, i32* %reversed, i64 3
  %281 = load i32, i32* %arrayidx30.10, align 4
  %idxprom31.10 = sext i32 %281 to i64
  %arrayidx32.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.10
  %282 = load i32, i32* %arrayidx32.10, align 4
  %283 = trunc i64 %indvars.iv.next5.9 to i32
  %mul33.10 = and i32 %283, 2147483640
  %add34.10 = add nuw nsw i32 %mul33.10, 216
  %add35.10 = or i32 %add34.10, 2
  %idxprom36.10 = zext i32 %add35.10 to i64
  %arrayidx37.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.10
  store i32 %282, i32* %arrayidx37.10, align 4
  %arrayidx38.10 = getelementptr inbounds i32, i32* %reversed, i64 4
  %284 = load i32, i32* %arrayidx38.10, align 4
  %idxprom39.10 = sext i32 %284 to i64
  %arrayidx40.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.10
  %285 = load i32, i32* %arrayidx40.10, align 4
  %286 = trunc i64 %indvars.iv.next5.9 to i32
  %mul41.10 = and i32 %286, 2147483640
  %add42.10 = add nuw nsw i32 %mul41.10, 288
  %add43.10 = or i32 %add42.10, 2
  %idxprom44.10 = zext i32 %add43.10 to i64
  %arrayidx45.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.10
  store i32 %285, i32* %arrayidx45.10, align 4
  %arrayidx46.10 = getelementptr inbounds i32, i32* %reversed, i64 5
  %287 = load i32, i32* %arrayidx46.10, align 4
  %idxprom47.10 = sext i32 %287 to i64
  %arrayidx48.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.10
  %288 = load i32, i32* %arrayidx48.10, align 4
  %289 = trunc i64 %indvars.iv.next5.9 to i32
  %mul49.10 = and i32 %289, 2147483640
  %add50.10 = add nuw nsw i32 %mul49.10, 360
  %add51.10 = or i32 %add50.10, 2
  %idxprom52.10 = zext i32 %add51.10 to i64
  %arrayidx53.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.10
  store i32 %288, i32* %arrayidx53.10, align 4
  %arrayidx54.10 = getelementptr inbounds i32, i32* %reversed, i64 6
  %290 = load i32, i32* %arrayidx54.10, align 4
  %idxprom55.10 = sext i32 %290 to i64
  %arrayidx56.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.10
  %291 = load i32, i32* %arrayidx56.10, align 4
  %292 = trunc i64 %indvars.iv.next5.9 to i32
  %mul57.10 = and i32 %292, 2147483640
  %add58.10 = add nuw nsw i32 %mul57.10, 432
  %add59.10 = or i32 %add58.10, 2
  %idxprom60.10 = zext i32 %add59.10 to i64
  %arrayidx61.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.10
  store i32 %291, i32* %arrayidx61.10, align 4
  %arrayidx62.10 = getelementptr inbounds i32, i32* %reversed, i64 7
  %293 = load i32, i32* %arrayidx62.10, align 4
  %idxprom63.10 = sext i32 %293 to i64
  %arrayidx64.10 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.10
  %294 = load i32, i32* %arrayidx64.10, align 4
  %add66.10 = add nuw nsw i32 %272, 504
  %add67.10 = or i32 %add66.10, 2
  %idxprom68.10 = zext i32 %add67.10 to i64
  %arrayidx69.10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.10
  store i32 %294, i32* %arrayidx69.10, align 4
  %indvars.iv.next5.10 = add nuw nsw i64 %indvars.iv.next5.9, 1
  br label %for.body3.11

for.body3.11:                                     ; preds = %for.body3.11, %for.end.10
  %indvars.iv.11 = phi i64 [ 0, %for.end.10 ], [ %indvars.iv.next.11, %for.body3.11 ]
  %295 = shl nsw i64 %indvars.iv.next5.10, 3
  %296 = add nuw nsw i64 %295, %indvars.iv.11
  %arrayidx.11 = getelementptr inbounds i32, i32* %DATA_x, i64 %296
  %297 = load i32, i32* %arrayidx.11, align 4
  %arrayidx5.11 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.11
  store i32 %297, i32* %arrayidx5.11, align 4
  %indvars.iv.next.11 = add nuw nsw i64 %indvars.iv.11, 1
  %exitcond.11 = icmp ne i64 %indvars.iv.next.11, 8
  br i1 %exitcond.11, label %for.body3.11, label %for.end.11, !llvm.loop !21

for.end.11:                                       ; preds = %for.body3.11
  %298 = trunc i64 %indvars.iv.next5.10 to i32
  %299 = and i32 %298, 2147483640
  %300 = load i32, i32* %reversed, align 4
  %idxprom7.11 = sext i32 %300 to i64
  %arrayidx8.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.11
  %301 = load i32, i32* %arrayidx8.11, align 4
  %arrayidx13.11 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.10
  store i32 %301, i32* %arrayidx13.11, align 4
  %arrayidx14.11 = getelementptr inbounds i32, i32* %reversed, i64 1
  %302 = load i32, i32* %arrayidx14.11, align 4
  %idxprom15.11 = sext i32 %302 to i64
  %arrayidx16.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.11
  %303 = load i32, i32* %arrayidx16.11, align 4
  %304 = trunc i64 %indvars.iv.next5.10 to i32
  %mul17.11 = and i32 %304, 2147483640
  %add18.11 = add nuw nsw i32 %mul17.11, 72
  %add19.11 = or i32 %add18.11, 3
  %idxprom20.11 = zext i32 %add19.11 to i64
  %arrayidx21.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.11
  store i32 %303, i32* %arrayidx21.11, align 4
  %arrayidx22.11 = getelementptr inbounds i32, i32* %reversed, i64 2
  %305 = load i32, i32* %arrayidx22.11, align 4
  %idxprom23.11 = sext i32 %305 to i64
  %arrayidx24.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.11
  %306 = load i32, i32* %arrayidx24.11, align 4
  %307 = trunc i64 %indvars.iv.next5.10 to i32
  %mul25.11 = and i32 %307, 2147483640
  %add26.11 = add nuw nsw i32 %mul25.11, 144
  %add27.11 = or i32 %add26.11, 3
  %idxprom28.11 = zext i32 %add27.11 to i64
  %arrayidx29.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.11
  store i32 %306, i32* %arrayidx29.11, align 4
  %arrayidx30.11 = getelementptr inbounds i32, i32* %reversed, i64 3
  %308 = load i32, i32* %arrayidx30.11, align 4
  %idxprom31.11 = sext i32 %308 to i64
  %arrayidx32.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.11
  %309 = load i32, i32* %arrayidx32.11, align 4
  %310 = trunc i64 %indvars.iv.next5.10 to i32
  %mul33.11 = and i32 %310, 2147483640
  %add34.11 = add nuw nsw i32 %mul33.11, 216
  %add35.11 = or i32 %add34.11, 3
  %idxprom36.11 = zext i32 %add35.11 to i64
  %arrayidx37.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.11
  store i32 %309, i32* %arrayidx37.11, align 4
  %arrayidx38.11 = getelementptr inbounds i32, i32* %reversed, i64 4
  %311 = load i32, i32* %arrayidx38.11, align 4
  %idxprom39.11 = sext i32 %311 to i64
  %arrayidx40.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.11
  %312 = load i32, i32* %arrayidx40.11, align 4
  %313 = trunc i64 %indvars.iv.next5.10 to i32
  %mul41.11 = and i32 %313, 2147483640
  %add42.11 = add nuw nsw i32 %mul41.11, 288
  %add43.11 = or i32 %add42.11, 3
  %idxprom44.11 = zext i32 %add43.11 to i64
  %arrayidx45.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.11
  store i32 %312, i32* %arrayidx45.11, align 4
  %arrayidx46.11 = getelementptr inbounds i32, i32* %reversed, i64 5
  %314 = load i32, i32* %arrayidx46.11, align 4
  %idxprom47.11 = sext i32 %314 to i64
  %arrayidx48.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.11
  %315 = load i32, i32* %arrayidx48.11, align 4
  %316 = trunc i64 %indvars.iv.next5.10 to i32
  %mul49.11 = and i32 %316, 2147483640
  %add50.11 = add nuw nsw i32 %mul49.11, 360
  %add51.11 = or i32 %add50.11, 3
  %idxprom52.11 = zext i32 %add51.11 to i64
  %arrayidx53.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.11
  store i32 %315, i32* %arrayidx53.11, align 4
  %arrayidx54.11 = getelementptr inbounds i32, i32* %reversed, i64 6
  %317 = load i32, i32* %arrayidx54.11, align 4
  %idxprom55.11 = sext i32 %317 to i64
  %arrayidx56.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.11
  %318 = load i32, i32* %arrayidx56.11, align 4
  %319 = trunc i64 %indvars.iv.next5.10 to i32
  %mul57.11 = and i32 %319, 2147483640
  %add58.11 = add nuw nsw i32 %mul57.11, 432
  %add59.11 = or i32 %add58.11, 3
  %idxprom60.11 = zext i32 %add59.11 to i64
  %arrayidx61.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.11
  store i32 %318, i32* %arrayidx61.11, align 4
  %arrayidx62.11 = getelementptr inbounds i32, i32* %reversed, i64 7
  %320 = load i32, i32* %arrayidx62.11, align 4
  %idxprom63.11 = sext i32 %320 to i64
  %arrayidx64.11 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.11
  %321 = load i32, i32* %arrayidx64.11, align 4
  %add66.11 = add nuw nsw i32 %299, 504
  %add67.11 = or i32 %add66.11, 3
  %idxprom68.11 = zext i32 %add67.11 to i64
  %arrayidx69.11 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.11
  store i32 %321, i32* %arrayidx69.11, align 4
  %indvars.iv.next5.11 = add nuw nsw i64 %indvars.iv.next5.10, 1
  br label %for.body3.12

for.body3.12:                                     ; preds = %for.body3.12, %for.end.11
  %indvars.iv.12 = phi i64 [ 0, %for.end.11 ], [ %indvars.iv.next.12, %for.body3.12 ]
  %322 = shl nsw i64 %indvars.iv.next5.11, 3
  %323 = add nuw nsw i64 %322, %indvars.iv.12
  %arrayidx.12 = getelementptr inbounds i32, i32* %DATA_x, i64 %323
  %324 = load i32, i32* %arrayidx.12, align 4
  %arrayidx5.12 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.12
  store i32 %324, i32* %arrayidx5.12, align 4
  %indvars.iv.next.12 = add nuw nsw i64 %indvars.iv.12, 1
  %exitcond.12 = icmp ne i64 %indvars.iv.next.12, 8
  br i1 %exitcond.12, label %for.body3.12, label %for.end.12, !llvm.loop !21

for.end.12:                                       ; preds = %for.body3.12
  %325 = trunc i64 %indvars.iv.next5.11 to i32
  %326 = and i32 %325, 2147483640
  %327 = load i32, i32* %reversed, align 4
  %idxprom7.12 = sext i32 %327 to i64
  %arrayidx8.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.12
  %328 = load i32, i32* %arrayidx8.12, align 4
  %arrayidx13.12 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.11
  store i32 %328, i32* %arrayidx13.12, align 4
  %arrayidx14.12 = getelementptr inbounds i32, i32* %reversed, i64 1
  %329 = load i32, i32* %arrayidx14.12, align 4
  %idxprom15.12 = sext i32 %329 to i64
  %arrayidx16.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.12
  %330 = load i32, i32* %arrayidx16.12, align 4
  %331 = trunc i64 %indvars.iv.next5.11 to i32
  %mul17.12 = and i32 %331, 2147483640
  %add18.12 = add nuw nsw i32 %mul17.12, 72
  %add19.12 = or i32 %add18.12, 4
  %idxprom20.12 = zext i32 %add19.12 to i64
  %arrayidx21.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.12
  store i32 %330, i32* %arrayidx21.12, align 4
  %arrayidx22.12 = getelementptr inbounds i32, i32* %reversed, i64 2
  %332 = load i32, i32* %arrayidx22.12, align 4
  %idxprom23.12 = sext i32 %332 to i64
  %arrayidx24.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.12
  %333 = load i32, i32* %arrayidx24.12, align 4
  %334 = trunc i64 %indvars.iv.next5.11 to i32
  %mul25.12 = and i32 %334, 2147483640
  %add26.12 = add nuw nsw i32 %mul25.12, 144
  %add27.12 = or i32 %add26.12, 4
  %idxprom28.12 = zext i32 %add27.12 to i64
  %arrayidx29.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.12
  store i32 %333, i32* %arrayidx29.12, align 4
  %arrayidx30.12 = getelementptr inbounds i32, i32* %reversed, i64 3
  %335 = load i32, i32* %arrayidx30.12, align 4
  %idxprom31.12 = sext i32 %335 to i64
  %arrayidx32.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.12
  %336 = load i32, i32* %arrayidx32.12, align 4
  %337 = trunc i64 %indvars.iv.next5.11 to i32
  %mul33.12 = and i32 %337, 2147483640
  %add34.12 = add nuw nsw i32 %mul33.12, 216
  %add35.12 = or i32 %add34.12, 4
  %idxprom36.12 = zext i32 %add35.12 to i64
  %arrayidx37.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.12
  store i32 %336, i32* %arrayidx37.12, align 4
  %arrayidx38.12 = getelementptr inbounds i32, i32* %reversed, i64 4
  %338 = load i32, i32* %arrayidx38.12, align 4
  %idxprom39.12 = sext i32 %338 to i64
  %arrayidx40.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.12
  %339 = load i32, i32* %arrayidx40.12, align 4
  %340 = trunc i64 %indvars.iv.next5.11 to i32
  %mul41.12 = and i32 %340, 2147483640
  %add42.12 = add nuw nsw i32 %mul41.12, 288
  %add43.12 = or i32 %add42.12, 4
  %idxprom44.12 = zext i32 %add43.12 to i64
  %arrayidx45.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.12
  store i32 %339, i32* %arrayidx45.12, align 4
  %arrayidx46.12 = getelementptr inbounds i32, i32* %reversed, i64 5
  %341 = load i32, i32* %arrayidx46.12, align 4
  %idxprom47.12 = sext i32 %341 to i64
  %arrayidx48.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.12
  %342 = load i32, i32* %arrayidx48.12, align 4
  %343 = trunc i64 %indvars.iv.next5.11 to i32
  %mul49.12 = and i32 %343, 2147483640
  %add50.12 = add nuw nsw i32 %mul49.12, 360
  %add51.12 = or i32 %add50.12, 4
  %idxprom52.12 = zext i32 %add51.12 to i64
  %arrayidx53.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.12
  store i32 %342, i32* %arrayidx53.12, align 4
  %arrayidx54.12 = getelementptr inbounds i32, i32* %reversed, i64 6
  %344 = load i32, i32* %arrayidx54.12, align 4
  %idxprom55.12 = sext i32 %344 to i64
  %arrayidx56.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.12
  %345 = load i32, i32* %arrayidx56.12, align 4
  %346 = trunc i64 %indvars.iv.next5.11 to i32
  %mul57.12 = and i32 %346, 2147483640
  %add58.12 = add nuw nsw i32 %mul57.12, 432
  %add59.12 = or i32 %add58.12, 4
  %idxprom60.12 = zext i32 %add59.12 to i64
  %arrayidx61.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.12
  store i32 %345, i32* %arrayidx61.12, align 4
  %arrayidx62.12 = getelementptr inbounds i32, i32* %reversed, i64 7
  %347 = load i32, i32* %arrayidx62.12, align 4
  %idxprom63.12 = sext i32 %347 to i64
  %arrayidx64.12 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.12
  %348 = load i32, i32* %arrayidx64.12, align 4
  %add66.12 = add nuw nsw i32 %326, 504
  %add67.12 = or i32 %add66.12, 4
  %idxprom68.12 = zext i32 %add67.12 to i64
  %arrayidx69.12 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.12
  store i32 %348, i32* %arrayidx69.12, align 4
  %indvars.iv.next5.12 = add nuw nsw i64 %indvars.iv.next5.11, 1
  br label %for.body3.13

for.body3.13:                                     ; preds = %for.body3.13, %for.end.12
  %indvars.iv.13 = phi i64 [ 0, %for.end.12 ], [ %indvars.iv.next.13, %for.body3.13 ]
  %349 = shl nsw i64 %indvars.iv.next5.12, 3
  %350 = add nuw nsw i64 %349, %indvars.iv.13
  %arrayidx.13 = getelementptr inbounds i32, i32* %DATA_x, i64 %350
  %351 = load i32, i32* %arrayidx.13, align 4
  %arrayidx5.13 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.13
  store i32 %351, i32* %arrayidx5.13, align 4
  %indvars.iv.next.13 = add nuw nsw i64 %indvars.iv.13, 1
  %exitcond.13 = icmp ne i64 %indvars.iv.next.13, 8
  br i1 %exitcond.13, label %for.body3.13, label %for.end.13, !llvm.loop !21

for.end.13:                                       ; preds = %for.body3.13
  %352 = trunc i64 %indvars.iv.next5.12 to i32
  %353 = and i32 %352, 2147483640
  %354 = load i32, i32* %reversed, align 4
  %idxprom7.13 = sext i32 %354 to i64
  %arrayidx8.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.13
  %355 = load i32, i32* %arrayidx8.13, align 4
  %arrayidx13.13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.12
  store i32 %355, i32* %arrayidx13.13, align 4
  %arrayidx14.13 = getelementptr inbounds i32, i32* %reversed, i64 1
  %356 = load i32, i32* %arrayidx14.13, align 4
  %idxprom15.13 = sext i32 %356 to i64
  %arrayidx16.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.13
  %357 = load i32, i32* %arrayidx16.13, align 4
  %358 = trunc i64 %indvars.iv.next5.12 to i32
  %mul17.13 = and i32 %358, 2147483640
  %add18.13 = add nuw nsw i32 %mul17.13, 72
  %add19.13 = or i32 %add18.13, 5
  %idxprom20.13 = zext i32 %add19.13 to i64
  %arrayidx21.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.13
  store i32 %357, i32* %arrayidx21.13, align 4
  %arrayidx22.13 = getelementptr inbounds i32, i32* %reversed, i64 2
  %359 = load i32, i32* %arrayidx22.13, align 4
  %idxprom23.13 = sext i32 %359 to i64
  %arrayidx24.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.13
  %360 = load i32, i32* %arrayidx24.13, align 4
  %361 = trunc i64 %indvars.iv.next5.12 to i32
  %mul25.13 = and i32 %361, 2147483640
  %add26.13 = add nuw nsw i32 %mul25.13, 144
  %add27.13 = or i32 %add26.13, 5
  %idxprom28.13 = zext i32 %add27.13 to i64
  %arrayidx29.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.13
  store i32 %360, i32* %arrayidx29.13, align 4
  %arrayidx30.13 = getelementptr inbounds i32, i32* %reversed, i64 3
  %362 = load i32, i32* %arrayidx30.13, align 4
  %idxprom31.13 = sext i32 %362 to i64
  %arrayidx32.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.13
  %363 = load i32, i32* %arrayidx32.13, align 4
  %364 = trunc i64 %indvars.iv.next5.12 to i32
  %mul33.13 = and i32 %364, 2147483640
  %add34.13 = add nuw nsw i32 %mul33.13, 216
  %add35.13 = or i32 %add34.13, 5
  %idxprom36.13 = zext i32 %add35.13 to i64
  %arrayidx37.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.13
  store i32 %363, i32* %arrayidx37.13, align 4
  %arrayidx38.13 = getelementptr inbounds i32, i32* %reversed, i64 4
  %365 = load i32, i32* %arrayidx38.13, align 4
  %idxprom39.13 = sext i32 %365 to i64
  %arrayidx40.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.13
  %366 = load i32, i32* %arrayidx40.13, align 4
  %367 = trunc i64 %indvars.iv.next5.12 to i32
  %mul41.13 = and i32 %367, 2147483640
  %add42.13 = add nuw nsw i32 %mul41.13, 288
  %add43.13 = or i32 %add42.13, 5
  %idxprom44.13 = zext i32 %add43.13 to i64
  %arrayidx45.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.13
  store i32 %366, i32* %arrayidx45.13, align 4
  %arrayidx46.13 = getelementptr inbounds i32, i32* %reversed, i64 5
  %368 = load i32, i32* %arrayidx46.13, align 4
  %idxprom47.13 = sext i32 %368 to i64
  %arrayidx48.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.13
  %369 = load i32, i32* %arrayidx48.13, align 4
  %370 = trunc i64 %indvars.iv.next5.12 to i32
  %mul49.13 = and i32 %370, 2147483640
  %add50.13 = add nuw nsw i32 %mul49.13, 360
  %add51.13 = or i32 %add50.13, 5
  %idxprom52.13 = zext i32 %add51.13 to i64
  %arrayidx53.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.13
  store i32 %369, i32* %arrayidx53.13, align 4
  %arrayidx54.13 = getelementptr inbounds i32, i32* %reversed, i64 6
  %371 = load i32, i32* %arrayidx54.13, align 4
  %idxprom55.13 = sext i32 %371 to i64
  %arrayidx56.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.13
  %372 = load i32, i32* %arrayidx56.13, align 4
  %373 = trunc i64 %indvars.iv.next5.12 to i32
  %mul57.13 = and i32 %373, 2147483640
  %add58.13 = add nuw nsw i32 %mul57.13, 432
  %add59.13 = or i32 %add58.13, 5
  %idxprom60.13 = zext i32 %add59.13 to i64
  %arrayidx61.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.13
  store i32 %372, i32* %arrayidx61.13, align 4
  %arrayidx62.13 = getelementptr inbounds i32, i32* %reversed, i64 7
  %374 = load i32, i32* %arrayidx62.13, align 4
  %idxprom63.13 = sext i32 %374 to i64
  %arrayidx64.13 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.13
  %375 = load i32, i32* %arrayidx64.13, align 4
  %add66.13 = add nuw nsw i32 %353, 504
  %add67.13 = or i32 %add66.13, 5
  %idxprom68.13 = zext i32 %add67.13 to i64
  %arrayidx69.13 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.13
  store i32 %375, i32* %arrayidx69.13, align 4
  %indvars.iv.next5.13 = add nuw nsw i64 %indvars.iv.next5.12, 1
  br label %for.body3.14

for.body3.14:                                     ; preds = %for.body3.14, %for.end.13
  %indvars.iv.14 = phi i64 [ 0, %for.end.13 ], [ %indvars.iv.next.14, %for.body3.14 ]
  %376 = shl nsw i64 %indvars.iv.next5.13, 3
  %377 = add nuw nsw i64 %376, %indvars.iv.14
  %arrayidx.14 = getelementptr inbounds i32, i32* %DATA_x, i64 %377
  %378 = load i32, i32* %arrayidx.14, align 4
  %arrayidx5.14 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.14
  store i32 %378, i32* %arrayidx5.14, align 4
  %indvars.iv.next.14 = add nuw nsw i64 %indvars.iv.14, 1
  %exitcond.14 = icmp ne i64 %indvars.iv.next.14, 8
  br i1 %exitcond.14, label %for.body3.14, label %for.end.14, !llvm.loop !21

for.end.14:                                       ; preds = %for.body3.14
  %379 = trunc i64 %indvars.iv.next5.13 to i32
  %380 = and i32 %379, 2147483640
  %381 = load i32, i32* %reversed, align 4
  %idxprom7.14 = sext i32 %381 to i64
  %arrayidx8.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.14
  %382 = load i32, i32* %arrayidx8.14, align 4
  %arrayidx13.14 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.13
  store i32 %382, i32* %arrayidx13.14, align 4
  %arrayidx14.14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %383 = load i32, i32* %arrayidx14.14, align 4
  %idxprom15.14 = sext i32 %383 to i64
  %arrayidx16.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.14
  %384 = load i32, i32* %arrayidx16.14, align 4
  %385 = trunc i64 %indvars.iv.next5.13 to i32
  %mul17.14 = and i32 %385, 2147483640
  %add18.14 = add nuw nsw i32 %mul17.14, 72
  %add19.14 = or i32 %add18.14, 6
  %idxprom20.14 = zext i32 %add19.14 to i64
  %arrayidx21.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.14
  store i32 %384, i32* %arrayidx21.14, align 4
  %arrayidx22.14 = getelementptr inbounds i32, i32* %reversed, i64 2
  %386 = load i32, i32* %arrayidx22.14, align 4
  %idxprom23.14 = sext i32 %386 to i64
  %arrayidx24.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.14
  %387 = load i32, i32* %arrayidx24.14, align 4
  %388 = trunc i64 %indvars.iv.next5.13 to i32
  %mul25.14 = and i32 %388, 2147483640
  %add26.14 = add nuw nsw i32 %mul25.14, 144
  %add27.14 = or i32 %add26.14, 6
  %idxprom28.14 = zext i32 %add27.14 to i64
  %arrayidx29.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.14
  store i32 %387, i32* %arrayidx29.14, align 4
  %arrayidx30.14 = getelementptr inbounds i32, i32* %reversed, i64 3
  %389 = load i32, i32* %arrayidx30.14, align 4
  %idxprom31.14 = sext i32 %389 to i64
  %arrayidx32.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.14
  %390 = load i32, i32* %arrayidx32.14, align 4
  %391 = trunc i64 %indvars.iv.next5.13 to i32
  %mul33.14 = and i32 %391, 2147483640
  %add34.14 = add nuw nsw i32 %mul33.14, 216
  %add35.14 = or i32 %add34.14, 6
  %idxprom36.14 = zext i32 %add35.14 to i64
  %arrayidx37.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.14
  store i32 %390, i32* %arrayidx37.14, align 4
  %arrayidx38.14 = getelementptr inbounds i32, i32* %reversed, i64 4
  %392 = load i32, i32* %arrayidx38.14, align 4
  %idxprom39.14 = sext i32 %392 to i64
  %arrayidx40.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.14
  %393 = load i32, i32* %arrayidx40.14, align 4
  %394 = trunc i64 %indvars.iv.next5.13 to i32
  %mul41.14 = and i32 %394, 2147483640
  %add42.14 = add nuw nsw i32 %mul41.14, 288
  %add43.14 = or i32 %add42.14, 6
  %idxprom44.14 = zext i32 %add43.14 to i64
  %arrayidx45.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.14
  store i32 %393, i32* %arrayidx45.14, align 4
  %arrayidx46.14 = getelementptr inbounds i32, i32* %reversed, i64 5
  %395 = load i32, i32* %arrayidx46.14, align 4
  %idxprom47.14 = sext i32 %395 to i64
  %arrayidx48.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.14
  %396 = load i32, i32* %arrayidx48.14, align 4
  %397 = trunc i64 %indvars.iv.next5.13 to i32
  %mul49.14 = and i32 %397, 2147483640
  %add50.14 = add nuw nsw i32 %mul49.14, 360
  %add51.14 = or i32 %add50.14, 6
  %idxprom52.14 = zext i32 %add51.14 to i64
  %arrayidx53.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.14
  store i32 %396, i32* %arrayidx53.14, align 4
  %arrayidx54.14 = getelementptr inbounds i32, i32* %reversed, i64 6
  %398 = load i32, i32* %arrayidx54.14, align 4
  %idxprom55.14 = sext i32 %398 to i64
  %arrayidx56.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.14
  %399 = load i32, i32* %arrayidx56.14, align 4
  %400 = trunc i64 %indvars.iv.next5.13 to i32
  %mul57.14 = and i32 %400, 2147483640
  %add58.14 = add nuw nsw i32 %mul57.14, 432
  %add59.14 = or i32 %add58.14, 6
  %idxprom60.14 = zext i32 %add59.14 to i64
  %arrayidx61.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.14
  store i32 %399, i32* %arrayidx61.14, align 4
  %arrayidx62.14 = getelementptr inbounds i32, i32* %reversed, i64 7
  %401 = load i32, i32* %arrayidx62.14, align 4
  %idxprom63.14 = sext i32 %401 to i64
  %arrayidx64.14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.14
  %402 = load i32, i32* %arrayidx64.14, align 4
  %add66.14 = add nuw nsw i32 %380, 504
  %add67.14 = or i32 %add66.14, 6
  %idxprom68.14 = zext i32 %add67.14 to i64
  %arrayidx69.14 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.14
  store i32 %402, i32* %arrayidx69.14, align 4
  %indvars.iv.next5.14 = add nuw nsw i64 %indvars.iv.next5.13, 1
  br label %for.body3.15

for.body3.15:                                     ; preds = %for.body3.15, %for.end.14
  %indvars.iv.15 = phi i64 [ 0, %for.end.14 ], [ %indvars.iv.next.15, %for.body3.15 ]
  %403 = shl nsw i64 %indvars.iv.next5.14, 3
  %404 = add nuw nsw i64 %403, %indvars.iv.15
  %arrayidx.15 = getelementptr inbounds i32, i32* %DATA_x, i64 %404
  %405 = load i32, i32* %arrayidx.15, align 4
  %arrayidx5.15 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.15
  store i32 %405, i32* %arrayidx5.15, align 4
  %indvars.iv.next.15 = add nuw nsw i64 %indvars.iv.15, 1
  %exitcond.15 = icmp ne i64 %indvars.iv.next.15, 8
  br i1 %exitcond.15, label %for.body3.15, label %for.end.15, !llvm.loop !21

for.end.15:                                       ; preds = %for.body3.15
  %406 = trunc i64 %indvars.iv.next5.14 to i32
  %407 = and i32 %406, 2147483640
  %408 = load i32, i32* %reversed, align 4
  %idxprom7.15 = sext i32 %408 to i64
  %arrayidx8.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.15
  %409 = load i32, i32* %arrayidx8.15, align 4
  %arrayidx13.15 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.14
  store i32 %409, i32* %arrayidx13.15, align 4
  %arrayidx14.15 = getelementptr inbounds i32, i32* %reversed, i64 1
  %410 = load i32, i32* %arrayidx14.15, align 4
  %idxprom15.15 = sext i32 %410 to i64
  %arrayidx16.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.15
  %411 = load i32, i32* %arrayidx16.15, align 4
  %412 = trunc i64 %indvars.iv.next5.14 to i32
  %mul17.15 = and i32 %412, 2147483640
  %add18.15 = add nuw nsw i32 %mul17.15, 72
  %add19.15 = or i32 %add18.15, 7
  %idxprom20.15 = zext i32 %add19.15 to i64
  %arrayidx21.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.15
  store i32 %411, i32* %arrayidx21.15, align 4
  %arrayidx22.15 = getelementptr inbounds i32, i32* %reversed, i64 2
  %413 = load i32, i32* %arrayidx22.15, align 4
  %idxprom23.15 = sext i32 %413 to i64
  %arrayidx24.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.15
  %414 = load i32, i32* %arrayidx24.15, align 4
  %415 = trunc i64 %indvars.iv.next5.14 to i32
  %mul25.15 = and i32 %415, 2147483640
  %add26.15 = add nuw nsw i32 %mul25.15, 144
  %add27.15 = or i32 %add26.15, 7
  %idxprom28.15 = zext i32 %add27.15 to i64
  %arrayidx29.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.15
  store i32 %414, i32* %arrayidx29.15, align 4
  %arrayidx30.15 = getelementptr inbounds i32, i32* %reversed, i64 3
  %416 = load i32, i32* %arrayidx30.15, align 4
  %idxprom31.15 = sext i32 %416 to i64
  %arrayidx32.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.15
  %417 = load i32, i32* %arrayidx32.15, align 4
  %418 = trunc i64 %indvars.iv.next5.14 to i32
  %mul33.15 = and i32 %418, 2147483640
  %add34.15 = add nuw nsw i32 %mul33.15, 216
  %add35.15 = or i32 %add34.15, 7
  %idxprom36.15 = zext i32 %add35.15 to i64
  %arrayidx37.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.15
  store i32 %417, i32* %arrayidx37.15, align 4
  %arrayidx38.15 = getelementptr inbounds i32, i32* %reversed, i64 4
  %419 = load i32, i32* %arrayidx38.15, align 4
  %idxprom39.15 = sext i32 %419 to i64
  %arrayidx40.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.15
  %420 = load i32, i32* %arrayidx40.15, align 4
  %421 = trunc i64 %indvars.iv.next5.14 to i32
  %mul41.15 = and i32 %421, 2147483640
  %add42.15 = add nuw nsw i32 %mul41.15, 288
  %add43.15 = or i32 %add42.15, 7
  %idxprom44.15 = zext i32 %add43.15 to i64
  %arrayidx45.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.15
  store i32 %420, i32* %arrayidx45.15, align 4
  %arrayidx46.15 = getelementptr inbounds i32, i32* %reversed, i64 5
  %422 = load i32, i32* %arrayidx46.15, align 4
  %idxprom47.15 = sext i32 %422 to i64
  %arrayidx48.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.15
  %423 = load i32, i32* %arrayidx48.15, align 4
  %424 = trunc i64 %indvars.iv.next5.14 to i32
  %mul49.15 = and i32 %424, 2147483640
  %add50.15 = add nuw nsw i32 %mul49.15, 360
  %add51.15 = or i32 %add50.15, 7
  %idxprom52.15 = zext i32 %add51.15 to i64
  %arrayidx53.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.15
  store i32 %423, i32* %arrayidx53.15, align 4
  %arrayidx54.15 = getelementptr inbounds i32, i32* %reversed, i64 6
  %425 = load i32, i32* %arrayidx54.15, align 4
  %idxprom55.15 = sext i32 %425 to i64
  %arrayidx56.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.15
  %426 = load i32, i32* %arrayidx56.15, align 4
  %427 = trunc i64 %indvars.iv.next5.14 to i32
  %mul57.15 = and i32 %427, 2147483640
  %add58.15 = add nuw nsw i32 %mul57.15, 432
  %add59.15 = or i32 %add58.15, 7
  %idxprom60.15 = zext i32 %add59.15 to i64
  %arrayidx61.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.15
  store i32 %426, i32* %arrayidx61.15, align 4
  %arrayidx62.15 = getelementptr inbounds i32, i32* %reversed, i64 7
  %428 = load i32, i32* %arrayidx62.15, align 4
  %idxprom63.15 = sext i32 %428 to i64
  %arrayidx64.15 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.15
  %429 = load i32, i32* %arrayidx64.15, align 4
  %add66.15 = add nuw nsw i32 %407, 504
  %add67.15 = or i32 %add66.15, 7
  %idxprom68.15 = zext i32 %add67.15 to i64
  %arrayidx69.15 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.15
  store i32 %429, i32* %arrayidx69.15, align 4
  %indvars.iv.next5.15 = add nuw nsw i64 %indvars.iv.next5.14, 1
  br label %for.body3.16

for.body3.16:                                     ; preds = %for.body3.16, %for.end.15
  %indvars.iv.16 = phi i64 [ 0, %for.end.15 ], [ %indvars.iv.next.16, %for.body3.16 ]
  %430 = shl nsw i64 %indvars.iv.next5.15, 3
  %431 = add nuw nsw i64 %430, %indvars.iv.16
  %arrayidx.16 = getelementptr inbounds i32, i32* %DATA_x, i64 %431
  %432 = load i32, i32* %arrayidx.16, align 4
  %arrayidx5.16 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.16
  store i32 %432, i32* %arrayidx5.16, align 4
  %indvars.iv.next.16 = add nuw nsw i64 %indvars.iv.16, 1
  %exitcond.16 = icmp ne i64 %indvars.iv.next.16, 8
  br i1 %exitcond.16, label %for.body3.16, label %for.end.16, !llvm.loop !21

for.end.16:                                       ; preds = %for.body3.16
  %433 = trunc i64 %indvars.iv.next5.15 to i32
  %434 = load i32, i32* %reversed, align 4
  %idxprom7.16 = sext i32 %434 to i64
  %arrayidx8.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.16
  %435 = load i32, i32* %arrayidx8.16, align 4
  %arrayidx13.16 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.15
  store i32 %435, i32* %arrayidx13.16, align 4
  %arrayidx14.16 = getelementptr inbounds i32, i32* %reversed, i64 1
  %436 = load i32, i32* %arrayidx14.16, align 4
  %idxprom15.16 = sext i32 %436 to i64
  %arrayidx16.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.16
  %437 = load i32, i32* %arrayidx16.16, align 4
  %438 = trunc i64 %indvars.iv.next5.15 to i32
  %add18.16 = add nuw nsw i32 %438, 72
  %idxprom20.16 = zext i32 %add18.16 to i64
  %arrayidx21.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.16
  store i32 %437, i32* %arrayidx21.16, align 4
  %arrayidx22.16 = getelementptr inbounds i32, i32* %reversed, i64 2
  %439 = load i32, i32* %arrayidx22.16, align 4
  %idxprom23.16 = sext i32 %439 to i64
  %arrayidx24.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.16
  %440 = load i32, i32* %arrayidx24.16, align 4
  %441 = trunc i64 %indvars.iv.next5.15 to i32
  %add26.16 = add nuw nsw i32 %441, 144
  %idxprom28.16 = zext i32 %add26.16 to i64
  %arrayidx29.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.16
  store i32 %440, i32* %arrayidx29.16, align 4
  %arrayidx30.16 = getelementptr inbounds i32, i32* %reversed, i64 3
  %442 = load i32, i32* %arrayidx30.16, align 4
  %idxprom31.16 = sext i32 %442 to i64
  %arrayidx32.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.16
  %443 = load i32, i32* %arrayidx32.16, align 4
  %444 = trunc i64 %indvars.iv.next5.15 to i32
  %add34.16 = add nuw nsw i32 %444, 216
  %idxprom36.16 = zext i32 %add34.16 to i64
  %arrayidx37.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.16
  store i32 %443, i32* %arrayidx37.16, align 4
  %arrayidx38.16 = getelementptr inbounds i32, i32* %reversed, i64 4
  %445 = load i32, i32* %arrayidx38.16, align 4
  %idxprom39.16 = sext i32 %445 to i64
  %arrayidx40.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.16
  %446 = load i32, i32* %arrayidx40.16, align 4
  %447 = trunc i64 %indvars.iv.next5.15 to i32
  %add42.16 = add nuw nsw i32 %447, 288
  %idxprom44.16 = zext i32 %add42.16 to i64
  %arrayidx45.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.16
  store i32 %446, i32* %arrayidx45.16, align 4
  %arrayidx46.16 = getelementptr inbounds i32, i32* %reversed, i64 5
  %448 = load i32, i32* %arrayidx46.16, align 4
  %idxprom47.16 = sext i32 %448 to i64
  %arrayidx48.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.16
  %449 = load i32, i32* %arrayidx48.16, align 4
  %450 = trunc i64 %indvars.iv.next5.15 to i32
  %add50.16 = add nuw nsw i32 %450, 360
  %idxprom52.16 = zext i32 %add50.16 to i64
  %arrayidx53.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.16
  store i32 %449, i32* %arrayidx53.16, align 4
  %arrayidx54.16 = getelementptr inbounds i32, i32* %reversed, i64 6
  %451 = load i32, i32* %arrayidx54.16, align 4
  %idxprom55.16 = sext i32 %451 to i64
  %arrayidx56.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.16
  %452 = load i32, i32* %arrayidx56.16, align 4
  %453 = trunc i64 %indvars.iv.next5.15 to i32
  %add58.16 = add nuw nsw i32 %453, 432
  %idxprom60.16 = zext i32 %add58.16 to i64
  %arrayidx61.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.16
  store i32 %452, i32* %arrayidx61.16, align 4
  %arrayidx62.16 = getelementptr inbounds i32, i32* %reversed, i64 7
  %454 = load i32, i32* %arrayidx62.16, align 4
  %idxprom63.16 = sext i32 %454 to i64
  %arrayidx64.16 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.16
  %455 = load i32, i32* %arrayidx64.16, align 4
  %add66.16 = add nuw nsw i32 %433, 504
  %idxprom68.16 = zext i32 %add66.16 to i64
  %arrayidx69.16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.16
  store i32 %455, i32* %arrayidx69.16, align 4
  %indvars.iv.next5.16 = add nuw nsw i64 %indvars.iv.next5.15, 1
  br label %for.body3.17

for.body3.17:                                     ; preds = %for.body3.17, %for.end.16
  %indvars.iv.17 = phi i64 [ 0, %for.end.16 ], [ %indvars.iv.next.17, %for.body3.17 ]
  %456 = shl nsw i64 %indvars.iv.next5.16, 3
  %457 = add nuw nsw i64 %456, %indvars.iv.17
  %arrayidx.17 = getelementptr inbounds i32, i32* %DATA_x, i64 %457
  %458 = load i32, i32* %arrayidx.17, align 4
  %arrayidx5.17 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.17
  store i32 %458, i32* %arrayidx5.17, align 4
  %indvars.iv.next.17 = add nuw nsw i64 %indvars.iv.17, 1
  %exitcond.17 = icmp ne i64 %indvars.iv.next.17, 8
  br i1 %exitcond.17, label %for.body3.17, label %for.end.17, !llvm.loop !21

for.end.17:                                       ; preds = %for.body3.17
  %459 = trunc i64 %indvars.iv.next5.16 to i32
  %460 = and i32 %459, 2147483640
  %461 = load i32, i32* %reversed, align 4
  %idxprom7.17 = sext i32 %461 to i64
  %arrayidx8.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.17
  %462 = load i32, i32* %arrayidx8.17, align 4
  %arrayidx13.17 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.16
  store i32 %462, i32* %arrayidx13.17, align 4
  %arrayidx14.17 = getelementptr inbounds i32, i32* %reversed, i64 1
  %463 = load i32, i32* %arrayidx14.17, align 4
  %idxprom15.17 = sext i32 %463 to i64
  %arrayidx16.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.17
  %464 = load i32, i32* %arrayidx16.17, align 4
  %465 = trunc i64 %indvars.iv.next5.16 to i32
  %mul17.17 = and i32 %465, 2147483640
  %add18.17 = add nuw nsw i32 %mul17.17, 72
  %add19.17 = or i32 %add18.17, 1
  %idxprom20.17 = zext i32 %add19.17 to i64
  %arrayidx21.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.17
  store i32 %464, i32* %arrayidx21.17, align 4
  %arrayidx22.17 = getelementptr inbounds i32, i32* %reversed, i64 2
  %466 = load i32, i32* %arrayidx22.17, align 4
  %idxprom23.17 = sext i32 %466 to i64
  %arrayidx24.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.17
  %467 = load i32, i32* %arrayidx24.17, align 4
  %468 = trunc i64 %indvars.iv.next5.16 to i32
  %mul25.17 = and i32 %468, 2147483640
  %add26.17 = add nuw nsw i32 %mul25.17, 144
  %add27.17 = or i32 %add26.17, 1
  %idxprom28.17 = zext i32 %add27.17 to i64
  %arrayidx29.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.17
  store i32 %467, i32* %arrayidx29.17, align 4
  %arrayidx30.17 = getelementptr inbounds i32, i32* %reversed, i64 3
  %469 = load i32, i32* %arrayidx30.17, align 4
  %idxprom31.17 = sext i32 %469 to i64
  %arrayidx32.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.17
  %470 = load i32, i32* %arrayidx32.17, align 4
  %471 = trunc i64 %indvars.iv.next5.16 to i32
  %mul33.17 = and i32 %471, 2147483640
  %add34.17 = add nuw nsw i32 %mul33.17, 216
  %add35.17 = or i32 %add34.17, 1
  %idxprom36.17 = zext i32 %add35.17 to i64
  %arrayidx37.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.17
  store i32 %470, i32* %arrayidx37.17, align 4
  %arrayidx38.17 = getelementptr inbounds i32, i32* %reversed, i64 4
  %472 = load i32, i32* %arrayidx38.17, align 4
  %idxprom39.17 = sext i32 %472 to i64
  %arrayidx40.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.17
  %473 = load i32, i32* %arrayidx40.17, align 4
  %474 = trunc i64 %indvars.iv.next5.16 to i32
  %mul41.17 = and i32 %474, 2147483640
  %add42.17 = add nuw nsw i32 %mul41.17, 288
  %add43.17 = or i32 %add42.17, 1
  %idxprom44.17 = zext i32 %add43.17 to i64
  %arrayidx45.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.17
  store i32 %473, i32* %arrayidx45.17, align 4
  %arrayidx46.17 = getelementptr inbounds i32, i32* %reversed, i64 5
  %475 = load i32, i32* %arrayidx46.17, align 4
  %idxprom47.17 = sext i32 %475 to i64
  %arrayidx48.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.17
  %476 = load i32, i32* %arrayidx48.17, align 4
  %477 = trunc i64 %indvars.iv.next5.16 to i32
  %mul49.17 = and i32 %477, 2147483640
  %add50.17 = add nuw nsw i32 %mul49.17, 360
  %add51.17 = or i32 %add50.17, 1
  %idxprom52.17 = zext i32 %add51.17 to i64
  %arrayidx53.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.17
  store i32 %476, i32* %arrayidx53.17, align 4
  %arrayidx54.17 = getelementptr inbounds i32, i32* %reversed, i64 6
  %478 = load i32, i32* %arrayidx54.17, align 4
  %idxprom55.17 = sext i32 %478 to i64
  %arrayidx56.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.17
  %479 = load i32, i32* %arrayidx56.17, align 4
  %480 = trunc i64 %indvars.iv.next5.16 to i32
  %mul57.17 = and i32 %480, 2147483640
  %add58.17 = add nuw nsw i32 %mul57.17, 432
  %add59.17 = or i32 %add58.17, 1
  %idxprom60.17 = zext i32 %add59.17 to i64
  %arrayidx61.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.17
  store i32 %479, i32* %arrayidx61.17, align 4
  %arrayidx62.17 = getelementptr inbounds i32, i32* %reversed, i64 7
  %481 = load i32, i32* %arrayidx62.17, align 4
  %idxprom63.17 = sext i32 %481 to i64
  %arrayidx64.17 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.17
  %482 = load i32, i32* %arrayidx64.17, align 4
  %add66.17 = add nuw nsw i32 %460, 504
  %add67.17 = or i32 %add66.17, 1
  %idxprom68.17 = zext i32 %add67.17 to i64
  %arrayidx69.17 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.17
  store i32 %482, i32* %arrayidx69.17, align 4
  %indvars.iv.next5.17 = add nuw nsw i64 %indvars.iv.next5.16, 1
  br label %for.body3.18

for.body3.18:                                     ; preds = %for.body3.18, %for.end.17
  %indvars.iv.18 = phi i64 [ 0, %for.end.17 ], [ %indvars.iv.next.18, %for.body3.18 ]
  %483 = shl nsw i64 %indvars.iv.next5.17, 3
  %484 = add nuw nsw i64 %483, %indvars.iv.18
  %arrayidx.18 = getelementptr inbounds i32, i32* %DATA_x, i64 %484
  %485 = load i32, i32* %arrayidx.18, align 4
  %arrayidx5.18 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.18
  store i32 %485, i32* %arrayidx5.18, align 4
  %indvars.iv.next.18 = add nuw nsw i64 %indvars.iv.18, 1
  %exitcond.18 = icmp ne i64 %indvars.iv.next.18, 8
  br i1 %exitcond.18, label %for.body3.18, label %for.end.18, !llvm.loop !21

for.end.18:                                       ; preds = %for.body3.18
  %486 = trunc i64 %indvars.iv.next5.17 to i32
  %487 = and i32 %486, 2147483640
  %488 = load i32, i32* %reversed, align 4
  %idxprom7.18 = sext i32 %488 to i64
  %arrayidx8.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.18
  %489 = load i32, i32* %arrayidx8.18, align 4
  %arrayidx13.18 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.17
  store i32 %489, i32* %arrayidx13.18, align 4
  %arrayidx14.18 = getelementptr inbounds i32, i32* %reversed, i64 1
  %490 = load i32, i32* %arrayidx14.18, align 4
  %idxprom15.18 = sext i32 %490 to i64
  %arrayidx16.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.18
  %491 = load i32, i32* %arrayidx16.18, align 4
  %492 = trunc i64 %indvars.iv.next5.17 to i32
  %mul17.18 = and i32 %492, 2147483640
  %add18.18 = add nuw nsw i32 %mul17.18, 72
  %add19.18 = or i32 %add18.18, 2
  %idxprom20.18 = zext i32 %add19.18 to i64
  %arrayidx21.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.18
  store i32 %491, i32* %arrayidx21.18, align 4
  %arrayidx22.18 = getelementptr inbounds i32, i32* %reversed, i64 2
  %493 = load i32, i32* %arrayidx22.18, align 4
  %idxprom23.18 = sext i32 %493 to i64
  %arrayidx24.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.18
  %494 = load i32, i32* %arrayidx24.18, align 4
  %495 = trunc i64 %indvars.iv.next5.17 to i32
  %mul25.18 = and i32 %495, 2147483640
  %add26.18 = add nuw nsw i32 %mul25.18, 144
  %add27.18 = or i32 %add26.18, 2
  %idxprom28.18 = zext i32 %add27.18 to i64
  %arrayidx29.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.18
  store i32 %494, i32* %arrayidx29.18, align 4
  %arrayidx30.18 = getelementptr inbounds i32, i32* %reversed, i64 3
  %496 = load i32, i32* %arrayidx30.18, align 4
  %idxprom31.18 = sext i32 %496 to i64
  %arrayidx32.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.18
  %497 = load i32, i32* %arrayidx32.18, align 4
  %498 = trunc i64 %indvars.iv.next5.17 to i32
  %mul33.18 = and i32 %498, 2147483640
  %add34.18 = add nuw nsw i32 %mul33.18, 216
  %add35.18 = or i32 %add34.18, 2
  %idxprom36.18 = zext i32 %add35.18 to i64
  %arrayidx37.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.18
  store i32 %497, i32* %arrayidx37.18, align 4
  %arrayidx38.18 = getelementptr inbounds i32, i32* %reversed, i64 4
  %499 = load i32, i32* %arrayidx38.18, align 4
  %idxprom39.18 = sext i32 %499 to i64
  %arrayidx40.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.18
  %500 = load i32, i32* %arrayidx40.18, align 4
  %501 = trunc i64 %indvars.iv.next5.17 to i32
  %mul41.18 = and i32 %501, 2147483640
  %add42.18 = add nuw nsw i32 %mul41.18, 288
  %add43.18 = or i32 %add42.18, 2
  %idxprom44.18 = zext i32 %add43.18 to i64
  %arrayidx45.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.18
  store i32 %500, i32* %arrayidx45.18, align 4
  %arrayidx46.18 = getelementptr inbounds i32, i32* %reversed, i64 5
  %502 = load i32, i32* %arrayidx46.18, align 4
  %idxprom47.18 = sext i32 %502 to i64
  %arrayidx48.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.18
  %503 = load i32, i32* %arrayidx48.18, align 4
  %504 = trunc i64 %indvars.iv.next5.17 to i32
  %mul49.18 = and i32 %504, 2147483640
  %add50.18 = add nuw nsw i32 %mul49.18, 360
  %add51.18 = or i32 %add50.18, 2
  %idxprom52.18 = zext i32 %add51.18 to i64
  %arrayidx53.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.18
  store i32 %503, i32* %arrayidx53.18, align 4
  %arrayidx54.18 = getelementptr inbounds i32, i32* %reversed, i64 6
  %505 = load i32, i32* %arrayidx54.18, align 4
  %idxprom55.18 = sext i32 %505 to i64
  %arrayidx56.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.18
  %506 = load i32, i32* %arrayidx56.18, align 4
  %507 = trunc i64 %indvars.iv.next5.17 to i32
  %mul57.18 = and i32 %507, 2147483640
  %add58.18 = add nuw nsw i32 %mul57.18, 432
  %add59.18 = or i32 %add58.18, 2
  %idxprom60.18 = zext i32 %add59.18 to i64
  %arrayidx61.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.18
  store i32 %506, i32* %arrayidx61.18, align 4
  %arrayidx62.18 = getelementptr inbounds i32, i32* %reversed, i64 7
  %508 = load i32, i32* %arrayidx62.18, align 4
  %idxprom63.18 = sext i32 %508 to i64
  %arrayidx64.18 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.18
  %509 = load i32, i32* %arrayidx64.18, align 4
  %add66.18 = add nuw nsw i32 %487, 504
  %add67.18 = or i32 %add66.18, 2
  %idxprom68.18 = zext i32 %add67.18 to i64
  %arrayidx69.18 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.18
  store i32 %509, i32* %arrayidx69.18, align 4
  %indvars.iv.next5.18 = add nuw nsw i64 %indvars.iv.next5.17, 1
  br label %for.body3.19

for.body3.19:                                     ; preds = %for.body3.19, %for.end.18
  %indvars.iv.19 = phi i64 [ 0, %for.end.18 ], [ %indvars.iv.next.19, %for.body3.19 ]
  %510 = shl nsw i64 %indvars.iv.next5.18, 3
  %511 = add nuw nsw i64 %510, %indvars.iv.19
  %arrayidx.19 = getelementptr inbounds i32, i32* %DATA_x, i64 %511
  %512 = load i32, i32* %arrayidx.19, align 4
  %arrayidx5.19 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.19
  store i32 %512, i32* %arrayidx5.19, align 4
  %indvars.iv.next.19 = add nuw nsw i64 %indvars.iv.19, 1
  %exitcond.19 = icmp ne i64 %indvars.iv.next.19, 8
  br i1 %exitcond.19, label %for.body3.19, label %for.end.19, !llvm.loop !21

for.end.19:                                       ; preds = %for.body3.19
  %513 = trunc i64 %indvars.iv.next5.18 to i32
  %514 = and i32 %513, 2147483640
  %515 = load i32, i32* %reversed, align 4
  %idxprom7.19 = sext i32 %515 to i64
  %arrayidx8.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.19
  %516 = load i32, i32* %arrayidx8.19, align 4
  %arrayidx13.19 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.18
  store i32 %516, i32* %arrayidx13.19, align 4
  %arrayidx14.19 = getelementptr inbounds i32, i32* %reversed, i64 1
  %517 = load i32, i32* %arrayidx14.19, align 4
  %idxprom15.19 = sext i32 %517 to i64
  %arrayidx16.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.19
  %518 = load i32, i32* %arrayidx16.19, align 4
  %519 = trunc i64 %indvars.iv.next5.18 to i32
  %mul17.19 = and i32 %519, 2147483640
  %add18.19 = add nuw nsw i32 %mul17.19, 72
  %add19.19 = or i32 %add18.19, 3
  %idxprom20.19 = zext i32 %add19.19 to i64
  %arrayidx21.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.19
  store i32 %518, i32* %arrayidx21.19, align 4
  %arrayidx22.19 = getelementptr inbounds i32, i32* %reversed, i64 2
  %520 = load i32, i32* %arrayidx22.19, align 4
  %idxprom23.19 = sext i32 %520 to i64
  %arrayidx24.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.19
  %521 = load i32, i32* %arrayidx24.19, align 4
  %522 = trunc i64 %indvars.iv.next5.18 to i32
  %mul25.19 = and i32 %522, 2147483640
  %add26.19 = add nuw nsw i32 %mul25.19, 144
  %add27.19 = or i32 %add26.19, 3
  %idxprom28.19 = zext i32 %add27.19 to i64
  %arrayidx29.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.19
  store i32 %521, i32* %arrayidx29.19, align 4
  %arrayidx30.19 = getelementptr inbounds i32, i32* %reversed, i64 3
  %523 = load i32, i32* %arrayidx30.19, align 4
  %idxprom31.19 = sext i32 %523 to i64
  %arrayidx32.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.19
  %524 = load i32, i32* %arrayidx32.19, align 4
  %525 = trunc i64 %indvars.iv.next5.18 to i32
  %mul33.19 = and i32 %525, 2147483640
  %add34.19 = add nuw nsw i32 %mul33.19, 216
  %add35.19 = or i32 %add34.19, 3
  %idxprom36.19 = zext i32 %add35.19 to i64
  %arrayidx37.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.19
  store i32 %524, i32* %arrayidx37.19, align 4
  %arrayidx38.19 = getelementptr inbounds i32, i32* %reversed, i64 4
  %526 = load i32, i32* %arrayidx38.19, align 4
  %idxprom39.19 = sext i32 %526 to i64
  %arrayidx40.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.19
  %527 = load i32, i32* %arrayidx40.19, align 4
  %528 = trunc i64 %indvars.iv.next5.18 to i32
  %mul41.19 = and i32 %528, 2147483640
  %add42.19 = add nuw nsw i32 %mul41.19, 288
  %add43.19 = or i32 %add42.19, 3
  %idxprom44.19 = zext i32 %add43.19 to i64
  %arrayidx45.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.19
  store i32 %527, i32* %arrayidx45.19, align 4
  %arrayidx46.19 = getelementptr inbounds i32, i32* %reversed, i64 5
  %529 = load i32, i32* %arrayidx46.19, align 4
  %idxprom47.19 = sext i32 %529 to i64
  %arrayidx48.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.19
  %530 = load i32, i32* %arrayidx48.19, align 4
  %531 = trunc i64 %indvars.iv.next5.18 to i32
  %mul49.19 = and i32 %531, 2147483640
  %add50.19 = add nuw nsw i32 %mul49.19, 360
  %add51.19 = or i32 %add50.19, 3
  %idxprom52.19 = zext i32 %add51.19 to i64
  %arrayidx53.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.19
  store i32 %530, i32* %arrayidx53.19, align 4
  %arrayidx54.19 = getelementptr inbounds i32, i32* %reversed, i64 6
  %532 = load i32, i32* %arrayidx54.19, align 4
  %idxprom55.19 = sext i32 %532 to i64
  %arrayidx56.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.19
  %533 = load i32, i32* %arrayidx56.19, align 4
  %534 = trunc i64 %indvars.iv.next5.18 to i32
  %mul57.19 = and i32 %534, 2147483640
  %add58.19 = add nuw nsw i32 %mul57.19, 432
  %add59.19 = or i32 %add58.19, 3
  %idxprom60.19 = zext i32 %add59.19 to i64
  %arrayidx61.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.19
  store i32 %533, i32* %arrayidx61.19, align 4
  %arrayidx62.19 = getelementptr inbounds i32, i32* %reversed, i64 7
  %535 = load i32, i32* %arrayidx62.19, align 4
  %idxprom63.19 = sext i32 %535 to i64
  %arrayidx64.19 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.19
  %536 = load i32, i32* %arrayidx64.19, align 4
  %add66.19 = add nuw nsw i32 %514, 504
  %add67.19 = or i32 %add66.19, 3
  %idxprom68.19 = zext i32 %add67.19 to i64
  %arrayidx69.19 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.19
  store i32 %536, i32* %arrayidx69.19, align 4
  %indvars.iv.next5.19 = add nuw nsw i64 %indvars.iv.next5.18, 1
  br label %for.body3.20

for.body3.20:                                     ; preds = %for.body3.20, %for.end.19
  %indvars.iv.20 = phi i64 [ 0, %for.end.19 ], [ %indvars.iv.next.20, %for.body3.20 ]
  %537 = shl nsw i64 %indvars.iv.next5.19, 3
  %538 = add nuw nsw i64 %537, %indvars.iv.20
  %arrayidx.20 = getelementptr inbounds i32, i32* %DATA_x, i64 %538
  %539 = load i32, i32* %arrayidx.20, align 4
  %arrayidx5.20 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.20
  store i32 %539, i32* %arrayidx5.20, align 4
  %indvars.iv.next.20 = add nuw nsw i64 %indvars.iv.20, 1
  %exitcond.20 = icmp ne i64 %indvars.iv.next.20, 8
  br i1 %exitcond.20, label %for.body3.20, label %for.end.20, !llvm.loop !21

for.end.20:                                       ; preds = %for.body3.20
  %540 = trunc i64 %indvars.iv.next5.19 to i32
  %541 = and i32 %540, 2147483640
  %542 = load i32, i32* %reversed, align 4
  %idxprom7.20 = sext i32 %542 to i64
  %arrayidx8.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.20
  %543 = load i32, i32* %arrayidx8.20, align 4
  %arrayidx13.20 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.19
  store i32 %543, i32* %arrayidx13.20, align 4
  %arrayidx14.20 = getelementptr inbounds i32, i32* %reversed, i64 1
  %544 = load i32, i32* %arrayidx14.20, align 4
  %idxprom15.20 = sext i32 %544 to i64
  %arrayidx16.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.20
  %545 = load i32, i32* %arrayidx16.20, align 4
  %546 = trunc i64 %indvars.iv.next5.19 to i32
  %mul17.20 = and i32 %546, 2147483640
  %add18.20 = add nuw nsw i32 %mul17.20, 72
  %add19.20 = or i32 %add18.20, 4
  %idxprom20.20 = zext i32 %add19.20 to i64
  %arrayidx21.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.20
  store i32 %545, i32* %arrayidx21.20, align 4
  %arrayidx22.20 = getelementptr inbounds i32, i32* %reversed, i64 2
  %547 = load i32, i32* %arrayidx22.20, align 4
  %idxprom23.20 = sext i32 %547 to i64
  %arrayidx24.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.20
  %548 = load i32, i32* %arrayidx24.20, align 4
  %549 = trunc i64 %indvars.iv.next5.19 to i32
  %mul25.20 = and i32 %549, 2147483640
  %add26.20 = add nuw nsw i32 %mul25.20, 144
  %add27.20 = or i32 %add26.20, 4
  %idxprom28.20 = zext i32 %add27.20 to i64
  %arrayidx29.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.20
  store i32 %548, i32* %arrayidx29.20, align 4
  %arrayidx30.20 = getelementptr inbounds i32, i32* %reversed, i64 3
  %550 = load i32, i32* %arrayidx30.20, align 4
  %idxprom31.20 = sext i32 %550 to i64
  %arrayidx32.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.20
  %551 = load i32, i32* %arrayidx32.20, align 4
  %552 = trunc i64 %indvars.iv.next5.19 to i32
  %mul33.20 = and i32 %552, 2147483640
  %add34.20 = add nuw nsw i32 %mul33.20, 216
  %add35.20 = or i32 %add34.20, 4
  %idxprom36.20 = zext i32 %add35.20 to i64
  %arrayidx37.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.20
  store i32 %551, i32* %arrayidx37.20, align 4
  %arrayidx38.20 = getelementptr inbounds i32, i32* %reversed, i64 4
  %553 = load i32, i32* %arrayidx38.20, align 4
  %idxprom39.20 = sext i32 %553 to i64
  %arrayidx40.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.20
  %554 = load i32, i32* %arrayidx40.20, align 4
  %555 = trunc i64 %indvars.iv.next5.19 to i32
  %mul41.20 = and i32 %555, 2147483640
  %add42.20 = add nuw nsw i32 %mul41.20, 288
  %add43.20 = or i32 %add42.20, 4
  %idxprom44.20 = zext i32 %add43.20 to i64
  %arrayidx45.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.20
  store i32 %554, i32* %arrayidx45.20, align 4
  %arrayidx46.20 = getelementptr inbounds i32, i32* %reversed, i64 5
  %556 = load i32, i32* %arrayidx46.20, align 4
  %idxprom47.20 = sext i32 %556 to i64
  %arrayidx48.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.20
  %557 = load i32, i32* %arrayidx48.20, align 4
  %558 = trunc i64 %indvars.iv.next5.19 to i32
  %mul49.20 = and i32 %558, 2147483640
  %add50.20 = add nuw nsw i32 %mul49.20, 360
  %add51.20 = or i32 %add50.20, 4
  %idxprom52.20 = zext i32 %add51.20 to i64
  %arrayidx53.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.20
  store i32 %557, i32* %arrayidx53.20, align 4
  %arrayidx54.20 = getelementptr inbounds i32, i32* %reversed, i64 6
  %559 = load i32, i32* %arrayidx54.20, align 4
  %idxprom55.20 = sext i32 %559 to i64
  %arrayidx56.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.20
  %560 = load i32, i32* %arrayidx56.20, align 4
  %561 = trunc i64 %indvars.iv.next5.19 to i32
  %mul57.20 = and i32 %561, 2147483640
  %add58.20 = add nuw nsw i32 %mul57.20, 432
  %add59.20 = or i32 %add58.20, 4
  %idxprom60.20 = zext i32 %add59.20 to i64
  %arrayidx61.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.20
  store i32 %560, i32* %arrayidx61.20, align 4
  %arrayidx62.20 = getelementptr inbounds i32, i32* %reversed, i64 7
  %562 = load i32, i32* %arrayidx62.20, align 4
  %idxprom63.20 = sext i32 %562 to i64
  %arrayidx64.20 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.20
  %563 = load i32, i32* %arrayidx64.20, align 4
  %add66.20 = add nuw nsw i32 %541, 504
  %add67.20 = or i32 %add66.20, 4
  %idxprom68.20 = zext i32 %add67.20 to i64
  %arrayidx69.20 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.20
  store i32 %563, i32* %arrayidx69.20, align 4
  %indvars.iv.next5.20 = add nuw nsw i64 %indvars.iv.next5.19, 1
  br label %for.body3.21

for.body3.21:                                     ; preds = %for.body3.21, %for.end.20
  %indvars.iv.21 = phi i64 [ 0, %for.end.20 ], [ %indvars.iv.next.21, %for.body3.21 ]
  %564 = shl nsw i64 %indvars.iv.next5.20, 3
  %565 = add nuw nsw i64 %564, %indvars.iv.21
  %arrayidx.21 = getelementptr inbounds i32, i32* %DATA_x, i64 %565
  %566 = load i32, i32* %arrayidx.21, align 4
  %arrayidx5.21 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.21
  store i32 %566, i32* %arrayidx5.21, align 4
  %indvars.iv.next.21 = add nuw nsw i64 %indvars.iv.21, 1
  %exitcond.21 = icmp ne i64 %indvars.iv.next.21, 8
  br i1 %exitcond.21, label %for.body3.21, label %for.end.21, !llvm.loop !21

for.end.21:                                       ; preds = %for.body3.21
  %567 = trunc i64 %indvars.iv.next5.20 to i32
  %568 = and i32 %567, 2147483640
  %569 = load i32, i32* %reversed, align 4
  %idxprom7.21 = sext i32 %569 to i64
  %arrayidx8.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.21
  %570 = load i32, i32* %arrayidx8.21, align 4
  %arrayidx13.21 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.20
  store i32 %570, i32* %arrayidx13.21, align 4
  %arrayidx14.21 = getelementptr inbounds i32, i32* %reversed, i64 1
  %571 = load i32, i32* %arrayidx14.21, align 4
  %idxprom15.21 = sext i32 %571 to i64
  %arrayidx16.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.21
  %572 = load i32, i32* %arrayidx16.21, align 4
  %573 = trunc i64 %indvars.iv.next5.20 to i32
  %mul17.21 = and i32 %573, 2147483640
  %add18.21 = add nuw nsw i32 %mul17.21, 72
  %add19.21 = or i32 %add18.21, 5
  %idxprom20.21 = zext i32 %add19.21 to i64
  %arrayidx21.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.21
  store i32 %572, i32* %arrayidx21.21, align 4
  %arrayidx22.21 = getelementptr inbounds i32, i32* %reversed, i64 2
  %574 = load i32, i32* %arrayidx22.21, align 4
  %idxprom23.21 = sext i32 %574 to i64
  %arrayidx24.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.21
  %575 = load i32, i32* %arrayidx24.21, align 4
  %576 = trunc i64 %indvars.iv.next5.20 to i32
  %mul25.21 = and i32 %576, 2147483640
  %add26.21 = add nuw nsw i32 %mul25.21, 144
  %add27.21 = or i32 %add26.21, 5
  %idxprom28.21 = zext i32 %add27.21 to i64
  %arrayidx29.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.21
  store i32 %575, i32* %arrayidx29.21, align 4
  %arrayidx30.21 = getelementptr inbounds i32, i32* %reversed, i64 3
  %577 = load i32, i32* %arrayidx30.21, align 4
  %idxprom31.21 = sext i32 %577 to i64
  %arrayidx32.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.21
  %578 = load i32, i32* %arrayidx32.21, align 4
  %579 = trunc i64 %indvars.iv.next5.20 to i32
  %mul33.21 = and i32 %579, 2147483640
  %add34.21 = add nuw nsw i32 %mul33.21, 216
  %add35.21 = or i32 %add34.21, 5
  %idxprom36.21 = zext i32 %add35.21 to i64
  %arrayidx37.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.21
  store i32 %578, i32* %arrayidx37.21, align 4
  %arrayidx38.21 = getelementptr inbounds i32, i32* %reversed, i64 4
  %580 = load i32, i32* %arrayidx38.21, align 4
  %idxprom39.21 = sext i32 %580 to i64
  %arrayidx40.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.21
  %581 = load i32, i32* %arrayidx40.21, align 4
  %582 = trunc i64 %indvars.iv.next5.20 to i32
  %mul41.21 = and i32 %582, 2147483640
  %add42.21 = add nuw nsw i32 %mul41.21, 288
  %add43.21 = or i32 %add42.21, 5
  %idxprom44.21 = zext i32 %add43.21 to i64
  %arrayidx45.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.21
  store i32 %581, i32* %arrayidx45.21, align 4
  %arrayidx46.21 = getelementptr inbounds i32, i32* %reversed, i64 5
  %583 = load i32, i32* %arrayidx46.21, align 4
  %idxprom47.21 = sext i32 %583 to i64
  %arrayidx48.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.21
  %584 = load i32, i32* %arrayidx48.21, align 4
  %585 = trunc i64 %indvars.iv.next5.20 to i32
  %mul49.21 = and i32 %585, 2147483640
  %add50.21 = add nuw nsw i32 %mul49.21, 360
  %add51.21 = or i32 %add50.21, 5
  %idxprom52.21 = zext i32 %add51.21 to i64
  %arrayidx53.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.21
  store i32 %584, i32* %arrayidx53.21, align 4
  %arrayidx54.21 = getelementptr inbounds i32, i32* %reversed, i64 6
  %586 = load i32, i32* %arrayidx54.21, align 4
  %idxprom55.21 = sext i32 %586 to i64
  %arrayidx56.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.21
  %587 = load i32, i32* %arrayidx56.21, align 4
  %588 = trunc i64 %indvars.iv.next5.20 to i32
  %mul57.21 = and i32 %588, 2147483640
  %add58.21 = add nuw nsw i32 %mul57.21, 432
  %add59.21 = or i32 %add58.21, 5
  %idxprom60.21 = zext i32 %add59.21 to i64
  %arrayidx61.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.21
  store i32 %587, i32* %arrayidx61.21, align 4
  %arrayidx62.21 = getelementptr inbounds i32, i32* %reversed, i64 7
  %589 = load i32, i32* %arrayidx62.21, align 4
  %idxprom63.21 = sext i32 %589 to i64
  %arrayidx64.21 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.21
  %590 = load i32, i32* %arrayidx64.21, align 4
  %add66.21 = add nuw nsw i32 %568, 504
  %add67.21 = or i32 %add66.21, 5
  %idxprom68.21 = zext i32 %add67.21 to i64
  %arrayidx69.21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.21
  store i32 %590, i32* %arrayidx69.21, align 4
  %indvars.iv.next5.21 = add nuw nsw i64 %indvars.iv.next5.20, 1
  br label %for.body3.22

for.body3.22:                                     ; preds = %for.body3.22, %for.end.21
  %indvars.iv.22 = phi i64 [ 0, %for.end.21 ], [ %indvars.iv.next.22, %for.body3.22 ]
  %591 = shl nsw i64 %indvars.iv.next5.21, 3
  %592 = add nuw nsw i64 %591, %indvars.iv.22
  %arrayidx.22 = getelementptr inbounds i32, i32* %DATA_x, i64 %592
  %593 = load i32, i32* %arrayidx.22, align 4
  %arrayidx5.22 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.22
  store i32 %593, i32* %arrayidx5.22, align 4
  %indvars.iv.next.22 = add nuw nsw i64 %indvars.iv.22, 1
  %exitcond.22 = icmp ne i64 %indvars.iv.next.22, 8
  br i1 %exitcond.22, label %for.body3.22, label %for.end.22, !llvm.loop !21

for.end.22:                                       ; preds = %for.body3.22
  %594 = trunc i64 %indvars.iv.next5.21 to i32
  %595 = and i32 %594, 2147483640
  %596 = load i32, i32* %reversed, align 4
  %idxprom7.22 = sext i32 %596 to i64
  %arrayidx8.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.22
  %597 = load i32, i32* %arrayidx8.22, align 4
  %arrayidx13.22 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.21
  store i32 %597, i32* %arrayidx13.22, align 4
  %arrayidx14.22 = getelementptr inbounds i32, i32* %reversed, i64 1
  %598 = load i32, i32* %arrayidx14.22, align 4
  %idxprom15.22 = sext i32 %598 to i64
  %arrayidx16.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.22
  %599 = load i32, i32* %arrayidx16.22, align 4
  %600 = trunc i64 %indvars.iv.next5.21 to i32
  %mul17.22 = and i32 %600, 2147483640
  %add18.22 = add nuw nsw i32 %mul17.22, 72
  %add19.22 = or i32 %add18.22, 6
  %idxprom20.22 = zext i32 %add19.22 to i64
  %arrayidx21.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.22
  store i32 %599, i32* %arrayidx21.22, align 4
  %arrayidx22.22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %601 = load i32, i32* %arrayidx22.22, align 4
  %idxprom23.22 = sext i32 %601 to i64
  %arrayidx24.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.22
  %602 = load i32, i32* %arrayidx24.22, align 4
  %603 = trunc i64 %indvars.iv.next5.21 to i32
  %mul25.22 = and i32 %603, 2147483640
  %add26.22 = add nuw nsw i32 %mul25.22, 144
  %add27.22 = or i32 %add26.22, 6
  %idxprom28.22 = zext i32 %add27.22 to i64
  %arrayidx29.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.22
  store i32 %602, i32* %arrayidx29.22, align 4
  %arrayidx30.22 = getelementptr inbounds i32, i32* %reversed, i64 3
  %604 = load i32, i32* %arrayidx30.22, align 4
  %idxprom31.22 = sext i32 %604 to i64
  %arrayidx32.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.22
  %605 = load i32, i32* %arrayidx32.22, align 4
  %606 = trunc i64 %indvars.iv.next5.21 to i32
  %mul33.22 = and i32 %606, 2147483640
  %add34.22 = add nuw nsw i32 %mul33.22, 216
  %add35.22 = or i32 %add34.22, 6
  %idxprom36.22 = zext i32 %add35.22 to i64
  %arrayidx37.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.22
  store i32 %605, i32* %arrayidx37.22, align 4
  %arrayidx38.22 = getelementptr inbounds i32, i32* %reversed, i64 4
  %607 = load i32, i32* %arrayidx38.22, align 4
  %idxprom39.22 = sext i32 %607 to i64
  %arrayidx40.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.22
  %608 = load i32, i32* %arrayidx40.22, align 4
  %609 = trunc i64 %indvars.iv.next5.21 to i32
  %mul41.22 = and i32 %609, 2147483640
  %add42.22 = add nuw nsw i32 %mul41.22, 288
  %add43.22 = or i32 %add42.22, 6
  %idxprom44.22 = zext i32 %add43.22 to i64
  %arrayidx45.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.22
  store i32 %608, i32* %arrayidx45.22, align 4
  %arrayidx46.22 = getelementptr inbounds i32, i32* %reversed, i64 5
  %610 = load i32, i32* %arrayidx46.22, align 4
  %idxprom47.22 = sext i32 %610 to i64
  %arrayidx48.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.22
  %611 = load i32, i32* %arrayidx48.22, align 4
  %612 = trunc i64 %indvars.iv.next5.21 to i32
  %mul49.22 = and i32 %612, 2147483640
  %add50.22 = add nuw nsw i32 %mul49.22, 360
  %add51.22 = or i32 %add50.22, 6
  %idxprom52.22 = zext i32 %add51.22 to i64
  %arrayidx53.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.22
  store i32 %611, i32* %arrayidx53.22, align 4
  %arrayidx54.22 = getelementptr inbounds i32, i32* %reversed, i64 6
  %613 = load i32, i32* %arrayidx54.22, align 4
  %idxprom55.22 = sext i32 %613 to i64
  %arrayidx56.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.22
  %614 = load i32, i32* %arrayidx56.22, align 4
  %615 = trunc i64 %indvars.iv.next5.21 to i32
  %mul57.22 = and i32 %615, 2147483640
  %add58.22 = add nuw nsw i32 %mul57.22, 432
  %add59.22 = or i32 %add58.22, 6
  %idxprom60.22 = zext i32 %add59.22 to i64
  %arrayidx61.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.22
  store i32 %614, i32* %arrayidx61.22, align 4
  %arrayidx62.22 = getelementptr inbounds i32, i32* %reversed, i64 7
  %616 = load i32, i32* %arrayidx62.22, align 4
  %idxprom63.22 = sext i32 %616 to i64
  %arrayidx64.22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.22
  %617 = load i32, i32* %arrayidx64.22, align 4
  %add66.22 = add nuw nsw i32 %595, 504
  %add67.22 = or i32 %add66.22, 6
  %idxprom68.22 = zext i32 %add67.22 to i64
  %arrayidx69.22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.22
  store i32 %617, i32* %arrayidx69.22, align 4
  %indvars.iv.next5.22 = add nuw nsw i64 %indvars.iv.next5.21, 1
  br label %for.body3.23

for.body3.23:                                     ; preds = %for.body3.23, %for.end.22
  %indvars.iv.23 = phi i64 [ 0, %for.end.22 ], [ %indvars.iv.next.23, %for.body3.23 ]
  %618 = shl nsw i64 %indvars.iv.next5.22, 3
  %619 = add nuw nsw i64 %618, %indvars.iv.23
  %arrayidx.23 = getelementptr inbounds i32, i32* %DATA_x, i64 %619
  %620 = load i32, i32* %arrayidx.23, align 4
  %arrayidx5.23 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.23
  store i32 %620, i32* %arrayidx5.23, align 4
  %indvars.iv.next.23 = add nuw nsw i64 %indvars.iv.23, 1
  %exitcond.23 = icmp ne i64 %indvars.iv.next.23, 8
  br i1 %exitcond.23, label %for.body3.23, label %for.end.23, !llvm.loop !21

for.end.23:                                       ; preds = %for.body3.23
  %621 = trunc i64 %indvars.iv.next5.22 to i32
  %622 = and i32 %621, 2147483640
  %623 = load i32, i32* %reversed, align 4
  %idxprom7.23 = sext i32 %623 to i64
  %arrayidx8.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.23
  %624 = load i32, i32* %arrayidx8.23, align 4
  %arrayidx13.23 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.22
  store i32 %624, i32* %arrayidx13.23, align 4
  %arrayidx14.23 = getelementptr inbounds i32, i32* %reversed, i64 1
  %625 = load i32, i32* %arrayidx14.23, align 4
  %idxprom15.23 = sext i32 %625 to i64
  %arrayidx16.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.23
  %626 = load i32, i32* %arrayidx16.23, align 4
  %627 = trunc i64 %indvars.iv.next5.22 to i32
  %mul17.23 = and i32 %627, 2147483640
  %add18.23 = add nuw nsw i32 %mul17.23, 72
  %add19.23 = or i32 %add18.23, 7
  %idxprom20.23 = zext i32 %add19.23 to i64
  %arrayidx21.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.23
  store i32 %626, i32* %arrayidx21.23, align 4
  %arrayidx22.23 = getelementptr inbounds i32, i32* %reversed, i64 2
  %628 = load i32, i32* %arrayidx22.23, align 4
  %idxprom23.23 = sext i32 %628 to i64
  %arrayidx24.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.23
  %629 = load i32, i32* %arrayidx24.23, align 4
  %630 = trunc i64 %indvars.iv.next5.22 to i32
  %mul25.23 = and i32 %630, 2147483640
  %add26.23 = add nuw nsw i32 %mul25.23, 144
  %add27.23 = or i32 %add26.23, 7
  %idxprom28.23 = zext i32 %add27.23 to i64
  %arrayidx29.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.23
  store i32 %629, i32* %arrayidx29.23, align 4
  %arrayidx30.23 = getelementptr inbounds i32, i32* %reversed, i64 3
  %631 = load i32, i32* %arrayidx30.23, align 4
  %idxprom31.23 = sext i32 %631 to i64
  %arrayidx32.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.23
  %632 = load i32, i32* %arrayidx32.23, align 4
  %633 = trunc i64 %indvars.iv.next5.22 to i32
  %mul33.23 = and i32 %633, 2147483640
  %add34.23 = add nuw nsw i32 %mul33.23, 216
  %add35.23 = or i32 %add34.23, 7
  %idxprom36.23 = zext i32 %add35.23 to i64
  %arrayidx37.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.23
  store i32 %632, i32* %arrayidx37.23, align 4
  %arrayidx38.23 = getelementptr inbounds i32, i32* %reversed, i64 4
  %634 = load i32, i32* %arrayidx38.23, align 4
  %idxprom39.23 = sext i32 %634 to i64
  %arrayidx40.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.23
  %635 = load i32, i32* %arrayidx40.23, align 4
  %636 = trunc i64 %indvars.iv.next5.22 to i32
  %mul41.23 = and i32 %636, 2147483640
  %add42.23 = add nuw nsw i32 %mul41.23, 288
  %add43.23 = or i32 %add42.23, 7
  %idxprom44.23 = zext i32 %add43.23 to i64
  %arrayidx45.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.23
  store i32 %635, i32* %arrayidx45.23, align 4
  %arrayidx46.23 = getelementptr inbounds i32, i32* %reversed, i64 5
  %637 = load i32, i32* %arrayidx46.23, align 4
  %idxprom47.23 = sext i32 %637 to i64
  %arrayidx48.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.23
  %638 = load i32, i32* %arrayidx48.23, align 4
  %639 = trunc i64 %indvars.iv.next5.22 to i32
  %mul49.23 = and i32 %639, 2147483640
  %add50.23 = add nuw nsw i32 %mul49.23, 360
  %add51.23 = or i32 %add50.23, 7
  %idxprom52.23 = zext i32 %add51.23 to i64
  %arrayidx53.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.23
  store i32 %638, i32* %arrayidx53.23, align 4
  %arrayidx54.23 = getelementptr inbounds i32, i32* %reversed, i64 6
  %640 = load i32, i32* %arrayidx54.23, align 4
  %idxprom55.23 = sext i32 %640 to i64
  %arrayidx56.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.23
  %641 = load i32, i32* %arrayidx56.23, align 4
  %642 = trunc i64 %indvars.iv.next5.22 to i32
  %mul57.23 = and i32 %642, 2147483640
  %add58.23 = add nuw nsw i32 %mul57.23, 432
  %add59.23 = or i32 %add58.23, 7
  %idxprom60.23 = zext i32 %add59.23 to i64
  %arrayidx61.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.23
  store i32 %641, i32* %arrayidx61.23, align 4
  %arrayidx62.23 = getelementptr inbounds i32, i32* %reversed, i64 7
  %643 = load i32, i32* %arrayidx62.23, align 4
  %idxprom63.23 = sext i32 %643 to i64
  %arrayidx64.23 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.23
  %644 = load i32, i32* %arrayidx64.23, align 4
  %add66.23 = add nuw nsw i32 %622, 504
  %add67.23 = or i32 %add66.23, 7
  %idxprom68.23 = zext i32 %add67.23 to i64
  %arrayidx69.23 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.23
  store i32 %644, i32* %arrayidx69.23, align 4
  %indvars.iv.next5.23 = add nuw nsw i64 %indvars.iv.next5.22, 1
  br label %for.body3.24

for.body3.24:                                     ; preds = %for.body3.24, %for.end.23
  %indvars.iv.24 = phi i64 [ 0, %for.end.23 ], [ %indvars.iv.next.24, %for.body3.24 ]
  %645 = shl nsw i64 %indvars.iv.next5.23, 3
  %646 = add nuw nsw i64 %645, %indvars.iv.24
  %arrayidx.24 = getelementptr inbounds i32, i32* %DATA_x, i64 %646
  %647 = load i32, i32* %arrayidx.24, align 4
  %arrayidx5.24 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.24
  store i32 %647, i32* %arrayidx5.24, align 4
  %indvars.iv.next.24 = add nuw nsw i64 %indvars.iv.24, 1
  %exitcond.24 = icmp ne i64 %indvars.iv.next.24, 8
  br i1 %exitcond.24, label %for.body3.24, label %for.end.24, !llvm.loop !21

for.end.24:                                       ; preds = %for.body3.24
  %648 = trunc i64 %indvars.iv.next5.23 to i32
  %649 = load i32, i32* %reversed, align 4
  %idxprom7.24 = sext i32 %649 to i64
  %arrayidx8.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.24
  %650 = load i32, i32* %arrayidx8.24, align 4
  %arrayidx13.24 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.23
  store i32 %650, i32* %arrayidx13.24, align 4
  %arrayidx14.24 = getelementptr inbounds i32, i32* %reversed, i64 1
  %651 = load i32, i32* %arrayidx14.24, align 4
  %idxprom15.24 = sext i32 %651 to i64
  %arrayidx16.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.24
  %652 = load i32, i32* %arrayidx16.24, align 4
  %653 = trunc i64 %indvars.iv.next5.23 to i32
  %add18.24 = add nuw nsw i32 %653, 72
  %idxprom20.24 = zext i32 %add18.24 to i64
  %arrayidx21.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.24
  store i32 %652, i32* %arrayidx21.24, align 4
  %arrayidx22.24 = getelementptr inbounds i32, i32* %reversed, i64 2
  %654 = load i32, i32* %arrayidx22.24, align 4
  %idxprom23.24 = sext i32 %654 to i64
  %arrayidx24.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.24
  %655 = load i32, i32* %arrayidx24.24, align 4
  %656 = trunc i64 %indvars.iv.next5.23 to i32
  %add26.24 = add nuw nsw i32 %656, 144
  %idxprom28.24 = zext i32 %add26.24 to i64
  %arrayidx29.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.24
  store i32 %655, i32* %arrayidx29.24, align 4
  %arrayidx30.24 = getelementptr inbounds i32, i32* %reversed, i64 3
  %657 = load i32, i32* %arrayidx30.24, align 4
  %idxprom31.24 = sext i32 %657 to i64
  %arrayidx32.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.24
  %658 = load i32, i32* %arrayidx32.24, align 4
  %659 = trunc i64 %indvars.iv.next5.23 to i32
  %add34.24 = add nuw nsw i32 %659, 216
  %idxprom36.24 = zext i32 %add34.24 to i64
  %arrayidx37.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.24
  store i32 %658, i32* %arrayidx37.24, align 4
  %arrayidx38.24 = getelementptr inbounds i32, i32* %reversed, i64 4
  %660 = load i32, i32* %arrayidx38.24, align 4
  %idxprom39.24 = sext i32 %660 to i64
  %arrayidx40.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.24
  %661 = load i32, i32* %arrayidx40.24, align 4
  %662 = trunc i64 %indvars.iv.next5.23 to i32
  %add42.24 = add nuw nsw i32 %662, 288
  %idxprom44.24 = zext i32 %add42.24 to i64
  %arrayidx45.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.24
  store i32 %661, i32* %arrayidx45.24, align 4
  %arrayidx46.24 = getelementptr inbounds i32, i32* %reversed, i64 5
  %663 = load i32, i32* %arrayidx46.24, align 4
  %idxprom47.24 = sext i32 %663 to i64
  %arrayidx48.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.24
  %664 = load i32, i32* %arrayidx48.24, align 4
  %665 = trunc i64 %indvars.iv.next5.23 to i32
  %add50.24 = add nuw nsw i32 %665, 360
  %idxprom52.24 = zext i32 %add50.24 to i64
  %arrayidx53.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.24
  store i32 %664, i32* %arrayidx53.24, align 4
  %arrayidx54.24 = getelementptr inbounds i32, i32* %reversed, i64 6
  %666 = load i32, i32* %arrayidx54.24, align 4
  %idxprom55.24 = sext i32 %666 to i64
  %arrayidx56.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.24
  %667 = load i32, i32* %arrayidx56.24, align 4
  %668 = trunc i64 %indvars.iv.next5.23 to i32
  %add58.24 = add nuw nsw i32 %668, 432
  %idxprom60.24 = zext i32 %add58.24 to i64
  %arrayidx61.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.24
  store i32 %667, i32* %arrayidx61.24, align 4
  %arrayidx62.24 = getelementptr inbounds i32, i32* %reversed, i64 7
  %669 = load i32, i32* %arrayidx62.24, align 4
  %idxprom63.24 = sext i32 %669 to i64
  %arrayidx64.24 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.24
  %670 = load i32, i32* %arrayidx64.24, align 4
  %add66.24 = add nuw nsw i32 %648, 504
  %idxprom68.24 = zext i32 %add66.24 to i64
  %arrayidx69.24 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.24
  store i32 %670, i32* %arrayidx69.24, align 4
  %indvars.iv.next5.24 = add nuw nsw i64 %indvars.iv.next5.23, 1
  br label %for.body3.25

for.body3.25:                                     ; preds = %for.body3.25, %for.end.24
  %indvars.iv.25 = phi i64 [ 0, %for.end.24 ], [ %indvars.iv.next.25, %for.body3.25 ]
  %671 = shl nsw i64 %indvars.iv.next5.24, 3
  %672 = add nuw nsw i64 %671, %indvars.iv.25
  %arrayidx.25 = getelementptr inbounds i32, i32* %DATA_x, i64 %672
  %673 = load i32, i32* %arrayidx.25, align 4
  %arrayidx5.25 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.25
  store i32 %673, i32* %arrayidx5.25, align 4
  %indvars.iv.next.25 = add nuw nsw i64 %indvars.iv.25, 1
  %exitcond.25 = icmp ne i64 %indvars.iv.next.25, 8
  br i1 %exitcond.25, label %for.body3.25, label %for.end.25, !llvm.loop !21

for.end.25:                                       ; preds = %for.body3.25
  %674 = trunc i64 %indvars.iv.next5.24 to i32
  %675 = and i32 %674, 2147483640
  %676 = load i32, i32* %reversed, align 4
  %idxprom7.25 = sext i32 %676 to i64
  %arrayidx8.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.25
  %677 = load i32, i32* %arrayidx8.25, align 4
  %arrayidx13.25 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.24
  store i32 %677, i32* %arrayidx13.25, align 4
  %arrayidx14.25 = getelementptr inbounds i32, i32* %reversed, i64 1
  %678 = load i32, i32* %arrayidx14.25, align 4
  %idxprom15.25 = sext i32 %678 to i64
  %arrayidx16.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.25
  %679 = load i32, i32* %arrayidx16.25, align 4
  %680 = trunc i64 %indvars.iv.next5.24 to i32
  %mul17.25 = and i32 %680, 2147483640
  %add18.25 = add nuw nsw i32 %mul17.25, 72
  %add19.25 = or i32 %add18.25, 1
  %idxprom20.25 = zext i32 %add19.25 to i64
  %arrayidx21.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.25
  store i32 %679, i32* %arrayidx21.25, align 4
  %arrayidx22.25 = getelementptr inbounds i32, i32* %reversed, i64 2
  %681 = load i32, i32* %arrayidx22.25, align 4
  %idxprom23.25 = sext i32 %681 to i64
  %arrayidx24.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.25
  %682 = load i32, i32* %arrayidx24.25, align 4
  %683 = trunc i64 %indvars.iv.next5.24 to i32
  %mul25.25 = and i32 %683, 2147483640
  %add26.25 = add nuw nsw i32 %mul25.25, 144
  %add27.25 = or i32 %add26.25, 1
  %idxprom28.25 = zext i32 %add27.25 to i64
  %arrayidx29.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.25
  store i32 %682, i32* %arrayidx29.25, align 4
  %arrayidx30.25 = getelementptr inbounds i32, i32* %reversed, i64 3
  %684 = load i32, i32* %arrayidx30.25, align 4
  %idxprom31.25 = sext i32 %684 to i64
  %arrayidx32.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.25
  %685 = load i32, i32* %arrayidx32.25, align 4
  %686 = trunc i64 %indvars.iv.next5.24 to i32
  %mul33.25 = and i32 %686, 2147483640
  %add34.25 = add nuw nsw i32 %mul33.25, 216
  %add35.25 = or i32 %add34.25, 1
  %idxprom36.25 = zext i32 %add35.25 to i64
  %arrayidx37.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.25
  store i32 %685, i32* %arrayidx37.25, align 4
  %arrayidx38.25 = getelementptr inbounds i32, i32* %reversed, i64 4
  %687 = load i32, i32* %arrayidx38.25, align 4
  %idxprom39.25 = sext i32 %687 to i64
  %arrayidx40.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.25
  %688 = load i32, i32* %arrayidx40.25, align 4
  %689 = trunc i64 %indvars.iv.next5.24 to i32
  %mul41.25 = and i32 %689, 2147483640
  %add42.25 = add nuw nsw i32 %mul41.25, 288
  %add43.25 = or i32 %add42.25, 1
  %idxprom44.25 = zext i32 %add43.25 to i64
  %arrayidx45.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.25
  store i32 %688, i32* %arrayidx45.25, align 4
  %arrayidx46.25 = getelementptr inbounds i32, i32* %reversed, i64 5
  %690 = load i32, i32* %arrayidx46.25, align 4
  %idxprom47.25 = sext i32 %690 to i64
  %arrayidx48.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.25
  %691 = load i32, i32* %arrayidx48.25, align 4
  %692 = trunc i64 %indvars.iv.next5.24 to i32
  %mul49.25 = and i32 %692, 2147483640
  %add50.25 = add nuw nsw i32 %mul49.25, 360
  %add51.25 = or i32 %add50.25, 1
  %idxprom52.25 = zext i32 %add51.25 to i64
  %arrayidx53.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.25
  store i32 %691, i32* %arrayidx53.25, align 4
  %arrayidx54.25 = getelementptr inbounds i32, i32* %reversed, i64 6
  %693 = load i32, i32* %arrayidx54.25, align 4
  %idxprom55.25 = sext i32 %693 to i64
  %arrayidx56.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.25
  %694 = load i32, i32* %arrayidx56.25, align 4
  %695 = trunc i64 %indvars.iv.next5.24 to i32
  %mul57.25 = and i32 %695, 2147483640
  %add58.25 = add nuw nsw i32 %mul57.25, 432
  %add59.25 = or i32 %add58.25, 1
  %idxprom60.25 = zext i32 %add59.25 to i64
  %arrayidx61.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.25
  store i32 %694, i32* %arrayidx61.25, align 4
  %arrayidx62.25 = getelementptr inbounds i32, i32* %reversed, i64 7
  %696 = load i32, i32* %arrayidx62.25, align 4
  %idxprom63.25 = sext i32 %696 to i64
  %arrayidx64.25 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.25
  %697 = load i32, i32* %arrayidx64.25, align 4
  %add66.25 = add nuw nsw i32 %675, 504
  %add67.25 = or i32 %add66.25, 1
  %idxprom68.25 = zext i32 %add67.25 to i64
  %arrayidx69.25 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.25
  store i32 %697, i32* %arrayidx69.25, align 4
  %indvars.iv.next5.25 = add nuw nsw i64 %indvars.iv.next5.24, 1
  br label %for.body3.26

for.body3.26:                                     ; preds = %for.body3.26, %for.end.25
  %indvars.iv.26 = phi i64 [ 0, %for.end.25 ], [ %indvars.iv.next.26, %for.body3.26 ]
  %698 = shl nsw i64 %indvars.iv.next5.25, 3
  %699 = add nuw nsw i64 %698, %indvars.iv.26
  %arrayidx.26 = getelementptr inbounds i32, i32* %DATA_x, i64 %699
  %700 = load i32, i32* %arrayidx.26, align 4
  %arrayidx5.26 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.26
  store i32 %700, i32* %arrayidx5.26, align 4
  %indvars.iv.next.26 = add nuw nsw i64 %indvars.iv.26, 1
  %exitcond.26 = icmp ne i64 %indvars.iv.next.26, 8
  br i1 %exitcond.26, label %for.body3.26, label %for.end.26, !llvm.loop !21

for.end.26:                                       ; preds = %for.body3.26
  %701 = trunc i64 %indvars.iv.next5.25 to i32
  %702 = and i32 %701, 2147483640
  %703 = load i32, i32* %reversed, align 4
  %idxprom7.26 = sext i32 %703 to i64
  %arrayidx8.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.26
  %704 = load i32, i32* %arrayidx8.26, align 4
  %arrayidx13.26 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.25
  store i32 %704, i32* %arrayidx13.26, align 4
  %arrayidx14.26 = getelementptr inbounds i32, i32* %reversed, i64 1
  %705 = load i32, i32* %arrayidx14.26, align 4
  %idxprom15.26 = sext i32 %705 to i64
  %arrayidx16.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.26
  %706 = load i32, i32* %arrayidx16.26, align 4
  %707 = trunc i64 %indvars.iv.next5.25 to i32
  %mul17.26 = and i32 %707, 2147483640
  %add18.26 = add nuw nsw i32 %mul17.26, 72
  %add19.26 = or i32 %add18.26, 2
  %idxprom20.26 = zext i32 %add19.26 to i64
  %arrayidx21.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.26
  store i32 %706, i32* %arrayidx21.26, align 4
  %arrayidx22.26 = getelementptr inbounds i32, i32* %reversed, i64 2
  %708 = load i32, i32* %arrayidx22.26, align 4
  %idxprom23.26 = sext i32 %708 to i64
  %arrayidx24.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.26
  %709 = load i32, i32* %arrayidx24.26, align 4
  %710 = trunc i64 %indvars.iv.next5.25 to i32
  %mul25.26 = and i32 %710, 2147483640
  %add26.26 = add nuw nsw i32 %mul25.26, 144
  %add27.26 = or i32 %add26.26, 2
  %idxprom28.26 = zext i32 %add27.26 to i64
  %arrayidx29.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.26
  store i32 %709, i32* %arrayidx29.26, align 4
  %arrayidx30.26 = getelementptr inbounds i32, i32* %reversed, i64 3
  %711 = load i32, i32* %arrayidx30.26, align 4
  %idxprom31.26 = sext i32 %711 to i64
  %arrayidx32.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.26
  %712 = load i32, i32* %arrayidx32.26, align 4
  %713 = trunc i64 %indvars.iv.next5.25 to i32
  %mul33.26 = and i32 %713, 2147483640
  %add34.26 = add nuw nsw i32 %mul33.26, 216
  %add35.26 = or i32 %add34.26, 2
  %idxprom36.26 = zext i32 %add35.26 to i64
  %arrayidx37.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.26
  store i32 %712, i32* %arrayidx37.26, align 4
  %arrayidx38.26 = getelementptr inbounds i32, i32* %reversed, i64 4
  %714 = load i32, i32* %arrayidx38.26, align 4
  %idxprom39.26 = sext i32 %714 to i64
  %arrayidx40.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.26
  %715 = load i32, i32* %arrayidx40.26, align 4
  %716 = trunc i64 %indvars.iv.next5.25 to i32
  %mul41.26 = and i32 %716, 2147483640
  %add42.26 = add nuw nsw i32 %mul41.26, 288
  %add43.26 = or i32 %add42.26, 2
  %idxprom44.26 = zext i32 %add43.26 to i64
  %arrayidx45.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.26
  store i32 %715, i32* %arrayidx45.26, align 4
  %arrayidx46.26 = getelementptr inbounds i32, i32* %reversed, i64 5
  %717 = load i32, i32* %arrayidx46.26, align 4
  %idxprom47.26 = sext i32 %717 to i64
  %arrayidx48.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.26
  %718 = load i32, i32* %arrayidx48.26, align 4
  %719 = trunc i64 %indvars.iv.next5.25 to i32
  %mul49.26 = and i32 %719, 2147483640
  %add50.26 = add nuw nsw i32 %mul49.26, 360
  %add51.26 = or i32 %add50.26, 2
  %idxprom52.26 = zext i32 %add51.26 to i64
  %arrayidx53.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.26
  store i32 %718, i32* %arrayidx53.26, align 4
  %arrayidx54.26 = getelementptr inbounds i32, i32* %reversed, i64 6
  %720 = load i32, i32* %arrayidx54.26, align 4
  %idxprom55.26 = sext i32 %720 to i64
  %arrayidx56.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.26
  %721 = load i32, i32* %arrayidx56.26, align 4
  %722 = trunc i64 %indvars.iv.next5.25 to i32
  %mul57.26 = and i32 %722, 2147483640
  %add58.26 = add nuw nsw i32 %mul57.26, 432
  %add59.26 = or i32 %add58.26, 2
  %idxprom60.26 = zext i32 %add59.26 to i64
  %arrayidx61.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.26
  store i32 %721, i32* %arrayidx61.26, align 4
  %arrayidx62.26 = getelementptr inbounds i32, i32* %reversed, i64 7
  %723 = load i32, i32* %arrayidx62.26, align 4
  %idxprom63.26 = sext i32 %723 to i64
  %arrayidx64.26 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.26
  %724 = load i32, i32* %arrayidx64.26, align 4
  %add66.26 = add nuw nsw i32 %702, 504
  %add67.26 = or i32 %add66.26, 2
  %idxprom68.26 = zext i32 %add67.26 to i64
  %arrayidx69.26 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.26
  store i32 %724, i32* %arrayidx69.26, align 4
  %indvars.iv.next5.26 = add nuw nsw i64 %indvars.iv.next5.25, 1
  br label %for.body3.27

for.body3.27:                                     ; preds = %for.body3.27, %for.end.26
  %indvars.iv.27 = phi i64 [ 0, %for.end.26 ], [ %indvars.iv.next.27, %for.body3.27 ]
  %725 = shl nsw i64 %indvars.iv.next5.26, 3
  %726 = add nuw nsw i64 %725, %indvars.iv.27
  %arrayidx.27 = getelementptr inbounds i32, i32* %DATA_x, i64 %726
  %727 = load i32, i32* %arrayidx.27, align 4
  %arrayidx5.27 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.27
  store i32 %727, i32* %arrayidx5.27, align 4
  %indvars.iv.next.27 = add nuw nsw i64 %indvars.iv.27, 1
  %exitcond.27 = icmp ne i64 %indvars.iv.next.27, 8
  br i1 %exitcond.27, label %for.body3.27, label %for.end.27, !llvm.loop !21

for.end.27:                                       ; preds = %for.body3.27
  %728 = trunc i64 %indvars.iv.next5.26 to i32
  %729 = and i32 %728, 2147483640
  %730 = load i32, i32* %reversed, align 4
  %idxprom7.27 = sext i32 %730 to i64
  %arrayidx8.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.27
  %731 = load i32, i32* %arrayidx8.27, align 4
  %arrayidx13.27 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.26
  store i32 %731, i32* %arrayidx13.27, align 4
  %arrayidx14.27 = getelementptr inbounds i32, i32* %reversed, i64 1
  %732 = load i32, i32* %arrayidx14.27, align 4
  %idxprom15.27 = sext i32 %732 to i64
  %arrayidx16.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.27
  %733 = load i32, i32* %arrayidx16.27, align 4
  %734 = trunc i64 %indvars.iv.next5.26 to i32
  %mul17.27 = and i32 %734, 2147483640
  %add18.27 = add nuw nsw i32 %mul17.27, 72
  %add19.27 = or i32 %add18.27, 3
  %idxprom20.27 = zext i32 %add19.27 to i64
  %arrayidx21.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.27
  store i32 %733, i32* %arrayidx21.27, align 4
  %arrayidx22.27 = getelementptr inbounds i32, i32* %reversed, i64 2
  %735 = load i32, i32* %arrayidx22.27, align 4
  %idxprom23.27 = sext i32 %735 to i64
  %arrayidx24.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.27
  %736 = load i32, i32* %arrayidx24.27, align 4
  %737 = trunc i64 %indvars.iv.next5.26 to i32
  %mul25.27 = and i32 %737, 2147483640
  %add26.27 = add nuw nsw i32 %mul25.27, 144
  %add27.27 = or i32 %add26.27, 3
  %idxprom28.27 = zext i32 %add27.27 to i64
  %arrayidx29.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.27
  store i32 %736, i32* %arrayidx29.27, align 4
  %arrayidx30.27 = getelementptr inbounds i32, i32* %reversed, i64 3
  %738 = load i32, i32* %arrayidx30.27, align 4
  %idxprom31.27 = sext i32 %738 to i64
  %arrayidx32.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.27
  %739 = load i32, i32* %arrayidx32.27, align 4
  %740 = trunc i64 %indvars.iv.next5.26 to i32
  %mul33.27 = and i32 %740, 2147483640
  %add34.27 = add nuw nsw i32 %mul33.27, 216
  %add35.27 = or i32 %add34.27, 3
  %idxprom36.27 = zext i32 %add35.27 to i64
  %arrayidx37.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.27
  store i32 %739, i32* %arrayidx37.27, align 4
  %arrayidx38.27 = getelementptr inbounds i32, i32* %reversed, i64 4
  %741 = load i32, i32* %arrayidx38.27, align 4
  %idxprom39.27 = sext i32 %741 to i64
  %arrayidx40.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.27
  %742 = load i32, i32* %arrayidx40.27, align 4
  %743 = trunc i64 %indvars.iv.next5.26 to i32
  %mul41.27 = and i32 %743, 2147483640
  %add42.27 = add nuw nsw i32 %mul41.27, 288
  %add43.27 = or i32 %add42.27, 3
  %idxprom44.27 = zext i32 %add43.27 to i64
  %arrayidx45.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.27
  store i32 %742, i32* %arrayidx45.27, align 4
  %arrayidx46.27 = getelementptr inbounds i32, i32* %reversed, i64 5
  %744 = load i32, i32* %arrayidx46.27, align 4
  %idxprom47.27 = sext i32 %744 to i64
  %arrayidx48.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.27
  %745 = load i32, i32* %arrayidx48.27, align 4
  %746 = trunc i64 %indvars.iv.next5.26 to i32
  %mul49.27 = and i32 %746, 2147483640
  %add50.27 = add nuw nsw i32 %mul49.27, 360
  %add51.27 = or i32 %add50.27, 3
  %idxprom52.27 = zext i32 %add51.27 to i64
  %arrayidx53.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.27
  store i32 %745, i32* %arrayidx53.27, align 4
  %arrayidx54.27 = getelementptr inbounds i32, i32* %reversed, i64 6
  %747 = load i32, i32* %arrayidx54.27, align 4
  %idxprom55.27 = sext i32 %747 to i64
  %arrayidx56.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.27
  %748 = load i32, i32* %arrayidx56.27, align 4
  %749 = trunc i64 %indvars.iv.next5.26 to i32
  %mul57.27 = and i32 %749, 2147483640
  %add58.27 = add nuw nsw i32 %mul57.27, 432
  %add59.27 = or i32 %add58.27, 3
  %idxprom60.27 = zext i32 %add59.27 to i64
  %arrayidx61.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.27
  store i32 %748, i32* %arrayidx61.27, align 4
  %arrayidx62.27 = getelementptr inbounds i32, i32* %reversed, i64 7
  %750 = load i32, i32* %arrayidx62.27, align 4
  %idxprom63.27 = sext i32 %750 to i64
  %arrayidx64.27 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.27
  %751 = load i32, i32* %arrayidx64.27, align 4
  %add66.27 = add nuw nsw i32 %729, 504
  %add67.27 = or i32 %add66.27, 3
  %idxprom68.27 = zext i32 %add67.27 to i64
  %arrayidx69.27 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.27
  store i32 %751, i32* %arrayidx69.27, align 4
  %indvars.iv.next5.27 = add nuw nsw i64 %indvars.iv.next5.26, 1
  br label %for.body3.28

for.body3.28:                                     ; preds = %for.body3.28, %for.end.27
  %indvars.iv.28 = phi i64 [ 0, %for.end.27 ], [ %indvars.iv.next.28, %for.body3.28 ]
  %752 = shl nsw i64 %indvars.iv.next5.27, 3
  %753 = add nuw nsw i64 %752, %indvars.iv.28
  %arrayidx.28 = getelementptr inbounds i32, i32* %DATA_x, i64 %753
  %754 = load i32, i32* %arrayidx.28, align 4
  %arrayidx5.28 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.28
  store i32 %754, i32* %arrayidx5.28, align 4
  %indvars.iv.next.28 = add nuw nsw i64 %indvars.iv.28, 1
  %exitcond.28 = icmp ne i64 %indvars.iv.next.28, 8
  br i1 %exitcond.28, label %for.body3.28, label %for.end.28, !llvm.loop !21

for.end.28:                                       ; preds = %for.body3.28
  %755 = trunc i64 %indvars.iv.next5.27 to i32
  %756 = and i32 %755, 2147483640
  %757 = load i32, i32* %reversed, align 4
  %idxprom7.28 = sext i32 %757 to i64
  %arrayidx8.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.28
  %758 = load i32, i32* %arrayidx8.28, align 4
  %arrayidx13.28 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.27
  store i32 %758, i32* %arrayidx13.28, align 4
  %arrayidx14.28 = getelementptr inbounds i32, i32* %reversed, i64 1
  %759 = load i32, i32* %arrayidx14.28, align 4
  %idxprom15.28 = sext i32 %759 to i64
  %arrayidx16.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.28
  %760 = load i32, i32* %arrayidx16.28, align 4
  %761 = trunc i64 %indvars.iv.next5.27 to i32
  %mul17.28 = and i32 %761, 2147483640
  %add18.28 = add nuw nsw i32 %mul17.28, 72
  %add19.28 = or i32 %add18.28, 4
  %idxprom20.28 = zext i32 %add19.28 to i64
  %arrayidx21.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.28
  store i32 %760, i32* %arrayidx21.28, align 4
  %arrayidx22.28 = getelementptr inbounds i32, i32* %reversed, i64 2
  %762 = load i32, i32* %arrayidx22.28, align 4
  %idxprom23.28 = sext i32 %762 to i64
  %arrayidx24.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.28
  %763 = load i32, i32* %arrayidx24.28, align 4
  %764 = trunc i64 %indvars.iv.next5.27 to i32
  %mul25.28 = and i32 %764, 2147483640
  %add26.28 = add nuw nsw i32 %mul25.28, 144
  %add27.28 = or i32 %add26.28, 4
  %idxprom28.28 = zext i32 %add27.28 to i64
  %arrayidx29.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.28
  store i32 %763, i32* %arrayidx29.28, align 4
  %arrayidx30.28 = getelementptr inbounds i32, i32* %reversed, i64 3
  %765 = load i32, i32* %arrayidx30.28, align 4
  %idxprom31.28 = sext i32 %765 to i64
  %arrayidx32.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.28
  %766 = load i32, i32* %arrayidx32.28, align 4
  %767 = trunc i64 %indvars.iv.next5.27 to i32
  %mul33.28 = and i32 %767, 2147483640
  %add34.28 = add nuw nsw i32 %mul33.28, 216
  %add35.28 = or i32 %add34.28, 4
  %idxprom36.28 = zext i32 %add35.28 to i64
  %arrayidx37.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.28
  store i32 %766, i32* %arrayidx37.28, align 4
  %arrayidx38.28 = getelementptr inbounds i32, i32* %reversed, i64 4
  %768 = load i32, i32* %arrayidx38.28, align 4
  %idxprom39.28 = sext i32 %768 to i64
  %arrayidx40.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.28
  %769 = load i32, i32* %arrayidx40.28, align 4
  %770 = trunc i64 %indvars.iv.next5.27 to i32
  %mul41.28 = and i32 %770, 2147483640
  %add42.28 = add nuw nsw i32 %mul41.28, 288
  %add43.28 = or i32 %add42.28, 4
  %idxprom44.28 = zext i32 %add43.28 to i64
  %arrayidx45.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.28
  store i32 %769, i32* %arrayidx45.28, align 4
  %arrayidx46.28 = getelementptr inbounds i32, i32* %reversed, i64 5
  %771 = load i32, i32* %arrayidx46.28, align 4
  %idxprom47.28 = sext i32 %771 to i64
  %arrayidx48.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.28
  %772 = load i32, i32* %arrayidx48.28, align 4
  %773 = trunc i64 %indvars.iv.next5.27 to i32
  %mul49.28 = and i32 %773, 2147483640
  %add50.28 = add nuw nsw i32 %mul49.28, 360
  %add51.28 = or i32 %add50.28, 4
  %idxprom52.28 = zext i32 %add51.28 to i64
  %arrayidx53.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.28
  store i32 %772, i32* %arrayidx53.28, align 4
  %arrayidx54.28 = getelementptr inbounds i32, i32* %reversed, i64 6
  %774 = load i32, i32* %arrayidx54.28, align 4
  %idxprom55.28 = sext i32 %774 to i64
  %arrayidx56.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.28
  %775 = load i32, i32* %arrayidx56.28, align 4
  %776 = trunc i64 %indvars.iv.next5.27 to i32
  %mul57.28 = and i32 %776, 2147483640
  %add58.28 = add nuw nsw i32 %mul57.28, 432
  %add59.28 = or i32 %add58.28, 4
  %idxprom60.28 = zext i32 %add59.28 to i64
  %arrayidx61.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.28
  store i32 %775, i32* %arrayidx61.28, align 4
  %arrayidx62.28 = getelementptr inbounds i32, i32* %reversed, i64 7
  %777 = load i32, i32* %arrayidx62.28, align 4
  %idxprom63.28 = sext i32 %777 to i64
  %arrayidx64.28 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.28
  %778 = load i32, i32* %arrayidx64.28, align 4
  %add66.28 = add nuw nsw i32 %756, 504
  %add67.28 = or i32 %add66.28, 4
  %idxprom68.28 = zext i32 %add67.28 to i64
  %arrayidx69.28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.28
  store i32 %778, i32* %arrayidx69.28, align 4
  %indvars.iv.next5.28 = add nuw nsw i64 %indvars.iv.next5.27, 1
  br label %for.body3.29

for.body3.29:                                     ; preds = %for.body3.29, %for.end.28
  %indvars.iv.29 = phi i64 [ 0, %for.end.28 ], [ %indvars.iv.next.29, %for.body3.29 ]
  %779 = shl nsw i64 %indvars.iv.next5.28, 3
  %780 = add nuw nsw i64 %779, %indvars.iv.29
  %arrayidx.29 = getelementptr inbounds i32, i32* %DATA_x, i64 %780
  %781 = load i32, i32* %arrayidx.29, align 4
  %arrayidx5.29 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.29
  store i32 %781, i32* %arrayidx5.29, align 4
  %indvars.iv.next.29 = add nuw nsw i64 %indvars.iv.29, 1
  %exitcond.29 = icmp ne i64 %indvars.iv.next.29, 8
  br i1 %exitcond.29, label %for.body3.29, label %for.end.29, !llvm.loop !21

for.end.29:                                       ; preds = %for.body3.29
  %782 = trunc i64 %indvars.iv.next5.28 to i32
  %783 = and i32 %782, 2147483640
  %784 = load i32, i32* %reversed, align 4
  %idxprom7.29 = sext i32 %784 to i64
  %arrayidx8.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.29
  %785 = load i32, i32* %arrayidx8.29, align 4
  %arrayidx13.29 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.28
  store i32 %785, i32* %arrayidx13.29, align 4
  %arrayidx14.29 = getelementptr inbounds i32, i32* %reversed, i64 1
  %786 = load i32, i32* %arrayidx14.29, align 4
  %idxprom15.29 = sext i32 %786 to i64
  %arrayidx16.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.29
  %787 = load i32, i32* %arrayidx16.29, align 4
  %788 = trunc i64 %indvars.iv.next5.28 to i32
  %mul17.29 = and i32 %788, 2147483640
  %add18.29 = add nuw nsw i32 %mul17.29, 72
  %add19.29 = or i32 %add18.29, 5
  %idxprom20.29 = zext i32 %add19.29 to i64
  %arrayidx21.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.29
  store i32 %787, i32* %arrayidx21.29, align 4
  %arrayidx22.29 = getelementptr inbounds i32, i32* %reversed, i64 2
  %789 = load i32, i32* %arrayidx22.29, align 4
  %idxprom23.29 = sext i32 %789 to i64
  %arrayidx24.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.29
  %790 = load i32, i32* %arrayidx24.29, align 4
  %791 = trunc i64 %indvars.iv.next5.28 to i32
  %mul25.29 = and i32 %791, 2147483640
  %add26.29 = add nuw nsw i32 %mul25.29, 144
  %add27.29 = or i32 %add26.29, 5
  %idxprom28.29 = zext i32 %add27.29 to i64
  %arrayidx29.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.29
  store i32 %790, i32* %arrayidx29.29, align 4
  %arrayidx30.29 = getelementptr inbounds i32, i32* %reversed, i64 3
  %792 = load i32, i32* %arrayidx30.29, align 4
  %idxprom31.29 = sext i32 %792 to i64
  %arrayidx32.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.29
  %793 = load i32, i32* %arrayidx32.29, align 4
  %794 = trunc i64 %indvars.iv.next5.28 to i32
  %mul33.29 = and i32 %794, 2147483640
  %add34.29 = add nuw nsw i32 %mul33.29, 216
  %add35.29 = or i32 %add34.29, 5
  %idxprom36.29 = zext i32 %add35.29 to i64
  %arrayidx37.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.29
  store i32 %793, i32* %arrayidx37.29, align 4
  %arrayidx38.29 = getelementptr inbounds i32, i32* %reversed, i64 4
  %795 = load i32, i32* %arrayidx38.29, align 4
  %idxprom39.29 = sext i32 %795 to i64
  %arrayidx40.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.29
  %796 = load i32, i32* %arrayidx40.29, align 4
  %797 = trunc i64 %indvars.iv.next5.28 to i32
  %mul41.29 = and i32 %797, 2147483640
  %add42.29 = add nuw nsw i32 %mul41.29, 288
  %add43.29 = or i32 %add42.29, 5
  %idxprom44.29 = zext i32 %add43.29 to i64
  %arrayidx45.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.29
  store i32 %796, i32* %arrayidx45.29, align 4
  %arrayidx46.29 = getelementptr inbounds i32, i32* %reversed, i64 5
  %798 = load i32, i32* %arrayidx46.29, align 4
  %idxprom47.29 = sext i32 %798 to i64
  %arrayidx48.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.29
  %799 = load i32, i32* %arrayidx48.29, align 4
  %800 = trunc i64 %indvars.iv.next5.28 to i32
  %mul49.29 = and i32 %800, 2147483640
  %add50.29 = add nuw nsw i32 %mul49.29, 360
  %add51.29 = or i32 %add50.29, 5
  %idxprom52.29 = zext i32 %add51.29 to i64
  %arrayidx53.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.29
  store i32 %799, i32* %arrayidx53.29, align 4
  %arrayidx54.29 = getelementptr inbounds i32, i32* %reversed, i64 6
  %801 = load i32, i32* %arrayidx54.29, align 4
  %idxprom55.29 = sext i32 %801 to i64
  %arrayidx56.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.29
  %802 = load i32, i32* %arrayidx56.29, align 4
  %803 = trunc i64 %indvars.iv.next5.28 to i32
  %mul57.29 = and i32 %803, 2147483640
  %add58.29 = add nuw nsw i32 %mul57.29, 432
  %add59.29 = or i32 %add58.29, 5
  %idxprom60.29 = zext i32 %add59.29 to i64
  %arrayidx61.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.29
  store i32 %802, i32* %arrayidx61.29, align 4
  %arrayidx62.29 = getelementptr inbounds i32, i32* %reversed, i64 7
  %804 = load i32, i32* %arrayidx62.29, align 4
  %idxprom63.29 = sext i32 %804 to i64
  %arrayidx64.29 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.29
  %805 = load i32, i32* %arrayidx64.29, align 4
  %add66.29 = add nuw nsw i32 %783, 504
  %add67.29 = or i32 %add66.29, 5
  %idxprom68.29 = zext i32 %add67.29 to i64
  %arrayidx69.29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.29
  store i32 %805, i32* %arrayidx69.29, align 4
  %indvars.iv.next5.29 = add nuw nsw i64 %indvars.iv.next5.28, 1
  br label %for.body3.30

for.body3.30:                                     ; preds = %for.body3.30, %for.end.29
  %indvars.iv.30 = phi i64 [ 0, %for.end.29 ], [ %indvars.iv.next.30, %for.body3.30 ]
  %806 = shl nsw i64 %indvars.iv.next5.29, 3
  %807 = add nuw nsw i64 %806, %indvars.iv.30
  %arrayidx.30 = getelementptr inbounds i32, i32* %DATA_x, i64 %807
  %808 = load i32, i32* %arrayidx.30, align 4
  %arrayidx5.30 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.30
  store i32 %808, i32* %arrayidx5.30, align 4
  %indvars.iv.next.30 = add nuw nsw i64 %indvars.iv.30, 1
  %exitcond.30 = icmp ne i64 %indvars.iv.next.30, 8
  br i1 %exitcond.30, label %for.body3.30, label %for.end.30, !llvm.loop !21

for.end.30:                                       ; preds = %for.body3.30
  %809 = trunc i64 %indvars.iv.next5.29 to i32
  %810 = and i32 %809, 2147483640
  %811 = load i32, i32* %reversed, align 4
  %idxprom7.30 = sext i32 %811 to i64
  %arrayidx8.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.30
  %812 = load i32, i32* %arrayidx8.30, align 4
  %arrayidx13.30 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.29
  store i32 %812, i32* %arrayidx13.30, align 4
  %arrayidx14.30 = getelementptr inbounds i32, i32* %reversed, i64 1
  %813 = load i32, i32* %arrayidx14.30, align 4
  %idxprom15.30 = sext i32 %813 to i64
  %arrayidx16.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.30
  %814 = load i32, i32* %arrayidx16.30, align 4
  %815 = trunc i64 %indvars.iv.next5.29 to i32
  %mul17.30 = and i32 %815, 2147483640
  %add18.30 = add nuw nsw i32 %mul17.30, 72
  %add19.30 = or i32 %add18.30, 6
  %idxprom20.30 = zext i32 %add19.30 to i64
  %arrayidx21.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.30
  store i32 %814, i32* %arrayidx21.30, align 4
  %arrayidx22.30 = getelementptr inbounds i32, i32* %reversed, i64 2
  %816 = load i32, i32* %arrayidx22.30, align 4
  %idxprom23.30 = sext i32 %816 to i64
  %arrayidx24.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.30
  %817 = load i32, i32* %arrayidx24.30, align 4
  %818 = trunc i64 %indvars.iv.next5.29 to i32
  %mul25.30 = and i32 %818, 2147483640
  %add26.30 = add nuw nsw i32 %mul25.30, 144
  %add27.30 = or i32 %add26.30, 6
  %idxprom28.30 = zext i32 %add27.30 to i64
  %arrayidx29.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.30
  store i32 %817, i32* %arrayidx29.30, align 4
  %arrayidx30.30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %819 = load i32, i32* %arrayidx30.30, align 4
  %idxprom31.30 = sext i32 %819 to i64
  %arrayidx32.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.30
  %820 = load i32, i32* %arrayidx32.30, align 4
  %821 = trunc i64 %indvars.iv.next5.29 to i32
  %mul33.30 = and i32 %821, 2147483640
  %add34.30 = add nuw nsw i32 %mul33.30, 216
  %add35.30 = or i32 %add34.30, 6
  %idxprom36.30 = zext i32 %add35.30 to i64
  %arrayidx37.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.30
  store i32 %820, i32* %arrayidx37.30, align 4
  %arrayidx38.30 = getelementptr inbounds i32, i32* %reversed, i64 4
  %822 = load i32, i32* %arrayidx38.30, align 4
  %idxprom39.30 = sext i32 %822 to i64
  %arrayidx40.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.30
  %823 = load i32, i32* %arrayidx40.30, align 4
  %824 = trunc i64 %indvars.iv.next5.29 to i32
  %mul41.30 = and i32 %824, 2147483640
  %add42.30 = add nuw nsw i32 %mul41.30, 288
  %add43.30 = or i32 %add42.30, 6
  %idxprom44.30 = zext i32 %add43.30 to i64
  %arrayidx45.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.30
  store i32 %823, i32* %arrayidx45.30, align 4
  %arrayidx46.30 = getelementptr inbounds i32, i32* %reversed, i64 5
  %825 = load i32, i32* %arrayidx46.30, align 4
  %idxprom47.30 = sext i32 %825 to i64
  %arrayidx48.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.30
  %826 = load i32, i32* %arrayidx48.30, align 4
  %827 = trunc i64 %indvars.iv.next5.29 to i32
  %mul49.30 = and i32 %827, 2147483640
  %add50.30 = add nuw nsw i32 %mul49.30, 360
  %add51.30 = or i32 %add50.30, 6
  %idxprom52.30 = zext i32 %add51.30 to i64
  %arrayidx53.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.30
  store i32 %826, i32* %arrayidx53.30, align 4
  %arrayidx54.30 = getelementptr inbounds i32, i32* %reversed, i64 6
  %828 = load i32, i32* %arrayidx54.30, align 4
  %idxprom55.30 = sext i32 %828 to i64
  %arrayidx56.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.30
  %829 = load i32, i32* %arrayidx56.30, align 4
  %830 = trunc i64 %indvars.iv.next5.29 to i32
  %mul57.30 = and i32 %830, 2147483640
  %add58.30 = add nuw nsw i32 %mul57.30, 432
  %add59.30 = or i32 %add58.30, 6
  %idxprom60.30 = zext i32 %add59.30 to i64
  %arrayidx61.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.30
  store i32 %829, i32* %arrayidx61.30, align 4
  %arrayidx62.30 = getelementptr inbounds i32, i32* %reversed, i64 7
  %831 = load i32, i32* %arrayidx62.30, align 4
  %idxprom63.30 = sext i32 %831 to i64
  %arrayidx64.30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.30
  %832 = load i32, i32* %arrayidx64.30, align 4
  %add66.30 = add nuw nsw i32 %810, 504
  %add67.30 = or i32 %add66.30, 6
  %idxprom68.30 = zext i32 %add67.30 to i64
  %arrayidx69.30 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.30
  store i32 %832, i32* %arrayidx69.30, align 4
  %indvars.iv.next5.30 = add nuw nsw i64 %indvars.iv.next5.29, 1
  br label %for.body3.31

for.body3.31:                                     ; preds = %for.body3.31, %for.end.30
  %indvars.iv.31 = phi i64 [ 0, %for.end.30 ], [ %indvars.iv.next.31, %for.body3.31 ]
  %833 = shl nsw i64 %indvars.iv.next5.30, 3
  %834 = add nuw nsw i64 %833, %indvars.iv.31
  %arrayidx.31 = getelementptr inbounds i32, i32* %DATA_x, i64 %834
  %835 = load i32, i32* %arrayidx.31, align 4
  %arrayidx5.31 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv.31
  store i32 %835, i32* %arrayidx5.31, align 4
  %indvars.iv.next.31 = add nuw nsw i64 %indvars.iv.31, 1
  %exitcond.31 = icmp ne i64 %indvars.iv.next.31, 8
  br i1 %exitcond.31, label %for.body3.31, label %for.end.31, !llvm.loop !21

for.end.31:                                       ; preds = %for.body3.31
  %836 = trunc i64 %indvars.iv.next5.30 to i32
  %837 = and i32 %836, 2147483640
  %838 = load i32, i32* %reversed, align 4
  %idxprom7.31 = sext i32 %838 to i64
  %arrayidx8.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom7.31
  %839 = load i32, i32* %arrayidx8.31, align 4
  %arrayidx13.31 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv.next5.30
  store i32 %839, i32* %arrayidx13.31, align 4
  %arrayidx14.31 = getelementptr inbounds i32, i32* %reversed, i64 1
  %840 = load i32, i32* %arrayidx14.31, align 4
  %idxprom15.31 = sext i32 %840 to i64
  %arrayidx16.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom15.31
  %841 = load i32, i32* %arrayidx16.31, align 4
  %842 = trunc i64 %indvars.iv.next5.30 to i32
  %mul17.31 = and i32 %842, 2147483640
  %add18.31 = add nuw nsw i32 %mul17.31, 72
  %add19.31 = or i32 %add18.31, 7
  %idxprom20.31 = zext i32 %add19.31 to i64
  %arrayidx21.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20.31
  store i32 %841, i32* %arrayidx21.31, align 4
  %arrayidx22.31 = getelementptr inbounds i32, i32* %reversed, i64 2
  %843 = load i32, i32* %arrayidx22.31, align 4
  %idxprom23.31 = sext i32 %843 to i64
  %arrayidx24.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom23.31
  %844 = load i32, i32* %arrayidx24.31, align 4
  %845 = trunc i64 %indvars.iv.next5.30 to i32
  %mul25.31 = and i32 %845, 2147483640
  %add26.31 = add nuw nsw i32 %mul25.31, 144
  %add27.31 = or i32 %add26.31, 7
  %idxprom28.31 = zext i32 %add27.31 to i64
  %arrayidx29.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28.31
  store i32 %844, i32* %arrayidx29.31, align 4
  %arrayidx30.31 = getelementptr inbounds i32, i32* %reversed, i64 3
  %846 = load i32, i32* %arrayidx30.31, align 4
  %idxprom31.31 = sext i32 %846 to i64
  %arrayidx32.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom31.31
  %847 = load i32, i32* %arrayidx32.31, align 4
  %848 = trunc i64 %indvars.iv.next5.30 to i32
  %mul33.31 = and i32 %848, 2147483640
  %add34.31 = add nuw nsw i32 %mul33.31, 216
  %add35.31 = or i32 %add34.31, 7
  %idxprom36.31 = zext i32 %add35.31 to i64
  %arrayidx37.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36.31
  store i32 %847, i32* %arrayidx37.31, align 4
  %arrayidx38.31 = getelementptr inbounds i32, i32* %reversed, i64 4
  %849 = load i32, i32* %arrayidx38.31, align 4
  %idxprom39.31 = sext i32 %849 to i64
  %arrayidx40.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom39.31
  %850 = load i32, i32* %arrayidx40.31, align 4
  %851 = trunc i64 %indvars.iv.next5.30 to i32
  %mul41.31 = and i32 %851, 2147483640
  %add42.31 = add nuw nsw i32 %mul41.31, 288
  %add43.31 = or i32 %add42.31, 7
  %idxprom44.31 = zext i32 %add43.31 to i64
  %arrayidx45.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44.31
  store i32 %850, i32* %arrayidx45.31, align 4
  %arrayidx46.31 = getelementptr inbounds i32, i32* %reversed, i64 5
  %852 = load i32, i32* %arrayidx46.31, align 4
  %idxprom47.31 = sext i32 %852 to i64
  %arrayidx48.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom47.31
  %853 = load i32, i32* %arrayidx48.31, align 4
  %854 = trunc i64 %indvars.iv.next5.30 to i32
  %mul49.31 = and i32 %854, 2147483640
  %add50.31 = add nuw nsw i32 %mul49.31, 360
  %add51.31 = or i32 %add50.31, 7
  %idxprom52.31 = zext i32 %add51.31 to i64
  %arrayidx53.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52.31
  store i32 %853, i32* %arrayidx53.31, align 4
  %arrayidx54.31 = getelementptr inbounds i32, i32* %reversed, i64 6
  %855 = load i32, i32* %arrayidx54.31, align 4
  %idxprom55.31 = sext i32 %855 to i64
  %arrayidx56.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom55.31
  %856 = load i32, i32* %arrayidx56.31, align 4
  %857 = trunc i64 %indvars.iv.next5.30 to i32
  %mul57.31 = and i32 %857, 2147483640
  %add58.31 = add nuw nsw i32 %mul57.31, 432
  %add59.31 = or i32 %add58.31, 7
  %idxprom60.31 = zext i32 %add59.31 to i64
  %arrayidx61.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60.31
  store i32 %856, i32* %arrayidx61.31, align 4
  %arrayidx62.31 = getelementptr inbounds i32, i32* %reversed, i64 7
  %858 = load i32, i32* %arrayidx62.31, align 4
  %idxprom63.31 = sext i32 %858 to i64
  %arrayidx64.31 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom63.31
  %859 = load i32, i32* %arrayidx64.31, align 4
  %add66.31 = add nuw nsw i32 %837, 504
  %add67.31 = or i32 %add66.31, 7
  %idxprom68.31 = zext i32 %add67.31 to i64
  %arrayidx69.31 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68.31
  store i32 %859, i32* %arrayidx69.31, align 4
  %indvars.iv.next5.31 = add nuw nsw i64 %indvars.iv.next5.30, 1
  %exitcond7.31 = icmp ne i64 %indvars.iv.next5.31, 64
  br i1 %exitcond7.31, label %for.body, label %for.end72, !llvm.loop !22
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step8(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !24

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nsw i32 %4, 72
  %add8 = or i32 %mul6, %and
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_x, align 4
  %mul12 = mul nsw i32 %4, 72
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = or i32 %add13, %and
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nsw i32 %4, 72
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = or i32 %add19, %and
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nsw i32 %4, 72
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = or i32 %add25, %and
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nsw i32 %4, 72
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = or i32 %add31, %and
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nsw i32 %4, 72
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = or i32 %add37, %and
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nsw i32 %4, 72
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = or i32 %add43, %and
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nsw i32 %4, 72
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = or i32 %add49, %and
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_x, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !25

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !26

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step9(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for.end ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv4, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !27

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv4 to i32
  %4 = and i32 %3, 2147483640
  %5 = trunc i64 %indvars.iv4 to i32
  %and = and i32 %5, 7
  %6 = load i32, i32* %reversed, align 4
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom7
  %7 = load i32, i32* %arrayidx8, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv4
  store i32 %7, i32* %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %reversed, i64 1
  %8 = load i32, i32* %arrayidx14, align 4
  %idxprom15 = sext i32 %8 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom15
  %9 = load i32, i32* %arrayidx16, align 4
  %10 = trunc i64 %indvars.iv4 to i32
  %mul17 = and i32 %10, 2147483640
  %add18 = add nuw nsw i32 %mul17, 72
  %add19 = or i32 %add18, %and
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %smem, i64 %idxprom20
  store i32 %9, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %reversed, i64 2
  %11 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %11 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom23
  %12 = load i32, i32* %arrayidx24, align 4
  %13 = trunc i64 %indvars.iv4 to i32
  %mul25 = and i32 %13, 2147483640
  %add26 = add nuw nsw i32 %mul25, 144
  %add27 = or i32 %add26, %and
  %idxprom28 = zext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %smem, i64 %idxprom28
  store i32 %12, i32* %arrayidx29, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %reversed, i64 3
  %14 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %14 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom31
  %15 = load i32, i32* %arrayidx32, align 4
  %16 = trunc i64 %indvars.iv4 to i32
  %mul33 = and i32 %16, 2147483640
  %add34 = add nuw nsw i32 %mul33, 216
  %add35 = or i32 %add34, %and
  %idxprom36 = zext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %smem, i64 %idxprom36
  store i32 %15, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %reversed, i64 4
  %17 = load i32, i32* %arrayidx38, align 4
  %idxprom39 = sext i32 %17 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom39
  %18 = load i32, i32* %arrayidx40, align 4
  %19 = trunc i64 %indvars.iv4 to i32
  %mul41 = and i32 %19, 2147483640
  %add42 = add nuw nsw i32 %mul41, 288
  %add43 = or i32 %add42, %and
  %idxprom44 = zext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %smem, i64 %idxprom44
  store i32 %18, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %reversed, i64 5
  %20 = load i32, i32* %arrayidx46, align 4
  %idxprom47 = sext i32 %20 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom47
  %21 = load i32, i32* %arrayidx48, align 4
  %22 = trunc i64 %indvars.iv4 to i32
  %mul49 = and i32 %22, 2147483640
  %add50 = add nuw nsw i32 %mul49, 360
  %add51 = or i32 %add50, %and
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %smem, i64 %idxprom52
  store i32 %21, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %reversed, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %23 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom55
  %24 = load i32, i32* %arrayidx56, align 4
  %25 = trunc i64 %indvars.iv4 to i32
  %mul57 = and i32 %25, 2147483640
  %add58 = add nuw nsw i32 %mul57, 432
  %add59 = or i32 %add58, %and
  %idxprom60 = zext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %smem, i64 %idxprom60
  store i32 %24, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %reversed, i64 7
  %26 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %26 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom63
  %27 = load i32, i32* %arrayidx64, align 4
  %add66 = add nuw nsw i32 %4, 504
  %add67 = or i32 %add66, %and
  %idxprom68 = zext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %smem, i64 %idxprom68
  store i32 %27, i32* %arrayidx69, align 4
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond7 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond7, label %for.body, label %for.end72, !llvm.loop !28

for.end72:                                        ; preds = %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step10(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc66
  %indvars.iv9 = phi i64 [ 0, %entry ], [ %indvars.iv.next10, %for.inc66 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv9, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !29

for.end:                                          ; preds = %for.body3
  %3 = trunc i64 %indvars.iv9 to i32
  %4 = lshr i32 %3, 3
  %5 = trunc i64 %indvars.iv9 to i32
  %and = and i32 %5, 7
  %mul6 = mul nsw i32 %4, 72
  %add8 = or i32 %mul6, %and
  %idxprom9 = zext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %smem, i64 %idxprom9
  %6 = load i32, i32* %arrayidx10, align 4
  store i32 %6, i32* %data_y, align 4
  %mul12 = mul nsw i32 %4, 72
  %add13 = add nuw nsw i32 %mul12, 8
  %add14 = or i32 %add13, %and
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %smem, i64 %idxprom15
  %7 = load i32, i32* %arrayidx16, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %7, i32* %arrayidx17, align 4
  %mul18 = mul nsw i32 %4, 72
  %add19 = add nuw nsw i32 %mul18, 16
  %add20 = or i32 %add19, %and
  %idxprom21 = zext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %smem, i64 %idxprom21
  %8 = load i32, i32* %arrayidx22, align 4
  %arrayidx23 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %8, i32* %arrayidx23, align 4
  %mul24 = mul nsw i32 %4, 72
  %add25 = add nuw nsw i32 %mul24, 24
  %add26 = or i32 %add25, %and
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %smem, i64 %idxprom27
  %9 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %9, i32* %arrayidx29, align 4
  %mul30 = mul nsw i32 %4, 72
  %add31 = add nuw nsw i32 %mul30, 32
  %add32 = or i32 %add31, %and
  %idxprom33 = zext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %smem, i64 %idxprom33
  %10 = load i32, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %10, i32* %arrayidx35, align 4
  %mul36 = mul nsw i32 %4, 72
  %add37 = add nuw nsw i32 %mul36, 40
  %add38 = or i32 %add37, %and
  %idxprom39 = zext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %smem, i64 %idxprom39
  %11 = load i32, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %11, i32* %arrayidx41, align 4
  %mul42 = mul nsw i32 %4, 72
  %add43 = add nuw nsw i32 %mul42, 48
  %add44 = or i32 %add43, %and
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %smem, i64 %idxprom45
  %12 = load i32, i32* %arrayidx46, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %12, i32* %arrayidx47, align 4
  %mul48 = mul nsw i32 %4, 72
  %add49 = add nuw nsw i32 %mul48, 56
  %add50 = or i32 %add49, %and
  %idxprom51 = zext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, i32* %smem, i64 %idxprom51
  %13 = load i32, i32* %arrayidx52, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %13, i32* %arrayidx53, align 4
  br label %for.body56

for.body56:                                       ; preds = %for.end, %for.body56
  %indvars.iv5 = phi i64 [ 0, %for.end ], [ %indvars.iv.next6, %for.body56 ]
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv5
  %14 = load i32, i32* %arrayidx58, align 4
  %15 = shl nsw i64 %indvars.iv9, 3
  %16 = add nuw nsw i64 %15, %indvars.iv5
  %arrayidx62 = getelementptr inbounds i32, i32* %DATA_y, i64 %16
  store i32 %14, i32* %arrayidx62, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8 = icmp ne i64 %indvars.iv.next6, 8
  br i1 %exitcond8, label %for.body56, label %for.inc66, !llvm.loop !30

for.inc66:                                        ; preds = %for.body56
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond13 = icmp ne i64 %indvars.iv.next10, 64
  br i1 %exitcond13, label %for.body, label %for.end68, !llvm.loop !31

for.end68:                                        ; preds = %for.inc66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc298
  %indvars.iv13 = phi i64 [ 0, %entry ], [ %indvars.iv.next14, %for.inc298 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]
  %0 = shl nsw i64 %indvars.iv13, 3
  %1 = add nuw nsw i64 %0, %indvars.iv
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %1
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv
  store i32 %2, i32* %arrayidx5, align 4
  %3 = shl nsw i64 %indvars.iv13, 3
  %4 = add nuw nsw i64 %3, %indvars.iv
  %arrayidx9 = getelementptr inbounds i32, i32* %DATA_y, i64 %4
  %5 = load i32, i32* %arrayidx9, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv
  store i32 %5, i32* %arrayidx11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %for.body3, label %for.end, !llvm.loop !32

for.end:                                          ; preds = %for.body3
  %6 = load i32, i32* %data_x, align 4
  %7 = load i32, i32* %data_y, align 4
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 4
  %8 = load i32, i32* %arrayidx14, align 4
  %add15 = add nsw i32 %6, %8
  store i32 %add15, i32* %data_x, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %data_y, i64 4
  %9 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %7, %9
  store i32 %add18, i32* %data_y, align 4
  %arrayidx20 = getelementptr inbounds i32, i32* %data_x, i64 4
  %10 = load i32, i32* %arrayidx20, align 4
  %sub = sub nsw i32 %6, %10
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %sub, i32* %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 4
  %11 = load i32, i32* %arrayidx22, align 4
  %sub23 = sub nsw i32 %7, %11
  %arrayidx24 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %sub23, i32* %arrayidx24, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %data_x, i64 1
  %12 = load i32, i32* %arrayidx26, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %data_y, i64 1
  %13 = load i32, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds i32, i32* %data_x, i64 5
  %14 = load i32, i32* %arrayidx29, align 4
  %add30 = add nsw i32 %12, %14
  %arrayidx31 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add30, i32* %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i32, i32* %data_y, i64 5
  %15 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %13, %15
  %arrayidx34 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add33, i32* %arrayidx34, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %data_x, i64 5
  %16 = load i32, i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %12, %16
  %arrayidx37 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub36, i32* %arrayidx37, align 4
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 5
  %17 = load i32, i32* %arrayidx38, align 4
  %sub39 = sub nsw i32 %13, %17
  %arrayidx40 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub39, i32* %arrayidx40, align 4
  %arrayidx42 = getelementptr inbounds i32, i32* %data_x, i64 2
  %18 = load i32, i32* %arrayidx42, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %data_y, i64 2
  %19 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %20 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %18, %20
  %arrayidx47 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add46, i32* %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i32, i32* %data_y, i64 6
  %21 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %19, %21
  %arrayidx50 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add49, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 6
  %22 = load i32, i32* %arrayidx51, align 4
  %sub52 = sub nsw i32 %18, %22
  %arrayidx53 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub52, i32* %arrayidx53, align 4
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 6
  %23 = load i32, i32* %arrayidx54, align 4
  %sub55 = sub nsw i32 %19, %23
  %arrayidx56 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub55, i32* %arrayidx56, align 4
  %arrayidx58 = getelementptr inbounds i32, i32* %data_x, i64 3
  %24 = load i32, i32* %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, i32* %data_y, i64 3
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds i32, i32* %data_x, i64 7
  %26 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %24, %26
  %arrayidx63 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %add62, i32* %arrayidx63, align 4
  %arrayidx64 = getelementptr inbounds i32, i32* %data_y, i64 7
  %27 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %25, %27
  %arrayidx66 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %add65, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds i32, i32* %data_x, i64 7
  %28 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %24, %28
  %arrayidx69 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds i32, i32* %data_y, i64 7
  %29 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %25, %29
  %arrayidx72 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub71, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds i32, i32* %data_x, i64 5
  %30 = load i32, i32* %arrayidx73, align 4
  %arrayidx76 = getelementptr inbounds i32, i32* %data_y, i64 5
  %31 = load i32, i32* %arrayidx76, align 4
  %sub78 = add nsw i32 %30, %31
  %conv = sitofp i32 %sub78 to float
  %mul79 = fmul float %conv, 0x3FE6A09E60000000
  %conv80 = fptosi float %mul79 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4
  %arrayidx83 = getelementptr inbounds i32, i32* %data_y, i64 5
  %32 = load i32, i32* %arrayidx83, align 4
  %add85 = sub i32 %32, %30
  %conv86 = sitofp i32 %add85 to float
  %mul87 = fmul float %conv86, 0x3FE6A09E60000000
  %conv88 = fptosi float %mul87 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %conv88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds i32, i32* %data_x, i64 6
  %33 = load i32, i32* %arrayidx90, align 4
  %arrayidx93 = getelementptr inbounds i32, i32* %data_y, i64 6
  %34 = load i32, i32* %arrayidx93, align 4
  %arrayidx96 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %34, i32* %arrayidx96, align 4
  %mul97 = sub nsw i32 0, %33
  %arrayidx101 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %mul97, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds i32, i32* %data_x, i64 7
  %35 = load i32, i32* %arrayidx102, align 4
  %arrayidx105 = getelementptr inbounds i32, i32* %data_y, i64 7
  %36 = load i32, i32* %arrayidx105, align 4
  %sub107 = sub i32 %36, %35
  %conv108 = sitofp i32 %sub107 to float
  %mul109 = fmul float %conv108, 0x3FE6A09E60000000
  %conv110 = fptosi float %mul109 to i32
  %arrayidx111 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %conv110, i32* %arrayidx111, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %data_y, i64 7
  %37 = load i32, i32* %arrayidx113, align 4
  %38 = add i32 %35, %37
  %add115 = sub i32 0, %38
  %conv116 = sitofp i32 %add115 to float
  %mul117 = fmul float %conv116, 0x3FE6A09E60000000
  %conv118 = fptosi float %mul117 to i32
  %arrayidx119 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %conv118, i32* %arrayidx119, align 4
  %39 = load i32, i32* %data_x, align 4
  %40 = load i32, i32* %data_y, align 4
  %arrayidx124 = getelementptr inbounds i32, i32* %data_x, i64 2
  %41 = load i32, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %39, %41
  store i32 %add125, i32* %data_x, align 4
  %arrayidx127 = getelementptr inbounds i32, i32* %data_y, i64 2
  %42 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %40, %42
  store i32 %add128, i32* %data_y, align 4
  %arrayidx130 = getelementptr inbounds i32, i32* %data_x, i64 2
  %43 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub nsw i32 %39, %43
  %arrayidx132 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %sub131, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds i32, i32* %data_y, i64 2
  %44 = load i32, i32* %arrayidx133, align 4
  %sub134 = sub nsw i32 %40, %44
  %arrayidx135 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %sub134, i32* %arrayidx135, align 4
  %arrayidx137 = getelementptr inbounds i32, i32* %data_x, i64 1
  %45 = load i32, i32* %arrayidx137, align 4
  %arrayidx139 = getelementptr inbounds i32, i32* %data_y, i64 1
  %46 = load i32, i32* %arrayidx139, align 4
  %arrayidx140 = getelementptr inbounds i32, i32* %data_x, i64 3
  %47 = load i32, i32* %arrayidx140, align 4
  %add141 = add nsw i32 %45, %47
  %arrayidx142 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %add141, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds i32, i32* %data_y, i64 3
  %48 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %46, %48
  %arrayidx145 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %data_x, i64 3
  %49 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub nsw i32 %45, %49
  %arrayidx148 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub147, i32* %arrayidx148, align 4
  %arrayidx149 = getelementptr inbounds i32, i32* %data_y, i64 3
  %50 = load i32, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %46, %50
  %arrayidx151 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub150, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds i32, i32* %data_x, i64 3
  %51 = load i32, i32* %arrayidx152, align 4
  %arrayidx158 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub150, i32* %arrayidx158, align 4
  %mul159 = sub nsw i32 0, %51
  %arrayidx163 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %mul159, i32* %arrayidx163, align 4
  %52 = load i32, i32* %data_x, align 4
  %53 = load i32, i32* %data_y, align 4
  %arrayidx168 = getelementptr inbounds i32, i32* %data_x, i64 1
  %54 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %52, %54
  store i32 %add169, i32* %data_x, align 4
  %arrayidx171 = getelementptr inbounds i32, i32* %data_y, i64 1
  %55 = load i32, i32* %arrayidx171, align 4
  %add172 = add nsw i32 %53, %55
  store i32 %add172, i32* %data_y, align 4
  %arrayidx174 = getelementptr inbounds i32, i32* %data_x, i64 1
  %56 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %52, %56
  %arrayidx176 = getelementptr inbounds i32, i32* %data_x, i64 1
  store i32 %sub175, i32* %arrayidx176, align 4
  %arrayidx177 = getelementptr inbounds i32, i32* %data_y, i64 1
  %57 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %53, %57
  %arrayidx179 = getelementptr inbounds i32, i32* %data_y, i64 1
  store i32 %sub178, i32* %arrayidx179, align 4
  %arrayidx181 = getelementptr inbounds i32, i32* %data_x, i64 2
  %58 = load i32, i32* %arrayidx181, align 4
  %arrayidx183 = getelementptr inbounds i32, i32* %data_y, i64 2
  %59 = load i32, i32* %arrayidx183, align 4
  %arrayidx184 = getelementptr inbounds i32, i32* %data_x, i64 3
  %60 = load i32, i32* %arrayidx184, align 4
  %add185 = add nsw i32 %58, %60
  %arrayidx186 = getelementptr inbounds i32, i32* %data_x, i64 2
  store i32 %add185, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %data_y, i64 3
  %61 = load i32, i32* %arrayidx187, align 4
  %add188 = add nsw i32 %59, %61
  %arrayidx189 = getelementptr inbounds i32, i32* %data_y, i64 2
  store i32 %add188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds i32, i32* %data_x, i64 3
  %62 = load i32, i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 %58, %62
  %arrayidx192 = getelementptr inbounds i32, i32* %data_x, i64 3
  store i32 %sub191, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds i32, i32* %data_y, i64 3
  %63 = load i32, i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 %59, %63
  %arrayidx195 = getelementptr inbounds i32, i32* %data_y, i64 3
  store i32 %sub194, i32* %arrayidx195, align 4
  %arrayidx200 = getelementptr inbounds i32, i32* %data_x, i64 4
  %64 = load i32, i32* %arrayidx200, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %data_y, i64 4
  %65 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds i32, i32* %data_x, i64 6
  %66 = load i32, i32* %arrayidx203, align 4
  %add204 = add nsw i32 %64, %66
  %arrayidx205 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds i32, i32* %data_y, i64 6
  %67 = load i32, i32* %arrayidx206, align 4
  %add207 = add nsw i32 %65, %67
  %arrayidx208 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add207, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr inbounds i32, i32* %data_x, i64 6
  %68 = load i32, i32* %arrayidx209, align 4
  %sub210 = sub nsw i32 %64, %68
  %arrayidx211 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %sub210, i32* %arrayidx211, align 4
  %arrayidx212 = getelementptr inbounds i32, i32* %data_y, i64 6
  %69 = load i32, i32* %arrayidx212, align 4
  %sub213 = sub nsw i32 %65, %69
  %arrayidx214 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %sub213, i32* %arrayidx214, align 4
  %arrayidx216 = getelementptr inbounds i32, i32* %data_x, i64 5
  %70 = load i32, i32* %arrayidx216, align 4
  %arrayidx218 = getelementptr inbounds i32, i32* %data_y, i64 5
  %71 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds i32, i32* %data_x, i64 7
  %72 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %70, %72
  %arrayidx221 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %add220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds i32, i32* %data_y, i64 7
  %73 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %71, %73
  %arrayidx224 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %add223, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds i32, i32* %data_x, i64 7
  %74 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %70, %74
  %arrayidx227 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub226, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds i32, i32* %data_y, i64 7
  %75 = load i32, i32* %arrayidx228, align 4
  %sub229 = sub nsw i32 %71, %75
  %arrayidx230 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub229, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds i32, i32* %data_x, i64 7
  %76 = load i32, i32* %arrayidx231, align 4
  %arrayidx237 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub229, i32* %arrayidx237, align 4
  %mul238 = sub nsw i32 0, %76
  %arrayidx242 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %mul238, i32* %arrayidx242, align 4
  %arrayidx244 = getelementptr inbounds i32, i32* %data_x, i64 4
  %77 = load i32, i32* %arrayidx244, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %data_y, i64 4
  %78 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds i32, i32* %data_x, i64 5
  %79 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %77, %79
  %arrayidx249 = getelementptr inbounds i32, i32* %data_x, i64 4
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds i32, i32* %data_y, i64 5
  %80 = load i32, i32* %arrayidx250, align 4
  %add251 = add nsw i32 %78, %80
  %arrayidx252 = getelementptr inbounds i32, i32* %data_y, i64 4
  store i32 %add251, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds i32, i32* %data_x, i64 5
  %81 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %77, %81
  %arrayidx255 = getelementptr inbounds i32, i32* %data_x, i64 5
  store i32 %sub254, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds i32, i32* %data_y, i64 5
  %82 = load i32, i32* %arrayidx256, align 4
  %sub257 = sub nsw i32 %78, %82
  %arrayidx258 = getelementptr inbounds i32, i32* %data_y, i64 5
  store i32 %sub257, i32* %arrayidx258, align 4
  %arrayidx260 = getelementptr inbounds i32, i32* %data_x, i64 6
  %83 = load i32, i32* %arrayidx260, align 4
  %arrayidx262 = getelementptr inbounds i32, i32* %data_y, i64 6
  %84 = load i32, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds i32, i32* %data_x, i64 7
  %85 = load i32, i32* %arrayidx263, align 4
  %add264 = add nsw i32 %83, %85
  %arrayidx265 = getelementptr inbounds i32, i32* %data_x, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds i32, i32* %data_y, i64 7
  %86 = load i32, i32* %arrayidx266, align 4
  %add267 = add nsw i32 %84, %86
  %arrayidx268 = getelementptr inbounds i32, i32* %data_y, i64 6
  store i32 %add267, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds i32, i32* %data_x, i64 7
  %87 = load i32, i32* %arrayidx269, align 4
  %sub270 = sub nsw i32 %83, %87
  %arrayidx271 = getelementptr inbounds i32, i32* %data_x, i64 7
  store i32 %sub270, i32* %arrayidx271, align 4
  %arrayidx272 = getelementptr inbounds i32, i32* %data_y, i64 7
  %88 = load i32, i32* %arrayidx272, align 4
  %sub273 = sub nsw i32 %84, %88
  %arrayidx274 = getelementptr inbounds i32, i32* %data_y, i64 7
  store i32 %sub273, i32* %arrayidx274, align 4
  br label %for.body278

for.body278:                                      ; preds = %for.end, %for.body278
  %indvars.iv6 = phi i64 [ 0, %for.end ], [ %indvars.iv.next7, %for.body278 ]
  %arrayidx280 = getelementptr inbounds i32, i32* %reversed, i64 %indvars.iv6
  %89 = load i32, i32* %arrayidx280, align 4
  %idxprom281 = sext i32 %89 to i64
  %arrayidx282 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom281
  %90 = load i32, i32* %arrayidx282, align 4
  %91 = shl nsw i64 %indvars.iv6, 6
  %92 = add nuw nsw i64 %91, %indvars.iv13
  %arrayidx286 = getelementptr inbounds i32, i32* %work_x, i64 %92
  store i32 %90, i32* %arrayidx286, align 4
  %arrayidx288 = getelementptr inbounds i32, i32* %reversed, i64 %indvars.iv6
  %93 = load i32, i32* %arrayidx288, align 4
  %idxprom289 = sext i32 %93 to i64
  %arrayidx290 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom289
  %94 = load i32, i32* %arrayidx290, align 4
  %95 = shl nsw i64 %indvars.iv6, 6
  %96 = add nuw nsw i64 %95, %indvars.iv13
  %arrayidx294 = getelementptr inbounds i32, i32* %work_y, i64 %96
  store i32 %94, i32* %arrayidx294, align 4
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %exitcond12 = icmp ne i64 %indvars.iv.next7, 8
  br i1 %exitcond12, label %for.body278, label %for.inc298, !llvm.loop !33

for.inc298:                                       ; preds = %for.body278
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond17 = icmp ne i64 %indvars.iv.next14, 64
  br i1 %exitcond17, label %for.body, label %for.end300, !llvm.loop !34

for.end300:                                       ; preds = %for.inc298
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fft1D_512(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512) #0 {
entry:
  call void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step2(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step3(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step4(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step5(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step6(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step7(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step8(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step9(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step10(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  call void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* %smem, i32* %reversed, float* %sin_64, float* %cos_64, float* %sin_512, float* %cos_512)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 {
entry:
  %a_x = alloca [512 x i32], align 16
  %a_y = alloca [512 x i32], align 16
  %sin_64 = alloca [448 x float], align 16
  %sin_512 = alloca [448 x float], align 16
  %cos_64 = alloca [448 x float], align 16
  %cos_512 = alloca [448 x float], align 16
  %DATA_x = alloca [512 x i32], align 16
  %DATA_y = alloca [512 x i32], align 16
  %data_x = alloca [8 x i32], align 16
  %data_y = alloca [8 x i32], align 16
  %smem = alloca [576 x i32], align 16
  %reversed = alloca [8 x i32], align 16
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.3, %for.body ]
  %arrayidx = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv
  %0 = trunc i64 %indvars.iv to i32
  store i32 %0, i32* %arrayidx, align 4
  %arrayidx2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx2, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv.next
  %1 = trunc i64 %indvars.iv.next to i32
  store i32 %1, i32* %arrayidx.1, align 4
  %arrayidx2.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv.next
  store i32 0, i32* %arrayidx2.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next, 1
  %arrayidx.2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv.next.1
  %2 = trunc i64 %indvars.iv.next.1 to i32
  store i32 %2, i32* %arrayidx.2, align 4
  %arrayidx2.2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv.next.1
  store i32 0, i32* %arrayidx2.2, align 4
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.next.1, 1
  %arrayidx.3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv.next.2
  %3 = trunc i64 %indvars.iv.next.2 to i32
  store i32 %3, i32* %arrayidx.3, align 4
  %arrayidx2.3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv.next.2
  store i32 0, i32* %arrayidx2.3, align 4
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.next.2, 1
  %exitcond.3 = icmp ne i64 %indvars.iv.next.3, 512
  br i1 %exitcond.3, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %4 = bitcast [448 x float]* %sin_64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %4, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.sin_64 to i8*), i64 1792, i1 false)
  %5 = bitcast [448 x float]* %sin_512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %5, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.sin_512 to i8*), i64 1792, i1 false)
  %6 = bitcast [448 x float]* %cos_64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %6, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.cos_64 to i8*), i64 1792, i1 false)
  %7 = bitcast [448 x float]* %cos_512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(1792) %7, i8* nonnull align 16 dereferenceable(1792) bitcast ([448 x float]* @__const.main.cos_512 to i8*), i64 1792, i1 false)
  %8 = bitcast [8 x i32]* %reversed to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(32) %8, i8* nonnull align 16 dereferenceable(32) bitcast ([8 x i32]* @__const.main.reversed to i8*), i64 32, i1 false)
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0
  %arraydecay3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0
  %arraydecay4 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_x, i64 0, i64 0
  %arraydecay5 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_y, i64 0, i64 0
  %arraydecay6 = getelementptr inbounds [8 x i32], [8 x i32]* %data_x, i64 0, i64 0
  %arraydecay7 = getelementptr inbounds [8 x i32], [8 x i32]* %data_y, i64 0, i64 0
  %arraydecay8 = getelementptr inbounds [576 x i32], [576 x i32]* %smem, i64 0, i64 0
  %arraydecay9 = getelementptr inbounds [8 x i32], [8 x i32]* %reversed, i64 0, i64 0
  %arraydecay10 = getelementptr inbounds [448 x float], [448 x float]* %sin_64, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds [448 x float], [448 x float]* %sin_512, i64 0, i64 0
  %arraydecay12 = getelementptr inbounds [448 x float], [448 x float]* %cos_64, i64 0, i64 0
  %arraydecay13 = getelementptr inbounds [448 x float], [448 x float]* %cos_512, i64 0, i64 0
  call void @fft1D_512(i32* nonnull %arraydecay, i32* nonnull %arraydecay3, i32* nonnull %arraydecay4, i32* nonnull %arraydecay5, i32* nonnull %arraydecay6, i32* nonnull %arraydecay7, i32* nonnull %arraydecay8, i32* nonnull %arraydecay9, float* nonnull %arraydecay10, float* nonnull %arraydecay11, float* nonnull %arraydecay12, float* nonnull %arraydecay13)
  br label %for.body16

for.body16:                                       ; preds = %for.end
  %arrayidx18 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0
  %9 = load i32, i32* %arrayidx18, align 4
  %arrayidx20 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0
  %10 = load i32, i32* %arrayidx20, align 4
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %9, i32 %10) #3
  %arrayidx18.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 1
  %11 = load i32, i32* %arrayidx18.1, align 4
  %arrayidx20.1 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 1
  %12 = load i32, i32* %arrayidx20.1, align 4
  %call.1 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %11, i32 %12) #3
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 "}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.count", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !3}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !3}
