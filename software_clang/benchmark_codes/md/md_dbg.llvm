; ModuleID = 'md.c'
source_filename = "md.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [19 x i8] c"total pairs - %i \0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"after, X:%i Y:%i Z%i \0A\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local void @md(i32* nocapture %d_force_x, i32* nocapture %d_force_y, i32* nocapture %d_force_z, i32* nocapture readonly %position_x, i32* nocapture readonly %position_y, i32* nocapture readonly %position_z, i32* nocapture readonly %NL) local_unnamed_addr #0 !dbg !17 {
entry:
  call void @llvm.dbg.value(metadata i32* %d_force_x, metadata !22, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32* %d_force_y, metadata !23, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32* %d_force_z, metadata !24, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32* %position_x, metadata !25, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32* %position_y, metadata !26, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32* %position_z, metadata !27, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32* %NL, metadata !28, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.label(metadata !59), !dbg !62
  call void @llvm.dbg.value(metadata i32 0, metadata !29, metadata !DIExpression()), !dbg !61
  br label %for.body, !dbg !63

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv104 = phi i64 [ 0, %entry ], [ %indvars.iv.next105, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv104, metadata !29, metadata !DIExpression()), !dbg !61
  %arrayidx = getelementptr inbounds i32, i32* %position_x, i64 %indvars.iv104, !dbg !64
  %0 = load i32, i32* %arrayidx, align 4, !dbg !64, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %0, metadata !42, metadata !DIExpression()), !dbg !69
  %arrayidx2 = getelementptr inbounds i32, i32* %position_y, i64 %indvars.iv104, !dbg !70
  %1 = load i32, i32* %arrayidx2, align 4, !dbg !70, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %1, metadata !46, metadata !DIExpression()), !dbg !69
  %arrayidx4 = getelementptr inbounds i32, i32* %position_z, i64 %indvars.iv104, !dbg !71
  %2 = load i32, i32* %arrayidx4, align 4, !dbg !71, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %2, metadata !47, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 0, metadata !48, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 0, metadata !49, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.label(metadata !60), !dbg !72
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32 0, metadata !48, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 0, metadata !49, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !69
  %3 = shl i64 %indvars.iv104, 5, !dbg !73
  br label %for.body7, !dbg !74

for.body7:                                        ; preds = %for.body7, %for.body
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body7 ]
  %fx.0100 = phi i32 [ 0, %for.body ], [ %add30, %for.body7 ]
  %fy.099 = phi i32 [ 0, %for.body ], [ %add32, %for.body7 ]
  %fz.098 = phi i32 [ 0, %for.body ], [ %add34, %for.body7 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !30, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32 %fx.0100, metadata !48, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 %fy.099, metadata !49, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 %fz.098, metadata !50, metadata !DIExpression()), !dbg !69
  %4 = add nuw nsw i64 %indvars.iv, %3, !dbg !75
  %arrayidx9 = getelementptr inbounds i32, i32* %NL, i64 %4, !dbg !76
  %5 = load i32, i32* %arrayidx9, align 4, !dbg !76, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %5, metadata !31, metadata !DIExpression()), !dbg !61
  %idxprom10 = sext i32 %5 to i64, !dbg !77
  %arrayidx11 = getelementptr inbounds i32, i32* %position_x, i64 %idxprom10, !dbg !77
  %6 = load i32, i32* %arrayidx11, align 4, !dbg !77, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %6, metadata !51, metadata !DIExpression()), !dbg !73
  %arrayidx13 = getelementptr inbounds i32, i32* %position_y, i64 %idxprom10, !dbg !78
  %7 = load i32, i32* %arrayidx13, align 4, !dbg !78, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %7, metadata !55, metadata !DIExpression()), !dbg !73
  %arrayidx15 = getelementptr inbounds i32, i32* %position_z, i64 %idxprom10, !dbg !79
  %8 = load i32, i32* %arrayidx15, align 4, !dbg !79, !tbaa !65
  call void @llvm.dbg.value(metadata i32 %8, metadata !56, metadata !DIExpression()), !dbg !73
  %sub = sub nsw i32 %0, %6, !dbg !80
  call void @llvm.dbg.value(metadata i32 %sub, metadata !32, metadata !DIExpression()), !dbg !61
  %sub16 = sub nsw i32 %1, %7, !dbg !81
  call void @llvm.dbg.value(metadata i32 %sub16, metadata !33, metadata !DIExpression()), !dbg !61
  %sub17 = sub nsw i32 %2, %8, !dbg !82
  call void @llvm.dbg.value(metadata i32 %sub17, metadata !34, metadata !DIExpression()), !dbg !61
  %mul18 = mul nsw i32 %sub, %sub, !dbg !83
  call void @llvm.dbg.value(metadata i32 %mul18, metadata !36, metadata !DIExpression()), !dbg !61
  %mul19 = mul nsw i32 %sub16, %sub16, !dbg !84
  call void @llvm.dbg.value(metadata i32 %mul19, metadata !37, metadata !DIExpression()), !dbg !61
  %mul20 = mul nsw i32 %sub17, %sub17, !dbg !85
  call void @llvm.dbg.value(metadata i32 %mul20, metadata !38, metadata !DIExpression()), !dbg !61
  %add21 = add nuw nsw i32 %mul19, %mul18, !dbg !86
  call void @llvm.dbg.value(metadata i32 %add21, metadata !39, metadata !DIExpression()), !dbg !61
  %add22 = add nuw nsw i32 %add21, %mul20, !dbg !87
  call void @llvm.dbg.value(metadata i32 %add22, metadata !40, metadata !DIExpression()), !dbg !61
  call void @llvm.dbg.value(metadata i32 %add22, metadata !35, metadata !DIExpression()), !dbg !61
  %mul23 = mul nsw i32 %add22, %add22, !dbg !88
  %mul24 = mul nsw i32 %mul23, %add22, !dbg !89
  call void @llvm.dbg.value(metadata i32 %mul24, metadata !57, metadata !DIExpression()), !dbg !73
  %mul25 = mul nsw i32 %mul24, %add22, !dbg !90
  %mul26 = mul nsw i32 %mul24, 15, !dbg !91
  %sub27 = add nsw i32 %mul26, -20, !dbg !92
  %mul28 = mul nsw i32 %mul25, %sub27, !dbg !93
  call void @llvm.dbg.value(metadata i32 %mul28, metadata !58, metadata !DIExpression()), !dbg !73
  %mul29 = mul nsw i32 %mul28, %sub, !dbg !94
  %add30 = add nsw i32 %mul29, %fx.0100, !dbg !95
  call void @llvm.dbg.value(metadata i32 %add30, metadata !48, metadata !DIExpression()), !dbg !69
  %mul31 = mul nsw i32 %mul28, %sub16, !dbg !96
  %add32 = add nsw i32 %mul31, %fy.099, !dbg !97
  call void @llvm.dbg.value(metadata i32 %add32, metadata !49, metadata !DIExpression()), !dbg !69
  %mul33 = mul nsw i32 %mul28, %sub17, !dbg !98
  %add34 = add nsw i32 %mul33, %fz.098, !dbg !99
  call void @llvm.dbg.value(metadata i32 %add34, metadata !50, metadata !DIExpression()), !dbg !69
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !100
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !30, metadata !DIExpression()), !dbg !61
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !101
  br i1 %exitcond, label %for.end, label %for.body7, !dbg !74, !llvm.loop !102

for.end:                                          ; preds = %for.body7
  call void @llvm.dbg.value(metadata i32 %add34, metadata !50, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 %add32, metadata !49, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 %add30, metadata !48, metadata !DIExpression()), !dbg !69
  %arrayidx36 = getelementptr inbounds i32, i32* %d_force_x, i64 %indvars.iv104, !dbg !104
  store i32 %add30, i32* %arrayidx36, align 4, !dbg !105, !tbaa !65
  %arrayidx38 = getelementptr inbounds i32, i32* %d_force_y, i64 %indvars.iv104, !dbg !106
  store i32 %add32, i32* %arrayidx38, align 4, !dbg !107, !tbaa !65
  %arrayidx40 = getelementptr inbounds i32, i32* %d_force_z, i64 %indvars.iv104, !dbg !108
  store i32 %add34, i32* %arrayidx40, align 4, !dbg !109, !tbaa !65
  %indvars.iv.next105 = add nuw nsw i64 %indvars.iv104, 1, !dbg !110
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next105, metadata !29, metadata !DIExpression()), !dbg !61
  %exitcond107 = icmp eq i64 %indvars.iv.next105, 32, !dbg !111
  br i1 %exitcond107, label %for.end43, label %for.body, !dbg !63, !llvm.loop !112

for.end43:                                        ; preds = %for.end
  ret void, !dbg !114
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline norecurse nounwind readonly uwtable
define dso_local i32 @distance(i32* nocapture readonly %position_x, i32* nocapture readonly %position_y, i32* nocapture readonly %position_z, i32 %i, i32 %j) local_unnamed_addr #3 !dbg !115 {
entry:
  call void @llvm.dbg.value(metadata i32* %position_x, metadata !119, metadata !DIExpression()), !dbg !128
  call void @llvm.dbg.value(metadata i32* %position_y, metadata !120, metadata !DIExpression()), !dbg !128
  call void @llvm.dbg.value(metadata i32* %position_z, metadata !121, metadata !DIExpression()), !dbg !128
  call void @llvm.dbg.value(metadata i32 %i, metadata !122, metadata !DIExpression()), !dbg !128
  call void @llvm.dbg.value(metadata i32 %j, metadata !123, metadata !DIExpression()), !dbg !128
  %idxprom = sext i32 %i to i64, !dbg !129
  %arrayidx = getelementptr inbounds i32, i32* %position_x, i64 %idxprom, !dbg !129
  %0 = load i32, i32* %arrayidx, align 4, !dbg !129, !tbaa !65
  %idxprom1 = sext i32 %j to i64, !dbg !130
  %arrayidx2 = getelementptr inbounds i32, i32* %position_x, i64 %idxprom1, !dbg !130
  %1 = load i32, i32* %arrayidx2, align 4, !dbg !130, !tbaa !65
  %sub = sub nsw i32 %0, %1, !dbg !131
  call void @llvm.dbg.value(metadata i32 %sub, metadata !124, metadata !DIExpression()), !dbg !128
  %arrayidx4 = getelementptr inbounds i32, i32* %position_y, i64 %idxprom, !dbg !132
  %2 = load i32, i32* %arrayidx4, align 4, !dbg !132, !tbaa !65
  %arrayidx6 = getelementptr inbounds i32, i32* %position_y, i64 %idxprom1, !dbg !133
  %3 = load i32, i32* %arrayidx6, align 4, !dbg !133, !tbaa !65
  %sub7 = sub nsw i32 %2, %3, !dbg !134
  call void @llvm.dbg.value(metadata i32 %sub7, metadata !125, metadata !DIExpression()), !dbg !128
  %arrayidx9 = getelementptr inbounds i32, i32* %position_z, i64 %idxprom, !dbg !135
  %4 = load i32, i32* %arrayidx9, align 4, !dbg !135, !tbaa !65
  %arrayidx11 = getelementptr inbounds i32, i32* %position_z, i64 %idxprom1, !dbg !136
  %5 = load i32, i32* %arrayidx11, align 4, !dbg !136, !tbaa !65
  %sub12 = sub nsw i32 %4, %5, !dbg !137
  call void @llvm.dbg.value(metadata i32 %sub12, metadata !126, metadata !DIExpression()), !dbg !128
  %mul = mul nsw i32 %sub, %sub, !dbg !138
  %mul13 = mul nsw i32 %sub7, %sub7, !dbg !139
  %add = add nuw nsw i32 %mul13, %mul, !dbg !140
  %mul14 = mul nsw i32 %sub12, %sub12, !dbg !141
  %add15 = add nuw nsw i32 %add, %mul14, !dbg !142
  call void @llvm.dbg.value(metadata i32 %add15, metadata !127, metadata !DIExpression()), !dbg !128
  ret i32 %add15, !dbg !143
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @buildNeighborList(i32* nocapture readonly %position_x, i32* nocapture readonly %position_y, i32* nocapture readonly %position_z, [32 x i32]* nocapture %NL) local_unnamed_addr #4 !dbg !144 {
entry:
  %currList = alloca [32 x i32], align 16
  %0 = bitcast [32 x i32]* %currList to i8*
  call void @llvm.dbg.value(metadata i32* %position_x, metadata !152, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata i32* %position_y, metadata !153, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata i32* %position_z, metadata !154, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata [32 x i32]* %NL, metadata !155, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata i32 0, metadata !156, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata i32 0, metadata !157, metadata !DIExpression()), !dbg !166
  %arraydecay17 = getelementptr inbounds [32 x i32], [32 x i32]* %currList, i64 0, i64 0, !dbg !167
  br label %for.body, !dbg !168

for.body:                                         ; preds = %for.end16, %entry
  %indvars.iv48 = phi i64 [ 0, %entry ], [ %indvars.iv.next49, %for.end16 ]
  %totalPairs.047 = phi i32 [ 0, %entry ], [ %add, %for.end16 ]
  call void @llvm.dbg.value(metadata i32 %totalPairs.047, metadata !156, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata i64 %indvars.iv48, metadata !157, metadata !DIExpression()), !dbg !166
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #7, !dbg !169
  call void @llvm.dbg.declare(metadata [32 x i32]* %currList, metadata !161, metadata !DIExpression()), !dbg !170
  call void @llvm.dbg.value(metadata i32 0, metadata !159, metadata !DIExpression()), !dbg !166
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128) %0, i8 0, i64 128, i1 false), !dbg !171
  call void @llvm.dbg.value(metadata i32 undef, metadata !159, metadata !DIExpression()), !dbg !166
  call void @llvm.dbg.value(metadata i32 undef, metadata !165, metadata !DIExpression()), !dbg !167
  br label %for.body8, !dbg !175

for.body8:                                        ; preds = %for.inc14, %for.body
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.inc14 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !158, metadata !DIExpression()), !dbg !166
  %cmp9 = icmp eq i64 %indvars.iv48, %indvars.iv, !dbg !177
  br i1 %cmp9, label %for.inc14, label %if.end, !dbg !181

if.end:                                           ; preds = %for.body8
  call void @llvm.dbg.value(metadata i32 undef, metadata !160, metadata !DIExpression()), !dbg !166
  %arrayidx11 = getelementptr inbounds [32 x i32], [32 x i32]* %currList, i64 0, i64 %indvars.iv, !dbg !182
  %1 = trunc i64 %indvars.iv to i32, !dbg !183
  store i32 %1, i32* %arrayidx11, align 4, !dbg !183, !tbaa !65
  call void @llvm.dbg.value(metadata i32 undef, metadata !165, metadata !DIExpression()), !dbg !167
  br label %for.inc14, !dbg !184

for.inc14:                                        ; preds = %for.body8, %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !185
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !158, metadata !DIExpression()), !dbg !166
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !186
  br i1 %exitcond, label %for.end16, label %for.body8, !dbg !175, !llvm.loop !187

for.end16:                                        ; preds = %for.inc14
  %2 = trunc i64 %indvars.iv48 to i32, !dbg !189
  %call18 = call i32 @populateNeighborList(i32* undef, i32* nonnull %arraydecay17, i32 %2, [32 x i32]* %NL), !dbg !189
  %add = add nsw i32 %call18, %totalPairs.047, !dbg !190
  call void @llvm.dbg.value(metadata i32 %add, metadata !156, metadata !DIExpression()), !dbg !166
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #7, !dbg !191
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1, !dbg !192
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next49, metadata !157, metadata !DIExpression()), !dbg !166
  %exitcond50 = icmp eq i64 %indvars.iv.next49, 32, !dbg !193
  br i1 %exitcond50, label %for.end21, label %for.body, !dbg !168, !llvm.loop !194

for.end21:                                        ; preds = %for.end16
  call void @llvm.dbg.value(metadata i32 %add, metadata !156, metadata !DIExpression()), !dbg !166
  %call22 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 %add), !dbg !196
  ret i32 %add, !dbg !197
}

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree noinline norecurse nounwind uwtable
define dso_local i32 @populateNeighborList(i32* nocapture readnone %currDist, i32* nocapture readonly %currList, i32 %i, [32 x i32]* nocapture %NL) local_unnamed_addr #0 !dbg !198 {
entry:
  call void @llvm.dbg.value(metadata i32* undef, metadata !203, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32* %currList, metadata !204, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32 %i, metadata !205, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata [32 x i32]* %NL, metadata !206, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32 0, metadata !207, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32 0, metadata !208, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32 0, metadata !210, metadata !DIExpression()), !dbg !211
  %idxprom1 = sext i32 %i to i64, !dbg !212
  br label %for.body, !dbg !216

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !210, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32 undef, metadata !208, metadata !DIExpression()), !dbg !211
  %arrayidx = getelementptr inbounds i32, i32* %currList, i64 %indvars.iv, !dbg !217
  %0 = load i32, i32* %arrayidx, align 4, !dbg !217, !tbaa !65
  %arrayidx4 = getelementptr inbounds [32 x i32], [32 x i32]* %NL, i64 %idxprom1, i64 %indvars.iv, !dbg !218
  store i32 %0, i32* %arrayidx4, align 4, !dbg !219, !tbaa !65
  call void @llvm.dbg.value(metadata i32 undef, metadata !208, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !211
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !220
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !210, metadata !DIExpression()), !dbg !211
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !221
  br i1 %exitcond, label %for.end, label %for.body, !dbg !216, !llvm.loop !222

for.end:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 32, metadata !208, metadata !DIExpression()), !dbg !211
  ret i32 32, !dbg !224
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #4 !dbg !225 {
entry:
  %position_x = alloca [32 x i32], align 16
  %position_y = alloca [32 x i32], align 16
  %position_z = alloca [32 x i32], align 16
  %force_x = alloca [32 x i32], align 16
  %force_y = alloca [32 x i32], align 16
  %force_z = alloca [32 x i32], align 16
  %NL = alloca [32 x [32 x i32]], align 16
  %0 = bitcast [32 x [32 x i32]]* %NL to i8*
  %neighborList = alloca [1024 x i32], align 16
  call void @llvm.dbg.value(metadata i32 1, metadata !227, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 1, metadata !228, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 1, metadata !229, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 0, metadata !231, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 128, metadata !232, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 32, metadata !233, metadata !DIExpression()), !dbg !254
  call void @srand(i32 8650341) #7, !dbg !255
  %1 = bitcast [32 x i32]* %position_x to i8*, !dbg !256
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #7, !dbg !256
  call void @llvm.dbg.declare(metadata [32 x i32]* %position_x, metadata !241, metadata !DIExpression()), !dbg !257
  %2 = bitcast [32 x i32]* %position_y to i8*, !dbg !258
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %2) #7, !dbg !258
  call void @llvm.dbg.declare(metadata [32 x i32]* %position_y, metadata !242, metadata !DIExpression()), !dbg !259
  %3 = bitcast [32 x i32]* %position_z to i8*, !dbg !260
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #7, !dbg !260
  call void @llvm.dbg.declare(metadata [32 x i32]* %position_z, metadata !243, metadata !DIExpression()), !dbg !261
  %4 = bitcast [32 x i32]* %force_x to i8*, !dbg !262
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #7, !dbg !262
  call void @llvm.dbg.declare(metadata [32 x i32]* %force_x, metadata !244, metadata !DIExpression()), !dbg !263
  %5 = bitcast [32 x i32]* %force_y to i8*, !dbg !264
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7, !dbg !264
  call void @llvm.dbg.declare(metadata [32 x i32]* %force_y, metadata !245, metadata !DIExpression()), !dbg !265
  %6 = bitcast [32 x i32]* %force_z to i8*, !dbg !266
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7, !dbg !266
  call void @llvm.dbg.declare(metadata [32 x i32]* %force_z, metadata !246, metadata !DIExpression()), !dbg !267
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #7, !dbg !268
  call void @llvm.dbg.declare(metadata [32 x [32 x i32]]* %NL, metadata !247, metadata !DIExpression()), !dbg !269
  %7 = bitcast [1024 x i32]* %neighborList to i8*, !dbg !270
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %7) #7, !dbg !270
  call void @llvm.dbg.declare(metadata [1024 x i32]* %neighborList, metadata !250, metadata !DIExpression()), !dbg !271
  call void @llvm.dbg.value(metadata i32 0, metadata !234, metadata !DIExpression()), !dbg !254
  br label %for.body, !dbg !272

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv118 = phi i64 [ 0, %entry ], [ %indvars.iv.next119, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv118, metadata !234, metadata !DIExpression()), !dbg !254
  %call = call i32 @rand() #7, !dbg !274
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %position_x, i64 0, i64 %indvars.iv118, !dbg !277
  store i32 %call, i32* %arrayidx, align 4, !dbg !278, !tbaa !65
  %call1 = call i32 @rand() #7, !dbg !279
  %arrayidx3 = getelementptr inbounds [32 x i32], [32 x i32]* %position_y, i64 0, i64 %indvars.iv118, !dbg !280
  store i32 %call1, i32* %arrayidx3, align 4, !dbg !281, !tbaa !65
  %call4 = call i32 @rand() #7, !dbg !282
  %arrayidx6 = getelementptr inbounds [32 x i32], [32 x i32]* %position_z, i64 0, i64 %indvars.iv118, !dbg !283
  store i32 %call4, i32* %arrayidx6, align 4, !dbg !284, !tbaa !65
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1, !dbg !285
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next119, metadata !234, metadata !DIExpression()), !dbg !254
  %exitcond120 = icmp eq i64 %indvars.iv.next119, 32, !dbg !286
  br i1 %exitcond120, label %for.cond10.preheader.preheader, label %for.body, !dbg !272, !llvm.loop !287

for.cond10.preheader.preheader:                   ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(4096) %0, i8 0, i64 4096, i1 false), !dbg !289
  call void @llvm.dbg.value(metadata i32 undef, metadata !235, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 undef, metadata !234, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !254
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %position_x, i64 0, i64 0, !dbg !296
  %arraydecay23 = getelementptr inbounds [32 x i32], [32 x i32]* %position_y, i64 0, i64 0, !dbg !297
  %arraydecay24 = getelementptr inbounds [32 x i32], [32 x i32]* %position_z, i64 0, i64 0, !dbg !298
  %arraydecay25 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %NL, i64 0, i64 0, !dbg !299
  %call26 = call i32 @buildNeighborList(i32* nonnull %arraydecay, i32* nonnull %arraydecay23, i32* nonnull %arraydecay24, [32 x i32]* nonnull %arraydecay25), !dbg !300
  call void @llvm.dbg.value(metadata i32 %call26, metadata !236, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 0, metadata !234, metadata !DIExpression()), !dbg !254
  br label %for.cond30.preheader, !dbg !301

for.cond30.preheader:                             ; preds = %for.cond30.preheader, %for.cond10.preheader.preheader
  %indvar = phi i64 [ 0, %for.cond10.preheader.preheader ], [ %indvar.next, %for.cond30.preheader ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !234, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 0, metadata !235, metadata !DIExpression()), !dbg !254
  %8 = shl nuw nsw i64 %indvar, 5, !dbg !303
  %scevgep = getelementptr [1024 x i32], [1024 x i32]* %neighborList, i64 0, i64 %8, !dbg !303
  %scevgep106 = bitcast i32* %scevgep to i8*
  %scevgep107 = getelementptr [32 x [32 x i32]], [32 x [32 x i32]]* %NL, i64 0, i64 %indvar, i64 0, !dbg !303
  %scevgep107108 = bitcast i32* %scevgep107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(128) %scevgep106, i8* nonnull align 16 dereferenceable(128) %scevgep107108, i64 128, i1 false), !dbg !308
  call void @llvm.dbg.value(metadata i32 undef, metadata !235, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.value(metadata i32 undef, metadata !234, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !254
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !301
  %exitcond109 = icmp eq i64 %indvar.next, 32, !dbg !309
  br i1 %exitcond109, label %for.end44, label %for.cond30.preheader, !dbg !301, !llvm.loop !310

for.end44:                                        ; preds = %for.cond30.preheader
  %arraydecay45 = getelementptr inbounds [32 x i32], [32 x i32]* %force_x, i64 0, i64 0, !dbg !312
  %arraydecay46 = getelementptr inbounds [32 x i32], [32 x i32]* %force_y, i64 0, i64 0, !dbg !313
  %arraydecay47 = getelementptr inbounds [32 x i32], [32 x i32]* %force_z, i64 0, i64 0, !dbg !314
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %neighborList, i64 0, i64 0, !dbg !315
  call void @md(i32* nonnull %arraydecay45, i32* nonnull %arraydecay46, i32* nonnull %arraydecay47, i32* nonnull %arraydecay, i32* nonnull %arraydecay23, i32* nonnull %arraydecay24, i32* nonnull %arraydecay51), !dbg !316
  call void @llvm.dbg.value(metadata i32 0, metadata !234, metadata !DIExpression()), !dbg !254
  br label %for.body54, !dbg !317

for.body54:                                       ; preds = %for.body54, %for.end44
  %indvars.iv = phi i64 [ 0, %for.end44 ], [ %indvars.iv.next, %for.body54 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !234, metadata !DIExpression()), !dbg !254
  %arrayidx56 = getelementptr inbounds [32 x i32], [32 x i32]* %force_x, i64 0, i64 %indvars.iv, !dbg !319
  %9 = load i32, i32* %arrayidx56, align 4, !dbg !319, !tbaa !65
  %arrayidx58 = getelementptr inbounds [32 x i32], [32 x i32]* %force_y, i64 0, i64 %indvars.iv, !dbg !322
  %10 = load i32, i32* %arrayidx58, align 4, !dbg !322, !tbaa !65
  %arrayidx60 = getelementptr inbounds [32 x i32], [32 x i32]* %force_z, i64 0, i64 %indvars.iv, !dbg !323
  %11 = load i32, i32* %arrayidx60, align 4, !dbg !323, !tbaa !65
  %call61 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 %9, i32 %10, i32 %11), !dbg !324
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !325
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !234, metadata !DIExpression()), !dbg !254
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !326
  br i1 %exitcond, label %for.end64, label %for.body54, !dbg !317, !llvm.loop !327

for.end64:                                        ; preds = %for.body54
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %7) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %2) #7, !dbg !329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #7, !dbg !329
  ret i32 0, !dbg !330
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare !dbg !4 dso_local void @srand(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare !dbg !9 dso_local i32 @rand() local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noinline norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!13, !14, !15}
!llvm.ident = !{!16}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "md.c", directory: "/home/coco/work/benchmark_codes/md")
!2 = !{}
!3 = !{!4, !9}
!4 = !DISubprogram(name: "srand", scope: !5, file: !5, line: 456, type: !6, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2)
!5 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!6 = !DISubroutineType(types: !7)
!7 = !{null, !8}
!8 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!9 = !DISubprogram(name: "rand", scope: !5, file: !5, line: 454, type: !10, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = !{i32 7, !"Dwarf Version", i32 4}
!14 = !{i32 2, !"Debug Info Version", i32 3}
!15 = !{i32 1, !"wchar_size", i32 4}
!16 = !{!"clang version 10.0.1 "}
!17 = distinct !DISubprogram(name: "md", scope: !1, file: !1, line: 7, type: !18, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !21)
!18 = !DISubroutineType(types: !19)
!19 = !{null, !20, !20, !20, !20, !20, !20, !20}
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!21 = !{!22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !46, !47, !48, !49, !50, !51, !55, !56, !57, !58, !59, !60}
!22 = !DILocalVariable(name: "d_force_x", arg: 1, scope: !17, file: !1, line: 7, type: !20)
!23 = !DILocalVariable(name: "d_force_y", arg: 2, scope: !17, file: !1, line: 7, type: !20)
!24 = !DILocalVariable(name: "d_force_z", arg: 3, scope: !17, file: !1, line: 7, type: !20)
!25 = !DILocalVariable(name: "position_x", arg: 4, scope: !17, file: !1, line: 8, type: !20)
!26 = !DILocalVariable(name: "position_y", arg: 5, scope: !17, file: !1, line: 8, type: !20)
!27 = !DILocalVariable(name: "position_z", arg: 6, scope: !17, file: !1, line: 8, type: !20)
!28 = !DILocalVariable(name: "NL", arg: 7, scope: !17, file: !1, line: 9, type: !20)
!29 = !DILocalVariable(name: "i", scope: !17, file: !1, line: 19, type: !12)
!30 = !DILocalVariable(name: "j", scope: !17, file: !1, line: 19, type: !12)
!31 = !DILocalVariable(name: "jidx", scope: !17, file: !1, line: 19, type: !12)
!32 = !DILocalVariable(name: "delx", scope: !17, file: !1, line: 20, type: !12)
!33 = !DILocalVariable(name: "dely", scope: !17, file: !1, line: 20, type: !12)
!34 = !DILocalVariable(name: "delz", scope: !17, file: !1, line: 20, type: !12)
!35 = !DILocalVariable(name: "r2inv", scope: !17, file: !1, line: 20, type: !12)
!36 = !DILocalVariable(name: "r2invTEMP", scope: !17, file: !1, line: 20, type: !12)
!37 = !DILocalVariable(name: "r2invTEMP2", scope: !17, file: !1, line: 20, type: !12)
!38 = !DILocalVariable(name: "r2invTEMP3", scope: !17, file: !1, line: 20, type: !12)
!39 = !DILocalVariable(name: "t1", scope: !17, file: !1, line: 20, type: !12)
!40 = !DILocalVariable(name: "t2", scope: !17, file: !1, line: 20, type: !12)
!41 = !DILocalVariable(name: "t3", scope: !17, file: !1, line: 20, type: !12)
!42 = !DILocalVariable(name: "i_x", scope: !43, file: !1, line: 23, type: !12)
!43 = distinct !DILexicalBlock(scope: !44, file: !1, line: 22, column: 3)
!44 = distinct !DILexicalBlock(scope: !45, file: !1, line: 21, column: 11)
!45 = distinct !DILexicalBlock(scope: !17, file: !1, line: 21, column: 11)
!46 = !DILocalVariable(name: "i_y", scope: !43, file: !1, line: 24, type: !12)
!47 = !DILocalVariable(name: "i_z", scope: !43, file: !1, line: 25, type: !12)
!48 = !DILocalVariable(name: "fx", scope: !43, file: !1, line: 26, type: !12)
!49 = !DILocalVariable(name: "fy", scope: !43, file: !1, line: 27, type: !12)
!50 = !DILocalVariable(name: "fz", scope: !43, file: !1, line: 28, type: !12)
!51 = !DILocalVariable(name: "j_x", scope: !52, file: !1, line: 32, type: !12)
!52 = distinct !DILexicalBlock(scope: !53, file: !1, line: 30, column: 5)
!53 = distinct !DILexicalBlock(scope: !54, file: !1, line: 29, column: 14)
!54 = distinct !DILexicalBlock(scope: !43, file: !1, line: 29, column: 14)
!55 = !DILocalVariable(name: "j_y", scope: !52, file: !1, line: 33, type: !12)
!56 = !DILocalVariable(name: "j_z", scope: !52, file: !1, line: 34, type: !12)
!57 = !DILocalVariable(name: "r6inv", scope: !52, file: !1, line: 44, type: !12)
!58 = !DILocalVariable(name: "force", scope: !52, file: !1, line: 45, type: !12)
!59 = !DILabel(scope: !17, name: "loop_i", file: !1, line: 21)
!60 = !DILabel(scope: !43, name: "loop_j", file: !1, line: 29)
!61 = !DILocation(line: 0, scope: !17)
!62 = !DILocation(line: 21, column: 2, scope: !17)
!63 = !DILocation(line: 21, column: 11, scope: !45)
!64 = !DILocation(line: 23, column: 16, scope: !43)
!65 = !{!66, !66, i64 0}
!66 = !{!"int", !67, i64 0}
!67 = !{!"omnipotent char", !68, i64 0}
!68 = !{!"Simple C/C++ TBAA"}
!69 = !DILocation(line: 0, scope: !43)
!70 = !DILocation(line: 24, column: 16, scope: !43)
!71 = !DILocation(line: 25, column: 16, scope: !43)
!72 = !DILocation(line: 29, column: 5, scope: !43)
!73 = !DILocation(line: 0, scope: !52)
!74 = !DILocation(line: 29, column: 14, scope: !54)
!75 = !DILocation(line: 31, column: 22, scope: !52)
!76 = !DILocation(line: 31, column: 14, scope: !52)
!77 = !DILocation(line: 32, column: 18, scope: !52)
!78 = !DILocation(line: 33, column: 18, scope: !52)
!79 = !DILocation(line: 34, column: 18, scope: !52)
!80 = !DILocation(line: 35, column: 18, scope: !52)
!81 = !DILocation(line: 36, column: 18, scope: !52)
!82 = !DILocation(line: 37, column: 18, scope: !52)
!83 = !DILocation(line: 38, column: 24, scope: !52)
!84 = !DILocation(line: 39, column: 25, scope: !52)
!85 = !DILocation(line: 40, column: 25, scope: !52)
!86 = !DILocation(line: 41, column: 22, scope: !52)
!87 = !DILocation(line: 42, column: 15, scope: !52)
!88 = !DILocation(line: 44, column: 26, scope: !52)
!89 = !DILocation(line: 44, column: 34, scope: !52)
!90 = !DILocation(line: 45, column: 25, scope: !52)
!91 = !DILocation(line: 45, column: 36, scope: !52)
!92 = !DILocation(line: 45, column: 43, scope: !52)
!93 = !DILocation(line: 45, column: 31, scope: !52)
!94 = !DILocation(line: 46, column: 18, scope: !52)
!95 = !DILocation(line: 46, column: 10, scope: !52)
!96 = !DILocation(line: 47, column: 18, scope: !52)
!97 = !DILocation(line: 47, column: 10, scope: !52)
!98 = !DILocation(line: 48, column: 18, scope: !52)
!99 = !DILocation(line: 48, column: 10, scope: !52)
!100 = !DILocation(line: 29, column: 45, scope: !53)
!101 = !DILocation(line: 29, column: 28, scope: !53)
!102 = distinct !{!102, !74, !103}
!103 = !DILocation(line: 49, column: 5, scope: !54)
!104 = !DILocation(line: 50, column: 5, scope: !43)
!105 = !DILocation(line: 50, column: 18, scope: !43)
!106 = !DILocation(line: 51, column: 5, scope: !43)
!107 = !DILocation(line: 51, column: 18, scope: !43)
!108 = !DILocation(line: 52, column: 5, scope: !43)
!109 = !DILocation(line: 52, column: 18, scope: !43)
!110 = !DILocation(line: 21, column: 36, scope: !44)
!111 = !DILocation(line: 21, column: 25, scope: !44)
!112 = distinct !{!112, !63, !113}
!113 = !DILocation(line: 53, column: 3, scope: !45)
!114 = !DILocation(line: 59, column: 1, scope: !17)
!115 = distinct !DISubprogram(name: "distance", scope: !1, file: !1, line: 61, type: !116, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !118)
!116 = !DISubroutineType(types: !117)
!117 = !{!12, !20, !20, !20, !12, !12}
!118 = !{!119, !120, !121, !122, !123, !124, !125, !126, !127}
!119 = !DILocalVariable(name: "position_x", arg: 1, scope: !115, file: !1, line: 62, type: !20)
!120 = !DILocalVariable(name: "position_y", arg: 2, scope: !115, file: !1, line: 63, type: !20)
!121 = !DILocalVariable(name: "position_z", arg: 3, scope: !115, file: !1, line: 64, type: !20)
!122 = !DILocalVariable(name: "i", arg: 4, scope: !115, file: !1, line: 65, type: !12)
!123 = !DILocalVariable(name: "j", arg: 5, scope: !115, file: !1, line: 66, type: !12)
!124 = !DILocalVariable(name: "delx", scope: !115, file: !1, line: 68, type: !12)
!125 = !DILocalVariable(name: "dely", scope: !115, file: !1, line: 68, type: !12)
!126 = !DILocalVariable(name: "delz", scope: !115, file: !1, line: 68, type: !12)
!127 = !DILocalVariable(name: "r2inv", scope: !115, file: !1, line: 68, type: !12)
!128 = !DILocation(line: 0, scope: !115)
!129 = !DILocation(line: 69, column: 9, scope: !115)
!130 = !DILocation(line: 69, column: 25, scope: !115)
!131 = !DILocation(line: 69, column: 23, scope: !115)
!132 = !DILocation(line: 70, column: 9, scope: !115)
!133 = !DILocation(line: 70, column: 25, scope: !115)
!134 = !DILocation(line: 70, column: 23, scope: !115)
!135 = !DILocation(line: 71, column: 9, scope: !115)
!136 = !DILocation(line: 71, column: 25, scope: !115)
!137 = !DILocation(line: 71, column: 23, scope: !115)
!138 = !DILocation(line: 72, column: 15, scope: !115)
!139 = !DILocation(line: 72, column: 29, scope: !115)
!140 = !DILocation(line: 72, column: 22, scope: !115)
!141 = !DILocation(line: 72, column: 43, scope: !115)
!142 = !DILocation(line: 72, column: 36, scope: !115)
!143 = !DILocation(line: 73, column: 2, scope: !115)
!144 = distinct !DISubprogram(name: "buildNeighborList", scope: !1, file: !1, line: 102, type: !145, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !151)
!145 = !DISubroutineType(types: !146)
!146 = !{!12, !20, !20, !20, !147}
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 1024, elements: !149)
!149 = !{!150}
!150 = !DISubrange(count: 32)
!151 = !{!152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !165}
!152 = !DILocalVariable(name: "position_x", arg: 1, scope: !144, file: !1, line: 102, type: !20)
!153 = !DILocalVariable(name: "position_y", arg: 2, scope: !144, file: !1, line: 103, type: !20)
!154 = !DILocalVariable(name: "position_z", arg: 3, scope: !144, file: !1, line: 104, type: !20)
!155 = !DILocalVariable(name: "NL", arg: 4, scope: !144, file: !1, line: 105, type: !147)
!156 = !DILocalVariable(name: "totalPairs", scope: !144, file: !1, line: 109, type: !12)
!157 = !DILocalVariable(name: "i", scope: !144, file: !1, line: 109, type: !12)
!158 = !DILocalVariable(name: "j", scope: !144, file: !1, line: 109, type: !12)
!159 = !DILocalVariable(name: "k", scope: !144, file: !1, line: 109, type: !12)
!160 = !DILocalVariable(name: "distIJ", scope: !144, file: !1, line: 111, type: !12)
!161 = !DILocalVariable(name: "currList", scope: !162, file: !1, line: 113, type: !148)
!162 = distinct !DILexicalBlock(scope: !163, file: !1, line: 112, column: 30)
!163 = distinct !DILexicalBlock(scope: !164, file: !1, line: 112, column: 2)
!164 = distinct !DILexicalBlock(scope: !144, file: !1, line: 112, column: 2)
!165 = !DILocalVariable(name: "currDist", scope: !162, file: !1, line: 114, type: !148)
!166 = !DILocation(line: 0, scope: !144)
!167 = !DILocation(line: 0, scope: !162)
!168 = !DILocation(line: 112, column: 2, scope: !164)
!169 = !DILocation(line: 113, column: 3, scope: !162)
!170 = !DILocation(line: 113, column: 7, scope: !162)
!171 = !DILocation(line: 116, column: 16, scope: !172)
!172 = distinct !DILexicalBlock(scope: !173, file: !1, line: 115, column: 32)
!173 = distinct !DILexicalBlock(scope: !174, file: !1, line: 115, column: 3)
!174 = distinct !DILexicalBlock(scope: !162, file: !1, line: 115, column: 3)
!175 = !DILocation(line: 119, column: 3, scope: !176)
!176 = distinct !DILexicalBlock(scope: !162, file: !1, line: 119, column: 3)
!177 = !DILocation(line: 120, column: 10, scope: !178)
!178 = distinct !DILexicalBlock(scope: !179, file: !1, line: 120, column: 8)
!179 = distinct !DILexicalBlock(scope: !180, file: !1, line: 119, column: 31)
!180 = distinct !DILexicalBlock(scope: !176, file: !1, line: 119, column: 3)
!181 = !DILocation(line: 120, column: 8, scope: !179)
!182 = !DILocation(line: 125, column: 4, scope: !179)
!183 = !DILocation(line: 125, column: 16, scope: !179)
!184 = !DILocation(line: 127, column: 3, scope: !179)
!185 = !DILocation(line: 119, column: 28, scope: !180)
!186 = !DILocation(line: 119, column: 17, scope: !180)
!187 = distinct !{!187, !175, !188}
!188 = !DILocation(line: 127, column: 3, scope: !176)
!189 = !DILocation(line: 128, column: 17, scope: !162)
!190 = !DILocation(line: 128, column: 14, scope: !162)
!191 = !DILocation(line: 129, column: 2, scope: !163)
!192 = !DILocation(line: 112, column: 27, scope: !163)
!193 = !DILocation(line: 112, column: 16, scope: !163)
!194 = distinct !{!194, !168, !195}
!195 = !DILocation(line: 129, column: 2, scope: !164)
!196 = !DILocation(line: 130, column: 2, scope: !144)
!197 = !DILocation(line: 131, column: 2, scope: !144)
!198 = distinct !DISubprogram(name: "populateNeighborList", scope: !1, file: !1, line: 134, type: !199, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !202)
!199 = !DISubroutineType(types: !200)
!200 = !{!12, !20, !20, !201, !147}
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!202 = !{!203, !204, !205, !206, !207, !208, !209, !210}
!203 = !DILocalVariable(name: "currDist", arg: 1, scope: !198, file: !1, line: 134, type: !20)
!204 = !DILocalVariable(name: "currList", arg: 2, scope: !198, file: !1, line: 135, type: !20)
!205 = !DILocalVariable(name: "i", arg: 3, scope: !198, file: !1, line: 136, type: !201)
!206 = !DILocalVariable(name: "NL", arg: 4, scope: !198, file: !1, line: 137, type: !147)
!207 = !DILocalVariable(name: "idx", scope: !198, file: !1, line: 139, type: !12)
!208 = !DILocalVariable(name: "validPairs", scope: !198, file: !1, line: 139, type: !12)
!209 = !DILocalVariable(name: "distanceIter", scope: !198, file: !1, line: 139, type: !12)
!210 = !DILocalVariable(name: "neighborIter", scope: !198, file: !1, line: 139, type: !12)
!211 = !DILocation(line: 0, scope: !198)
!212 = !DILocation(line: 0, scope: !213)
!213 = distinct !DILexicalBlock(scope: !214, file: !1, line: 142, column: 69)
!214 = distinct !DILexicalBlock(scope: !215, file: !1, line: 142, column: 2)
!215 = distinct !DILexicalBlock(scope: !198, file: !1, line: 142, column: 2)
!216 = !DILocation(line: 142, column: 2, scope: !215)
!217 = !DILocation(line: 146, column: 25, scope: !213)
!218 = !DILocation(line: 146, column: 3, scope: !213)
!219 = !DILocation(line: 146, column: 23, scope: !213)
!220 = !DILocation(line: 142, column: 66, scope: !214)
!221 = !DILocation(line: 142, column: 38, scope: !214)
!222 = distinct !{!222, !216, !223}
!223 = !DILocation(line: 151, column: 2, scope: !215)
!224 = !DILocation(line: 152, column: 2, scope: !198)
!225 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 155, type: !10, scopeLine: 155, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !226)
!226 = !{!227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !241, !242, !243, !244, !245, !246, !247, !250}
!227 = !DILocalVariable(name: "sizeClass", scope: !225, file: !1, line: 156, type: !12)
!228 = !DILocalVariable(name: "passes", scope: !225, file: !1, line: 156, type: !12)
!229 = !DILocalVariable(name: "iter", scope: !225, file: !1, line: 156, type: !12)
!230 = !DILocalVariable(name: "nAtom", scope: !225, file: !1, line: 156, type: !12)
!231 = !DILocalVariable(name: "err", scope: !225, file: !1, line: 156, type: !12)
!232 = !DILocalVariable(name: "localSize", scope: !225, file: !1, line: 156, type: !12)
!233 = !DILocalVariable(name: "globalSize", scope: !225, file: !1, line: 156, type: !12)
!234 = !DILocalVariable(name: "i", scope: !225, file: !1, line: 156, type: !12)
!235 = !DILocalVariable(name: "j", scope: !225, file: !1, line: 156, type: !12)
!236 = !DILocalVariable(name: "totalPairs", scope: !225, file: !1, line: 156, type: !12)
!237 = !DILocalVariable(name: "probSizes", scope: !225, file: !1, line: 157, type: !238)
!238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 128, elements: !239)
!239 = !{!240}
!240 = !DISubrange(count: 4)
!241 = !DILocalVariable(name: "position_x", scope: !225, file: !1, line: 161, type: !148)
!242 = !DILocalVariable(name: "position_y", scope: !225, file: !1, line: 162, type: !148)
!243 = !DILocalVariable(name: "position_z", scope: !225, file: !1, line: 163, type: !148)
!244 = !DILocalVariable(name: "force_x", scope: !225, file: !1, line: 164, type: !148)
!245 = !DILocalVariable(name: "force_y", scope: !225, file: !1, line: 165, type: !148)
!246 = !DILocalVariable(name: "force_z", scope: !225, file: !1, line: 166, type: !148)
!247 = !DILocalVariable(name: "NL", scope: !225, file: !1, line: 167, type: !248)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 32768, elements: !249)
!249 = !{!150, !150}
!250 = !DILocalVariable(name: "neighborList", scope: !225, file: !1, line: 168, type: !251)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 32768, elements: !252)
!252 = !{!253}
!253 = !DISubrange(count: 1024)
!254 = !DILocation(line: 0, scope: !225)
!255 = !DILocation(line: 159, column: 2, scope: !225)
!256 = !DILocation(line: 161, column: 2, scope: !225)
!257 = !DILocation(line: 161, column: 7, scope: !225)
!258 = !DILocation(line: 162, column: 2, scope: !225)
!259 = !DILocation(line: 162, column: 7, scope: !225)
!260 = !DILocation(line: 163, column: 2, scope: !225)
!261 = !DILocation(line: 163, column: 7, scope: !225)
!262 = !DILocation(line: 164, column: 2, scope: !225)
!263 = !DILocation(line: 164, column: 7, scope: !225)
!264 = !DILocation(line: 165, column: 2, scope: !225)
!265 = !DILocation(line: 165, column: 7, scope: !225)
!266 = !DILocation(line: 166, column: 2, scope: !225)
!267 = !DILocation(line: 166, column: 7, scope: !225)
!268 = !DILocation(line: 167, column: 2, scope: !225)
!269 = !DILocation(line: 167, column: 7, scope: !225)
!270 = !DILocation(line: 168, column: 3, scope: !225)
!271 = !DILocation(line: 168, column: 7, scope: !225)
!272 = !DILocation(line: 170, column: 2, scope: !273)
!273 = distinct !DILexicalBlock(scope: !225, file: !1, line: 170, column: 2)
!274 = !DILocation(line: 172, column: 19, scope: !275)
!275 = distinct !DILexicalBlock(scope: !276, file: !1, line: 171, column: 2)
!276 = distinct !DILexicalBlock(scope: !273, file: !1, line: 170, column: 2)
!277 = !DILocation(line: 172, column: 3, scope: !275)
!278 = !DILocation(line: 172, column: 17, scope: !275)
!279 = !DILocation(line: 173, column: 19, scope: !275)
!280 = !DILocation(line: 173, column: 3, scope: !275)
!281 = !DILocation(line: 173, column: 17, scope: !275)
!282 = !DILocation(line: 174, column: 19, scope: !275)
!283 = !DILocation(line: 174, column: 3, scope: !275)
!284 = !DILocation(line: 174, column: 17, scope: !275)
!285 = !DILocation(line: 170, column: 28, scope: !276)
!286 = !DILocation(line: 170, column: 17, scope: !276)
!287 = distinct !{!287, !272, !288}
!288 = !DILocation(line: 178, column: 2, scope: !273)
!289 = !DILocation(line: 182, column: 13, scope: !290)
!290 = distinct !DILexicalBlock(scope: !291, file: !1, line: 181, column: 36)
!291 = distinct !DILexicalBlock(scope: !292, file: !1, line: 181, column: 3)
!292 = distinct !DILexicalBlock(scope: !293, file: !1, line: 181, column: 3)
!293 = distinct !DILexicalBlock(scope: !294, file: !1, line: 180, column: 25)
!294 = distinct !DILexicalBlock(scope: !295, file: !1, line: 180, column: 2)
!295 = distinct !DILexicalBlock(scope: !225, file: !1, line: 180, column: 2)
!296 = !DILocation(line: 186, column: 33, scope: !225)
!297 = !DILocation(line: 186, column: 45, scope: !225)
!298 = !DILocation(line: 186, column: 57, scope: !225)
!299 = !DILocation(line: 186, column: 69, scope: !225)
!300 = !DILocation(line: 186, column: 15, scope: !225)
!301 = !DILocation(line: 194, column: 3, scope: !302)
!302 = distinct !DILexicalBlock(scope: !225, file: !1, line: 194, column: 3)
!303 = !DILocation(line: 0, scope: !304)
!304 = distinct !DILexicalBlock(scope: !305, file: !1, line: 195, column: 11)
!305 = distinct !DILexicalBlock(scope: !306, file: !1, line: 195, column: 11)
!306 = distinct !DILexicalBlock(scope: !307, file: !1, line: 194, column: 22)
!307 = distinct !DILexicalBlock(scope: !302, file: !1, line: 194, column: 3)
!308 = !DILocation(line: 196, column: 36, scope: !304)
!309 = !DILocation(line: 194, column: 13, scope: !307)
!310 = distinct !{!310, !301, !311}
!311 = !DILocation(line: 197, column: 3, scope: !302)
!312 = !DILocation(line: 201, column: 5, scope: !225)
!313 = !DILocation(line: 201, column: 14, scope: !225)
!314 = !DILocation(line: 201, column: 23, scope: !225)
!315 = !DILocation(line: 201, column: 68, scope: !225)
!316 = !DILocation(line: 201, column: 2, scope: !225)
!317 = !DILocation(line: 206, column: 2, scope: !318)
!318 = distinct !DILexicalBlock(scope: !225, file: !1, line: 206, column: 2)
!319 = !DILocation(line: 207, column: 37, scope: !320)
!320 = distinct !DILexicalBlock(scope: !321, file: !1, line: 206, column: 25)
!321 = distinct !DILexicalBlock(scope: !318, file: !1, line: 206, column: 2)
!322 = !DILocation(line: 207, column: 49, scope: !320)
!323 = !DILocation(line: 207, column: 61, scope: !320)
!324 = !DILocation(line: 207, column: 3, scope: !320)
!325 = !DILocation(line: 206, column: 22, scope: !321)
!326 = !DILocation(line: 206, column: 12, scope: !321)
!327 = distinct !{!327, !317, !328}
!328 = !DILocation(line: 208, column: 2, scope: !318)
!329 = !DILocation(line: 211, column: 1, scope: !225)
!330 = !DILocation(line: 210, column: 2, scope: !225)
